   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm_svm.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_EnableClock:
  25              	.LFB143:
  26              	 .file 1 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2019-07-29
   4:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *****************************************************************************
   7:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.
  11:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  14:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * do so, all subject to the following:
  20:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  21:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a source language processor.
  27:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  28:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *****************************************************************************
  40:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  41:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  42:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  43:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  44:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  45:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  46:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  47:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  49:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  51:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  52:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  53:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  54:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  55:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  56:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  57:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  58:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  59:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  60:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  61:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  62:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  63:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  64:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  65:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  66:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  67:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  68:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  69:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  70:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  71:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  72:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  73:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  74:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  75:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  76:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  77:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  78:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  79:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  80:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  81:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  82:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  83:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  84:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  85:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  86:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  87:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  88:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer()
  89:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  90:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  91:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  92:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  93:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  94:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  95:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  96:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  97:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-03-30:
  98:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_StartPrescaler(), XMC_CCU8_StartParityChecker(), XMC_CCU8_StopPrescaler()
  99:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_EnableMultipleClocks(), XMC_CCU8_EnableClock(), XMC_CCU8_DisableClock() to avoid 
 100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_SetEvent(), XMC_CCU8_SLICE_ClearEvent() to avoid RMW access
 101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SetSuspendMode(), XMC_CCU8_SLICE_GetPrescaler()
 102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_GetTimerCompareMatchChannel1() and XMC_CCU8_SLICE_GetTimerCompareMatc
 103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-07-29:
 105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_GetSliceStatusBit()
 106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
 108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
 111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
 112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc1_ccu8_map.h"
 122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc4_ccu8_map.h"
 126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t,
 153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(),
 179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR,        /**< API cannot fulfil request */
 232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING,      /**< The timer slice is currently running */
 233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A,      /**< External clock-A */
 243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B,      /**< External clock-B */
 244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 293:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 294:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 295:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 296:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 297:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 298:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 299:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 300:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 301:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 302:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 303:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 304:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 305:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 306:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 307:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 308:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 309:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 310:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 311:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 312:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 313:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 314:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 315:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 316:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 317:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 318:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 319:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 320:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 321:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 322:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 323:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 324:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 325:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 326:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 327:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 328:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 329:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 330:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 331:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 332:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 333:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 334:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 335:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 336:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 337:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 338:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 339:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 340:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 341:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 342:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 343:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 344:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 345:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 346:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 347:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 348:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 349:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 350:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 351:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 352:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 353:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 354:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 355:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 356:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 357:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 358:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 359:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 360:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2,       /**< Slice Clock = fccu8/2 */
 361:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4,       /**< Slice Clock = fccu8/4 */
 362:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8,       /**< Slice Clock = fccu8/8 */
 363:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16,      /**< Slice Clock = fccu8/16 */
 364:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32,      /**< Slice Clock = fccu8/32 */
 365:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64,      /**< Slice Clock = fccu8/64 */
 366:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128,     /**< Slice Clock = fccu8/128 */
 367:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256,     /**< Slice Clock = fccu8/256 */
 368:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512,     /**< Slice Clock = fccu8/512 */
 369:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024,    /**< Slice Clock = fccu8/1024 */
 370:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048,    /**< Slice Clock = fccu8/2048 */
 371:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096,    /**< Slice Clock = fccu8/4096 */
 372:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192,    /**< Slice Clock = fccu8/8192 */
 373:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384,   /**< Slice Clock = fccu8/16384 */
 374:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 375:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 376:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 377:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 378:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 379:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 380:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 381:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 382:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 383:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2,       /**< DTC clock = Slice Clock/2 */
 384:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4,       /**< DTC clock = Slice Clock/4 */
 385:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 386:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 387:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 388:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 389:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 390:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 391:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 392:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 393:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 394:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 395:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2,             /**< Channel-2 status connected to Slice Status */
 396:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2, /**< \b Wired \b AND of Channel-1 and Channel-2 status con
 397:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 398:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 399:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 400:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 401:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 402:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 403:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 404:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 405:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 406:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 407:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 408:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 409:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 410:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1,          /**< Modulation for Compare Channel-1 */
 411:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2,          /**< Modulation for Compare Channel-2 */
 412:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 413:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 414:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 415:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 416:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 417:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 418:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 419:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 420:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 421:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP,                 /**< Stop function */
 422:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0, /**< Capture Event-0 function, CCycapt0 signal is used fo
 423:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 424:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1, /**< Capture Event-1 function, CCycapt1 signal is used fo
 425:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 426:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING,               /**< Gating function */
 427:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION,            /**< Direction function */
 428:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD,                 /**< Load function */
 429:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT,                /**< Counting function */
 430:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE,             /**< Override function */
 431:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION,           /**< Modulation function */
 432:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 433:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 434:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 435:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 436:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 437:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 438:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 439:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 440:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 441:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0,          /**< Event-0 */
 442:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1,          /**< Event-1 */
 443:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 444:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 445:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 446:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 447:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 448:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 449:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 450:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 451:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 452:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE, /**< Rising Edge of the input signal generates
 453:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 454:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE, /**< Falling Edge of the input signal generat
 455:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 456:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 457:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 458:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 459:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 460:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 461:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 462:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 463:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 464:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 465:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 466:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* Below enum items can be utilised specific to the functionality */
 467:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 468:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 469:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 470:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 471:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 472:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 473:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 474:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 475:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 476:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 477:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES,       /**< Input should be stable for 3 clock cycles */
 478:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES,       /**< Input should be stable for 5 clock cycles */
 479:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 480:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 481:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 482:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 483:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 484:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 485:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 486:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 487:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 488:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 489:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 490:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 491:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 492:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 493:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 494:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 495:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR,           /**< Without stopping timer, clears the TIMER regi
 496:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 497:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 498:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 499:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 500:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 501:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 502:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 503:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 504:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 505:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 506:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 507:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 508:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 509:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 510:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 511:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 512:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 513:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 514:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 515:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 516:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 517:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 518:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 519:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 520:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 521:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 522:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 523:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 524:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 525:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 526:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 527:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 528:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 529:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 530:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 531:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 532:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH,      /**< Clear only when timer value has been captured
 533:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW,       /**< Clear only when timer value has been captured
 534:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 535:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 536:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 537:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 538:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 539:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 540:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 541:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 542:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 543:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 544:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 545:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 546:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 547:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 548:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 549:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 550:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 551:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 552:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 553:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 554:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 555:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 556:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 557:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U,  /**< Period match counting up */
 558:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U,  /**< One match counting down */
 559:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U,  /**< Compare match counting up for channel 1
 560:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U,  /**< Compare match counting down for channel
 561:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U,  /**< Compare match counting up for channel 2
 562:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U,  /**< Compare match counting down for channel
 563:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U,  /**< Event-0 occurrence */
 564:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U,  /**< Event-1 occurrence */
 565:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 566:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 567:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 568:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 569:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 570:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 571:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 572:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 573:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 574:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 575:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 576:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 577:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 578:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 579:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 580:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 581:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 582:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 583:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 584:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 585:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 586:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 587:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 588:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 589:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 590:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 591:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1,         /**< Service Request Line-1 selected  */
 592:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2,         /**< Service Request Line-2 selected  */
 593:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 594:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 595:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 596:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 597:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 598:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 599:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 600:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 601:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 602:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 603:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 604:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 605:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 606:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 607:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 608:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 609:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 610:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 611:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 612:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 613:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 614:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 615:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 616:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 617:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 618:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 619:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 620:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 621:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 622:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 623:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 624:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 625:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 626:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 627:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 628:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 629:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 630:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 631:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 632:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 633:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 634:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 635:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 636:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 637:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 638:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 639:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 640:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 641:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 642:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 643:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 644:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 645:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 646:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 647:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 648:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 649:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 650:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 651:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT0
 652:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 653:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 654:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 655:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 656:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 657:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 658:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 659:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 660:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 661:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 662:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 663:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT1
 664:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 665:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 666:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 667:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 668:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 669:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 670:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 671:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 672:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 673:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 674:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 675:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT2
 676:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 677:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 678:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 679:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 680:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 681:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 682:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 683:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 684:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 685:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 686:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 687:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT3
 688:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 689:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 690:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 691:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 692:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 693:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 694:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 695:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 696:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 697:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 698:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 699:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 700:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 701:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 702:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 703:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 704:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 705:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 706:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 707:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 708:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 709:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 710:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 711:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 712:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 713:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 714:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 715:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 716:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 717:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 718:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 719:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 720:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 721:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 722:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 723:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 724:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 725:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 726:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 727:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 728:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 729:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 730:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 731:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 732:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 733:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 734:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 735:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 736:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 737:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 738:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 739:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 740:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 741:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 742:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 743:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 744:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 745:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 746:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 747:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 748:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 749:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 750:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 751:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 752:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 753:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 754:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 755:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 756:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 757:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 758:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 759:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 760:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 761:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 762:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 763:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 764:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 765:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 766:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 767:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 768:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 770:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 771:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 772:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 773:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 774:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 775:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 776:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 777:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 778:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 779:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 780:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 781:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 782:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 783:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 784:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 785:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 786:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 787:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 788:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 789:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 790:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 791:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 792:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 793:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 794:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 795:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 796:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 797:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U,  /**< SLICE-0 */
 798:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U,  /**< SLICE-1 */
 799:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U,  /**< SLICE-2 */
 800:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 801:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 802:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 803:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 804:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 805:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 806:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 807:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 808:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 809:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 810:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 811:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 812:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 813:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 814:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 815:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 816:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 817:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 818:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 819:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 820:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 821:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 822:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 823:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 824:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 825:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 826:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 827:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 828:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 829:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 830:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 831:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 832:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 833:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 834:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 835:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 836:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects suspend mode
 837:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 838:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SUSPEND_MODE
 839:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 840:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_IGNORE = 0 << CCU8_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 841:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops all the running
 842:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_SAFE_STOP = 2 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 843:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU8_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 844:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SUSPEND_MODE_t;
 845:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 846:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 847:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice status bit
 848:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 849:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS_BIT
 850:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 851:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_PASSIVE = false, /**< Passive */
 852:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_ACTIVE  = true   /**< Active  */
 853:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_BIT_t;
 854:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 855:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 856:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 857:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 858:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 859:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 860:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 861:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 862:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 863:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 864:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 865:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 866:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 867:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 868:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 869:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 870:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 871:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 872:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 873:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 874:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 875:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 876:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 877:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma push
 878:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma anon_unions
 879:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 880:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma warning 586
 881:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 882:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 883:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 884:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 885:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 886:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 887:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 888:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 889:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 890:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 891:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 892:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 893:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 894:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 895:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 896:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 897:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 898:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 899:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 900:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 901:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 902:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 903:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 904:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 905:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 906:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 907:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 908:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 909:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 910:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 911:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 912:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 913:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 914:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 915:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 916:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 917:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 918:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 919:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 920:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 921:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 922:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 923:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 924:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 925:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 926:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 927:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 928:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 929:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 930:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 931:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 932:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 933:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 934:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 935:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 936:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 937:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 938:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 939:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 940:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 941:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 942:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 943:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 944:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 945:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 946:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 947:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 948:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 949:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 950:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 951:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 952:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 953:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 954:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 955:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 956:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 957:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 958:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 959:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 960:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 961:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 962:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 963:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 964:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 965:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 966:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 967:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0.
 968:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 969:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1.
 970:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 971:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2.
 972:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 973:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3.
 974:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 975:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 976:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 977:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 978:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 979:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 980:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 981:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 982:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 983:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 984:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 985:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */
 986:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 987:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 988:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 989:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 990:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 991:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 992:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 993:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 994:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t
 995:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register.
 996:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 997:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 998:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 999:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t
1000:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register.
1001:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1002:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
1003:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
1004:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t
1005:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
1006:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1007:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
1008:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
1009:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t
1010:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
1011:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1012:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
1013:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1014:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1015:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
1016:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1017:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value
1018:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
1019:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
1020:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1021:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering
1022:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1023:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
1024:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
1025:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1026:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1027:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
1028:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
1029:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1030:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
1031:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1032:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
1033:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
1034:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
1035:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1036:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1037:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1038:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1039:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1040:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1041:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1042:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1043:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1044:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1045:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1046:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1047:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1048:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1049:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1050:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1051:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1052:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1053:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1054:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1055:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma pop
1056:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1057:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma warning restore
1058:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1059:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1060:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1061:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1062:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1063:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1064:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1065:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1066:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1067:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1068:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1069:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1070:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1071:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1072:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1073:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1074:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1075:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1076:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;
1077:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1078:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1079:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1080:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1081:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1082:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1083:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1084:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)
1085:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1086:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1087:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)
1088:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1089:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1090:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)
1091:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1092:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1093:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1094:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1095:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)
1096:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1097:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1098:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)
1099:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)
1102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;
1107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPRB_Msk;
1193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPCH_Msk;
1211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPRB_Msk;
1230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPCH_Msk;
1247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true.
1257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
1288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1293:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I,
1294:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1295:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1296:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1297:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1298:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1299:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1300:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1301:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1302:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1303:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1304:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1305:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1306:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) clock_mask;
1307:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1308:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1309:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1310:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1311:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode   Selects suspend mode
1312:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1313:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1314:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1315:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1316:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1317:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1318:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1319:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1320:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1321:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SetSuspendMode(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SUSPEN
1322:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1323:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1324:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU8_GCTRL_SUSCFG_Msk) | mode;
1325:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1326:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1327:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1328:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1329:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1330:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1331:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1332:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1333:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1334:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1335:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1336:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1337:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1338:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1339:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1340:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1341:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1342:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1343:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1344:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1345:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1346:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1347:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1348:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1349:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1350:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1351:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1352:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1353:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1354:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1355:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1356:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
1357:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1358:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1359:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1360:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1361:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1362:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1363:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1364:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1365:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1366:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1367:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1368:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1369:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1370:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1371:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1372:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I,
1373:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1374:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1375:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1376:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1377:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1378:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1379:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1380:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1381:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1381 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
1382:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1383:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1384:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1385:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = ((uint32_t) 1 << slice_number);
  45              	 .loc 1 1385 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 DA60     	 str r2,[r3,#12]
1386:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  51              	 .loc 1 1386 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE143:
  67              	 .section .text.XMC_CCU8_SLICE_EnableTrap,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_CCU8_SLICE_EnableTrap:
  73              	.LFB152:
1387:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1388:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1389:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1390:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1391:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1392:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1393:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1394:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1395:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1396:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I,
1397:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1398:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1399:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1400:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1401:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1402:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1403:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1404:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1405:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1406:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1407:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1408:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1409:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = ((uint32_t) 1 << slice_number);
1410:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1411:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1412:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1413:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1414:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1415:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1416:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1417:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1418:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1419:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1420:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1421:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check.
1422:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1423:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1424:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1425:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1426:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1427:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1428:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1429:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1430:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1431:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1432:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1433:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1434:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1435:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1436:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1437:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1438:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1439:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1440:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1441:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1442:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1443:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1444:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1445:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1446:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check.
1447:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1448:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1449:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1450:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1451:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1452:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1453:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1454:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1455:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1456:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1457:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1458:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1459:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1460:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1461:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1462:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1463:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1464:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1465:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1466:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1467:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1468:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1469:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1470:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1471:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1472:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1473:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1474:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1475:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1476:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1477:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1478:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1479:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1480:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1481:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1482:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1483:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1484:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1485:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1486:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1487:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1488:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1489:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1490:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1491:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1492:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1493:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1494:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1495:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1496:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1497:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1498:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1499:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1500:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1501:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1502:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1503:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1504:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1505:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1506:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1507:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1508:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1509:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1510:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1511:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1512:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1513:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1514:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1515:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1516:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1517:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1518:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1519:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1520:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1521:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1522:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1523:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1524:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1525:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1526:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1527:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1528:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1529:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1530:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1531:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1532:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1533:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1534:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1535:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1536:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1537:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1538:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1539:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1540:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1541:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1542:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1543:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1544:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1545:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1546:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1547:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1548:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1549:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1550:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1551:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1552:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1553:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1554:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1555:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1556:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1557:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1558:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1559:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1560:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1561:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1562:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1563:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1564:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1565:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1566:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1567:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1568:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1569:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1570:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1571:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1572:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1573:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1574:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1575:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1576:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1577:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1578:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1579:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1580:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1581:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1582:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1583:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1584:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1585:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1586:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1587:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1588:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1589:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1590:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1591:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1592:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1593:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1594:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1595:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1596:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1597:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1598:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1599:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1600:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1601:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1602:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1603:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1604:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1605:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1606:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1607:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1608:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1609:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1610:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1611:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1612:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1613:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1614:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1615:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1616:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1617:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1618:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1619:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1620:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1621:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1622:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1623:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1624:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1625:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1626:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1627:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1628:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1629:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1630:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1631:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1632:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1633:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1634:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1635:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1636:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1637:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1638:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1639:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1640:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1641:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1642:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1643:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1644:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1645:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1646:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1647:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1648:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1649:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1650:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1651:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
1652:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1653:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     );
1654:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1655:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1656:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1657:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1658:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1659:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1660:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1661:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1662:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1663:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1664:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1665:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected.
1666:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1667:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1668:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1669:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1670:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1671:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1672:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1673:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1674:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1675:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1676:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1677:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1678:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1679:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1680:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1681:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1682:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1683:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1684:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1685:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1686:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1687:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1688:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1689:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1690:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1691:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1692:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1693:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1694:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1695:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1696:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1697:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1698:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1699:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1700:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1701:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1702:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1703:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1704:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1705:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1706:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1707:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1708:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1709:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1710:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1711:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1712:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1713:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1714:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1715:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1716:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1717:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1718:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1719:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1720:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1721:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1722:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1723:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1724:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1725:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1726:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1727:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1728:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1729:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1730:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1731:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1732:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1733:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1734:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1735:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1736:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1737:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1738:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1739:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1740:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1741:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1742:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1743:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1744:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1745:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1746:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1747:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1748:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1749:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1750:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1751:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1752:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1753:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1754:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1755:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1756:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1757:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1758:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1759:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1760:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1761:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1762:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1763:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1764:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1765:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1766:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1767:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1768:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1769:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1770:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1771:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1772:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1773:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1774:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1775:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1776:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1777:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1778:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1779:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1780:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1781:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1782:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1783:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1784:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1785:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1786:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1787:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1788:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1789:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1790:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1791:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1792:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1793:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1794:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1795:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1796:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1797:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1798:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1799:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1800:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1801:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1802:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1803:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1804:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1805:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1806:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1807:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1808:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1809:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1810:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1811:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1812:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1813:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1814:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1815:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1816:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1817:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1818:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1819:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1820:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1821:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1822:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1823:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1824:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1825:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1826:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1827:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1828:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1829:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1830:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1831:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1832:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1833:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1834:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1835:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1836:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1837:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1838:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1839:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1840:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1841:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1842:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1843:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1844:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1845:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1846:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1847:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1848:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1849:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1850:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1851:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1852:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1853:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_config,
1854:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_config);
1855:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1856:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1857:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1858:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1859:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1860:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1861:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1862:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1863:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1864:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1865:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1866:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1867:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1868:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1869:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1870:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1871:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1872:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1873:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1874:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1875:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1876:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1877:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1878:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1879:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1880:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1881:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1882:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1883:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1884:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1885:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1886:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1887:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1888:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1889:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1890:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1891:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1892:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1893:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1894:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1895:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1896:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1897:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1898:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1899:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1900:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1901:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1902:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1903:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1904:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1905:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1906:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1907:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1908:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1909:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1910:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1911:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1912:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1913:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1914:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1915:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1916:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1917:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1918:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1919:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1920:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1921:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1922:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  74              	 .loc 1 1922 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 3960     	 str r1,[r7]
1923:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1924:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
  91              	 .loc 1 1924 0
  92 000a 7B68     	 ldr r3,[r7,#4]
  93 000c 5A69     	 ldr r2,[r3,#20]
  94 000e 3B68     	 ldr r3,[r7]
  95 0010 5B04     	 lsls r3,r3,#17
  96 0012 1A43     	 orrs r2,r2,r3
  97 0014 7B68     	 ldr r3,[r7,#4]
  98 0016 5A61     	 str r2,[r3,#20]
1925:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  99              	 .loc 1 1925 0
 100 0018 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 001a BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 001c 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0020 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE152:
 115 0022 00BF     	 .section .text.XMC_CCU8_SLICE_DisableTrap,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_CCU8_SLICE_DisableTrap:
 121              	.LFB153:
1926:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1927:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1928:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1929:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1930:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1931:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1932:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1933:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1934:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1935:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1936:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1937:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1938:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1939:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1940:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1941:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1942:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1943:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1944:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1945:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1946:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 122              	 .loc 1 1946 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126              	 
 127 0000 80B4     	 push {r7}
 128              	.LCFI12:
 129              	 .cfi_def_cfa_offset 4
 130              	 .cfi_offset 7,-4
 131 0002 83B0     	 sub sp,sp,#12
 132              	.LCFI13:
 133              	 .cfi_def_cfa_offset 16
 134 0004 00AF     	 add r7,sp,#0
 135              	.LCFI14:
 136              	 .cfi_def_cfa_register 7
 137 0006 7860     	 str r0,[r7,#4]
 138 0008 3960     	 str r1,[r7]
1947:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1948:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1949:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
 139              	 .loc 1 1949 0
 140 000a 7B68     	 ldr r3,[r7,#4]
 141 000c 5A69     	 ldr r2,[r3,#20]
 142 000e 3B68     	 ldr r3,[r7]
 143 0010 5B04     	 lsls r3,r3,#17
 144 0012 DB43     	 mvns r3,r3
 145 0014 1A40     	 ands r2,r2,r3
 146 0016 7B68     	 ldr r3,[r7,#4]
 147 0018 5A61     	 str r2,[r3,#20]
1950:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 148              	 .loc 1 1950 0
 149 001a 0C37     	 adds r7,r7,#12
 150              	.LCFI15:
 151              	 .cfi_def_cfa_offset 4
 152 001c BD46     	 mov sp,r7
 153              	.LCFI16:
 154              	 .cfi_def_cfa_register 13
 155              	 
 156 001e 5DF8047B 	 ldr r7,[sp],#4
 157              	.LCFI17:
 158              	 .cfi_restore 7
 159              	 .cfi_def_cfa_offset 0
 160 0022 7047     	 bx lr
 161              	 .cfi_endproc
 162              	.LFE153:
 164              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
 165              	 .align 2
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_CCU8_SLICE_StopTimer:
 170              	.LFB159:
1951:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1952:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1953:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1954:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1955:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1956:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1957:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1958:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1959:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1960:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1961:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1962:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1963:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1964:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1965:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1966:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1967:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1968:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1969:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1970:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1971:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1972:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1973:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1974:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1975:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1976:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1977:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1978:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1979:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1980:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1981:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1982:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1983:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1984:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1985:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1986:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1987:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1988:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1989:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1990:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1991:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1992:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1993:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1994:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1995:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1996:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1997:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1998:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1999:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
2000:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2001:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2002:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
2003:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2004:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2005:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2006:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2007:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2008:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
2009:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2010:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2011:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
2012:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
2013:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
2014:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2015:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2016:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2017:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2018:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
2019:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2020:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2021:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_T
2022:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2023:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2024:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2025:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2026:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2027:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2028:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2029:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
2030:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
2031:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
2032:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2033:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2034:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
2035:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2036:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
2037:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2038:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2039:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
2040:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2041:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2042:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2043:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2044:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2045:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2046:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2047:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2048:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
2049:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
2050:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2051:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2052:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2053:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2054:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2055:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 171              	 .loc 1 2055 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176 0000 80B4     	 push {r7}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 4
 179              	 .cfi_offset 7,-4
 180 0002 83B0     	 sub sp,sp,#12
 181              	.LCFI19:
 182              	 .cfi_def_cfa_offset 16
 183 0004 00AF     	 add r7,sp,#0
 184              	.LCFI20:
 185              	 .cfi_def_cfa_register 7
 186 0006 7860     	 str r0,[r7,#4]
2056:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2057:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
 187              	 .loc 1 2057 0
 188 0008 7B68     	 ldr r3,[r7,#4]
 189 000a 0122     	 movs r2,#1
 190 000c 1A61     	 str r2,[r3,#16]
2058:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 191              	 .loc 1 2058 0
 192 000e 0C37     	 adds r7,r7,#12
 193              	.LCFI21:
 194              	 .cfi_def_cfa_offset 4
 195 0010 BD46     	 mov sp,r7
 196              	.LCFI22:
 197              	 .cfi_def_cfa_register 13
 198              	 
 199 0012 5DF8047B 	 ldr r7,[sp],#4
 200              	.LCFI23:
 201              	 .cfi_restore 7
 202              	 .cfi_def_cfa_offset 0
 203 0016 7047     	 bx lr
 204              	 .cfi_endproc
 205              	.LFE159:
 207              	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 208              	 .align 2
 209              	 .thumb
 210              	 .thumb_func
 212              	XMC_CCU8_EnableShadowTransfer:
 213              	.LFB170:
2059:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2060:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2061:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2062:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2063:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2064:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2065:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2066:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2067:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2068:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2069:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2070:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2071:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2072:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2073:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2074:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2075:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2076:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
2077:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2078:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2079:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2080:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2081:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2082:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2083:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2084:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2085:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2086:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2087:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2088:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2089:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2090:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2091:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2092:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2093:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2094:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2095:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2096:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2097:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2098:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2099:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   const XMC_CCU8_SLICE_t *const slice)
2151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_
2154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   const XMC_CCU8_SLICE_t *const slice)
2188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TC
2191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((uint16_t) slice->PR);
2234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const uint16_t compare_val);
2256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2293:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2294:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2295:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2296:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2297:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2298:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2299:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2300:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2301:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2302:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2303:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2304:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2305:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2306:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2307:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2308:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2309:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2310:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2311:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2312:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2313:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2314:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2315:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2316:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2317:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2318:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2319:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2320:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2321:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2322:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2323:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2324:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2325:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2326:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2327:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2328:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return
2329:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2330:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2331:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2332:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR1 register.\n\n
2333:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2334:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2335:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel1().
2336:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2337:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice)
2338:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2339:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2340:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR1;
2341:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2342:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2343:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2344:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2345:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return Timer compare value
2346:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2347:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2348:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2349:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR2 register.\n\n
2350:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2351:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2352:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel2().
2353:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2354:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice)
2355:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2356:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2357:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR2;
2358:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2359:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2360:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2361:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2362:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2363:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2364:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2365:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2366:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2367:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2368:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2369:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2370:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2371:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2372:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2373:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2374:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR>
2375:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2376:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2377:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2378:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2379:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2380:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2381:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2382:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 214              	 .loc 1 2382 0
 215              	 .cfi_startproc
 216              	 
 217              	 
 218              	 
 219 0000 80B4     	 push {r7}
 220              	.LCFI24:
 221              	 .cfi_def_cfa_offset 4
 222              	 .cfi_offset 7,-4
 223 0002 83B0     	 sub sp,sp,#12
 224              	.LCFI25:
 225              	 .cfi_def_cfa_offset 16
 226 0004 00AF     	 add r7,sp,#0
 227              	.LCFI26:
 228              	 .cfi_def_cfa_register 7
 229 0006 7860     	 str r0,[r7,#4]
 230 0008 3960     	 str r1,[r7]
2383:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2384:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;
 231              	 .loc 1 2384 0
 232 000a 7B68     	 ldr r3,[r7,#4]
 233 000c 3A68     	 ldr r2,[r7]
 234 000e 1A61     	 str r2,[r3,#16]
2385:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 235              	 .loc 1 2385 0
 236 0010 0C37     	 adds r7,r7,#12
 237              	.LCFI27:
 238              	 .cfi_def_cfa_offset 4
 239 0012 BD46     	 mov sp,r7
 240              	.LCFI28:
 241              	 .cfi_def_cfa_register 13
 242              	 
 243 0014 5DF8047B 	 ldr r7,[sp],#4
 244              	.LCFI29:
 245              	 .cfi_restore 7
 246              	 .cfi_def_cfa_offset 0
 247 0018 7047     	 bx lr
 248              	 .cfi_endproc
 249              	.LFE170:
 251 001a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerValue,"ax",%progbits
 252              	 .align 2
 253              	 .thumb
 254              	 .thumb_func
 256              	XMC_CCU8_SLICE_SetTimerValue:
 257              	.LFB172:
2386:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2387:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2388:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2389:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2390:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2391:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2392:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2393:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2394:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2395:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2396:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2397:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2398:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2399:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2400:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2401:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2402:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((uint16_t) slice->TIMER);
2403:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2404:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2405:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2406:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2407:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2408:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2409:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2410:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2411:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2412:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2413:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2414:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2415:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2416:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2417:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2418:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2419:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2420:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2421:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 258              	 .loc 1 2421 0
 259              	 .cfi_startproc
 260              	 
 261              	 
 262              	 
 263 0000 80B4     	 push {r7}
 264              	.LCFI30:
 265              	 .cfi_def_cfa_offset 4
 266              	 .cfi_offset 7,-4
 267 0002 83B0     	 sub sp,sp,#12
 268              	.LCFI31:
 269              	 .cfi_def_cfa_offset 16
 270 0004 00AF     	 add r7,sp,#0
 271              	.LCFI32:
 272              	 .cfi_def_cfa_register 7
 273 0006 7860     	 str r0,[r7,#4]
 274 0008 0B46     	 mov r3,r1
 275 000a 7B80     	 strh r3,[r7,#2]
2422:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2423:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
 276              	 .loc 1 2423 0
 277 000c 7A88     	 ldrh r2,[r7,#2]
 278 000e 7B68     	 ldr r3,[r7,#4]
 279 0010 1A67     	 str r2,[r3,#112]
2424:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 280              	 .loc 1 2424 0
 281 0012 0C37     	 adds r7,r7,#12
 282              	.LCFI33:
 283              	 .cfi_def_cfa_offset 4
 284 0014 BD46     	 mov sp,r7
 285              	.LCFI34:
 286              	 .cfi_def_cfa_register 13
 287              	 
 288 0016 5DF8047B 	 ldr r7,[sp],#4
 289              	.LCFI35:
 290              	 .cfi_restore 7
 291              	 .cfi_def_cfa_offset 0
 292 001a 7047     	 bx lr
 293              	 .cfi_endproc
 294              	.LFE172:
 296              	 .section .text.XMC_CCU8_SLICE_EnableEvent,"ax",%progbits
 297              	 .align 2
 298              	 .thumb
 299              	 .thumb_func
 301              	XMC_CCU8_SLICE_EnableEvent:
 302              	.LFB181:
2425:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2426:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2427:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2428:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2429:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2430:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2431:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2432:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2433:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2434:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2435:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2436:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2437:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2438:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2439:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2440:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2441:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2442:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2443:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2444:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2445:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2446:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2447:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2448:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2449:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2450:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2451:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2452:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2453:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2454:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2455:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2456:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2457:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2458:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2459:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2460:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2461:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2462:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2463:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2464:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2465:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2466:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2467:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2468:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2469:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2470:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2471:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2472:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2473:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2474:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2475:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2476:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2477:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2478:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2479:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2480:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2481:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2482:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2483:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2484:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2485:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2486:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2487:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2488:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2489:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2490:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2491:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2492:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2493:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2494:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2495:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2496:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2497:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2498:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2499:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2500:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2501:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2502:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2503:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2504:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2505:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2506:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2507:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2508:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2509:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2510:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2511:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2512:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2513:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2514:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2515:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2516:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2517:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2518:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2519:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2520:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2521:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2522:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2523:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2524:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2525:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2526:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2527:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2528:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2529:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2530:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2531:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2532:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2533:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2534:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2535:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2536:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2537:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2538:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2539:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2540:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t
2541:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2542:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2543:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2544:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2545:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2546:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2547:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2548:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2549:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2550:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2551:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2552:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2553:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
2554:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2555:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2556:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2557:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2558:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_PRESCALER_t Prescaler divider value. <BR>
2559:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2560:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2561:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current prescaler value.\n\n
2562:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Used to detrmine the clock frequency of the CCU8 slice XMC_SCU_CLOCK_GetCcuClockFrequency() / XM
2563:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2564:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2565:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2566:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2567:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_PRESCALER_t XMC_CCU8_SLICE_GetPrescaler(XMC_CCU8_SLICE_t *const slic
2568:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2569:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2570:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2571:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (XMC_CCU8_SLICE_PRESCALER_t)slice->PSC;
2572:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2573:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2574:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2575:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2576:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2577:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2578:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2579:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2580:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2581:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2582:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2583:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2584:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2585:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2586:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2587:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2588:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2589:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2590:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2591:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2592:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const uint8_t cmp_val)
2593:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2594:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2595:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2596:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2597:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2598:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2599:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2600:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2601:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2602:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2603:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2604:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2605:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2606:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2607:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2608:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2609:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2610:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2611:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2612:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2613:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2614:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2615:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2616:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2617:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t ch_num)
2618:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2619:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2620:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2621:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2622:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2623:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2624:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2625:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2626:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2627:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2628:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2629:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2630:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2631:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2632:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2633:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2634:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2635:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2636:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2637:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2638:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2639:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2640:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t ch_num)
2641:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2642:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2643:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2644:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2645:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2646:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2647:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2648:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2649:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2650:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2651:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2652:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2653:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2654:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2655:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2656:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2657:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2658:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2659:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2660:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2661:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2662:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2663:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** */
2664:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2665:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2666:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2667:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2668:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2669:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                Range: [0,3]
2670:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2671:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2672:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2673:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2674:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2675:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2676:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2677:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2678:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2679:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2680:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2681:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2682:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2683:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2684:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2685:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2686:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2687:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2688:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2689:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2690:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2691:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2692:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2693:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2694:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2695:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2696:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2697:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2698:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * evaluated.\n
2699:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2700:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2701:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2702:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2703:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2704:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2705:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2706:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2707:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t *val_ptr);
2708:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2709:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2710:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2711:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2712:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2713:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2714:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2715:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2716:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2717:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2718:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2719:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2720:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2721:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2722:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2723:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2724:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2725:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 303              	 .loc 1 2725 0
 304              	 .cfi_startproc
 305              	 
 306              	 
 307              	 
 308 0000 80B4     	 push {r7}
 309              	.LCFI36:
 310              	 .cfi_def_cfa_offset 4
 311              	 .cfi_offset 7,-4
 312 0002 83B0     	 sub sp,sp,#12
 313              	.LCFI37:
 314              	 .cfi_def_cfa_offset 16
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI38:
 317              	 .cfi_def_cfa_register 7
 318 0006 7860     	 str r0,[r7,#4]
 319 0008 0B46     	 mov r3,r1
 320 000a FB70     	 strb r3,[r7,#3]
2726:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2727:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2728:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2729:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 321              	 .loc 1 2729 0
 322 000c 7B68     	 ldr r3,[r7,#4]
 323 000e D3F8A420 	 ldr r2,[r3,#164]
 324 0012 FB78     	 ldrb r3,[r7,#3]
 325 0014 0121     	 movs r1,#1
 326 0016 01FA03F3 	 lsl r3,r1,r3
 327 001a 1A43     	 orrs r2,r2,r3
 328 001c 7B68     	 ldr r3,[r7,#4]
 329 001e C3F8A420 	 str r2,[r3,#164]
2730:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 330              	 .loc 1 2730 0
 331 0022 0C37     	 adds r7,r7,#12
 332              	.LCFI39:
 333              	 .cfi_def_cfa_offset 4
 334 0024 BD46     	 mov sp,r7
 335              	.LCFI40:
 336              	 .cfi_def_cfa_register 13
 337              	 
 338 0026 5DF8047B 	 ldr r7,[sp],#4
 339              	.LCFI41:
 340              	 .cfi_restore 7
 341              	 .cfi_def_cfa_offset 0
 342 002a 7047     	 bx lr
 343              	 .cfi_endproc
 344              	.LFE181:
 346              	 .section .text.XMC_CCU8_SLICE_DisableEvent,"ax",%progbits
 347              	 .align 2
 348              	 .thumb
 349              	 .thumb_func
 351              	XMC_CCU8_SLICE_DisableEvent:
 352              	.LFB183:
2731:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2732:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2733:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2734:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2735:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2736:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  using a bit wise OR operation.
2737:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2738:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2739:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2740:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2741:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC8yINTE re
2742:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2743:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2744:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2745:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2746:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_Disable
2747:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2748:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2749:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint1
2750:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2751:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2752:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE = (uint32_t) mask;
2753:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2754:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2755:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2756:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2757:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2758:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2759:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2760:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2761:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2762:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC8yINTE register.\n\n
2763:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Prevents the event from being asserted.
2764:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2765:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2766:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2767:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2768:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2769:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLIC
2770:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 353              	 .loc 1 2770 0
 354              	 .cfi_startproc
 355              	 
 356              	 
 357              	 
 358 0000 80B4     	 push {r7}
 359              	.LCFI42:
 360              	 .cfi_def_cfa_offset 4
 361              	 .cfi_offset 7,-4
 362 0002 83B0     	 sub sp,sp,#12
 363              	.LCFI43:
 364              	 .cfi_def_cfa_offset 16
 365 0004 00AF     	 add r7,sp,#0
 366              	.LCFI44:
 367              	 .cfi_def_cfa_register 7
 368 0006 7860     	 str r0,[r7,#4]
 369 0008 0B46     	 mov r3,r1
 370 000a FB70     	 strb r3,[r7,#3]
2771:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2772:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event))
2773:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2774:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
 371              	 .loc 1 2774 0
 372 000c 7B68     	 ldr r3,[r7,#4]
 373 000e D3F8A420 	 ldr r2,[r3,#164]
 374 0012 FB78     	 ldrb r3,[r7,#3]
 375 0014 0121     	 movs r1,#1
 376 0016 01FA03F3 	 lsl r3,r1,r3
 377 001a DB43     	 mvns r3,r3
 378 001c 1A40     	 ands r2,r2,r3
 379 001e 7B68     	 ldr r3,[r7,#4]
 380 0020 C3F8A420 	 str r2,[r3,#164]
2775:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 381              	 .loc 1 2775 0
 382 0024 0C37     	 adds r7,r7,#12
 383              	.LCFI45:
 384              	 .cfi_def_cfa_offset 4
 385 0026 BD46     	 mov sp,r7
 386              	.LCFI46:
 387              	 .cfi_def_cfa_register 13
 388              	 
 389 0028 5DF8047B 	 ldr r7,[sp],#4
 390              	.LCFI47:
 391              	 .cfi_restore 7
 392              	 .cfi_def_cfa_offset 0
 393 002c 7047     	 bx lr
 394              	 .cfi_endproc
 395              	.LFE183:
 397 002e 00BF     	 .section .text.XMC_CCU8_SLICE_ClearEvent,"ax",%progbits
 398              	 .align 2
 399              	 .thumb
 400              	 .thumb_func
 402              	XMC_CCU8_SLICE_ClearEvent:
 403              	.LFB186:
2776:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2777:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2778:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2779:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2780:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2781:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             using a bit wise OR operation.
2782:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2783:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2784:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2785:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2786:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC8yINTE reg
2787:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prevents selected events of the slice from being asserted.
2788:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2789:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2790:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2791:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableEvent().
2792:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2793:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint
2794:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2795:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2796:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~((uint32_t) mask);
2797:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2798:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2799:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2800:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2801:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2802:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2803:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2804:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2805:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2806:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Manually asserts the requested event, by setting CC8ySWS register.\n\n
2807:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2808:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2809:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2810:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2811:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2812:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2813:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_IR
2814:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2815:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2816:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2817:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2818:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWS = ((uint32_t) 1) << ((uint32_t) event);
2819:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2820:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2821:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2822:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2823:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Asserted event which must be acknowledged.
2824:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2825:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2826:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2827:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2828:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Acknowledges an asserted event, by setting CC8ySWR with respective event flag.\n\n
2829:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2830:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2831:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent()<BR>  XMC_CCU8_SLICE_GetEvent().
2832:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2833:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2834:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_
2835:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 404              	 .loc 1 2835 0
 405              	 .cfi_startproc
 406              	 
 407              	 
 408              	 
 409 0000 80B4     	 push {r7}
 410              	.LCFI48:
 411              	 .cfi_def_cfa_offset 4
 412              	 .cfi_offset 7,-4
 413 0002 83B0     	 sub sp,sp,#12
 414              	.LCFI49:
 415              	 .cfi_def_cfa_offset 16
 416 0004 00AF     	 add r7,sp,#0
 417              	.LCFI50:
 418              	 .cfi_def_cfa_register 7
 419 0006 7860     	 str r0,[r7,#4]
 420 0008 0B46     	 mov r3,r1
 421 000a FB70     	 strb r3,[r7,#3]
2836:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2837:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2838:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWR = ((uint32_t) 1) << ((uint32_t) event);
 422              	 .loc 1 2838 0
 423 000c FB78     	 ldrb r3,[r7,#3]
 424 000e 0122     	 movs r2,#1
 425 0010 9A40     	 lsls r2,r2,r3
 426 0012 7B68     	 ldr r3,[r7,#4]
 427 0014 C3F8B020 	 str r2,[r3,#176]
2839:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 428              	 .loc 1 2839 0
 429 0018 0C37     	 adds r7,r7,#12
 430              	.LCFI51:
 431              	 .cfi_def_cfa_offset 4
 432 001a BD46     	 mov sp,r7
 433              	.LCFI52:
 434              	 .cfi_def_cfa_register 13
 435              	 
 436 001c 5DF8047B 	 ldr r7,[sp],#4
 437              	.LCFI53:
 438              	 .cfi_restore 7
 439              	 .cfi_def_cfa_offset 0
 440 0020 7047     	 bx lr
 441              	 .cfi_endproc
 442              	.LFE186:
 444 0022 00BF     	 .section .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode,"ax",%progbits
 445              	 .align 2
 446              	 .thumb
 447              	 .thumb_func
 449              	XMC_CCU8_SLICE_EnableAsymmetricCompareMode:
 450              	.LFB188:
2840:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2841:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2842:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2843:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event to be evaluated for assertion
2844:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2845:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *         bool  Returns true if event is set else false is returned.
2846:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2847:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2848:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Evaluates if a given event is asserted or not, by reading CC8yINTS register.\n\n
2849:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2850:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2851:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2852:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2853:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2854:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2855:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2856:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_GetEvent(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SL
2857:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2858:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2859:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2860:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (((uint32_t)(slice->INTS & ((uint32_t)1 << event))) != 0U);
2861:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2862:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2863:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2864:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2865:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event which must be bound to a service request line
2866:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param sr The Service request line which is bound to the \b event
2867:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2868:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2869:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2870:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2871:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Binds requested event to a service request line, by configuring CC8ySRS register with respective
2872:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2873:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API binds the requested event with the requested service
2874:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2875:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2876:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2877:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2878:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2879:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
2880:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
2881:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_SR_ID_t sr);
2882:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2883:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2884:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2885:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out Output signal for which the passive level needs to be set.
2886:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param level Output passive level for the \b out signal
2887:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2888:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2889:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2890:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2891:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the passive level for the slice output, by setting CC8yPSL register.\n\n
2892:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Defines the passive level for the timer slice output pin. Selects either level high is passive
2893:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * or level low is passive. This is the level of the output before the compare match is value chang
2894:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2895:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2896:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2897:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2898:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
2899:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
2900:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level);
2901:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2902:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2903:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2904:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to dead time configuration data
2905:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2906:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2907:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2908:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2909:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initializes Dead time configuration for the slice outputs, by configuring CC8yDC1R, CC8yDC2R, CC
2910:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine programs dead time delays (rising & falling) and dead time clock prescaler.
2911:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2912:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2913:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2914:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2915:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureDeadTime()<BR>  XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_S
2916:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2917:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2918:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
2919:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config);
2920:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2921:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2922:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2923:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2924:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2925:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2926:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2927:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in asymmetric compare mode, by setting CC8yCHC.ASE bit.\n\n
2928:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In asymmetric compare mode, the compare channels 1 & 2 are grouped to generate the PWM.This woul
2929:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generate an inverted PWM at OUT0 & OUT1.
2930:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Edge Aligned mode (counting up), the Status bit is set when a compare match of
2931:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Compare channel-1 occurs and cleared when a compare match event of Compare channel-2 occurs.\n
2932:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Center Aligned mode, the status bit is set when a compare match event of Compare channel-1 oc
2933:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * counting up and cleared when a compare match event of Compare channel-2 occurs while counting do
2934:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2935:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2936:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * External count direction function is enabled then the asymmetric mode of operation is not possib
2937:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2938:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2939:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableSymmetricCompareMode()<BR>
2940:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2941:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableAsymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2942:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 451              	 .loc 1 2942 0
 452              	 .cfi_startproc
 453              	 
 454              	 
 455              	 
 456 0000 80B4     	 push {r7}
 457              	.LCFI54:
 458              	 .cfi_def_cfa_offset 4
 459              	 .cfi_offset 7,-4
 460 0002 83B0     	 sub sp,sp,#12
 461              	.LCFI55:
 462              	 .cfi_def_cfa_offset 16
 463 0004 00AF     	 add r7,sp,#0
 464              	.LCFI56:
 465              	 .cfi_def_cfa_register 7
 466 0006 7860     	 str r0,[r7,#4]
2943:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableAsymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSl
2944:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC |= (uint32_t) CCU8_CC8_CHC_ASE_Msk;
 467              	 .loc 1 2944 0
 468 0008 7B68     	 ldr r3,[r7,#4]
 469 000a 9B6C     	 ldr r3,[r3,#72]
 470 000c 43F00102 	 orr r2,r3,#1
 471 0010 7B68     	 ldr r3,[r7,#4]
 472 0012 9A64     	 str r2,[r3,#72]
2945:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 473              	 .loc 1 2945 0
 474 0014 0C37     	 adds r7,r7,#12
 475              	.LCFI57:
 476              	 .cfi_def_cfa_offset 4
 477 0016 BD46     	 mov sp,r7
 478              	.LCFI58:
 479              	 .cfi_def_cfa_register 13
 480              	 
 481 0018 5DF8047B 	 ldr r7,[sp],#4
 482              	.LCFI59:
 483              	 .cfi_restore 7
 484              	 .cfi_def_cfa_offset 0
 485 001c 7047     	 bx lr
 486              	 .cfi_endproc
 487              	.LFE188:
 489 001e 00BF     	 .section .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode,"ax",%progbits
 490              	 .align 2
 491              	 .thumb
 492              	 .thumb_func
 494              	XMC_CCU8_SLICE_EnableSymmetricCompareMode:
 495              	.LFB189:
2946:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2947:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2948:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2949:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2950:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2951:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2952:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2953:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in symmetric(standard) compare mode, by clearing CC8yCHC.AS
2954:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In symmetric compare mode, the compare channels 1 & 2 are independent of each other & each chann
2955:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * PWM & inverted PWM at OUT0, OUT1, OUT2 & OUT3.
2956:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2957:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2958:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableAsymmetricCompareMode().
2959:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2960:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableSymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2961:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 496              	 .loc 1 2961 0
 497              	 .cfi_startproc
 498              	 
 499              	 
 500              	 
 501 0000 80B4     	 push {r7}
 502              	.LCFI60:
 503              	 .cfi_def_cfa_offset 4
 504              	 .cfi_offset 7,-4
 505 0002 83B0     	 sub sp,sp,#12
 506              	.LCFI61:
 507              	 .cfi_def_cfa_offset 16
 508 0004 00AF     	 add r7,sp,#0
 509              	.LCFI62:
 510              	 .cfi_def_cfa_register 7
 511 0006 7860     	 str r0,[r7,#4]
2962:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableSymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSli
2963:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC &= ~((uint32_t) CCU8_CC8_CHC_ASE_Msk);
 512              	 .loc 1 2963 0
 513 0008 7B68     	 ldr r3,[r7,#4]
 514 000a 9B6C     	 ldr r3,[r3,#72]
 515 000c 23F00102 	 bic r2,r3,#1
 516 0010 7B68     	 ldr r3,[r7,#4]
 517 0012 9A64     	 str r2,[r3,#72]
2964:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 518              	 .loc 1 2964 0
 519 0014 0C37     	 adds r7,r7,#12
 520              	.LCFI63:
 521              	 .cfi_def_cfa_offset 4
 522 0016 BD46     	 mov sp,r7
 523              	.LCFI64:
 524              	 .cfi_def_cfa_register 13
 525              	 
 526 0018 5DF8047B 	 ldr r7,[sp],#4
 527              	.LCFI65:
 528              	 .cfi_restore 7
 529              	 .cfi_def_cfa_offset 0
 530 001c 7047     	 bx lr
 531              	 .cfi_endproc
 532              	.LFE189:
 534 001e 00BF     	 .section .text.XMC_SCU_SetCcuTriggerHigh,"ax",%progbits
 535              	 .align 2
 536              	 .thumb
 537              	 .thumb_func
 539              	XMC_SCU_SetCcuTriggerHigh:
 540              	.LFB223:
 541              	 .file 2 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2019-12-02
   4:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
   7:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.
  11:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  14:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * do so, all subject to the following:
  20:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  21:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * a source language processor.
  27:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  28:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
  40:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  41:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  42:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  43:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  44:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  45:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  46:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  47:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  48:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  49:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  50:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  51:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  52:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  54:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  55:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  56:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  57:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  58:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  59:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  60:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  62:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  63:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  64:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2019-12-02:
  65:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  66:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  67:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond
  68:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  69:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
  70:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  71:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  72:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
  73:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  74:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  75:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  76:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc_common.h"
  77:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
  78:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
  79:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  80:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  81:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
  82:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
  83:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
  84:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  85:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  86:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  87:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  88:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  89:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  90:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  91:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control
  93:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  95:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  96:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  97:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  98:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  99:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic
 101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
 103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
 105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
 106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS
 179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc1_scu.h"
 203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc4_scu.h"
 205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #else
 206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 542              	 .loc 2 239 0
 543              	 .cfi_startproc
 544              	 
 545              	 
 546              	 
 547 0000 80B4     	 push {r7}
 548              	.LCFI66:
 549              	 .cfi_def_cfa_offset 4
 550              	 .cfi_offset 7,-4
 551 0002 83B0     	 sub sp,sp,#12
 552              	.LCFI67:
 553              	 .cfi_def_cfa_offset 16
 554 0004 00AF     	 add r7,sp,#0
 555              	.LCFI68:
 556              	 .cfi_def_cfa_register 7
 557 0006 7860     	 str r0,[r7,#4]
 240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 558              	 .loc 2 240 0
 559 0008 0549     	 ldr r1,.L13
 560 000a 054B     	 ldr r3,.L13
 561 000c DA6C     	 ldr r2,[r3,#76]
 562 000e 7B68     	 ldr r3,[r7,#4]
 563 0010 1343     	 orrs r3,r3,r2
 564 0012 CB64     	 str r3,[r1,#76]
 241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** }
 565              	 .loc 2 241 0
 566 0014 0C37     	 adds r7,r7,#12
 567              	.LCFI69:
 568              	 .cfi_def_cfa_offset 4
 569 0016 BD46     	 mov sp,r7
 570              	.LCFI70:
 571              	 .cfi_def_cfa_register 13
 572              	 
 573 0018 5DF8047B 	 ldr r7,[sp],#4
 574              	.LCFI71:
 575              	 .cfi_restore 7
 576              	 .cfi_def_cfa_offset 0
 577 001c 7047     	 bx lr
 578              	.L14:
 579 001e 00BF     	 .align 2
 580              	.L13:
 581 0020 00400050 	 .word 1342193664
 582              	 .cfi_endproc
 583              	.LFE223:
 585              	 .section .text.XMC_SCU_SetCcuTriggerLow,"ax",%progbits
 586              	 .align 2
 587              	 .thumb
 588              	 .thumb_func
 590              	XMC_SCU_SetCcuTriggerLow:
 591              	.LFB224:
 242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 592              	 .loc 2 264 0
 593              	 .cfi_startproc
 594              	 
 595              	 
 596              	 
 597 0000 80B4     	 push {r7}
 598              	.LCFI72:
 599              	 .cfi_def_cfa_offset 4
 600              	 .cfi_offset 7,-4
 601 0002 83B0     	 sub sp,sp,#12
 602              	.LCFI73:
 603              	 .cfi_def_cfa_offset 16
 604 0004 00AF     	 add r7,sp,#0
 605              	.LCFI74:
 606              	 .cfi_def_cfa_register 7
 607 0006 7860     	 str r0,[r7,#4]
 265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 608              	 .loc 2 265 0
 609 0008 0549     	 ldr r1,.L16
 610 000a 054B     	 ldr r3,.L16
 611 000c DA6C     	 ldr r2,[r3,#76]
 612 000e 7B68     	 ldr r3,[r7,#4]
 613 0010 DB43     	 mvns r3,r3
 614 0012 1340     	 ands r3,r3,r2
 615 0014 CB64     	 str r3,[r1,#76]
 266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** }
 616              	 .loc 2 266 0
 617 0016 0C37     	 adds r7,r7,#12
 618              	.LCFI75:
 619              	 .cfi_def_cfa_offset 4
 620 0018 BD46     	 mov sp,r7
 621              	.LCFI76:
 622              	 .cfi_def_cfa_register 13
 623              	 
 624 001a 5DF8047B 	 ldr r7,[sp],#4
 625              	.LCFI77:
 626              	 .cfi_restore 7
 627              	 .cfi_def_cfa_offset 0
 628 001e 7047     	 bx lr
 629              	.L17:
 630              	 .align 2
 631              	.L16:
 632 0020 00400050 	 .word 1342193664
 633              	 .cfi_endproc
 634              	.LFE224:
 636              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 637              	 .align 2
 638              	 .thumb
 639              	 .thumb_func
 641              	XMC_GPIO_SetOutputHigh:
 642              	.LFB233:
 643              	 .file 3 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** {
 644              	 .loc 3 262 0
 645              	 .cfi_startproc
 646              	 
 647              	 
 648              	 
 649 0000 80B4     	 push {r7}
 650              	.LCFI78:
 651              	 .cfi_def_cfa_offset 4
 652              	 .cfi_offset 7,-4
 653 0002 83B0     	 sub sp,sp,#12
 654              	.LCFI79:
 655              	 .cfi_def_cfa_offset 16
 656 0004 00AF     	 add r7,sp,#0
 657              	.LCFI80:
 658              	 .cfi_def_cfa_register 7
 659 0006 7860     	 str r0,[r7,#4]
 660 0008 0B46     	 mov r3,r1
 661 000a FB70     	 strb r3,[r7,#3]
 263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 662              	 .loc 3 265 0
 663 000c FB78     	 ldrb r3,[r7,#3]
 664 000e 0122     	 movs r2,#1
 665 0010 9A40     	 lsls r2,r2,r3
 666 0012 7B68     	 ldr r3,[r7,#4]
 667 0014 5A60     	 str r2,[r3,#4]
 266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** }
 668              	 .loc 3 266 0
 669 0016 0C37     	 adds r7,r7,#12
 670              	.LCFI81:
 671              	 .cfi_def_cfa_offset 4
 672 0018 BD46     	 mov sp,r7
 673              	.LCFI82:
 674              	 .cfi_def_cfa_register 13
 675              	 
 676 001a 5DF8047B 	 ldr r7,[sp],#4
 677              	.LCFI83:
 678              	 .cfi_restore 7
 679              	 .cfi_def_cfa_offset 0
 680 001e 7047     	 bx lr
 681              	 .cfi_endproc
 682              	.LFE233:
 684              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 685              	 .align 2
 686              	 .thumb
 687              	 .thumb_func
 689              	XMC_GPIO_SetOutputLow:
 690              	.LFB234:
 267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** {
 691              	 .loc 3 288 0
 692              	 .cfi_startproc
 693              	 
 694              	 
 695              	 
 696 0000 80B4     	 push {r7}
 697              	.LCFI84:
 698              	 .cfi_def_cfa_offset 4
 699              	 .cfi_offset 7,-4
 700 0002 83B0     	 sub sp,sp,#12
 701              	.LCFI85:
 702              	 .cfi_def_cfa_offset 16
 703 0004 00AF     	 add r7,sp,#0
 704              	.LCFI86:
 705              	 .cfi_def_cfa_register 7
 706 0006 7860     	 str r0,[r7,#4]
 707 0008 0B46     	 mov r3,r1
 708 000a FB70     	 strb r3,[r7,#3]
 289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 709              	 .loc 3 291 0
 710 000c FB78     	 ldrb r3,[r7,#3]
 711 000e 4FF48032 	 mov r2,#65536
 712 0012 9A40     	 lsls r2,r2,r3
 713 0014 7B68     	 ldr r3,[r7,#4]
 714 0016 5A60     	 str r2,[r3,#4]
 292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_gpio.h **** }
 715              	 .loc 3 292 0
 716 0018 0C37     	 adds r7,r7,#12
 717              	.LCFI87:
 718              	 .cfi_def_cfa_offset 4
 719 001a BD46     	 mov sp,r7
 720              	.LCFI88:
 721              	 .cfi_def_cfa_register 13
 722              	 
 723 001c 5DF8047B 	 ldr r7,[sp],#4
 724              	.LCFI89:
 725              	 .cfi_restore 7
 726              	 .cfi_def_cfa_offset 0
 727 0020 7047     	 bx lr
 728              	 .cfi_endproc
 729              	.LFE234:
 731 0022 00BF     	 .section .text.PWM_SVM_lEnableEvent,"ax",%progbits
 732              	 .align 2
 733              	 .global PWM_SVM_lEnableEvent
 734              	 .thumb
 735              	 .thumb_func
 737              	PWM_SVM_lEnableEvent:
 738              	.LFB241:
 739              	 .file 4 "../Dave/Generated/PWM_SVM/pwm_svm.c"
   1:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
   2:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @file pwm_svm.c
   3:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @date 2015-10-21
   4:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  *
   5:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * NOTE:
   6:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
   8:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @cond
   9:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * PWM_SVM v4.0.30 - Generates 3-phase space vector pulse width modulated outputs using CCU8.
  11:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * It supports symmetric/asymmetric and 7-segment/5-segment SVM algorithm.
  12:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  13:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * All rights reserved.
  15:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  16:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * following conditions are met:
  18:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  19:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   disclaimer.
  21:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  22:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  25:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  28:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  36:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  39:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  40:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Change History
  41:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * --------------
  42:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  43:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * 2015-02-20:
  44:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - Initial version
  45:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  46:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * 2015-06-20:
  47:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - DC link current trigger is updated. <br>
  48:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *     - max_amplitude updated when PWM scheme is changed
  49:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  50:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @endcond
  51:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *
  52:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  53:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  54:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * HEADER FILES
  55:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  56:../Dave/Generated/PWM_SVM/pwm_svm.c **** #include "pwm_svm.h"
  57:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  58:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  59:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * MACROS
  60:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  61:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  62:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  63:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL DATA
  64:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  65:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  66:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
  67:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL ROUTINES
  68:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
  69:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  70:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function updates the compare values for the Symmetric
  71:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM(standard SVM) \n
  72:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  73:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  74:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  75:../Dave/Generated/PWM_SVM/pwm_svm.c **** RAM_ATTRIBUTE static void PWM_SVM_lSymCompValUpdate(PWM_SVM_t* const HandlePtr);
  76:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  77:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function updates the compare values for the Asymmetric
  78:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM(standard SVM) \n
  79:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  80:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  81:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  82:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lAsymCompValUpdate(PWM_SVM_t* const HandlePtr);
  83:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  84:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
  85:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  86:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the compare register values based on the sector
  87:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
  88:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  89:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  90:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  91:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lUpdateDcLinkComRes(PWM_SVM_t* const HandlePtr);
  92:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
  93:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the svm scheme dynamically while pwm is running
  94:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
  95:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
  96:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Scheme required svm scheme
  97:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
  98:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
  99:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lDynamicSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme);
 100:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 101:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function update the svm scheme when pwm is stopped
 102:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
 103:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 104:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Scheme required svm scheme
 105:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 106:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 107:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lStaticSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme);
 108:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
 109:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 110:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the current trigger ccu8 slice
 111:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *  number
 112:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 113:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 114:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 115:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCurrentTrigSliceInit(PWM_SVM_t* const HandlePtr);
 116:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 117:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 118:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the period value for Centre aligned PWM when switching from
 119:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *         Edge aligned PWM
 120:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 121:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 122:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 123:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCAPeriodValueConfig(PWM_SVM_t* const HandlePtr);
 124:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 125:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief  This function configures the period value for edge aligned PWM when switching from
 126:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *         centre aligned PWM
 127:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 128:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 129:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 130:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEAPeriodValueConfig(PWM_SVM_t* const HandlePtr);
 131:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 132:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * Function enables configured events.
 133:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 134:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEnableEvent(PWM_SVM_t* const HandlePtr);
 135:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_OVERMODULATION_ENABLE)
 136:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 137:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function calculates sector angle for over modulation using Look up table.
 138:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function will update sector angle variable based on amplitude.
 139:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 140:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Amplitude Amplitude
 141:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 142:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 143:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lOvermodulation(PWM_SVM_t* const HandlePtr, uint16_t Amplitude);
 144:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 145:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @brief This function calculates sector angle for over modulation using CORDIC and Lookup table.
 146:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function will update sector angle variable based on amplitude.
 147:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] HandlePtr Handle of the PWM_SVM App
 148:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @param[in] Amplitude Amplitude
 149:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * @return void
 150:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 151:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lOvermodulation_Cordic(PWM_SVM_t* const HandlePtr, uint16_t Amplitude);
 152:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 153:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 154:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
 155:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * LOCAL DATA
 156:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **************************************************************************************************
 157:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_LUT_ENABLE)
 158:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 159:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This is the sine table used for SVM algorithm.
 160:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 161:../Dave/Generated/PWM_SVM/pwm_svm.c **** extern const uint16_t Sinus60_tab[];
 162:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 163:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 164:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 165:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**************************************************************************************************
 166:../Dave/Generated/PWM_SVM/pwm_svm.c **** * API IMPLEMENTATION
 167:../Dave/Generated/PWM_SVM/pwm_svm.c **** ***************************************************************************************************
 168:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEnableEvent(PWM_SVM_t* const HandlePtr)
 169:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 740              	 .loc 4 169 0
 741              	 .cfi_startproc
 742              	 
 743              	 
 744 0000 80B5     	 push {r7,lr}
 745              	.LCFI90:
 746              	 .cfi_def_cfa_offset 8
 747              	 .cfi_offset 7,-8
 748              	 .cfi_offset 14,-4
 749 0002 82B0     	 sub sp,sp,#8
 750              	.LCFI91:
 751              	 .cfi_def_cfa_offset 16
 752 0004 00AF     	 add r7,sp,#0
 753              	.LCFI92:
 754              	 .cfi_def_cfa_register 7
 755 0006 7860     	 str r0,[r7,#4]
 170:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the slice 0 period match interrupt */
 171:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) true == HandlePtr->confighandle_ptr->enable_periodmatch)
 756              	 .loc 4 171 0
 757 0008 7B68     	 ldr r3,[r7,#4]
 758 000a 1B68     	 ldr r3,[r3]
 759 000c 93F84430 	 ldrb r3,[r3,#68]
 760 0010 012B     	 cmp r3,#1
 761 0012 06D1     	 bne .L21
 172:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 173:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[0]->slice_ptr,
 762              	 .loc 4 173 0
 763 0014 7B68     	 ldr r3,[r7,#4]
 764 0016 9B68     	 ldr r3,[r3,#8]
 765 0018 1B68     	 ldr r3,[r3]
 766 001a 1846     	 mov r0,r3
 767 001c 0021     	 movs r1,#0
 768 001e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 769              	.L21:
 174:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 175:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 176:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the slice 0 trap interrupt */
 177:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) true == HandlePtr->confighandle_ptr->enable_trapevent)
 770              	 .loc 4 177 0
 771 0022 7B68     	 ldr r3,[r7,#4]
 772 0024 1B68     	 ldr r3,[r3]
 773 0026 93F84530 	 ldrb r3,[r3,#69]
 774 002a 012B     	 cmp r3,#1
 775 002c 06D1     	 bne .L20
 178:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 179:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[0]->slice_ptr,
 776              	 .loc 4 179 0
 777 002e 7B68     	 ldr r3,[r7,#4]
 778 0030 9B68     	 ldr r3,[r3,#8]
 779 0032 1B68     	 ldr r3,[r3]
 780 0034 1846     	 mov r0,r3
 781 0036 0A21     	 movs r1,#10
 782 0038 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 783              	.L20:
 180:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 181:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 182:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 784              	 .loc 4 182 0
 785 003c 0837     	 adds r7,r7,#8
 786              	.LCFI93:
 787              	 .cfi_def_cfa_offset 8
 788 003e BD46     	 mov sp,r7
 789              	.LCFI94:
 790              	 .cfi_def_cfa_register 13
 791              	 
 792 0040 80BD     	 pop {r7,pc}
 793              	 .cfi_endproc
 794              	.LFE241:
 796 0042 00BF     	 .section .text.PWM_SVM_InverterDisable,"ax",%progbits
 797              	 .align 2
 798              	 .global PWM_SVM_InverterDisable
 799              	 .thumb
 800              	 .thumb_func
 802              	PWM_SVM_InverterDisable:
 803              	.LFB242:
 183:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 184:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function disables the inverter
 185:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 186:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_InverterDisable(PWM_SVM_t* const HandlePtr)
 187:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 804              	 .loc 4 187 0
 805              	 .cfi_startproc
 806              	 
 807              	 
 808 0000 80B5     	 push {r7,lr}
 809              	.LCFI95:
 810              	 .cfi_def_cfa_offset 8
 811              	 .cfi_offset 7,-8
 812              	 .cfi_offset 14,-4
 813 0002 82B0     	 sub sp,sp,#8
 814              	.LCFI96:
 815              	 .cfi_def_cfa_offset 16
 816 0004 00AF     	 add r7,sp,#0
 817              	.LCFI97:
 818              	 .cfi_def_cfa_register 7
 819 0006 7860     	 str r0,[r7,#4]
 188:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_InverterDisable:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
 189:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin settings.*/
 190:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_HIGH == HandlePtr->confighandle_ptr->inverter_pin)
 820              	 .loc 4 190 0
 821 0008 7B68     	 ldr r3,[r7,#4]
 822 000a 1B68     	 ldr r3,[r3]
 823 000c DB7C     	 ldrb r3,[r3,#19]
 824 000e 012B     	 cmp r3,#1
 825 0010 09D1     	 bne .L24
 191:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 192:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to low*/
 193:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputLow(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 826              	 .loc 4 193 0
 827 0012 7B68     	 ldr r3,[r7,#4]
 828 0014 9B6D     	 ldr r3,[r3,#88]
 829 0016 1A68     	 ldr r2,[r3]
 830 0018 7B68     	 ldr r3,[r7,#4]
 831 001a 9B6D     	 ldr r3,[r3,#88]
 832 001c 1B79     	 ldrb r3,[r3,#4]
 833 001e 1046     	 mov r0,r2
 834 0020 1946     	 mov r1,r3
 835 0022 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 836              	.L24:
 194:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 195:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_LOW == HandlePtr->confighandle_ptr->inverter_pin)
 837              	 .loc 4 195 0
 838 0026 7B68     	 ldr r3,[r7,#4]
 839 0028 1B68     	 ldr r3,[r3]
 840 002a DB7C     	 ldrb r3,[r3,#19]
 841 002c 022B     	 cmp r3,#2
 842 002e 09D1     	 bne .L23
 196:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to high*/
 198:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputHigh(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 843              	 .loc 4 198 0
 844 0030 7B68     	 ldr r3,[r7,#4]
 845 0032 9B6D     	 ldr r3,[r3,#88]
 846 0034 1A68     	 ldr r2,[r3]
 847 0036 7B68     	 ldr r3,[r7,#4]
 848 0038 9B6D     	 ldr r3,[r3,#88]
 849 003a 1B79     	 ldrb r3,[r3,#4]
 850 003c 1046     	 mov r0,r2
 851 003e 1946     	 mov r1,r3
 852 0040 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 853              	.L23:
 199:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 200:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 854              	 .loc 4 200 0
 855 0044 0837     	 adds r7,r7,#8
 856              	.LCFI98:
 857              	 .cfi_def_cfa_offset 8
 858 0046 BD46     	 mov sp,r7
 859              	.LCFI99:
 860              	 .cfi_def_cfa_register 13
 861              	 
 862 0048 80BD     	 pop {r7,pc}
 863              	 .cfi_endproc
 864              	.LFE242:
 866 004a 00BF     	 .section .text.PWM_SVM_InverterEnable,"ax",%progbits
 867              	 .align 2
 868              	 .global PWM_SVM_InverterEnable
 869              	 .thumb
 870              	 .thumb_func
 872              	PWM_SVM_InverterEnable:
 873              	.LFB243:
 201:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 202:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function Enables the inverter
 203:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 204:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_InverterEnable(PWM_SVM_t* const HandlePtr)
 205:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 874              	 .loc 4 205 0
 875              	 .cfi_startproc
 876              	 
 877              	 
 878 0000 80B5     	 push {r7,lr}
 879              	.LCFI100:
 880              	 .cfi_def_cfa_offset 8
 881              	 .cfi_offset 7,-8
 882              	 .cfi_offset 14,-4
 883 0002 82B0     	 sub sp,sp,#8
 884              	.LCFI101:
 885              	 .cfi_def_cfa_offset 16
 886 0004 00AF     	 add r7,sp,#0
 887              	.LCFI102:
 888              	 .cfi_def_cfa_register 7
 889 0006 7860     	 str r0,[r7,#4]
 206:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
 207:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin settings.*/
 208:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_HIGH == HandlePtr->confighandle_ptr->inverter_pin)
 890              	 .loc 4 208 0
 891 0008 7B68     	 ldr r3,[r7,#4]
 892 000a 1B68     	 ldr r3,[r3]
 893 000c DB7C     	 ldrb r3,[r3,#19]
 894 000e 012B     	 cmp r3,#1
 895 0010 09D1     	 bne .L27
 209:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 210:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to high*/
 211:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputHigh(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 896              	 .loc 4 211 0
 897 0012 7B68     	 ldr r3,[r7,#4]
 898 0014 9B6D     	 ldr r3,[r3,#88]
 899 0016 1A68     	 ldr r2,[r3]
 900 0018 7B68     	 ldr r3,[r7,#4]
 901 001a 9B6D     	 ldr r3,[r3,#88]
 902 001c 1B79     	 ldrb r3,[r3,#4]
 903 001e 1046     	 mov r0,r2
 904 0020 1946     	 mov r1,r3
 905 0022 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 906              	.L27:
 212:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 213:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_LOW == HandlePtr->confighandle_ptr->inverter_pin)
 907              	 .loc 4 213 0
 908 0026 7B68     	 ldr r3,[r7,#4]
 909 0028 1B68     	 ldr r3,[r3]
 910 002a DB7C     	 ldrb r3,[r3,#19]
 911 002c 022B     	 cmp r3,#2
 912 002e 09D1     	 bne .L26
 214:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 215:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Set IO output to low*/
 216:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_GPIO_SetOutputLow(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin);
 913              	 .loc 4 216 0
 914 0030 7B68     	 ldr r3,[r7,#4]
 915 0032 9B6D     	 ldr r3,[r3,#88]
 916 0034 1A68     	 ldr r2,[r3]
 917 0036 7B68     	 ldr r3,[r7,#4]
 918 0038 9B6D     	 ldr r3,[r3,#88]
 919 003a 1B79     	 ldrb r3,[r3,#4]
 920 003c 1046     	 mov r0,r2
 921 003e 1946     	 mov r1,r3
 922 0040 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 923              	.L26:
 217:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 218:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 924              	 .loc 4 218 0
 925 0044 0837     	 adds r7,r7,#8
 926              	.LCFI103:
 927              	 .cfi_def_cfa_offset 8
 928 0046 BD46     	 mov sp,r7
 929              	.LCFI104:
 930              	 .cfi_def_cfa_register 13
 931              	 
 932 0048 80BD     	 pop {r7,pc}
 933              	 .cfi_endproc
 934              	.LFE243:
 936 004a 00BF     	 .section .ram_code,"ax",%progbits
 937              	 .align 2
 938              	 .thumb
 939              	 .thumb_func
 941              	PWM_SVM_lSymCompValUpdate:
 942              	.LFB245:
 219:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
 220:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 221:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function configures the current trigger slice
 222:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 223:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCurrentTrigSliceInit(PWM_SVM_t* const HandlePtr)
 224:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 225:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_CompareInit(HandlePtr->phase_ptr[3]->slice_ptr, HandlePtr->current_configinit_ptr)
 226:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->peri
 227:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Configure external start to event 0 */
 228:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[3]->slice_ptr,(XMC_CCU8_SLICE_EVENT_t)XMC_CCU8
 229:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->startconfig_ptr);
 230:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_EnableClock(HandlePtr->global_ptr,HandlePtr->phase_ptr[3]->slice_number);
 231:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 232:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Phase current measurement */
 233:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->confighandle_ptr->current_measurement == PWM_SVM_PHASECM )
 234:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 235:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Program timer compare value for channel 1 or channel 2*/
 236:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr, HandlePtr->confighandle
 237:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 1U));
 238:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Enable timer one match event  */
 239:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CC
 240:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 241:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else if (HandlePtr->confighandle_ptr->current_measurement == PWM_SVM_DCLINKCM )/* DC Link current
 242:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 243:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Program timer compare value for channel 1 or channel 2*/
 244:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 245:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t)XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 246:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 2U));
 247:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t)XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 249:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint16_t)(HandlePtr->period) >> 1U));
 250:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Enable timer compare match event based on svm scheme */
 251:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_SVMCONFIG_t)PWM_SVM_7SEG_SYMM == HandlePtr->svm_config)
 252:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 253:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 254:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
 255:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 256:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
 257:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 258:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
 259:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 260:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
 261:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 262:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
 263:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 264:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 265:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
 266:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 267:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_IRQ_ID_t)XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
 268:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 269:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 270:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 271:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 272:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*do nothing*/
 273:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 274:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 275:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->phase_ptr[3]->slice_ptr->SRS |= HandlePtr->confighandle_ptr->event_sr_selector[3];
 276:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 277:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 278:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 279:../Dave/Generated/PWM_SVM/pwm_svm.c **** /* This function updates the compare register values for DC link current measurement */
 280:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE static void PWM_SVM_lUpdateDcLinkComRes(PWM_SVM_t* const HandlePtr)
 281:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 282:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 283:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 284:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 285:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (uint16_t)(HandlePtr->v_tb + (uint16_t)(HandlePtr->ta >> (uint16_t) 1)));
 286:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 287:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 288:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (uint16_t)(HandlePtr->v_tb + (uint16_t)((uint16_t) HandlePtr->tb >> (uint16_t) 1) + (uint16
 289:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 290:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 291:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lSymCompValUpdate(PWM_SVM_t* const HandlePtr)
 292:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 943              	 .loc 4 292 0
 944              	 .cfi_startproc
 945              	 
 946              	 
 947              	 
 948 0000 80B4     	 push {r7}
 949              	.LCFI105:
 950              	 .cfi_def_cfa_offset 4
 951              	 .cfi_offset 7,-4
 952 0002 83B0     	 sub sp,sp,#12
 953              	.LCFI106:
 954              	 .cfi_def_cfa_offset 16
 955 0004 00AF     	 add r7,sp,#0
 956              	.LCFI107:
 957              	 .cfi_def_cfa_register 7
 958 0006 7860     	 str r0,[r7,#4]
 293:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare register with appropriate value  based on sector*/
 294:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch ((HandlePtr->sector & 7U))
 959              	 .loc 4 294 0
 960 0008 7B68     	 ldr r3,[r7,#4]
 961 000a D3F8A430 	 ldr r3,[r3,#164]
 962 000e 03F00703 	 and r3,r3,#7
 963 0012 042B     	 cmp r3,#4
 964 0014 00F28680 	 bhi .L30
 965 0018 01A2     	 adr r2,.L32
 966 001a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 967 001e 00BF     	 .p2align 2
 968              	.L32:
 969 0020 35000000 	 .word .L31+1
 970 0024 65000000 	 .word .L33+1
 971 0028 95000000 	 .word .L34+1
 972 002c C5000000 	 .word .L35+1
 973 0030 F5000000 	 .word .L36+1
 974              	 .p2align 1
 975              	.L31:
 295:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 296:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 297:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 976              	 .loc 4 297 0
 977 0034 7B68     	 ldr r3,[r7,#4]
 978 0036 1B6F     	 ldr r3,[r3,#112]
 979 0038 7A68     	 ldr r2,[r7,#4]
 980 003a B2F8B820 	 ldrh r2,[r2,#184]
 981 003e 1A60     	 str r2,[r3]
 298:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->tb);
 982              	 .loc 4 298 0
 983 0040 7B68     	 ldr r3,[r7,#4]
 984 0042 5B6F     	 ldr r3,[r3,#116]
 985 0044 7A68     	 ldr r2,[r7,#4]
 986 0046 B2F8B820 	 ldrh r2,[r2,#184]
 987 004a 1146     	 mov r1,r2
 988 004c 7A68     	 ldr r2,[r7,#4]
 989 004e B2F8B020 	 ldrh r2,[r2,#176]
 990 0052 0A44     	 add r2,r2,r1
 991 0054 1A60     	 str r2,[r3]
 299:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 992              	 .loc 4 299 0
 993 0056 7B68     	 ldr r3,[r7,#4]
 994 0058 9B6F     	 ldr r3,[r3,#120]
 995 005a 7A68     	 ldr r2,[r7,#4]
 996 005c B2F8B620 	 ldrh r2,[r2,#182]
 997 0060 1A60     	 str r2,[r3]
 300:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 998              	 .loc 4 300 0
 999 0062 77E0     	 b .L29
 1000              	.L33:
 301:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 302:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->ta);
 1001              	 .loc 4 302 0
 1002 0064 7B68     	 ldr r3,[r7,#4]
 1003 0066 1B6F     	 ldr r3,[r3,#112]
 1004 0068 7A68     	 ldr r2,[r7,#4]
 1005 006a B2F8B820 	 ldrh r2,[r2,#184]
 1006 006e 1146     	 mov r1,r2
 1007 0070 7A68     	 ldr r2,[r7,#4]
 1008 0072 B2F8AE20 	 ldrh r2,[r2,#174]
 1009 0076 0A44     	 add r2,r2,r1
 1010 0078 1A60     	 str r2,[r3]
 303:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) (HandlePtr->v_tb);
 1011              	 .loc 4 303 0
 1012 007a 7B68     	 ldr r3,[r7,#4]
 1013 007c 5B6F     	 ldr r3,[r3,#116]
 1014 007e 7A68     	 ldr r2,[r7,#4]
 1015 0080 B2F8B820 	 ldrh r2,[r2,#184]
 1016 0084 1A60     	 str r2,[r3]
 304:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1017              	 .loc 4 304 0
 1018 0086 7B68     	 ldr r3,[r7,#4]
 1019 0088 9B6F     	 ldr r3,[r3,#120]
 1020 008a 7A68     	 ldr r2,[r7,#4]
 1021 008c B2F8B620 	 ldrh r2,[r2,#182]
 1022 0090 1A60     	 str r2,[r3]
 305:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1023              	 .loc 4 305 0
 1024 0092 5FE0     	 b .L29
 1025              	.L34:
 306:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 307:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1026              	 .loc 4 307 0
 1027 0094 7B68     	 ldr r3,[r7,#4]
 1028 0096 1B6F     	 ldr r3,[r3,#112]
 1029 0098 7A68     	 ldr r2,[r7,#4]
 1030 009a B2F8B620 	 ldrh r2,[r2,#182]
 1031 009e 1A60     	 str r2,[r3]
 308:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_tb;
 1032              	 .loc 4 308 0
 1033 00a0 7B68     	 ldr r3,[r7,#4]
 1034 00a2 5B6F     	 ldr r3,[r3,#116]
 1035 00a4 7A68     	 ldr r2,[r7,#4]
 1036 00a6 B2F8B820 	 ldrh r2,[r2,#184]
 1037 00aa 1A60     	 str r2,[r3]
 309:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) (HandlePtr->v_tb + HandlePtr->tb);
 1038              	 .loc 4 309 0
 1039 00ac 7B68     	 ldr r3,[r7,#4]
 1040 00ae 9B6F     	 ldr r3,[r3,#120]
 1041 00b0 7A68     	 ldr r2,[r7,#4]
 1042 00b2 B2F8B820 	 ldrh r2,[r2,#184]
 1043 00b6 1146     	 mov r1,r2
 1044 00b8 7A68     	 ldr r2,[r7,#4]
 1045 00ba B2F8B020 	 ldrh r2,[r2,#176]
 1046 00be 0A44     	 add r2,r2,r1
 1047 00c0 1A60     	 str r2,[r3]
 310:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1048              	 .loc 4 310 0
 1049 00c2 47E0     	 b .L29
 1050              	.L35:
 311:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 312:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1051              	 .loc 4 312 0
 1052 00c4 7B68     	 ldr r3,[r7,#4]
 1053 00c6 1B6F     	 ldr r3,[r3,#112]
 1054 00c8 7A68     	 ldr r2,[r7,#4]
 1055 00ca B2F8B620 	 ldrh r2,[r2,#182]
 1056 00ce 1A60     	 str r2,[r3]
 313:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t)( HandlePtr->v_tb+ HandlePtr->ta);
 1057              	 .loc 4 313 0
 1058 00d0 7B68     	 ldr r3,[r7,#4]
 1059 00d2 5B6F     	 ldr r3,[r3,#116]
 1060 00d4 7A68     	 ldr r2,[r7,#4]
 1061 00d6 B2F8B820 	 ldrh r2,[r2,#184]
 1062 00da 1146     	 mov r1,r2
 1063 00dc 7A68     	 ldr r2,[r7,#4]
 1064 00de B2F8AE20 	 ldrh r2,[r2,#174]
 1065 00e2 0A44     	 add r2,r2,r1
 1066 00e4 1A60     	 str r2,[r3]
 314:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb;
 1067              	 .loc 4 314 0
 1068 00e6 7B68     	 ldr r3,[r7,#4]
 1069 00e8 9B6F     	 ldr r3,[r3,#120]
 1070 00ea 7A68     	 ldr r2,[r7,#4]
 1071 00ec B2F8B820 	 ldrh r2,[r2,#184]
 1072 00f0 1A60     	 str r2,[r3]
 315:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1073              	 .loc 4 315 0
 1074 00f2 2FE0     	 b .L29
 1075              	.L36:
 316:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 317:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb+ HandlePtr->tb;
 1076              	 .loc 4 317 0
 1077 00f4 7B68     	 ldr r3,[r7,#4]
 1078 00f6 1B6F     	 ldr r3,[r3,#112]
 1079 00f8 7A68     	 ldr r2,[r7,#4]
 1080 00fa B2F8B820 	 ldrh r2,[r2,#184]
 1081 00fe 1146     	 mov r1,r2
 1082 0100 7A68     	 ldr r2,[r7,#4]
 1083 0102 B2F8B020 	 ldrh r2,[r2,#176]
 1084 0106 0A44     	 add r2,r2,r1
 1085 0108 1A60     	 str r2,[r3]
 318:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1086              	 .loc 4 318 0
 1087 010a 7B68     	 ldr r3,[r7,#4]
 1088 010c 5B6F     	 ldr r3,[r3,#116]
 1089 010e 7A68     	 ldr r2,[r7,#4]
 1090 0110 B2F8B620 	 ldrh r2,[r2,#182]
 1091 0114 1A60     	 str r2,[r3]
 319:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb;
 1092              	 .loc 4 319 0
 1093 0116 7B68     	 ldr r3,[r7,#4]
 1094 0118 9B6F     	 ldr r3,[r3,#120]
 1095 011a 7A68     	 ldr r2,[r7,#4]
 1096 011c B2F8B820 	 ldrh r2,[r2,#184]
 1097 0120 1A60     	 str r2,[r3]
 320:../Dave/Generated/PWM_SVM/pwm_svm.c ****        break;
 1098              	 .loc 4 320 0
 1099 0122 17E0     	 b .L29
 1100              	.L30:
 321:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 322:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 1101              	 .loc 4 322 0
 1102 0124 7B68     	 ldr r3,[r7,#4]
 1103 0126 1B6F     	 ldr r3,[r3,#112]
 1104 0128 7A68     	 ldr r2,[r7,#4]
 1105 012a B2F8B820 	 ldrh r2,[r2,#184]
 1106 012e 1A60     	 str r2,[r3]
 323:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1107              	 .loc 4 323 0
 1108 0130 7B68     	 ldr r3,[r7,#4]
 1109 0132 5B6F     	 ldr r3,[r3,#116]
 1110 0134 7A68     	 ldr r2,[r7,#4]
 1111 0136 B2F8B620 	 ldrh r2,[r2,#182]
 1112 013a 1A60     	 str r2,[r3]
 324:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb+ HandlePtr->ta;
 1113              	 .loc 4 324 0
 1114 013c 7B68     	 ldr r3,[r7,#4]
 1115 013e 9B6F     	 ldr r3,[r3,#120]
 1116 0140 7A68     	 ldr r2,[r7,#4]
 1117 0142 B2F8B820 	 ldrh r2,[r2,#184]
 1118 0146 1146     	 mov r1,r2
 1119 0148 7A68     	 ldr r2,[r7,#4]
 1120 014a B2F8AE20 	 ldrh r2,[r2,#174]
 1121 014e 0A44     	 add r2,r2,r1
 1122 0150 1A60     	 str r2,[r3]
 325:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1123              	 .loc 4 325 0
 1124 0152 00BF     	 nop
 1125              	.L29:
 326:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 327:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1126              	 .loc 4 327 0
 1127 0154 0C37     	 adds r7,r7,#12
 1128              	.LCFI108:
 1129              	 .cfi_def_cfa_offset 4
 1130 0156 BD46     	 mov sp,r7
 1131              	.LCFI109:
 1132              	 .cfi_def_cfa_register 13
 1133              	 
 1134 0158 5DF8047B 	 ldr r7,[sp],#4
 1135              	.LCFI110:
 1136              	 .cfi_restore 7
 1137              	 .cfi_def_cfa_offset 0
 1138 015c 7047     	 bx lr
 1139              	 .cfi_endproc
 1140              	.LFE245:
 1142              	 .section .text.PWM_SVM_lAsymCompValUpdate,"ax",%progbits
 1143              	 .align 2
 1144              	 .thumb
 1145              	 .thumb_func
 1147              	PWM_SVM_lAsymCompValUpdate:
 1148              	.LFB246:
 328:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 329:../Dave/Generated/PWM_SVM/pwm_svm.c **** static void PWM_SVM_lAsymCompValUpdate(PWM_SVM_t* const HandlePtr)
 330:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1149              	 .loc 4 330 0
 1150              	 .cfi_startproc
 1151              	 
 1152              	 
 1153              	 
 1154 0000 80B4     	 push {r7}
 1155              	.LCFI111:
 1156              	 .cfi_def_cfa_offset 4
 1157              	 .cfi_offset 7,-4
 1158 0002 83B0     	 sub sp,sp,#12
 1159              	.LCFI112:
 1160              	 .cfi_def_cfa_offset 16
 1161 0004 00AF     	 add r7,sp,#0
 1162              	.LCFI113:
 1163              	 .cfi_def_cfa_register 7
 1164 0006 7860     	 str r0,[r7,#4]
 331:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 332:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 1165              	 .loc 4 332 0
 1166 0008 7B68     	 ldr r3,[r7,#4]
 1167 000a D3F8A430 	 ldr r3,[r3,#164]
 1168 000e 03F00703 	 and r3,r3,#7
 1169 0012 042B     	 cmp r3,#4
 1170 0014 00F20381 	 bhi .L39
 1171 0018 01A2     	 adr r2,.L41
 1172 001a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1173 001e 00BF     	 .p2align 2
 1174              	.L41:
 1175 0020 35000000 	 .word .L40+1
 1176 0024 97000000 	 .word .L42+1
 1177 0028 F9000000 	 .word .L43+1
 1178 002c 5B010000 	 .word .L44+1
 1179 0030 BD010000 	 .word .L45+1
 1180              	 .p2align 1
 1181              	.L40:
 333:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 334:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 335:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb;
 1182              	 .loc 4 335 0
 1183 0034 7B68     	 ldr r3,[r7,#4]
 1184 0036 1B6F     	 ldr r3,[r3,#112]
 1185 0038 7A68     	 ldr r2,[r7,#4]
 1186 003a B2F8B820 	 ldrh r2,[r2,#184]
 1187 003e 1A60     	 str r2,[r3]
 336:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb2;
 1188              	 .loc 4 336 0
 1189 0040 7B68     	 ldr r3,[r7,#4]
 1190 0042 DB6F     	 ldr r3,[r3,#124]
 1191 0044 7A68     	 ldr r2,[r7,#4]
 1192 0046 B2F8BC20 	 ldrh r2,[r2,#188]
 1193 004a 1A60     	 str r2,[r3]
 337:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 338:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint32_t) HandlePtr->v_tb + (uint32_t) HandlePtr->tb);
 1194              	 .loc 4 338 0
 1195 004c 7B68     	 ldr r3,[r7,#4]
 1196 004e 5B6F     	 ldr r3,[r3,#116]
 1197 0050 7A68     	 ldr r2,[r7,#4]
 1198 0052 B2F8B820 	 ldrh r2,[r2,#184]
 1199 0056 1146     	 mov r1,r2
 1200 0058 7A68     	 ldr r2,[r7,#4]
 1201 005a B2F8B020 	 ldrh r2,[r2,#176]
 1202 005e 0A44     	 add r2,r2,r1
 1203 0060 1A60     	 str r2,[r3]
 339:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint32_t) HandlePtr->v_tb + (uint32_t) HandlePtr->tb);
 1204              	 .loc 4 339 0
 1205 0062 7B68     	 ldr r3,[r7,#4]
 1206 0064 D3F88030 	 ldr r3,[r3,#128]
 1207 0068 7A68     	 ldr r2,[r7,#4]
 1208 006a B2F8B820 	 ldrh r2,[r2,#184]
 1209 006e 1146     	 mov r1,r2
 1210 0070 7A68     	 ldr r2,[r7,#4]
 1211 0072 B2F8B020 	 ldrh r2,[r2,#176]
 1212 0076 0A44     	 add r2,r2,r1
 1213 0078 1A60     	 str r2,[r3]
 340:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 341:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1214              	 .loc 4 341 0
 1215 007a 7B68     	 ldr r3,[r7,#4]
 1216 007c 9B6F     	 ldr r3,[r3,#120]
 1217 007e 7A68     	 ldr r2,[r7,#4]
 1218 0080 B2F8B620 	 ldrh r2,[r2,#182]
 1219 0084 1A60     	 str r2,[r3]
 342:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_ta2;
 1220              	 .loc 4 342 0
 1221 0086 7B68     	 ldr r3,[r7,#4]
 1222 0088 D3F88430 	 ldr r3,[r3,#132]
 1223 008c 7A68     	 ldr r2,[r7,#4]
 1224 008e B2F8BA20 	 ldrh r2,[r2,#186]
 1225 0092 1A60     	 str r2,[r3]
 343:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1226              	 .loc 4 343 0
 1227 0094 F4E0     	 b .L38
 1228              	.L42:
 344:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 345:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1229              	 .loc 4 345 0
 1230 0096 7B68     	 ldr r3,[r7,#4]
 1231 0098 1B6F     	 ldr r3,[r3,#112]
 1232 009a 7A68     	 ldr r2,[r7,#4]
 1233 009c B2F8B820 	 ldrh r2,[r2,#184]
 1234 00a0 1146     	 mov r1,r2
 1235 00a2 7A68     	 ldr r2,[r7,#4]
 1236 00a4 B2F8AE20 	 ldrh r2,[r2,#174]
 1237 00a8 0A44     	 add r2,r2,r1
 1238 00aa 1A60     	 str r2,[r3]
 346:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1239              	 .loc 4 346 0
 1240 00ac 7B68     	 ldr r3,[r7,#4]
 1241 00ae DB6F     	 ldr r3,[r3,#124]
 1242 00b0 7A68     	 ldr r2,[r7,#4]
 1243 00b2 B2F8B820 	 ldrh r2,[r2,#184]
 1244 00b6 1146     	 mov r1,r2
 1245 00b8 7A68     	 ldr r2,[r7,#4]
 1246 00ba B2F8AE20 	 ldrh r2,[r2,#174]
 1247 00be 0A44     	 add r2,r2,r1
 1248 00c0 1A60     	 str r2,[r3]
 347:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 348:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1249              	 .loc 4 348 0
 1250 00c2 7B68     	 ldr r3,[r7,#4]
 1251 00c4 5B6F     	 ldr r3,[r3,#116]
 1252 00c6 7A68     	 ldr r2,[r7,#4]
 1253 00c8 B2F8B820 	 ldrh r2,[r2,#184]
 1254 00cc 1A60     	 str r2,[r3]
 349:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1255              	 .loc 4 349 0
 1256 00ce 7B68     	 ldr r3,[r7,#4]
 1257 00d0 D3F88030 	 ldr r3,[r3,#128]
 1258 00d4 7A68     	 ldr r2,[r7,#4]
 1259 00d6 B2F8BC20 	 ldrh r2,[r2,#188]
 1260 00da 1A60     	 str r2,[r3]
 350:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 351:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_ta;
 1261              	 .loc 4 351 0
 1262 00dc 7B68     	 ldr r3,[r7,#4]
 1263 00de 9B6F     	 ldr r3,[r3,#120]
 1264 00e0 7A68     	 ldr r2,[r7,#4]
 1265 00e2 B2F8B620 	 ldrh r2,[r2,#182]
 1266 00e6 1A60     	 str r2,[r3]
 352:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_ta2;
 1267              	 .loc 4 352 0
 1268 00e8 7B68     	 ldr r3,[r7,#4]
 1269 00ea D3F88430 	 ldr r3,[r3,#132]
 1270 00ee 7A68     	 ldr r2,[r7,#4]
 1271 00f0 B2F8BA20 	 ldrh r2,[r2,#186]
 1272 00f4 1A60     	 str r2,[r3]
 353:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1273              	 .loc 4 353 0
 1274 00f6 C3E0     	 b .L38
 1275              	.L43:
 354:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 355:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1276              	 .loc 4 355 0
 1277 00f8 7B68     	 ldr r3,[r7,#4]
 1278 00fa 1B6F     	 ldr r3,[r3,#112]
 1279 00fc 7A68     	 ldr r2,[r7,#4]
 1280 00fe B2F8B620 	 ldrh r2,[r2,#182]
 1281 0102 1A60     	 str r2,[r3]
 356:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_ta2;
 1282              	 .loc 4 356 0
 1283 0104 7B68     	 ldr r3,[r7,#4]
 1284 0106 DB6F     	 ldr r3,[r3,#124]
 1285 0108 7A68     	 ldr r2,[r7,#4]
 1286 010a B2F8BA20 	 ldrh r2,[r2,#186]
 1287 010e 1A60     	 str r2,[r3]
 357:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 358:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1288              	 .loc 4 358 0
 1289 0110 7B68     	 ldr r3,[r7,#4]
 1290 0112 5B6F     	 ldr r3,[r3,#116]
 1291 0114 7A68     	 ldr r2,[r7,#4]
 1292 0116 B2F8B820 	 ldrh r2,[r2,#184]
 1293 011a 1A60     	 str r2,[r3]
 359:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1294              	 .loc 4 359 0
 1295 011c 7B68     	 ldr r3,[r7,#4]
 1296 011e D3F88030 	 ldr r3,[r3,#128]
 1297 0122 7A68     	 ldr r2,[r7,#4]
 1298 0124 B2F8BC20 	 ldrh r2,[r2,#188]
 1299 0128 1A60     	 str r2,[r3]
 360:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 361:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1300              	 .loc 4 361 0
 1301 012a 7B68     	 ldr r3,[r7,#4]
 1302 012c 9B6F     	 ldr r3,[r3,#120]
 1303 012e 7A68     	 ldr r2,[r7,#4]
 1304 0130 B2F8B820 	 ldrh r2,[r2,#184]
 1305 0134 1146     	 mov r1,r2
 1306 0136 7A68     	 ldr r2,[r7,#4]
 1307 0138 B2F8B020 	 ldrh r2,[r2,#176]
 1308 013c 0A44     	 add r2,r2,r1
 1309 013e 1A60     	 str r2,[r3]
 362:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1310              	 .loc 4 362 0
 1311 0140 7B68     	 ldr r3,[r7,#4]
 1312 0142 D3F88430 	 ldr r3,[r3,#132]
 1313 0146 7A68     	 ldr r2,[r7,#4]
 1314 0148 B2F8B820 	 ldrh r2,[r2,#184]
 1315 014c 1146     	 mov r1,r2
 1316 014e 7A68     	 ldr r2,[r7,#4]
 1317 0150 B2F8B020 	 ldrh r2,[r2,#176]
 1318 0154 0A44     	 add r2,r2,r1
 1319 0156 1A60     	 str r2,[r3]
 363:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1320              	 .loc 4 363 0
 1321 0158 92E0     	 b .L38
 1322              	.L44:
 364:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 365:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_ta;
 1323              	 .loc 4 365 0
 1324 015a 7B68     	 ldr r3,[r7,#4]
 1325 015c 1B6F     	 ldr r3,[r3,#112]
 1326 015e 7A68     	 ldr r2,[r7,#4]
 1327 0160 B2F8B620 	 ldrh r2,[r2,#182]
 1328 0164 1A60     	 str r2,[r3]
 366:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_ta2;
 1329              	 .loc 4 366 0
 1330 0166 7B68     	 ldr r3,[r7,#4]
 1331 0168 DB6F     	 ldr r3,[r3,#124]
 1332 016a 7A68     	 ldr r2,[r7,#4]
 1333 016c B2F8BA20 	 ldrh r2,[r2,#186]
 1334 0170 1A60     	 str r2,[r3]
 367:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 368:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1335              	 .loc 4 368 0
 1336 0172 7B68     	 ldr r3,[r7,#4]
 1337 0174 5B6F     	 ldr r3,[r3,#116]
 1338 0176 7A68     	 ldr r2,[r7,#4]
 1339 0178 B2F8B820 	 ldrh r2,[r2,#184]
 1340 017c 1146     	 mov r1,r2
 1341 017e 7A68     	 ldr r2,[r7,#4]
 1342 0180 B2F8AE20 	 ldrh r2,[r2,#174]
 1343 0184 0A44     	 add r2,r2,r1
 1344 0186 1A60     	 str r2,[r3]
 369:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1345              	 .loc 4 369 0
 1346 0188 7B68     	 ldr r3,[r7,#4]
 1347 018a D3F88030 	 ldr r3,[r3,#128]
 1348 018e 7A68     	 ldr r2,[r7,#4]
 1349 0190 B2F8B820 	 ldrh r2,[r2,#184]
 1350 0194 1146     	 mov r1,r2
 1351 0196 7A68     	 ldr r2,[r7,#4]
 1352 0198 B2F8AE20 	 ldrh r2,[r2,#174]
 1353 019c 0A44     	 add r2,r2,r1
 1354 019e 1A60     	 str r2,[r3]
 370:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 371:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1355              	 .loc 4 371 0
 1356 01a0 7B68     	 ldr r3,[r7,#4]
 1357 01a2 9B6F     	 ldr r3,[r3,#120]
 1358 01a4 7A68     	 ldr r2,[r7,#4]
 1359 01a6 B2F8B820 	 ldrh r2,[r2,#184]
 1360 01aa 1A60     	 str r2,[r3]
 372:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1361              	 .loc 4 372 0
 1362 01ac 7B68     	 ldr r3,[r7,#4]
 1363 01ae D3F88430 	 ldr r3,[r3,#132]
 1364 01b2 7A68     	 ldr r2,[r7,#4]
 1365 01b4 B2F8BC20 	 ldrh r2,[r2,#188]
 1366 01b8 1A60     	 str r2,[r3]
 373:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1367              	 .loc 4 373 0
 1368 01ba 61E0     	 b .L38
 1369              	.L45:
 374:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 375:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1370              	 .loc 4 375 0
 1371 01bc 7B68     	 ldr r3,[r7,#4]
 1372 01be 1B6F     	 ldr r3,[r3,#112]
 1373 01c0 7A68     	 ldr r2,[r7,#4]
 1374 01c2 B2F8B820 	 ldrh r2,[r2,#184]
 1375 01c6 1146     	 mov r1,r2
 1376 01c8 7A68     	 ldr r2,[r7,#4]
 1377 01ca B2F8B020 	 ldrh r2,[r2,#176]
 1378 01ce 0A44     	 add r2,r2,r1
 1379 01d0 1A60     	 str r2,[r3]
 376:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tb;
 1380              	 .loc 4 376 0
 1381 01d2 7B68     	 ldr r3,[r7,#4]
 1382 01d4 DB6F     	 ldr r3,[r3,#124]
 1383 01d6 7A68     	 ldr r2,[r7,#4]
 1384 01d8 B2F8B820 	 ldrh r2,[r2,#184]
 1385 01dc 1146     	 mov r1,r2
 1386 01de 7A68     	 ldr r2,[r7,#4]
 1387 01e0 B2F8B020 	 ldrh r2,[r2,#176]
 1388 01e4 0A44     	 add r2,r2,r1
 1389 01e6 1A60     	 str r2,[r3]
 377:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 378:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1390              	 .loc 4 378 0
 1391 01e8 7B68     	 ldr r3,[r7,#4]
 1392 01ea 5B6F     	 ldr r3,[r3,#116]
 1393 01ec 7A68     	 ldr r2,[r7,#4]
 1394 01ee B2F8B620 	 ldrh r2,[r2,#182]
 1395 01f2 1A60     	 str r2,[r3]
 379:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_ta2;
 1396              	 .loc 4 379 0
 1397 01f4 7B68     	 ldr r3,[r7,#4]
 1398 01f6 D3F88030 	 ldr r3,[r3,#128]
 1399 01fa 7A68     	 ldr r2,[r7,#4]
 1400 01fc B2F8BA20 	 ldrh r2,[r2,#186]
 1401 0200 1A60     	 str r2,[r3]
 380:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 381:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1402              	 .loc 4 381 0
 1403 0202 7B68     	 ldr r3,[r7,#4]
 1404 0204 9B6F     	 ldr r3,[r3,#120]
 1405 0206 7A68     	 ldr r2,[r7,#4]
 1406 0208 B2F8B820 	 ldrh r2,[r2,#184]
 1407 020c 1A60     	 str r2,[r3]
 382:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1408              	 .loc 4 382 0
 1409 020e 7B68     	 ldr r3,[r7,#4]
 1410 0210 D3F88430 	 ldr r3,[r3,#132]
 1411 0214 7A68     	 ldr r2,[r7,#4]
 1412 0216 B2F8BC20 	 ldrh r2,[r2,#188]
 1413 021a 1A60     	 str r2,[r3]
 383:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1414              	 .loc 4 383 0
 1415 021c 30E0     	 b .L38
 1416              	.L39:
 384:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 385:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_crs = (uint32_t) ((uint16_t) HandlePtr->v_tb);
 1417              	 .loc 4 385 0
 1418 021e 7B68     	 ldr r3,[r7,#4]
 1419 0220 1B6F     	 ldr r3,[r3,#112]
 1420 0222 7A68     	 ldr r2,[r7,#4]
 1421 0224 B2F8B820 	 ldrh r2,[r2,#184]
 1422 0228 1A60     	 str r2,[r3]
 386:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phaseu_cr2s = (uint32_t) ((uint16_t)HandlePtr->v_tb2);
 1423              	 .loc 4 386 0
 1424 022a 7B68     	 ldr r3,[r7,#4]
 1425 022c DB6F     	 ldr r3,[r3,#124]
 1426 022e 7A68     	 ldr r2,[r7,#4]
 1427 0230 B2F8BC20 	 ldrh r2,[r2,#188]
 1428 0234 1A60     	 str r2,[r3]
 387:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 388:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_crs = (uint32_t) HandlePtr->v_ta;
 1429              	 .loc 4 388 0
 1430 0236 7B68     	 ldr r3,[r7,#4]
 1431 0238 5B6F     	 ldr r3,[r3,#116]
 1432 023a 7A68     	 ldr r2,[r7,#4]
 1433 023c B2F8B620 	 ldrh r2,[r2,#182]
 1434 0240 1A60     	 str r2,[r3]
 389:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasev_cr2s = (uint32_t) HandlePtr->v_ta2;
 1435              	 .loc 4 389 0
 1436 0242 7B68     	 ldr r3,[r7,#4]
 1437 0244 D3F88030 	 ldr r3,[r3,#128]
 1438 0248 7A68     	 ldr r2,[r7,#4]
 1439 024a B2F8BA20 	 ldrh r2,[r2,#186]
 1440 024e 1A60     	 str r2,[r3]
 390:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 391:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_crs = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1441              	 .loc 4 391 0
 1442 0250 7B68     	 ldr r3,[r7,#4]
 1443 0252 9B6F     	 ldr r3,[r3,#120]
 1444 0254 7A68     	 ldr r2,[r7,#4]
 1445 0256 B2F8B820 	 ldrh r2,[r2,#184]
 1446 025a 1146     	 mov r1,r2
 1447 025c 7A68     	 ldr r2,[r7,#4]
 1448 025e B2F8AE20 	 ldrh r2,[r2,#174]
 1449 0262 0A44     	 add r2,r2,r1
 1450 0264 1A60     	 str r2,[r3]
 392:../Dave/Generated/PWM_SVM/pwm_svm.c ****       *HandlePtr->phasew_cr2s = (uint32_t) HandlePtr->v_tb + (uint16_t) HandlePtr->ta;
 1451              	 .loc 4 392 0
 1452 0266 7B68     	 ldr r3,[r7,#4]
 1453 0268 D3F88430 	 ldr r3,[r3,#132]
 1454 026c 7A68     	 ldr r2,[r7,#4]
 1455 026e B2F8B820 	 ldrh r2,[r2,#184]
 1456 0272 1146     	 mov r1,r2
 1457 0274 7A68     	 ldr r2,[r7,#4]
 1458 0276 B2F8AE20 	 ldrh r2,[r2,#174]
 1459 027a 0A44     	 add r2,r2,r1
 1460 027c 1A60     	 str r2,[r3]
 393:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 394:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 1461              	 .loc 4 394 0
 1462 027e 00BF     	 nop
 1463              	.L38:
 395:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 396:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1464              	 .loc 4 396 0
 1465 0280 0C37     	 adds r7,r7,#12
 1466              	.LCFI114:
 1467              	 .cfi_def_cfa_offset 4
 1468 0282 BD46     	 mov sp,r7
 1469              	.LCFI115:
 1470              	 .cfi_def_cfa_register 13
 1471              	 
 1472 0284 5DF8047B 	 ldr r7,[sp],#4
 1473              	.LCFI116:
 1474              	 .cfi_restore 7
 1475              	 .cfi_def_cfa_offset 0
 1476 0288 7047     	 bx lr
 1477              	 .cfi_endproc
 1478              	.LFE246:
 1480 028a 00BF     	 .section .ram_code
 1481 015e 00BF     	 .align 2
 1482              	 .global PWM_SVM_CalCmpValueSym7
 1483              	 .thumb
 1484              	 .thumb_func
 1486              	PWM_SVM_CalCmpValueSym7:
 1487              	.LFB247:
 397:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 398:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 399:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare valuefor Symmetric 7-segment SVM.
 400:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 401:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueSym7(PWM_SVM_t* const HandlePtr)
 402:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1488              	 .loc 4 402 0
 1489              	 .cfi_startproc
 1490              	 
 1491              	 
 1492 0160 80B5     	 push {r7,lr}
 1493              	.LCFI117:
 1494              	 .cfi_def_cfa_offset 8
 1495              	 .cfi_offset 7,-8
 1496              	 .cfi_offset 14,-4
 1497 0162 82B0     	 sub sp,sp,#8
 1498              	.LCFI118:
 1499              	 .cfi_def_cfa_offset 16
 1500 0164 00AF     	 add r7,sp,#0
 1501              	.LCFI119:
 1502              	 .cfi_def_cfa_register 7
 1503 0166 7860     	 str r0,[r7,#4]
 403:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time ta less than tmin set to tmin*/
 404:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < (uint16_t) HandlePtr->tmin)
 1504              	 .loc 4 404 0
 1505 0168 7B68     	 ldr r3,[r7,#4]
 1506 016a B3F8AE20 	 ldrh r2,[r3,#174]
 1507 016e 7B68     	 ldr r3,[r7,#4]
 1508 0170 B3F8C230 	 ldrh r3,[r3,#194]
 1509 0174 9A42     	 cmp r2,r3
 1510 0176 05D2     	 bcs .L48
 405:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 406:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t) HandlePtr->tmin;
 1511              	 .loc 4 406 0
 1512 0178 7B68     	 ldr r3,[r7,#4]
 1513 017a B3F8C220 	 ldrh r2,[r3,#194]
 1514 017e 7B68     	 ldr r3,[r7,#4]
 1515 0180 A3F8AE20 	 strh r2,[r3,#174]
 1516              	.L48:
 407:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 408:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time tb less than tmin set to tmin*/
 409:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < (uint16_t) HandlePtr->tmin)
 1517              	 .loc 4 409 0
 1518 0184 7B68     	 ldr r3,[r7,#4]
 1519 0186 B3F8B020 	 ldrh r2,[r3,#176]
 1520 018a 7B68     	 ldr r3,[r7,#4]
 1521 018c B3F8C230 	 ldrh r3,[r3,#194]
 1522 0190 9A42     	 cmp r2,r3
 1523 0192 05D2     	 bcs .L49
 410:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 411:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = (uint16_t) HandlePtr->tmin;
 1524              	 .loc 4 411 0
 1525 0194 7B68     	 ldr r3,[r7,#4]
 1526 0196 B3F8C220 	 ldrh r2,[r3,#194]
 1527 019a 7B68     	 ldr r3,[r7,#4]
 1528 019c A3F8B020 	 strh r2,[r3,#176]
 1529              	.L49:
 412:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 413:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 414:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t)(((uint32_t) HandlePtr->period + (uint16_t) HandlePtr->ta) + (uint16_
 1530              	 .loc 4 414 0
 1531 01a0 7B68     	 ldr r3,[r7,#4]
 1532 01a2 D3F89C30 	 ldr r3,[r3,#156]
 1533 01a6 9AB2     	 uxth r2,r3
 1534 01a8 7B68     	 ldr r3,[r7,#4]
 1535 01aa B3F8AE30 	 ldrh r3,[r3,#174]
 1536 01ae 1344     	 add r3,r3,r2
 1537 01b0 9AB2     	 uxth r2,r3
 1538 01b2 7B68     	 ldr r3,[r7,#4]
 1539 01b4 B3F8B030 	 ldrh r3,[r3,#176]
 1540 01b8 1344     	 add r3,r3,r2
 1541 01ba 9BB2     	 uxth r3,r3
 1542 01bc 5B08     	 lsrs r3,r3,#1
 1543 01be 9AB2     	 uxth r2,r3
 1544 01c0 7B68     	 ldr r3,[r7,#4]
 1545 01c2 A3F8B620 	 strh r2,[r3,#182]
 415:../Dave/Generated/PWM_SVM/pwm_svm.c ****                      >> (uint16_t) 1;
 416:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t)((uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta + (uint16_t
 1546              	 .loc 4 416 0
 1547 01c6 7B68     	 ldr r3,[r7,#4]
 1548 01c8 D3F89C30 	 ldr r3,[r3,#156]
 1549 01cc 9AB2     	 uxth r2,r3
 1550 01ce 7B68     	 ldr r3,[r7,#4]
 1551 01d0 B3F8AE10 	 ldrh r1,[r3,#174]
 1552 01d4 7B68     	 ldr r3,[r7,#4]
 1553 01d6 B3F8B030 	 ldrh r3,[r3,#176]
 1554 01da 0B44     	 add r3,r3,r1
 1555 01dc 9BB2     	 uxth r3,r3
 1556 01de D31A     	 subs r3,r2,r3
 1557 01e0 9BB2     	 uxth r3,r3
 1558 01e2 5B08     	 lsrs r3,r3,#1
 1559 01e4 9AB2     	 uxth r2,r3
 1560 01e6 7B68     	 ldr r3,[r7,#4]
 1561 01e8 A3F8B820 	 strh r2,[r3,#184]
 417:../Dave/Generated/PWM_SVM/pwm_svm.c ****                      >> (uint16_t) 1;
 418:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 419:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 420:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 421:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 422:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 423:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 424:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 425:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 426:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lSymCompValUpdate(HandlePtr);
 1562              	 .loc 4 426 0
 1563 01ec 7868     	 ldr r0,[r7,#4]
 1564 01ee FFF707FF 	 bl PWM_SVM_lSymCompValUpdate
 427:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 428:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1565              	 .loc 4 428 0
 1566 01f2 0837     	 adds r7,r7,#8
 1567              	.LCFI120:
 1568              	 .cfi_def_cfa_offset 8
 1569 01f4 BD46     	 mov sp,r7
 1570              	.LCFI121:
 1571              	 .cfi_def_cfa_register 13
 1572              	 
 1573 01f6 80BD     	 pop {r7,pc}
 1574              	 .cfi_endproc
 1575              	.LFE247:
 1577              	 .align 2
 1578              	 .global PWM_SVM_CalCmpValueSym5
 1579              	 .thumb
 1580              	 .thumb_func
 1582              	PWM_SVM_CalCmpValueSym5:
 1583              	.LFB248:
 429:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 430:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 431:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Symmetric 5-segment SVM.
 432:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 433:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueSym5(PWM_SVM_t* const HandlePtr)
 434:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1584              	 .loc 4 434 0
 1585              	 .cfi_startproc
 1586              	 
 1587              	 
 1588 01f8 80B5     	 push {r7,lr}
 1589              	.LCFI122:
 1590              	 .cfi_def_cfa_offset 8
 1591              	 .cfi_offset 7,-8
 1592              	 .cfi_offset 14,-4
 1593 01fa 82B0     	 sub sp,sp,#8
 1594              	.LCFI123:
 1595              	 .cfi_def_cfa_offset 16
 1596 01fc 00AF     	 add r7,sp,#0
 1597              	.LCFI124:
 1598              	 .cfi_def_cfa_register 7
 1599 01fe 7860     	 str r0,[r7,#4]
 435:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time ta less than tmin set to tmin*/
 436:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 1600              	 .loc 4 436 0
 1601 0200 7B68     	 ldr r3,[r7,#4]
 1602 0202 B3F8AE20 	 ldrh r2,[r3,#174]
 1603 0206 7B68     	 ldr r3,[r7,#4]
 1604 0208 B3F8C230 	 ldrh r3,[r3,#194]
 1605 020c 9A42     	 cmp r2,r3
 1606 020e 05D2     	 bcs .L51
 437:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 438:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = HandlePtr->tmin;
 1607              	 .loc 4 438 0
 1608 0210 7B68     	 ldr r3,[r7,#4]
 1609 0212 B3F8C220 	 ldrh r2,[r3,#194]
 1610 0216 7B68     	 ldr r3,[r7,#4]
 1611 0218 A3F8AE20 	 strh r2,[r3,#174]
 1612              	.L51:
 439:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 440:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*If segment time tb less than tmin set to tmin*/
 441:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 1613              	 .loc 4 441 0
 1614 021c 7B68     	 ldr r3,[r7,#4]
 1615 021e B3F8B020 	 ldrh r2,[r3,#176]
 1616 0222 7B68     	 ldr r3,[r7,#4]
 1617 0224 B3F8C230 	 ldrh r3,[r3,#194]
 1618 0228 9A42     	 cmp r2,r3
 1619 022a 05D2     	 bcs .L52
 442:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 443:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tmin;
 1620              	 .loc 4 443 0
 1621 022c 7B68     	 ldr r3,[r7,#4]
 1622 022e B3F8C220 	 ldrh r2,[r3,#194]
 1623 0232 7B68     	 ldr r3,[r7,#4]
 1624 0234 A3F8B020 	 strh r2,[r3,#176]
 1625              	.L52:
 444:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 445:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period + 1U;
 1626              	 .loc 4 445 0
 1627 0238 7B68     	 ldr r3,[r7,#4]
 1628 023a D3F89C30 	 ldr r3,[r3,#156]
 1629 023e 9BB2     	 uxth r3,r3
 1630 0240 0133     	 adds r3,r3,#1
 1631 0242 9AB2     	 uxth r2,r3
 1632 0244 7B68     	 ldr r3,[r7,#4]
 1633 0246 A3F8B620 	 strh r2,[r3,#182]
 446:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = ((uint16_t) HandlePtr->period - HandlePtr->ta) - HandlePtr->tb;
 1634              	 .loc 4 446 0
 1635 024a 7B68     	 ldr r3,[r7,#4]
 1636 024c D3F89C30 	 ldr r3,[r3,#156]
 1637 0250 9AB2     	 uxth r2,r3
 1638 0252 7B68     	 ldr r3,[r7,#4]
 1639 0254 B3F8AE30 	 ldrh r3,[r3,#174]
 1640 0258 D31A     	 subs r3,r2,r3
 1641 025a 9AB2     	 uxth r2,r3
 1642 025c 7B68     	 ldr r3,[r7,#4]
 1643 025e B3F8B030 	 ldrh r3,[r3,#176]
 1644 0262 D31A     	 subs r3,r2,r3
 1645 0264 9AB2     	 uxth r2,r3
 1646 0266 7B68     	 ldr r3,[r7,#4]
 1647 0268 A3F8B820 	 strh r2,[r3,#184]
 447:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 448:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 449:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 450:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 451:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 452:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 453:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 454:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 455:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lSymCompValUpdate(HandlePtr);
 1648              	 .loc 4 455 0
 1649 026c 7868     	 ldr r0,[r7,#4]
 1650 026e FFF7C7FE 	 bl PWM_SVM_lSymCompValUpdate
 456:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1651              	 .loc 4 456 0
 1652 0272 0837     	 adds r7,r7,#8
 1653              	.LCFI125:
 1654              	 .cfi_def_cfa_offset 8
 1655 0274 BD46     	 mov sp,r7
 1656              	.LCFI126:
 1657              	 .cfi_def_cfa_register 13
 1658              	 
 1659 0276 80BD     	 pop {r7,pc}
 1660              	 .cfi_endproc
 1661              	.LFE248:
 1663              	 .section .text.PWM_SVM_CalCmpValueAsym7,"ax",%progbits
 1664              	 .align 2
 1665              	 .global PWM_SVM_CalCmpValueAsym7
 1666              	 .thumb
 1667              	 .thumb_func
 1669              	PWM_SVM_CalCmpValueAsym7:
 1670              	.LFB249:
 457:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 458:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 459:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 7-segment SVM.
 460:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 461:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueAsym7(PWM_SVM_t* const HandlePtr)
 462:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1671              	 .loc 4 462 0
 1672              	 .cfi_startproc
 1673              	 
 1674              	 
 1675 0000 80B5     	 push {r7,lr}
 1676              	.LCFI127:
 1677              	 .cfi_def_cfa_offset 8
 1678              	 .cfi_offset 7,-8
 1679              	 .cfi_offset 14,-4
 1680 0002 82B0     	 sub sp,sp,#8
 1681              	.LCFI128:
 1682              	 .cfi_def_cfa_offset 16
 1683 0004 00AF     	 add r7,sp,#0
 1684              	.LCFI129:
 1685              	 .cfi_def_cfa_register 7
 1686 0006 7860     	 str r0,[r7,#4]
 463:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* check if ta or tb is not less than Tmin*/
 464:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 1687              	 .loc 4 464 0
 1688 0008 7B68     	 ldr r3,[r7,#4]
 1689 000a B3F8AE20 	 ldrh r2,[r3,#174]
 1690 000e 7B68     	 ldr r3,[r7,#4]
 1691 0010 B3F8C230 	 ldrh r3,[r3,#194]
 1692 0014 9A42     	 cmp r2,r3
 1693 0016 1CD2     	 bcs .L54
 465:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 466:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t)(2U * (HandlePtr->ta));
 1694              	 .loc 4 466 0
 1695 0018 7B68     	 ldr r3,[r7,#4]
 1696 001a B3F8AE30 	 ldrh r3,[r3,#174]
 1697 001e 5B00     	 lsls r3,r3,#1
 1698 0020 9AB2     	 uxth r2,r3
 1699 0022 7B68     	 ldr r3,[r7,#4]
 1700 0024 A3F8AE20 	 strh r2,[r3,#174]
 467:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->ta < HandlePtr->tmin)
 1701              	 .loc 4 467 0
 1702 0028 7B68     	 ldr r3,[r7,#4]
 1703 002a B3F8AE20 	 ldrh r2,[r3,#174]
 1704 002e 7B68     	 ldr r3,[r7,#4]
 1705 0030 B3F8C230 	 ldrh r3,[r3,#194]
 1706 0034 9A42     	 cmp r2,r3
 1707 0036 05D2     	 bcs .L55
 468:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 469:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = HandlePtr->tmin;
 1708              	 .loc 4 469 0
 1709 0038 7B68     	 ldr r3,[r7,#4]
 1710 003a B3F8C220 	 ldrh r2,[r3,#194]
 1711 003e 7B68     	 ldr r3,[r7,#4]
 1712 0040 A3F8AE20 	 strh r2,[r3,#174]
 1713              	.L55:
 470:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 471:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = HandlePtr->ta;
 1714              	 .loc 4 471 0
 1715 0044 7B68     	 ldr r3,[r7,#4]
 1716 0046 B3F8AE20 	 ldrh r2,[r3,#174]
 1717 004a 7B68     	 ldr r3,[r7,#4]
 1718 004c A3F8B220 	 strh r2,[r3,#178]
 1719 0050 03E0     	 b .L56
 1720              	.L54:
 472:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 473:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 474:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 475:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 1721              	 .loc 4 475 0
 1722 0052 7B68     	 ldr r3,[r7,#4]
 1723 0054 0022     	 movs r2,#0
 1724 0056 A3F8B220 	 strh r2,[r3,#178]
 1725              	.L56:
 476:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 477:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*  7 -Segment tb value Calcuation */
 478:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 1726              	 .loc 4 478 0
 1727 005a 7B68     	 ldr r3,[r7,#4]
 1728 005c B3F8B020 	 ldrh r2,[r3,#176]
 1729 0060 7B68     	 ldr r3,[r7,#4]
 1730 0062 B3F8C230 	 ldrh r3,[r3,#194]
 1731 0066 9A42     	 cmp r2,r3
 1732 0068 1CD2     	 bcs .L57
 479:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 480:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = (uint16_t)(2U * (HandlePtr->tb));
 1733              	 .loc 4 480 0
 1734 006a 7B68     	 ldr r3,[r7,#4]
 1735 006c B3F8B030 	 ldrh r3,[r3,#176]
 1736 0070 5B00     	 lsls r3,r3,#1
 1737 0072 9AB2     	 uxth r2,r3
 1738 0074 7B68     	 ldr r3,[r7,#4]
 1739 0076 A3F8B020 	 strh r2,[r3,#176]
 481:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->tb < HandlePtr->tmin)
 1740              	 .loc 4 481 0
 1741 007a 7B68     	 ldr r3,[r7,#4]
 1742 007c B3F8B020 	 ldrh r2,[r3,#176]
 1743 0080 7B68     	 ldr r3,[r7,#4]
 1744 0082 B3F8C230 	 ldrh r3,[r3,#194]
 1745 0086 9A42     	 cmp r2,r3
 1746 0088 05D2     	 bcs .L58
 482:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 483:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = HandlePtr->tmin;
 1747              	 .loc 4 483 0
 1748 008a 7B68     	 ldr r3,[r7,#4]
 1749 008c B3F8C220 	 ldrh r2,[r3,#194]
 1750 0090 7B68     	 ldr r3,[r7,#4]
 1751 0092 A3F8B020 	 strh r2,[r3,#176]
 1752              	.L58:
 484:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 485:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = HandlePtr->tb;
 1753              	 .loc 4 485 0
 1754 0096 7B68     	 ldr r3,[r7,#4]
 1755 0098 B3F8B020 	 ldrh r2,[r3,#176]
 1756 009c 7B68     	 ldr r3,[r7,#4]
 1757 009e A3F8B420 	 strh r2,[r3,#180]
 1758 00a2 03E0     	 b .L59
 1759              	.L57:
 486:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 487:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 488:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 489:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = 0U;
 1760              	 .loc 4 489 0
 1761 00a4 7B68     	 ldr r3,[r7,#4]
 1762 00a6 0022     	 movs r2,#0
 1763 00a8 A3F8B420 	 strh r2,[r3,#180]
 1764              	.L59:
 490:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 491:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = ((uint16_t) HandlePtr->period + HandlePtr->ta + HandlePtr->tb) >> 1U;
 1765              	 .loc 4 491 0
 1766 00ac 7B68     	 ldr r3,[r7,#4]
 1767 00ae D3F89C30 	 ldr r3,[r3,#156]
 1768 00b2 9BB2     	 uxth r3,r3
 1769 00b4 1A46     	 mov r2,r3
 1770 00b6 7B68     	 ldr r3,[r7,#4]
 1771 00b8 B3F8AE30 	 ldrh r3,[r3,#174]
 1772 00bc 1344     	 add r3,r3,r2
 1773 00be 7A68     	 ldr r2,[r7,#4]
 1774 00c0 B2F8B020 	 ldrh r2,[r2,#176]
 1775 00c4 1344     	 add r3,r3,r2
 1776 00c6 5B10     	 asrs r3,r3,#1
 1777 00c8 9AB2     	 uxth r2,r3
 1778 00ca 7B68     	 ldr r3,[r7,#4]
 1779 00cc A3F8B620 	 strh r2,[r3,#182]
 492:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t)((uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta + (uint16_t
 1780              	 .loc 4 492 0
 1781 00d0 7B68     	 ldr r3,[r7,#4]
 1782 00d2 D3F89C30 	 ldr r3,[r3,#156]
 1783 00d6 9AB2     	 uxth r2,r3
 1784 00d8 7B68     	 ldr r3,[r7,#4]
 1785 00da B3F8AE10 	 ldrh r1,[r3,#174]
 1786 00de 7B68     	 ldr r3,[r7,#4]
 1787 00e0 B3F8B030 	 ldrh r3,[r3,#176]
 1788 00e4 0B44     	 add r3,r3,r1
 1789 00e6 9BB2     	 uxth r3,r3
 1790 00e8 D31A     	 subs r3,r2,r3
 1791 00ea 9BB2     	 uxth r3,r3
 1792 00ec 5B08     	 lsrs r3,r3,#1
 1793 00ee 9AB2     	 uxth r2,r3
 1794 00f0 7B68     	 ldr r3,[r7,#4]
 1795 00f2 A3F8B820 	 strh r2,[r3,#184]
 493:../Dave/Generated/PWM_SVM/pwm_svm.c ****                       >> 1U;
 494:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 495:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = HandlePtr->v_ta - HandlePtr->tb2;
 1796              	 .loc 4 495 0
 1797 00f6 7B68     	 ldr r3,[r7,#4]
 1798 00f8 B3F8B620 	 ldrh r2,[r3,#182]
 1799 00fc 7B68     	 ldr r3,[r7,#4]
 1800 00fe B3F8B430 	 ldrh r3,[r3,#180]
 1801 0102 D31A     	 subs r3,r2,r3
 1802 0104 9AB2     	 uxth r2,r3
 1803 0106 7B68     	 ldr r3,[r7,#4]
 1804 0108 A3F8BA20 	 strh r2,[r3,#186]
 496:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = HandlePtr->v_tb + HandlePtr->ta2;
 1805              	 .loc 4 496 0
 1806 010c 7B68     	 ldr r3,[r7,#4]
 1807 010e B3F8B820 	 ldrh r2,[r3,#184]
 1808 0112 7B68     	 ldr r3,[r7,#4]
 1809 0114 B3F8B230 	 ldrh r3,[r3,#178]
 1810 0118 1344     	 add r3,r3,r2
 1811 011a 9AB2     	 uxth r2,r3
 1812 011c 7B68     	 ldr r3,[r7,#4]
 1813 011e A3F8BC20 	 strh r2,[r3,#188]
 497:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 498:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 499:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 500:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 501:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 502:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 503:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 504:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare registers*/
 505:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lAsymCompValUpdate(HandlePtr);
 1814              	 .loc 4 505 0
 1815 0122 7868     	 ldr r0,[r7,#4]
 1816 0124 FFF7FEFF 	 bl PWM_SVM_lAsymCompValUpdate
 506:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 507:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1817              	 .loc 4 507 0
 1818 0128 0837     	 adds r7,r7,#8
 1819              	.LCFI130:
 1820              	 .cfi_def_cfa_offset 8
 1821 012a BD46     	 mov sp,r7
 1822              	.LCFI131:
 1823              	 .cfi_def_cfa_register 13
 1824              	 
 1825 012c 80BD     	 pop {r7,pc}
 1826              	 .cfi_endproc
 1827              	.LFE249:
 1829 012e 00BF     	 .section .text.PWM_SVM_CalCmpValueAsym5,"ax",%progbits
 1830              	 .align 2
 1831              	 .global PWM_SVM_CalCmpValueAsym5
 1832              	 .thumb
 1833              	 .thumb_func
 1835              	PWM_SVM_CalCmpValueAsym5:
 1836              	.LFB250:
 508:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 509:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 510:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 5-segment SVM.
 511:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 512:../Dave/Generated/PWM_SVM/pwm_svm.c **** __INLINE void PWM_SVM_CalCmpValueAsym5(PWM_SVM_t* const HandlePtr)
 513:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1837              	 .loc 4 513 0
 1838              	 .cfi_startproc
 1839              	 
 1840              	 
 1841 0000 80B5     	 push {r7,lr}
 1842              	.LCFI132:
 1843              	 .cfi_def_cfa_offset 8
 1844              	 .cfi_offset 7,-8
 1845              	 .cfi_offset 14,-4
 1846 0002 82B0     	 sub sp,sp,#8
 1847              	.LCFI133:
 1848              	 .cfi_def_cfa_offset 16
 1849 0004 00AF     	 add r7,sp,#0
 1850              	.LCFI134:
 1851              	 .cfi_def_cfa_register 7
 1852 0006 7860     	 str r0,[r7,#4]
 514:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* check if ta or tb is not less than Tmin*/
 515:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta < HandlePtr->tmin)
 1853              	 .loc 4 515 0
 1854 0008 7B68     	 ldr r3,[r7,#4]
 1855 000a B3F8AE20 	 ldrh r2,[r3,#174]
 1856 000e 7B68     	 ldr r3,[r7,#4]
 1857 0010 B3F8C230 	 ldrh r3,[r3,#194]
 1858 0014 9A42     	 cmp r2,r3
 1859 0016 1CD2     	 bcs .L61
 516:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 517:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = (uint16_t)(2U * (HandlePtr->ta));
 1860              	 .loc 4 517 0
 1861 0018 7B68     	 ldr r3,[r7,#4]
 1862 001a B3F8AE30 	 ldrh r3,[r3,#174]
 1863 001e 5B00     	 lsls r3,r3,#1
 1864 0020 9AB2     	 uxth r2,r3
 1865 0022 7B68     	 ldr r3,[r7,#4]
 1866 0024 A3F8AE20 	 strh r2,[r3,#174]
 518:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->ta < HandlePtr->tmin)
 1867              	 .loc 4 518 0
 1868 0028 7B68     	 ldr r3,[r7,#4]
 1869 002a B3F8AE20 	 ldrh r2,[r3,#174]
 1870 002e 7B68     	 ldr r3,[r7,#4]
 1871 0030 B3F8C230 	 ldrh r3,[r3,#194]
 1872 0034 9A42     	 cmp r2,r3
 1873 0036 05D2     	 bcs .L62
 519:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 520:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = HandlePtr->tmin;
 1874              	 .loc 4 520 0
 1875 0038 7B68     	 ldr r3,[r7,#4]
 1876 003a B3F8C220 	 ldrh r2,[r3,#194]
 1877 003e 7B68     	 ldr r3,[r7,#4]
 1878 0040 A3F8AE20 	 strh r2,[r3,#174]
 1879              	.L62:
 521:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 522:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = HandlePtr->ta;
 1880              	 .loc 4 522 0
 1881 0044 7B68     	 ldr r3,[r7,#4]
 1882 0046 B3F8AE20 	 ldrh r2,[r3,#174]
 1883 004a 7B68     	 ldr r3,[r7,#4]
 1884 004c A3F8B220 	 strh r2,[r3,#178]
 1885 0050 03E0     	 b .L63
 1886              	.L61:
 523:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 524:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 525:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 526:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 1887              	 .loc 4 526 0
 1888 0052 7B68     	 ldr r3,[r7,#4]
 1889 0054 0022     	 movs r2,#0
 1890 0056 A3F8B220 	 strh r2,[r3,#178]
 1891              	.L63:
 527:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 528:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*  5 -Segment tb value Calcuation */
 529:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb < HandlePtr->tmin)
 1892              	 .loc 4 529 0
 1893 005a 7B68     	 ldr r3,[r7,#4]
 1894 005c B3F8B020 	 ldrh r2,[r3,#176]
 1895 0060 7B68     	 ldr r3,[r7,#4]
 1896 0062 B3F8C230 	 ldrh r3,[r3,#194]
 1897 0066 9A42     	 cmp r2,r3
 1898 0068 05D2     	 bcs .L64
 530:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 531:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tmin;
 1899              	 .loc 4 531 0
 1900 006a 7B68     	 ldr r3,[r7,#4]
 1901 006c B3F8C220 	 ldrh r2,[r3,#194]
 1902 0070 7B68     	 ldr r3,[r7,#4]
 1903 0072 A3F8B020 	 strh r2,[r3,#176]
 1904              	.L64:
 532:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 533:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period + 1U;
 1905              	 .loc 4 533 0
 1906 0076 7B68     	 ldr r3,[r7,#4]
 1907 0078 D3F89C30 	 ldr r3,[r3,#156]
 1908 007c 9BB2     	 uxth r3,r3
 1909 007e 0133     	 adds r3,r3,#1
 1910 0080 9AB2     	 uxth r2,r3
 1911 0082 7B68     	 ldr r3,[r7,#4]
 1912 0084 A3F8B620 	 strh r2,[r3,#182]
 534:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = ((uint16_t) HandlePtr->period - HandlePtr->ta) - HandlePtr->tb;
 1913              	 .loc 4 534 0
 1914 0088 7B68     	 ldr r3,[r7,#4]
 1915 008a D3F89C30 	 ldr r3,[r3,#156]
 1916 008e 9AB2     	 uxth r2,r3
 1917 0090 7B68     	 ldr r3,[r7,#4]
 1918 0092 B3F8AE30 	 ldrh r3,[r3,#174]
 1919 0096 D31A     	 subs r3,r2,r3
 1920 0098 9AB2     	 uxth r2,r3
 1921 009a 7B68     	 ldr r3,[r7,#4]
 1922 009c B3F8B030 	 ldrh r3,[r3,#176]
 1923 00a0 D31A     	 subs r3,r2,r3
 1924 00a2 9AB2     	 uxth r2,r3
 1925 00a4 7B68     	 ldr r3,[r7,#4]
 1926 00a6 A3F8B820 	 strh r2,[r3,#184]
 535:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 536:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = HandlePtr->v_ta;
 1927              	 .loc 4 536 0
 1928 00aa 7B68     	 ldr r3,[r7,#4]
 1929 00ac B3F8B620 	 ldrh r2,[r3,#182]
 1930 00b0 7B68     	 ldr r3,[r7,#4]
 1931 00b2 A3F8BA20 	 strh r2,[r3,#186]
 537:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = HandlePtr->v_tb + HandlePtr->ta2;
 1932              	 .loc 4 537 0
 1933 00b6 7B68     	 ldr r3,[r7,#4]
 1934 00b8 B3F8B820 	 ldrh r2,[r3,#184]
 1935 00bc 7B68     	 ldr r3,[r7,#4]
 1936 00be B3F8B230 	 ldrh r3,[r3,#178]
 1937 00c2 1344     	 add r3,r3,r2
 1938 00c4 9AB2     	 uxth r2,r3
 1939 00c6 7B68     	 ldr r3,[r7,#4]
 1940 00c8 A3F8BC20 	 strh r2,[r3,#188]
 538:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if (PWM_SVM_IS_DC_LINK_ENABLE == 1U)
 539:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 540:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 541:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Update the compare register values based on the sector number */
 542:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lUpdateDcLinkComRes(HandlePtr);
 543:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 544:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 545:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Update the compare register values based on the sector number */
 546:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_lAsymCompValUpdate(HandlePtr);
 1941              	 .loc 4 546 0
 1942 00cc 7868     	 ldr r0,[r7,#4]
 1943 00ce FFF7FEFF 	 bl PWM_SVM_lAsymCompValUpdate
 547:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 548:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 1944              	 .loc 4 548 0
 1945 00d2 0837     	 adds r7,r7,#8
 1946              	.LCFI135:
 1947              	 .cfi_def_cfa_offset 8
 1948 00d4 BD46     	 mov sp,r7
 1949              	.LCFI136:
 1950              	 .cfi_def_cfa_register 13
 1951              	 
 1952 00d6 80BD     	 pop {r7,pc}
 1953              	 .cfi_endproc
 1954              	.LFE250:
 1956              	 .section .text.PWM_SVM_Calc3av5segmentCompVal,"ax",%progbits
 1957              	 .align 2
 1958              	 .global PWM_SVM_Calc3av5segmentCompVal
 1959              	 .thumb
 1960              	 .thumb_func
 1962              	PWM_SVM_Calc3av5segmentCompVal:
 1963              	.LFB251:
 549:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 550:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 5-segment of Pseudo zero ve
 551:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 552:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Calc3av5segmentCompVal(PWM_SVM_t* const HandlePtr)
 553:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 1964              	 .loc 4 553 0
 1965              	 .cfi_startproc
 1966              	 
 1967              	 
 1968 0000 80B5     	 push {r7,lr}
 1969              	.LCFI137:
 1970              	 .cfi_def_cfa_offset 8
 1971              	 .cfi_offset 7,-8
 1972              	 .cfi_offset 14,-4
 1973 0002 84B0     	 sub sp,sp,#16
 1974              	.LCFI138:
 1975              	 .cfi_def_cfa_offset 24
 1976 0004 00AF     	 add r7,sp,#0
 1977              	.LCFI139:
 1978              	 .cfi_def_cfa_register 7
 1979 0006 7860     	 str r0,[r7,#4]
 554:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t cr1s;
 555:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t cr2s;
 556:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate compare value intermediate parameters based on subsector*/
 557:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->subsector == (uint32_t) 0)
 1980              	 .loc 4 557 0
 1981 0008 7B68     	 ldr r3,[r7,#4]
 1982 000a B3F8C030 	 ldrh r3,[r3,#192]
 1983 000e 002B     	 cmp r3,#0
 1984 0010 3BD1     	 bne .L66
 558:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 559:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = HandlePtr->tb + HandlePtr->tmin;
 1985              	 .loc 4 559 0
 1986 0012 7B68     	 ldr r3,[r7,#4]
 1987 0014 B3F8B020 	 ldrh r2,[r3,#176]
 1988 0018 7B68     	 ldr r3,[r7,#4]
 1989 001a B3F8C230 	 ldrh r3,[r3,#194]
 1990 001e 1344     	 add r3,r3,r2
 1991 0020 9AB2     	 uxth r2,r3
 1992 0022 7B68     	 ldr r3,[r7,#4]
 1993 0024 A3F8B020 	 strh r2,[r3,#176]
 560:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = ((uint16_t) HandlePtr->period - (HandlePtr->ta + HandlePtr->tb + HandlePtr->
 1994              	 .loc 4 560 0
 1995 0028 7B68     	 ldr r3,[r7,#4]
 1996 002a D3F89C30 	 ldr r3,[r3,#156]
 1997 002e 9AB2     	 uxth r2,r3
 1998 0030 7B68     	 ldr r3,[r7,#4]
 1999 0032 B3F8AE10 	 ldrh r1,[r3,#174]
 2000 0036 7B68     	 ldr r3,[r7,#4]
 2001 0038 B3F8B030 	 ldrh r3,[r3,#176]
 2002 003c 0B44     	 add r3,r3,r1
 2003 003e 99B2     	 uxth r1,r3
 2004 0040 7B68     	 ldr r3,[r7,#4]
 2005 0042 B3F8C230 	 ldrh r3,[r3,#194]
 2006 0046 0B44     	 add r3,r3,r1
 2007 0048 9BB2     	 uxth r3,r3
 2008 004a D31A     	 subs r3,r2,r3
 2009 004c 9AB2     	 uxth r2,r3
 2010 004e 7B68     	 ldr r3,[r7,#4]
 2011 0050 A3F8BC20 	 strh r2,[r3,#188]
 561:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = (HandlePtr->v_tb2) >> 1U;
 2012              	 .loc 4 561 0
 2013 0054 7B68     	 ldr r3,[r7,#4]
 2014 0056 B3F8BC30 	 ldrh r3,[r3,#188]
 2015 005a 5B08     	 lsrs r3,r3,#1
 2016 005c 9AB2     	 uxth r2,r3
 2017 005e 7B68     	 ldr r3,[r7,#4]
 2018 0060 A3F8B820 	 strh r2,[r3,#184]
 562:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = (uint16_t) HandlePtr->period;
 2019              	 .loc 4 562 0
 2020 0064 7B68     	 ldr r3,[r7,#4]
 2021 0066 D3F89C30 	 ldr r3,[r3,#156]
 2022 006a 9AB2     	 uxth r2,r3
 2023 006c 7B68     	 ldr r3,[r7,#4]
 2024 006e A3F8B620 	 strh r2,[r3,#182]
 563:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tc = HandlePtr->v_tb + HandlePtr->tmin;
 2025              	 .loc 4 563 0
 2026 0072 7B68     	 ldr r3,[r7,#4]
 2027 0074 B3F8B820 	 ldrh r2,[r3,#184]
 2028 0078 7B68     	 ldr r3,[r7,#4]
 2029 007a B3F8C230 	 ldrh r3,[r3,#194]
 2030 007e 1344     	 add r3,r3,r2
 2031 0080 9AB2     	 uxth r2,r3
 2032 0082 7B68     	 ldr r3,[r7,#4]
 2033 0084 A3F8BE20 	 strh r2,[r3,#190]
 2034 0088 35E0     	 b .L67
 2035              	.L66:
 564:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 565:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
 566:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 567:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = HandlePtr->ta + HandlePtr->tmin;
 2036              	 .loc 4 567 0
 2037 008a 7B68     	 ldr r3,[r7,#4]
 2038 008c B3F8AE20 	 ldrh r2,[r3,#174]
 2039 0090 7B68     	 ldr r3,[r7,#4]
 2040 0092 B3F8C230 	 ldrh r3,[r3,#194]
 2041 0096 1344     	 add r3,r3,r2
 2042 0098 9AB2     	 uxth r2,r3
 2043 009a 7B68     	 ldr r3,[r7,#4]
 2044 009c A3F8AE20 	 strh r2,[r3,#174]
 568:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = ((uint16_t) HandlePtr->period - (HandlePtr->ta + HandlePtr->tb + HandlePtr->
 2045              	 .loc 4 568 0
 2046 00a0 7B68     	 ldr r3,[r7,#4]
 2047 00a2 D3F89C30 	 ldr r3,[r3,#156]
 2048 00a6 9AB2     	 uxth r2,r3
 2049 00a8 7B68     	 ldr r3,[r7,#4]
 2050 00aa B3F8AE10 	 ldrh r1,[r3,#174]
 2051 00ae 7B68     	 ldr r3,[r7,#4]
 2052 00b0 B3F8B030 	 ldrh r3,[r3,#176]
 2053 00b4 0B44     	 add r3,r3,r1
 2054 00b6 99B2     	 uxth r1,r3
 2055 00b8 7B68     	 ldr r3,[r7,#4]
 2056 00ba B3F8C230 	 ldrh r3,[r3,#194]
 2057 00be 0B44     	 add r3,r3,r1
 2058 00c0 9BB2     	 uxth r3,r3
 2059 00c2 D31A     	 subs r3,r2,r3
 2060 00c4 9AB2     	 uxth r2,r3
 2061 00c6 7B68     	 ldr r3,[r7,#4]
 2062 00c8 A3F8BC20 	 strh r2,[r3,#188]
 569:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = (HandlePtr->v_tb2) >> 1U;
 2063              	 .loc 4 569 0
 2064 00cc 7B68     	 ldr r3,[r7,#4]
 2065 00ce B3F8BC30 	 ldrh r3,[r3,#188]
 2066 00d2 5B08     	 lsrs r3,r3,#1
 2067 00d4 9AB2     	 uxth r2,r3
 2068 00d6 7B68     	 ldr r3,[r7,#4]
 2069 00d8 A3F8B820 	 strh r2,[r3,#184]
 570:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = (uint16_t) HandlePtr->period;
 2070              	 .loc 4 570 0
 2071 00dc 7B68     	 ldr r3,[r7,#4]
 2072 00de D3F89C30 	 ldr r3,[r3,#156]
 2073 00e2 9AB2     	 uxth r2,r3
 2074 00e4 7B68     	 ldr r3,[r7,#4]
 2075 00e6 A3F8B620 	 strh r2,[r3,#182]
 571:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tc = HandlePtr->v_tb;
 2076              	 .loc 4 571 0
 2077 00ea 7B68     	 ldr r3,[r7,#4]
 2078 00ec B3F8B820 	 ldrh r2,[r3,#184]
 2079 00f0 7B68     	 ldr r3,[r7,#4]
 2080 00f2 A3F8BE20 	 strh r2,[r3,#190]
 2081              	.L67:
 572:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 573:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate and update compare value of current trigger slice for dc link current measurement*/
 574:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 2082              	 .loc 4 574 0
 2083 00f6 7B68     	 ldr r3,[r7,#4]
 2084 00f8 1B68     	 ldr r3,[r3]
 2085 00fa 1B7C     	 ldrb r3,[r3,#16]
 2086 00fc 012B     	 cmp r3,#1
 2087 00fe 2AD1     	 bne .L68
 575:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 576:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr1s = (uint16_t) HandlePtr->v_ta - (uint16_t)(HandlePtr->ta + (HandlePtr->tb >> (uint16_t) 1))
 2088              	 .loc 4 576 0
 2089 0100 7B68     	 ldr r3,[r7,#4]
 2090 0102 B3F8B620 	 ldrh r2,[r3,#182]
 2091 0106 7B68     	 ldr r3,[r7,#4]
 2092 0108 B3F8AE10 	 ldrh r1,[r3,#174]
 2093 010c 7B68     	 ldr r3,[r7,#4]
 2094 010e B3F8B030 	 ldrh r3,[r3,#176]
 2095 0112 5B08     	 lsrs r3,r3,#1
 2096 0114 9BB2     	 uxth r3,r3
 2097 0116 0B44     	 add r3,r3,r1
 2098 0118 9BB2     	 uxth r3,r3
 2099 011a D31A     	 subs r3,r2,r3
 2100 011c FB81     	 strh r3,[r7,#14]
 577:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr2s = (uint16_t) HandlePtr->v_ta - (uint16_t)(HandlePtr->ta >> (uint16_t) 1);
 2101              	 .loc 4 577 0
 2102 011e 7B68     	 ldr r3,[r7,#4]
 2103 0120 B3F8B620 	 ldrh r2,[r3,#182]
 2104 0124 7B68     	 ldr r3,[r7,#4]
 2105 0126 B3F8AE30 	 ldrh r3,[r3,#174]
 2106 012a 5B08     	 lsrs r3,r3,#1
 2107 012c 9BB2     	 uxth r3,r3
 2108 012e D31A     	 subs r3,r2,r3
 2109 0130 BB81     	 strh r3,[r7,#12]
 578:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2110              	 .loc 4 578 0
 2111 0132 7B68     	 ldr r3,[r7,#4]
 2112 0134 5B69     	 ldr r3,[r3,#20]
 2113 0136 1A68     	 ldr r2,[r3]
 2114 0138 FB89     	 ldrh r3,[r7,#14]
 2115 013a 1046     	 mov r0,r2
 2116 013c 0021     	 movs r1,#0
 2117 013e 1A46     	 mov r2,r3
 2118 0140 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 579:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) cr1s);
 580:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2119              	 .loc 4 580 0
 2120 0144 7B68     	 ldr r3,[r7,#4]
 2121 0146 5B69     	 ldr r3,[r3,#20]
 2122 0148 1A68     	 ldr r2,[r3]
 2123 014a BB89     	 ldrh r3,[r7,#12]
 2124 014c 1046     	 mov r0,r2
 2125 014e 0121     	 movs r1,#1
 2126 0150 1A46     	 mov r2,r3
 2127 0152 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 2128              	.L68:
 581:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) cr2s);
 582:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 583:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare registers based on sector number*/
 584:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 2129              	 .loc 4 584 0
 2130 0156 7B68     	 ldr r3,[r7,#4]
 2131 0158 D3F8A430 	 ldr r3,[r3,#164]
 2132 015c 03F00703 	 and r3,r3,#7
 2133 0160 042B     	 cmp r3,#4
 2134 0162 00F2A781 	 bhi .L69
 2135 0166 01A2     	 adr r2,.L71
 2136 0168 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2137              	 .p2align 2
 2138              	.L71:
 2139 016c 81010000 	 .word .L70+1
 2140 0170 25020000 	 .word .L72+1
 2141 0174 C9020000 	 .word .L73+1
 2142 0178 6D030000 	 .word .L74+1
 2143 017c 11040000 	 .word .L75+1
 2144              	 .p2align 1
 2145              	.L70:
 585:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 586:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 587:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2146              	 .loc 4 587 0
 2147 0180 7B68     	 ldr r3,[r7,#4]
 2148 0182 9B68     	 ldr r3,[r3,#8]
 2149 0184 1968     	 ldr r1,[r3]
 588:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 589:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2150              	 .loc 4 589 0
 2151 0186 7B68     	 ldr r3,[r7,#4]
 2152 0188 B3F8B820 	 ldrh r2,[r3,#184]
 2153 018c 7B68     	 ldr r3,[r7,#4]
 2154 018e B3F8C230 	 ldrh r3,[r3,#194]
 587:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2155              	 .loc 4 587 0
 2156 0192 1344     	 add r3,r3,r2
 2157 0194 9BB2     	 uxth r3,r3
 2158 0196 0846     	 mov r0,r1
 2159 0198 0021     	 movs r1,#0
 2160 019a 1A46     	 mov r2,r3
 2161 019c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 590:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2162              	 .loc 4 590 0
 2163 01a0 7B68     	 ldr r3,[r7,#4]
 2164 01a2 9B68     	 ldr r3,[r3,#8]
 2165 01a4 1A68     	 ldr r2,[r3]
 2166 01a6 7B68     	 ldr r3,[r7,#4]
 2167 01a8 B3F8B630 	 ldrh r3,[r3,#182]
 2168 01ac 1046     	 mov r0,r2
 2169 01ae 0121     	 movs r1,#1
 2170 01b0 1A46     	 mov r2,r3
 2171 01b2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 591:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 592:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 593:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2172              	 .loc 4 593 0
 2173 01b6 7B68     	 ldr r3,[r7,#4]
 2174 01b8 DB68     	 ldr r3,[r3,#12]
 2175 01ba 1A68     	 ldr r2,[r3]
 2176 01bc 7B68     	 ldr r3,[r7,#4]
 2177 01be B3F8BE30 	 ldrh r3,[r3,#190]
 2178 01c2 1046     	 mov r0,r2
 2179 01c4 0021     	 movs r1,#0
 2180 01c6 1A46     	 mov r2,r3
 2181 01c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 594:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 595:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2182              	 .loc 4 595 0
 2183 01cc 7B68     	 ldr r3,[r7,#4]
 2184 01ce DB68     	 ldr r3,[r3,#12]
 2185 01d0 1968     	 ldr r1,[r3]
 596:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 597:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2186              	 .loc 4 597 0
 2187 01d2 7B68     	 ldr r3,[r7,#4]
 2188 01d4 B3F8B620 	 ldrh r2,[r3,#182]
 2189 01d8 7B68     	 ldr r3,[r7,#4]
 2190 01da B3F8AE30 	 ldrh r3,[r3,#174]
 595:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2191              	 .loc 4 595 0
 2192 01de D31A     	 subs r3,r2,r3
 2193 01e0 9BB2     	 uxth r3,r3
 2194 01e2 0846     	 mov r0,r1
 2195 01e4 0121     	 movs r1,#1
 2196 01e6 1A46     	 mov r2,r3
 2197 01e8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 598:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 599:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2198              	 .loc 4 599 0
 2199 01ec 7B68     	 ldr r3,[r7,#4]
 2200 01ee 1B69     	 ldr r3,[r3,#16]
 2201 01f0 1A68     	 ldr r2,[r3]
 2202 01f2 7B68     	 ldr r3,[r7,#4]
 2203 01f4 B3F8B830 	 ldrh r3,[r3,#184]
 2204 01f8 1046     	 mov r0,r2
 2205 01fa 0021     	 movs r1,#0
 2206 01fc 1A46     	 mov r2,r3
 2207 01fe FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 600:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 601:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2208              	 .loc 4 601 0
 2209 0202 7B68     	 ldr r3,[r7,#4]
 2210 0204 1B69     	 ldr r3,[r3,#16]
 2211 0206 1968     	 ldr r1,[r3]
 602:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 603:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2212              	 .loc 4 603 0
 2213 0208 7B68     	 ldr r3,[r7,#4]
 2214 020a B3F8BC20 	 ldrh r2,[r3,#188]
 2215 020e 7B68     	 ldr r3,[r7,#4]
 2216 0210 B3F8C230 	 ldrh r3,[r3,#194]
 601:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2217              	 .loc 4 601 0
 2218 0214 1344     	 add r3,r3,r2
 2219 0216 9BB2     	 uxth r3,r3
 2220 0218 0846     	 mov r0,r1
 2221 021a 0121     	 movs r1,#1
 2222 021c 1A46     	 mov r2,r3
 2223 021e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 604:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2224              	 .loc 4 604 0
 2225 0222 99E1     	 b .L65
 2226              	.L72:
 605:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 606:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2227              	 .loc 4 606 0
 2228 0224 7B68     	 ldr r3,[r7,#4]
 2229 0226 9B68     	 ldr r3,[r3,#8]
 2230 0228 1A68     	 ldr r2,[r3]
 2231 022a 7B68     	 ldr r3,[r7,#4]
 2232 022c B3F8BE30 	 ldrh r3,[r3,#190]
 2233 0230 1046     	 mov r0,r2
 2234 0232 0021     	 movs r1,#0
 2235 0234 1A46     	 mov r2,r3
 2236 0236 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 607:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 608:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2237              	 .loc 4 608 0
 2238 023a 7B68     	 ldr r3,[r7,#4]
 2239 023c 9B68     	 ldr r3,[r3,#8]
 2240 023e 1968     	 ldr r1,[r3]
 609:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 610:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2241              	 .loc 4 610 0
 2242 0240 7B68     	 ldr r3,[r7,#4]
 2243 0242 B3F8B620 	 ldrh r2,[r3,#182]
 2244 0246 7B68     	 ldr r3,[r7,#4]
 2245 0248 B3F8AE30 	 ldrh r3,[r3,#174]
 608:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2246              	 .loc 4 608 0
 2247 024c D31A     	 subs r3,r2,r3
 2248 024e 9BB2     	 uxth r3,r3
 2249 0250 0846     	 mov r0,r1
 2250 0252 0121     	 movs r1,#1
 2251 0254 1A46     	 mov r2,r3
 2252 0256 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 611:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 612:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2253              	 .loc 4 612 0
 2254 025a 7B68     	 ldr r3,[r7,#4]
 2255 025c DB68     	 ldr r3,[r3,#12]
 2256 025e 1968     	 ldr r1,[r3]
 613:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 614:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2257              	 .loc 4 614 0
 2258 0260 7B68     	 ldr r3,[r7,#4]
 2259 0262 B3F8B820 	 ldrh r2,[r3,#184]
 2260 0266 7B68     	 ldr r3,[r7,#4]
 2261 0268 B3F8C230 	 ldrh r3,[r3,#194]
 612:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2262              	 .loc 4 612 0
 2263 026c 1344     	 add r3,r3,r2
 2264 026e 9BB2     	 uxth r3,r3
 2265 0270 0846     	 mov r0,r1
 2266 0272 0021     	 movs r1,#0
 2267 0274 1A46     	 mov r2,r3
 2268 0276 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 615:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2269              	 .loc 4 615 0
 2270 027a 7B68     	 ldr r3,[r7,#4]
 2271 027c DB68     	 ldr r3,[r3,#12]
 2272 027e 1A68     	 ldr r2,[r3]
 2273 0280 7B68     	 ldr r3,[r7,#4]
 2274 0282 B3F8B630 	 ldrh r3,[r3,#182]
 2275 0286 1046     	 mov r0,r2
 2276 0288 0121     	 movs r1,#1
 2277 028a 1A46     	 mov r2,r3
 2278 028c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 616:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 617:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 618:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2279              	 .loc 4 618 0
 2280 0290 7B68     	 ldr r3,[r7,#4]
 2281 0292 1B69     	 ldr r3,[r3,#16]
 2282 0294 1A68     	 ldr r2,[r3]
 2283 0296 7B68     	 ldr r3,[r7,#4]
 2284 0298 B3F8B830 	 ldrh r3,[r3,#184]
 2285 029c 1046     	 mov r0,r2
 2286 029e 0021     	 movs r1,#0
 2287 02a0 1A46     	 mov r2,r3
 2288 02a2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 619:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 620:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2289              	 .loc 4 620 0
 2290 02a6 7B68     	 ldr r3,[r7,#4]
 2291 02a8 1B69     	 ldr r3,[r3,#16]
 2292 02aa 1968     	 ldr r1,[r3]
 621:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 622:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2293              	 .loc 4 622 0
 2294 02ac 7B68     	 ldr r3,[r7,#4]
 2295 02ae B3F8BC20 	 ldrh r2,[r3,#188]
 2296 02b2 7B68     	 ldr r3,[r7,#4]
 2297 02b4 B3F8C230 	 ldrh r3,[r3,#194]
 620:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2298              	 .loc 4 620 0
 2299 02b8 1344     	 add r3,r3,r2
 2300 02ba 9BB2     	 uxth r3,r3
 2301 02bc 0846     	 mov r0,r1
 2302 02be 0121     	 movs r1,#1
 2303 02c0 1A46     	 mov r2,r3
 2304 02c2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 623:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2305              	 .loc 4 623 0
 2306 02c6 47E1     	 b .L65
 2307              	.L73:
 624:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 625:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2308              	 .loc 4 625 0
 2309 02c8 7B68     	 ldr r3,[r7,#4]
 2310 02ca 9B68     	 ldr r3,[r3,#8]
 2311 02cc 1A68     	 ldr r2,[r3]
 2312 02ce 7B68     	 ldr r3,[r7,#4]
 2313 02d0 B3F8B830 	 ldrh r3,[r3,#184]
 2314 02d4 1046     	 mov r0,r2
 2315 02d6 0021     	 movs r1,#0
 2316 02d8 1A46     	 mov r2,r3
 2317 02da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 626:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 627:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2318              	 .loc 4 627 0
 2319 02de 7B68     	 ldr r3,[r7,#4]
 2320 02e0 9B68     	 ldr r3,[r3,#8]
 2321 02e2 1968     	 ldr r1,[r3]
 628:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 629:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2322              	 .loc 4 629 0
 2323 02e4 7B68     	 ldr r3,[r7,#4]
 2324 02e6 B3F8BC20 	 ldrh r2,[r3,#188]
 2325 02ea 7B68     	 ldr r3,[r7,#4]
 2326 02ec B3F8C230 	 ldrh r3,[r3,#194]
 627:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2327              	 .loc 4 627 0
 2328 02f0 1344     	 add r3,r3,r2
 2329 02f2 9BB2     	 uxth r3,r3
 2330 02f4 0846     	 mov r0,r1
 2331 02f6 0121     	 movs r1,#1
 2332 02f8 1A46     	 mov r2,r3
 2333 02fa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 630:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 631:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2334              	 .loc 4 631 0
 2335 02fe 7B68     	 ldr r3,[r7,#4]
 2336 0300 DB68     	 ldr r3,[r3,#12]
 2337 0302 1968     	 ldr r1,[r3]
 632:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 633:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2338              	 .loc 4 633 0
 2339 0304 7B68     	 ldr r3,[r7,#4]
 2340 0306 B3F8B820 	 ldrh r2,[r3,#184]
 2341 030a 7B68     	 ldr r3,[r7,#4]
 2342 030c B3F8C230 	 ldrh r3,[r3,#194]
 631:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2343              	 .loc 4 631 0
 2344 0310 1344     	 add r3,r3,r2
 2345 0312 9BB2     	 uxth r3,r3
 2346 0314 0846     	 mov r0,r1
 2347 0316 0021     	 movs r1,#0
 2348 0318 1A46     	 mov r2,r3
 2349 031a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 634:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2350              	 .loc 4 634 0
 2351 031e 7B68     	 ldr r3,[r7,#4]
 2352 0320 DB68     	 ldr r3,[r3,#12]
 2353 0322 1A68     	 ldr r2,[r3]
 2354 0324 7B68     	 ldr r3,[r7,#4]
 2355 0326 B3F8B630 	 ldrh r3,[r3,#182]
 2356 032a 1046     	 mov r0,r2
 2357 032c 0121     	 movs r1,#1
 2358 032e 1A46     	 mov r2,r3
 2359 0330 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 635:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 636:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 637:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2360              	 .loc 4 637 0
 2361 0334 7B68     	 ldr r3,[r7,#4]
 2362 0336 1B69     	 ldr r3,[r3,#16]
 2363 0338 1A68     	 ldr r2,[r3]
 2364 033a 7B68     	 ldr r3,[r7,#4]
 2365 033c B3F8BE30 	 ldrh r3,[r3,#190]
 2366 0340 1046     	 mov r0,r2
 2367 0342 0021     	 movs r1,#0
 2368 0344 1A46     	 mov r2,r3
 2369 0346 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 638:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 639:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2370              	 .loc 4 639 0
 2371 034a 7B68     	 ldr r3,[r7,#4]
 2372 034c 1B69     	 ldr r3,[r3,#16]
 2373 034e 1968     	 ldr r1,[r3]
 640:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 641:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2374              	 .loc 4 641 0
 2375 0350 7B68     	 ldr r3,[r7,#4]
 2376 0352 B3F8B620 	 ldrh r2,[r3,#182]
 2377 0356 7B68     	 ldr r3,[r7,#4]
 2378 0358 B3F8AE30 	 ldrh r3,[r3,#174]
 639:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2379              	 .loc 4 639 0
 2380 035c D31A     	 subs r3,r2,r3
 2381 035e 9BB2     	 uxth r3,r3
 2382 0360 0846     	 mov r0,r1
 2383 0362 0121     	 movs r1,#1
 2384 0364 1A46     	 mov r2,r3
 2385 0366 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 642:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2386              	 .loc 4 642 0
 2387 036a F5E0     	 b .L65
 2388              	.L74:
 643:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 644:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2389              	 .loc 4 644 0
 2390 036c 7B68     	 ldr r3,[r7,#4]
 2391 036e 9B68     	 ldr r3,[r3,#8]
 2392 0370 1A68     	 ldr r2,[r3]
 2393 0372 7B68     	 ldr r3,[r7,#4]
 2394 0374 B3F8B830 	 ldrh r3,[r3,#184]
 2395 0378 1046     	 mov r0,r2
 2396 037a 0021     	 movs r1,#0
 2397 037c 1A46     	 mov r2,r3
 2398 037e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 645:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 646:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2399              	 .loc 4 646 0
 2400 0382 7B68     	 ldr r3,[r7,#4]
 2401 0384 9B68     	 ldr r3,[r3,#8]
 2402 0386 1968     	 ldr r1,[r3]
 647:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 648:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2403              	 .loc 4 648 0
 2404 0388 7B68     	 ldr r3,[r7,#4]
 2405 038a B3F8BC20 	 ldrh r2,[r3,#188]
 2406 038e 7B68     	 ldr r3,[r7,#4]
 2407 0390 B3F8C230 	 ldrh r3,[r3,#194]
 646:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2408              	 .loc 4 646 0
 2409 0394 1344     	 add r3,r3,r2
 2410 0396 9BB2     	 uxth r3,r3
 2411 0398 0846     	 mov r0,r1
 2412 039a 0121     	 movs r1,#1
 2413 039c 1A46     	 mov r2,r3
 2414 039e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 649:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 650:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2415              	 .loc 4 650 0
 2416 03a2 7B68     	 ldr r3,[r7,#4]
 2417 03a4 DB68     	 ldr r3,[r3,#12]
 2418 03a6 1A68     	 ldr r2,[r3]
 2419 03a8 7B68     	 ldr r3,[r7,#4]
 2420 03aa B3F8BE30 	 ldrh r3,[r3,#190]
 2421 03ae 1046     	 mov r0,r2
 2422 03b0 0021     	 movs r1,#0
 2423 03b2 1A46     	 mov r2,r3
 2424 03b4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 651:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 652:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2425              	 .loc 4 652 0
 2426 03b8 7B68     	 ldr r3,[r7,#4]
 2427 03ba DB68     	 ldr r3,[r3,#12]
 2428 03bc 1968     	 ldr r1,[r3]
 653:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 654:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2429              	 .loc 4 654 0
 2430 03be 7B68     	 ldr r3,[r7,#4]
 2431 03c0 B3F8B620 	 ldrh r2,[r3,#182]
 2432 03c4 7B68     	 ldr r3,[r7,#4]
 2433 03c6 B3F8AE30 	 ldrh r3,[r3,#174]
 652:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2434              	 .loc 4 652 0
 2435 03ca D31A     	 subs r3,r2,r3
 2436 03cc 9BB2     	 uxth r3,r3
 2437 03ce 0846     	 mov r0,r1
 2438 03d0 0121     	 movs r1,#1
 2439 03d2 1A46     	 mov r2,r3
 2440 03d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 655:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 656:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2441              	 .loc 4 656 0
 2442 03d8 7B68     	 ldr r3,[r7,#4]
 2443 03da 1B69     	 ldr r3,[r3,#16]
 2444 03dc 1968     	 ldr r1,[r3]
 657:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 658:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2445              	 .loc 4 658 0
 2446 03de 7B68     	 ldr r3,[r7,#4]
 2447 03e0 B3F8B820 	 ldrh r2,[r3,#184]
 2448 03e4 7B68     	 ldr r3,[r7,#4]
 2449 03e6 B3F8C230 	 ldrh r3,[r3,#194]
 656:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2450              	 .loc 4 656 0
 2451 03ea 1344     	 add r3,r3,r2
 2452 03ec 9BB2     	 uxth r3,r3
 2453 03ee 0846     	 mov r0,r1
 2454 03f0 0021     	 movs r1,#0
 2455 03f2 1A46     	 mov r2,r3
 2456 03f4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 659:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2457              	 .loc 4 659 0
 2458 03f8 7B68     	 ldr r3,[r7,#4]
 2459 03fa 1B69     	 ldr r3,[r3,#16]
 2460 03fc 1A68     	 ldr r2,[r3]
 2461 03fe 7B68     	 ldr r3,[r7,#4]
 2462 0400 B3F8B630 	 ldrh r3,[r3,#182]
 2463 0404 1046     	 mov r0,r2
 2464 0406 0121     	 movs r1,#1
 2465 0408 1A46     	 mov r2,r3
 2466 040a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 660:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 661:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2467              	 .loc 4 661 0
 2468 040e A3E0     	 b .L65
 2469              	.L75:
 662:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 663:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2470              	 .loc 4 663 0
 2471 0410 7B68     	 ldr r3,[r7,#4]
 2472 0412 9B68     	 ldr r3,[r3,#8]
 2473 0414 1A68     	 ldr r2,[r3]
 2474 0416 7B68     	 ldr r3,[r7,#4]
 2475 0418 B3F8BE30 	 ldrh r3,[r3,#190]
 2476 041c 1046     	 mov r0,r2
 2477 041e 0021     	 movs r1,#0
 2478 0420 1A46     	 mov r2,r3
 2479 0422 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 664:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 665:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2480              	 .loc 4 665 0
 2481 0426 7B68     	 ldr r3,[r7,#4]
 2482 0428 9B68     	 ldr r3,[r3,#8]
 2483 042a 1968     	 ldr r1,[r3]
 666:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 667:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2484              	 .loc 4 667 0
 2485 042c 7B68     	 ldr r3,[r7,#4]
 2486 042e B3F8B620 	 ldrh r2,[r3,#182]
 2487 0432 7B68     	 ldr r3,[r7,#4]
 2488 0434 B3F8AE30 	 ldrh r3,[r3,#174]
 665:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2489              	 .loc 4 665 0
 2490 0438 D31A     	 subs r3,r2,r3
 2491 043a 9BB2     	 uxth r3,r3
 2492 043c 0846     	 mov r0,r1
 2493 043e 0121     	 movs r1,#1
 2494 0440 1A46     	 mov r2,r3
 2495 0442 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 668:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 669:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2496              	 .loc 4 669 0
 2497 0446 7B68     	 ldr r3,[r7,#4]
 2498 0448 DB68     	 ldr r3,[r3,#12]
 2499 044a 1A68     	 ldr r2,[r3]
 2500 044c 7B68     	 ldr r3,[r7,#4]
 2501 044e B3F8B830 	 ldrh r3,[r3,#184]
 2502 0452 1046     	 mov r0,r2
 2503 0454 0021     	 movs r1,#0
 2504 0456 1A46     	 mov r2,r3
 2505 0458 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 670:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 671:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2506              	 .loc 4 671 0
 2507 045c 7B68     	 ldr r3,[r7,#4]
 2508 045e DB68     	 ldr r3,[r3,#12]
 2509 0460 1968     	 ldr r1,[r3]
 672:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 673:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2510              	 .loc 4 673 0
 2511 0462 7B68     	 ldr r3,[r7,#4]
 2512 0464 B3F8BC20 	 ldrh r2,[r3,#188]
 2513 0468 7B68     	 ldr r3,[r7,#4]
 2514 046a B3F8C230 	 ldrh r3,[r3,#194]
 671:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2515              	 .loc 4 671 0
 2516 046e 1344     	 add r3,r3,r2
 2517 0470 9BB2     	 uxth r3,r3
 2518 0472 0846     	 mov r0,r1
 2519 0474 0121     	 movs r1,#1
 2520 0476 1A46     	 mov r2,r3
 2521 0478 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 674:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 675:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2522              	 .loc 4 675 0
 2523 047c 7B68     	 ldr r3,[r7,#4]
 2524 047e 1B69     	 ldr r3,[r3,#16]
 2525 0480 1968     	 ldr r1,[r3]
 676:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 677:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2526              	 .loc 4 677 0
 2527 0482 7B68     	 ldr r3,[r7,#4]
 2528 0484 B3F8B820 	 ldrh r2,[r3,#184]
 2529 0488 7B68     	 ldr r3,[r7,#4]
 2530 048a B3F8C230 	 ldrh r3,[r3,#194]
 675:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2531              	 .loc 4 675 0
 2532 048e 1344     	 add r3,r3,r2
 2533 0490 9BB2     	 uxth r3,r3
 2534 0492 0846     	 mov r0,r1
 2535 0494 0021     	 movs r1,#0
 2536 0496 1A46     	 mov r2,r3
 2537 0498 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 678:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2538              	 .loc 4 678 0
 2539 049c 7B68     	 ldr r3,[r7,#4]
 2540 049e 1B69     	 ldr r3,[r3,#16]
 2541 04a0 1A68     	 ldr r2,[r3]
 2542 04a2 7B68     	 ldr r3,[r7,#4]
 2543 04a4 B3F8B630 	 ldrh r3,[r3,#182]
 2544 04a8 1046     	 mov r0,r2
 2545 04aa 0121     	 movs r1,#1
 2546 04ac 1A46     	 mov r2,r3
 2547 04ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 679:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 680:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2548              	 .loc 4 680 0
 2549 04b2 51E0     	 b .L65
 2550              	.L69:
 681:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 682:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2551              	 .loc 4 682 0
 2552 04b4 7B68     	 ldr r3,[r7,#4]
 2553 04b6 9B68     	 ldr r3,[r3,#8]
 2554 04b8 1968     	 ldr r1,[r3]
 683:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 684:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2555              	 .loc 4 684 0
 2556 04ba 7B68     	 ldr r3,[r7,#4]
 2557 04bc B3F8B820 	 ldrh r2,[r3,#184]
 2558 04c0 7B68     	 ldr r3,[r7,#4]
 2559 04c2 B3F8C230 	 ldrh r3,[r3,#194]
 682:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2560              	 .loc 4 682 0
 2561 04c6 1344     	 add r3,r3,r2
 2562 04c8 9BB2     	 uxth r3,r3
 2563 04ca 0846     	 mov r0,r1
 2564 04cc 0021     	 movs r1,#0
 2565 04ce 1A46     	 mov r2,r3
 2566 04d0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 685:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2567              	 .loc 4 685 0
 2568 04d4 7B68     	 ldr r3,[r7,#4]
 2569 04d6 9B68     	 ldr r3,[r3,#8]
 2570 04d8 1A68     	 ldr r2,[r3]
 2571 04da 7B68     	 ldr r3,[r7,#4]
 2572 04dc B3F8B630 	 ldrh r3,[r3,#182]
 2573 04e0 1046     	 mov r0,r2
 2574 04e2 0121     	 movs r1,#1
 2575 04e4 1A46     	 mov r2,r3
 2576 04e6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 686:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 687:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 688:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2577              	 .loc 4 688 0
 2578 04ea 7B68     	 ldr r3,[r7,#4]
 2579 04ec DB68     	 ldr r3,[r3,#12]
 2580 04ee 1A68     	 ldr r2,[r3]
 2581 04f0 7B68     	 ldr r3,[r7,#4]
 2582 04f2 B3F8B830 	 ldrh r3,[r3,#184]
 2583 04f6 1046     	 mov r0,r2
 2584 04f8 0021     	 movs r1,#0
 2585 04fa 1A46     	 mov r2,r3
 2586 04fc FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 689:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 690:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2587              	 .loc 4 690 0
 2588 0500 7B68     	 ldr r3,[r7,#4]
 2589 0502 DB68     	 ldr r3,[r3,#12]
 2590 0504 1968     	 ldr r1,[r3]
 691:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 692:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb2 + HandlePtr->tmin);
 2591              	 .loc 4 692 0
 2592 0506 7B68     	 ldr r3,[r7,#4]
 2593 0508 B3F8BC20 	 ldrh r2,[r3,#188]
 2594 050c 7B68     	 ldr r3,[r7,#4]
 2595 050e B3F8C230 	 ldrh r3,[r3,#194]
 690:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2596              	 .loc 4 690 0
 2597 0512 1344     	 add r3,r3,r2
 2598 0514 9BB2     	 uxth r3,r3
 2599 0516 0846     	 mov r0,r1
 2600 0518 0121     	 movs r1,#1
 2601 051a 1A46     	 mov r2,r3
 2602 051c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 693:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 694:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2603              	 .loc 4 694 0
 2604 0520 7B68     	 ldr r3,[r7,#4]
 2605 0522 1B69     	 ldr r3,[r3,#16]
 2606 0524 1A68     	 ldr r2,[r3]
 2607 0526 7B68     	 ldr r3,[r7,#4]
 2608 0528 B3F8BE30 	 ldrh r3,[r3,#190]
 2609 052c 1046     	 mov r0,r2
 2610 052e 0021     	 movs r1,#0
 2611 0530 1A46     	 mov r2,r3
 2612 0532 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 695:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 696:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2613              	 .loc 4 696 0
 2614 0536 7B68     	 ldr r3,[r7,#4]
 2615 0538 1B69     	 ldr r3,[r3,#16]
 2616 053a 1968     	 ldr r1,[r3]
 697:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 698:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2617              	 .loc 4 698 0
 2618 053c 7B68     	 ldr r3,[r7,#4]
 2619 053e B3F8B620 	 ldrh r2,[r3,#182]
 2620 0542 7B68     	 ldr r3,[r7,#4]
 2621 0544 B3F8AE30 	 ldrh r3,[r3,#174]
 696:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2622              	 .loc 4 696 0
 2623 0548 D31A     	 subs r3,r2,r3
 2624 054a 9BB2     	 uxth r3,r3
 2625 054c 0846     	 mov r0,r1
 2626 054e 0121     	 movs r1,#1
 2627 0550 1A46     	 mov r2,r3
 2628 0552 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 699:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2629              	 .loc 4 699 0
 2630 0556 00BF     	 nop
 2631              	.L65:
 700:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 701:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 702:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 2632              	 .loc 4 702 0
 2633 0558 1037     	 adds r7,r7,#16
 2634              	.LCFI140:
 2635              	 .cfi_def_cfa_offset 8
 2636 055a BD46     	 mov sp,r7
 2637              	.LCFI141:
 2638              	 .cfi_def_cfa_register 13
 2639              	 
 2640 055c 80BD     	 pop {r7,pc}
 2641              	 .cfi_endproc
 2642              	.LFE251:
 2644 055e 00BF     	 .section .text.PWM_SVM_Calc4av7segmentCompVal,"ax",%progbits
 2645              	 .align 2
 2646              	 .global PWM_SVM_Calc4av7segmentCompVal
 2647              	 .thumb
 2648              	 .thumb_func
 2650              	PWM_SVM_Calc4av7segmentCompVal:
 2651              	.LFB252:
 703:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
 704:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function calculates the CCU8 slice compare value for Asymmetric 7-segment of Pseudo zero ve
 705:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 706:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Calc4av7segmentCompVal(PWM_SVM_t* const HandlePtr)
 707:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 2652              	 .loc 4 707 0
 2653              	 .cfi_startproc
 2654              	 
 2655              	 
 2656 0000 80B5     	 push {r7,lr}
 2657              	.LCFI142:
 2658              	 .cfi_def_cfa_offset 8
 2659              	 .cfi_offset 7,-8
 2660              	 .cfi_offset 14,-4
 2661 0002 84B0     	 sub sp,sp,#16
 2662              	.LCFI143:
 2663              	 .cfi_def_cfa_offset 24
 2664 0004 00AF     	 add r7,sp,#0
 2665              	.LCFI144:
 2666              	 .cfi_def_cfa_register 7
 2667 0006 7860     	 str r0,[r7,#4]
 708:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cr1s;
 709:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cr2s;
 710:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = HandlePtr->ta + HandlePtr->tmin;
 2668              	 .loc 4 710 0
 2669 0008 7B68     	 ldr r3,[r7,#4]
 2670 000a B3F8AE20 	 ldrh r2,[r3,#174]
 2671 000e 7B68     	 ldr r3,[r7,#4]
 2672 0010 B3F8C230 	 ldrh r3,[r3,#194]
 2673 0014 1344     	 add r3,r3,r2
 2674 0016 9AB2     	 uxth r2,r3
 2675 0018 7B68     	 ldr r3,[r7,#4]
 2676 001a A3F8AE20 	 strh r2,[r3,#174]
 711:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = HandlePtr->tb + HandlePtr->tmin;
 2677              	 .loc 4 711 0
 2678 001e 7B68     	 ldr r3,[r7,#4]
 2679 0020 B3F8B020 	 ldrh r2,[r3,#176]
 2680 0024 7B68     	 ldr r3,[r7,#4]
 2681 0026 B3F8C230 	 ldrh r3,[r3,#194]
 2682 002a 1344     	 add r3,r3,r2
 2683 002c 9AB2     	 uxth r2,r3
 2684 002e 7B68     	 ldr r3,[r7,#4]
 2685 0030 A3F8B020 	 strh r2,[r3,#176]
 712:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 713:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculation of intermediate compare value parameters*/
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb2 = (uint16_t)(
 715:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2686              	 .loc 4 715 0
 2687 0034 7B68     	 ldr r3,[r7,#4]
 2688 0036 D3F89C30 	 ldr r3,[r3,#156]
 2689 003a 9AB2     	 uxth r2,r3
 2690 003c 7B68     	 ldr r3,[r7,#4]
 2691 003e B3F8AE10 	 ldrh r1,[r3,#174]
 716:../Dave/Generated/PWM_SVM/pwm_svm.c ****  (uint16_t) HandlePtr->tb + (2U * HandlePtr->tmin)));
 2692              	 .loc 4 716 0
 2693 0042 7B68     	 ldr r3,[r7,#4]
 2694 0044 B3F8B030 	 ldrh r3,[r3,#176]
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2695              	 .loc 4 714 0
 2696 0048 0B44     	 add r3,r3,r1
 2697 004a 99B2     	 uxth r1,r3
 2698              	 .loc 4 716 0
 2699 004c 7B68     	 ldr r3,[r7,#4]
 2700 004e B3F8C230 	 ldrh r3,[r3,#194]
 714:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (uint16_t) HandlePtr->period - ((uint16_t) HandlePtr->ta +\
 2701              	 .loc 4 714 0
 2702 0052 5B00     	 lsls r3,r3,#1
 2703 0054 9BB2     	 uxth r3,r3
 2704 0056 0B44     	 add r3,r3,r1
 2705 0058 9BB2     	 uxth r3,r3
 2706 005a D31A     	 subs r3,r2,r3
 2707 005c 9AB2     	 uxth r2,r3
 2708 005e 7B68     	 ldr r3,[r7,#4]
 2709 0060 A3F8BC20 	 strh r2,[r3,#188]
 717:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 718:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_tb = (uint16_t) HandlePtr->v_tb2 >> 2U;
 2710              	 .loc 4 718 0
 2711 0064 7B68     	 ldr r3,[r7,#4]
 2712 0066 B3F8BC30 	 ldrh r3,[r3,#188]
 2713 006a 9B08     	 lsrs r3,r3,#2
 2714 006c 9AB2     	 uxth r2,r3
 2715 006e 7B68     	 ldr r3,[r7,#4]
 2716 0070 A3F8B820 	 strh r2,[r3,#184]
 719:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta2 = (uint16_t)(HandlePtr->v_tb2 + (2U * HandlePtr->tmin));
 2717              	 .loc 4 719 0
 2718 0074 7B68     	 ldr r3,[r7,#4]
 2719 0076 B3F8BC20 	 ldrh r2,[r3,#188]
 2720 007a 7B68     	 ldr r3,[r7,#4]
 2721 007c B3F8C230 	 ldrh r3,[r3,#194]
 2722 0080 5B00     	 lsls r3,r3,#1
 2723 0082 9BB2     	 uxth r3,r3
 2724 0084 1344     	 add r3,r3,r2
 2725 0086 9AB2     	 uxth r2,r3
 2726 0088 7B68     	 ldr r3,[r7,#4]
 2727 008a A3F8BA20 	 strh r2,[r3,#186]
 720:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->v_ta = (uint16_t) HandlePtr->period - (uint16_t) HandlePtr->v_tb;
 2728              	 .loc 4 720 0
 2729 008e 7B68     	 ldr r3,[r7,#4]
 2730 0090 D3F89C30 	 ldr r3,[r3,#156]
 2731 0094 9AB2     	 uxth r2,r3
 2732 0096 7B68     	 ldr r3,[r7,#4]
 2733 0098 B3F8B830 	 ldrh r3,[r3,#184]
 2734 009c D31A     	 subs r3,r2,r3
 2735 009e 9AB2     	 uxth r2,r3
 2736 00a0 7B68     	 ldr r3,[r7,#4]
 2737 00a2 A3F8B620 	 strh r2,[r3,#182]
 721:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 722:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate and update compare value of current trigger slice for dc link current measurement*/
 723:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 2738              	 .loc 4 723 0
 2739 00a6 7B68     	 ldr r3,[r7,#4]
 2740 00a8 1B68     	 ldr r3,[r3]
 2741 00aa 1B7C     	 ldrb r3,[r3,#16]
 2742 00ac 012B     	 cmp r3,#1
 2743 00ae 2ED1     	 bne .L78
 724:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 725:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr1s = (uint32_t) HandlePtr->v_ta - ((uint32_t)(HandlePtr->ta) + ((uint32_t) HandlePtr->tb >> 1
 2744              	 .loc 4 725 0
 2745 00b0 7B68     	 ldr r3,[r7,#4]
 2746 00b2 B3F8B630 	 ldrh r3,[r3,#182]
 2747 00b6 1A46     	 mov r2,r3
 2748 00b8 7B68     	 ldr r3,[r7,#4]
 2749 00ba B3F8AE30 	 ldrh r3,[r3,#174]
 2750 00be 1946     	 mov r1,r3
 2751 00c0 7B68     	 ldr r3,[r7,#4]
 2752 00c2 B3F8B030 	 ldrh r3,[r3,#176]
 2753 00c6 5B08     	 lsrs r3,r3,#1
 2754 00c8 9BB2     	 uxth r3,r3
 2755 00ca 0B44     	 add r3,r3,r1
 2756 00cc D31A     	 subs r3,r2,r3
 2757 00ce FB60     	 str r3,[r7,#12]
 726:../Dave/Generated/PWM_SVM/pwm_svm.c ****     cr2s = (uint32_t) HandlePtr->v_ta - ((uint32_t) HandlePtr->ta >> 1U);
 2758              	 .loc 4 726 0
 2759 00d0 7B68     	 ldr r3,[r7,#4]
 2760 00d2 B3F8B630 	 ldrh r3,[r3,#182]
 2761 00d6 1A46     	 mov r2,r3
 2762 00d8 7B68     	 ldr r3,[r7,#4]
 2763 00da B3F8AE30 	 ldrh r3,[r3,#174]
 2764 00de 5B08     	 lsrs r3,r3,#1
 2765 00e0 9BB2     	 uxth r3,r3
 2766 00e2 D31A     	 subs r3,r2,r3
 2767 00e4 BB60     	 str r3,[r7,#8]
 727:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2768              	 .loc 4 727 0
 2769 00e6 7B68     	 ldr r3,[r7,#4]
 2770 00e8 5B69     	 ldr r3,[r3,#20]
 2771 00ea 1A68     	 ldr r2,[r3]
 2772 00ec FB68     	 ldr r3,[r7,#12]
 2773 00ee 9BB2     	 uxth r3,r3
 2774 00f0 1046     	 mov r0,r2
 2775 00f2 0021     	 movs r1,#0
 2776 00f4 1A46     	 mov r2,r3
 2777 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 728:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) cr1s);
 729:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[3]->slice_ptr,
 2778              	 .loc 4 729 0
 2779 00fa 7B68     	 ldr r3,[r7,#4]
 2780 00fc 5B69     	 ldr r3,[r3,#20]
 2781 00fe 1A68     	 ldr r2,[r3]
 2782 0100 BB68     	 ldr r3,[r7,#8]
 2783 0102 9BB2     	 uxth r3,r3
 2784 0104 1046     	 mov r0,r2
 2785 0106 0121     	 movs r1,#1
 2786 0108 1A46     	 mov r2,r3
 2787 010a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 2788              	.L78:
 730:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) cr2s);
 731:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 732:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Update the compare registers based on sector number*/
 733:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (HandlePtr->sector & 7U)
 2789              	 .loc 4 733 0
 2790 010e 7B68     	 ldr r3,[r7,#4]
 2791 0110 D3F8A430 	 ldr r3,[r3,#164]
 2792 0114 03F00703 	 and r3,r3,#7
 2793 0118 042B     	 cmp r3,#4
 2794 011a 00F2CA81 	 bhi .L79
 2795 011e 01A2     	 adr r2,.L81
 2796 0120 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2797              	 .p2align 2
 2798              	.L81:
 2799 0124 39010000 	 .word .L80+1
 2800 0128 EB010000 	 .word .L82+1
 2801 012c 9D020000 	 .word .L83+1
 2802 0130 4F030000 	 .word .L84+1
 2803 0134 01040000 	 .word .L85+1
 2804              	 .p2align 1
 2805              	.L80:
 734:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 735:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 0:/*sector 0*/
 736:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2806              	 .loc 4 736 0
 2807 0138 7B68     	 ldr r3,[r7,#4]
 2808 013a 9B68     	 ldr r3,[r3,#8]
 2809 013c 1968     	 ldr r1,[r3]
 737:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 738:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 2810              	 .loc 4 738 0
 2811 013e 7B68     	 ldr r3,[r7,#4]
 2812 0140 B3F8B820 	 ldrh r2,[r3,#184]
 2813 0144 7B68     	 ldr r3,[r7,#4]
 2814 0146 B3F8C230 	 ldrh r3,[r3,#194]
 2815 014a 5B00     	 lsls r3,r3,#1
 2816 014c 9BB2     	 uxth r3,r3
 736:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2817              	 .loc 4 736 0
 2818 014e 1344     	 add r3,r3,r2
 2819 0150 9BB2     	 uxth r3,r3
 2820 0152 0846     	 mov r0,r1
 2821 0154 0021     	 movs r1,#0
 2822 0156 1A46     	 mov r2,r3
 2823 0158 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 739:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2824              	 .loc 4 739 0
 2825 015c 7B68     	 ldr r3,[r7,#4]
 2826 015e 9B68     	 ldr r3,[r3,#8]
 2827 0160 1A68     	 ldr r2,[r3]
 2828 0162 7B68     	 ldr r3,[r7,#4]
 2829 0164 B3F8B630 	 ldrh r3,[r3,#182]
 2830 0168 1046     	 mov r0,r2
 2831 016a 0121     	 movs r1,#1
 2832 016c 1A46     	 mov r2,r3
 2833 016e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 740:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 741:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 742:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2834              	 .loc 4 742 0
 2835 0172 7B68     	 ldr r3,[r7,#4]
 2836 0174 DB68     	 ldr r3,[r3,#12]
 2837 0176 1968     	 ldr r1,[r3]
 743:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 744:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2838              	 .loc 4 744 0
 2839 0178 7B68     	 ldr r3,[r7,#4]
 2840 017a B3F8B820 	 ldrh r2,[r3,#184]
 2841 017e 7B68     	 ldr r3,[r7,#4]
 2842 0180 B3F8C230 	 ldrh r3,[r3,#194]
 742:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2843              	 .loc 4 742 0
 2844 0184 1344     	 add r3,r3,r2
 2845 0186 9BB2     	 uxth r3,r3
 2846 0188 0846     	 mov r0,r1
 2847 018a 0021     	 movs r1,#0
 2848 018c 1A46     	 mov r2,r3
 2849 018e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 745:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2850              	 .loc 4 745 0
 2851 0192 7B68     	 ldr r3,[r7,#4]
 2852 0194 DB68     	 ldr r3,[r3,#12]
 2853 0196 1968     	 ldr r1,[r3]
 746:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 747:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2854              	 .loc 4 747 0
 2855 0198 7B68     	 ldr r3,[r7,#4]
 2856 019a B3F8B620 	 ldrh r2,[r3,#182]
 2857 019e 7B68     	 ldr r3,[r7,#4]
 2858 01a0 B3F8AE30 	 ldrh r3,[r3,#174]
 745:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2859              	 .loc 4 745 0
 2860 01a4 D31A     	 subs r3,r2,r3
 2861 01a6 9BB2     	 uxth r3,r3
 2862 01a8 0846     	 mov r0,r1
 2863 01aa 0121     	 movs r1,#1
 2864 01ac 1A46     	 mov r2,r3
 2865 01ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 748:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 749:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2866              	 .loc 4 749 0
 2867 01b2 7B68     	 ldr r3,[r7,#4]
 2868 01b4 1B69     	 ldr r3,[r3,#16]
 2869 01b6 1A68     	 ldr r2,[r3]
 2870 01b8 7B68     	 ldr r3,[r7,#4]
 2871 01ba B3F8B830 	 ldrh r3,[r3,#184]
 2872 01be 1046     	 mov r0,r2
 2873 01c0 0021     	 movs r1,#0
 2874 01c2 1A46     	 mov r2,r3
 2875 01c4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 750:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 751:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2876              	 .loc 4 751 0
 2877 01c8 7B68     	 ldr r3,[r7,#4]
 2878 01ca 1B69     	 ldr r3,[r3,#16]
 2879 01cc 1968     	 ldr r1,[r3]
 752:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 753:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 2880              	 .loc 4 753 0
 2881 01ce 7B68     	 ldr r3,[r7,#4]
 2882 01d0 B3F8BA20 	 ldrh r2,[r3,#186]
 2883 01d4 7B68     	 ldr r3,[r7,#4]
 2884 01d6 B3F8B830 	 ldrh r3,[r3,#184]
 751:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2885              	 .loc 4 751 0
 2886 01da D31A     	 subs r3,r2,r3
 2887 01dc 9BB2     	 uxth r3,r3
 2888 01de 0846     	 mov r0,r1
 2889 01e0 0121     	 movs r1,#1
 2890 01e2 1A46     	 mov r2,r3
 2891 01e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 754:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2892              	 .loc 4 754 0
 2893 01e8 BCE1     	 b .L77
 2894              	.L82:
 755:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 1:/*sector 1*/
 756:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2895              	 .loc 4 756 0
 2896 01ea 7B68     	 ldr r3,[r7,#4]
 2897 01ec 9B68     	 ldr r3,[r3,#8]
 2898 01ee 1968     	 ldr r1,[r3]
 757:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 758:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 2899              	 .loc 4 758 0
 2900 01f0 7B68     	 ldr r3,[r7,#4]
 2901 01f2 B3F8B820 	 ldrh r2,[r3,#184]
 2902 01f6 7B68     	 ldr r3,[r7,#4]
 2903 01f8 B3F8C230 	 ldrh r3,[r3,#194]
 756:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2904              	 .loc 4 756 0
 2905 01fc 1344     	 add r3,r3,r2
 2906 01fe 9BB2     	 uxth r3,r3
 2907 0200 0846     	 mov r0,r1
 2908 0202 0021     	 movs r1,#0
 2909 0204 1A46     	 mov r2,r3
 2910 0206 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 759:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2911              	 .loc 4 759 0
 2912 020a 7B68     	 ldr r3,[r7,#4]
 2913 020c 9B68     	 ldr r3,[r3,#8]
 2914 020e 1968     	 ldr r1,[r3]
 760:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 761:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 2915              	 .loc 4 761 0
 2916 0210 7B68     	 ldr r3,[r7,#4]
 2917 0212 B3F8B620 	 ldrh r2,[r3,#182]
 2918 0216 7B68     	 ldr r3,[r7,#4]
 2919 0218 B3F8AE30 	 ldrh r3,[r3,#174]
 759:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2920              	 .loc 4 759 0
 2921 021c D31A     	 subs r3,r2,r3
 2922 021e 9BB2     	 uxth r3,r3
 2923 0220 0846     	 mov r0,r1
 2924 0222 0121     	 movs r1,#1
 2925 0224 1A46     	 mov r2,r3
 2926 0226 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 762:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 763:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2927              	 .loc 4 763 0
 2928 022a 7B68     	 ldr r3,[r7,#4]
 2929 022c DB68     	 ldr r3,[r3,#12]
 2930 022e 1968     	 ldr r1,[r3]
 764:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 765:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 2931              	 .loc 4 765 0
 2932 0230 7B68     	 ldr r3,[r7,#4]
 2933 0232 B3F8B820 	 ldrh r2,[r3,#184]
 2934 0236 7B68     	 ldr r3,[r7,#4]
 2935 0238 B3F8C230 	 ldrh r3,[r3,#194]
 2936 023c 5B00     	 lsls r3,r3,#1
 2937 023e 9BB2     	 uxth r3,r3
 763:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 2938              	 .loc 4 763 0
 2939 0240 1344     	 add r3,r3,r2
 2940 0242 9BB2     	 uxth r3,r3
 2941 0244 0846     	 mov r0,r1
 2942 0246 0021     	 movs r1,#0
 2943 0248 1A46     	 mov r2,r3
 2944 024a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 766:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 2945              	 .loc 4 766 0
 2946 024e 7B68     	 ldr r3,[r7,#4]
 2947 0250 DB68     	 ldr r3,[r3,#12]
 2948 0252 1A68     	 ldr r2,[r3]
 2949 0254 7B68     	 ldr r3,[r7,#4]
 2950 0256 B3F8B630 	 ldrh r3,[r3,#182]
 2951 025a 1046     	 mov r0,r2
 2952 025c 0121     	 movs r1,#1
 2953 025e 1A46     	 mov r2,r3
 2954 0260 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 767:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 768:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 769:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2955              	 .loc 4 769 0
 2956 0264 7B68     	 ldr r3,[r7,#4]
 2957 0266 1B69     	 ldr r3,[r3,#16]
 2958 0268 1A68     	 ldr r2,[r3]
 2959 026a 7B68     	 ldr r3,[r7,#4]
 2960 026c B3F8B830 	 ldrh r3,[r3,#184]
 2961 0270 1046     	 mov r0,r2
 2962 0272 0021     	 movs r1,#0
 2963 0274 1A46     	 mov r2,r3
 2964 0276 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 770:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 771:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 2965              	 .loc 4 771 0
 2966 027a 7B68     	 ldr r3,[r7,#4]
 2967 027c 1B69     	 ldr r3,[r3,#16]
 2968 027e 1968     	 ldr r1,[r3]
 772:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 773:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 2969              	 .loc 4 773 0
 2970 0280 7B68     	 ldr r3,[r7,#4]
 2971 0282 B3F8BA20 	 ldrh r2,[r3,#186]
 2972 0286 7B68     	 ldr r3,[r7,#4]
 2973 0288 B3F8B830 	 ldrh r3,[r3,#184]
 771:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 2974              	 .loc 4 771 0
 2975 028c D31A     	 subs r3,r2,r3
 2976 028e 9BB2     	 uxth r3,r3
 2977 0290 0846     	 mov r0,r1
 2978 0292 0121     	 movs r1,#1
 2979 0294 1A46     	 mov r2,r3
 2980 0296 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 774:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 2981              	 .loc 4 774 0
 2982 029a 63E1     	 b .L77
 2983              	.L83:
 775:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 2:/*sector 2*/
 776:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2984              	 .loc 4 776 0
 2985 029c 7B68     	 ldr r3,[r7,#4]
 2986 029e 9B68     	 ldr r3,[r3,#8]
 2987 02a0 1A68     	 ldr r2,[r3]
 2988 02a2 7B68     	 ldr r3,[r7,#4]
 2989 02a4 B3F8B830 	 ldrh r3,[r3,#184]
 2990 02a8 1046     	 mov r0,r2
 2991 02aa 0021     	 movs r1,#0
 2992 02ac 1A46     	 mov r2,r3
 2993 02ae FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 777:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 778:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 2994              	 .loc 4 778 0
 2995 02b2 7B68     	 ldr r3,[r7,#4]
 2996 02b4 9B68     	 ldr r3,[r3,#8]
 2997 02b6 1968     	 ldr r1,[r3]
 779:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 780:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 2998              	 .loc 4 780 0
 2999 02b8 7B68     	 ldr r3,[r7,#4]
 3000 02ba B3F8BA20 	 ldrh r2,[r3,#186]
 3001 02be 7B68     	 ldr r3,[r7,#4]
 3002 02c0 B3F8B830 	 ldrh r3,[r3,#184]
 778:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3003              	 .loc 4 778 0
 3004 02c4 D31A     	 subs r3,r2,r3
 3005 02c6 9BB2     	 uxth r3,r3
 3006 02c8 0846     	 mov r0,r1
 3007 02ca 0121     	 movs r1,#1
 3008 02cc 1A46     	 mov r2,r3
 3009 02ce FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 781:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 782:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3010              	 .loc 4 782 0
 3011 02d2 7B68     	 ldr r3,[r7,#4]
 3012 02d4 DB68     	 ldr r3,[r3,#12]
 3013 02d6 1968     	 ldr r1,[r3]
 783:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 784:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3014              	 .loc 4 784 0
 3015 02d8 7B68     	 ldr r3,[r7,#4]
 3016 02da B3F8B820 	 ldrh r2,[r3,#184]
 3017 02de 7B68     	 ldr r3,[r7,#4]
 3018 02e0 B3F8C230 	 ldrh r3,[r3,#194]
 3019 02e4 5B00     	 lsls r3,r3,#1
 3020 02e6 9BB2     	 uxth r3,r3
 782:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3021              	 .loc 4 782 0
 3022 02e8 1344     	 add r3,r3,r2
 3023 02ea 9BB2     	 uxth r3,r3
 3024 02ec 0846     	 mov r0,r1
 3025 02ee 0021     	 movs r1,#0
 3026 02f0 1A46     	 mov r2,r3
 3027 02f2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 785:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3028              	 .loc 4 785 0
 3029 02f6 7B68     	 ldr r3,[r7,#4]
 3030 02f8 DB68     	 ldr r3,[r3,#12]
 3031 02fa 1A68     	 ldr r2,[r3]
 3032 02fc 7B68     	 ldr r3,[r7,#4]
 3033 02fe B3F8B630 	 ldrh r3,[r3,#182]
 3034 0302 1046     	 mov r0,r2
 3035 0304 0121     	 movs r1,#1
 3036 0306 1A46     	 mov r2,r3
 3037 0308 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 786:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 787:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 788:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3038              	 .loc 4 788 0
 3039 030c 7B68     	 ldr r3,[r7,#4]
 3040 030e 1B69     	 ldr r3,[r3,#16]
 3041 0310 1968     	 ldr r1,[r3]
 789:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 790:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 3042              	 .loc 4 790 0
 3043 0312 7B68     	 ldr r3,[r7,#4]
 3044 0314 B3F8B820 	 ldrh r2,[r3,#184]
 3045 0318 7B68     	 ldr r3,[r7,#4]
 3046 031a B3F8C230 	 ldrh r3,[r3,#194]
 788:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3047              	 .loc 4 788 0
 3048 031e 1344     	 add r3,r3,r2
 3049 0320 9BB2     	 uxth r3,r3
 3050 0322 0846     	 mov r0,r1
 3051 0324 0021     	 movs r1,#0
 3052 0326 1A46     	 mov r2,r3
 3053 0328 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 791:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3054              	 .loc 4 791 0
 3055 032c 7B68     	 ldr r3,[r7,#4]
 3056 032e 1B69     	 ldr r3,[r3,#16]
 3057 0330 1968     	 ldr r1,[r3]
 792:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 793:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - HandlePtr->ta);
 3058              	 .loc 4 793 0
 3059 0332 7B68     	 ldr r3,[r7,#4]
 3060 0334 B3F8B620 	 ldrh r2,[r3,#182]
 3061 0338 7B68     	 ldr r3,[r7,#4]
 3062 033a B3F8AE30 	 ldrh r3,[r3,#174]
 791:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3063              	 .loc 4 791 0
 3064 033e D31A     	 subs r3,r2,r3
 3065 0340 9BB2     	 uxth r3,r3
 3066 0342 0846     	 mov r0,r1
 3067 0344 0121     	 movs r1,#1
 3068 0346 1A46     	 mov r2,r3
 3069 0348 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 794:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3070              	 .loc 4 794 0
 3071 034c 0AE1     	 b .L77
 3072              	.L84:
 795:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 3:/*sector 3*/
 796:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3073              	 .loc 4 796 0
 3074 034e 7B68     	 ldr r3,[r7,#4]
 3075 0350 9B68     	 ldr r3,[r3,#8]
 3076 0352 1A68     	 ldr r2,[r3]
 3077 0354 7B68     	 ldr r3,[r7,#4]
 3078 0356 B3F8B830 	 ldrh r3,[r3,#184]
 3079 035a 1046     	 mov r0,r2
 3080 035c 0021     	 movs r1,#0
 3081 035e 1A46     	 mov r2,r3
 3082 0360 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 797:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 798:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3083              	 .loc 4 798 0
 3084 0364 7B68     	 ldr r3,[r7,#4]
 3085 0366 9B68     	 ldr r3,[r3,#8]
 3086 0368 1968     	 ldr r1,[r3]
 799:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 800:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - HandlePtr->v_tb);
 3087              	 .loc 4 800 0
 3088 036a 7B68     	 ldr r3,[r7,#4]
 3089 036c B3F8BA20 	 ldrh r2,[r3,#186]
 3090 0370 7B68     	 ldr r3,[r7,#4]
 3091 0372 B3F8B830 	 ldrh r3,[r3,#184]
 798:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3092              	 .loc 4 798 0
 3093 0376 D31A     	 subs r3,r2,r3
 3094 0378 9BB2     	 uxth r3,r3
 3095 037a 0846     	 mov r0,r1
 3096 037c 0121     	 movs r1,#1
 3097 037e 1A46     	 mov r2,r3
 3098 0380 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 801:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 802:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3099              	 .loc 4 802 0
 3100 0384 7B68     	 ldr r3,[r7,#4]
 3101 0386 DB68     	 ldr r3,[r3,#12]
 3102 0388 1968     	 ldr r1,[r3]
 803:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 804:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + HandlePtr->tmin);
 3103              	 .loc 4 804 0
 3104 038a 7B68     	 ldr r3,[r7,#4]
 3105 038c B3F8B820 	 ldrh r2,[r3,#184]
 3106 0390 7B68     	 ldr r3,[r7,#4]
 3107 0392 B3F8C230 	 ldrh r3,[r3,#194]
 802:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3108              	 .loc 4 802 0
 3109 0396 1344     	 add r3,r3,r2
 3110 0398 9BB2     	 uxth r3,r3
 3111 039a 0846     	 mov r0,r1
 3112 039c 0021     	 movs r1,#0
 3113 039e 1A46     	 mov r2,r3
 3114 03a0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 805:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3115              	 .loc 4 805 0
 3116 03a4 7B68     	 ldr r3,[r7,#4]
 3117 03a6 DB68     	 ldr r3,[r3,#12]
 3118 03a8 1968     	 ldr r1,[r3]
 806:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 807:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3119              	 .loc 4 807 0
 3120 03aa 7B68     	 ldr r3,[r7,#4]
 3121 03ac B3F8B620 	 ldrh r2,[r3,#182]
 3122 03b0 7B68     	 ldr r3,[r7,#4]
 3123 03b2 B3F8AE30 	 ldrh r3,[r3,#174]
 805:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3124              	 .loc 4 805 0
 3125 03b6 D31A     	 subs r3,r2,r3
 3126 03b8 9BB2     	 uxth r3,r3
 3127 03ba 0846     	 mov r0,r1
 3128 03bc 0121     	 movs r1,#1
 3129 03be 1A46     	 mov r2,r3
 3130 03c0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 808:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 809:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3131              	 .loc 4 809 0
 3132 03c4 7B68     	 ldr r3,[r7,#4]
 3133 03c6 1B69     	 ldr r3,[r3,#16]
 3134 03c8 1968     	 ldr r1,[r3]
 810:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 811:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3135              	 .loc 4 811 0
 3136 03ca 7B68     	 ldr r3,[r7,#4]
 3137 03cc B3F8B820 	 ldrh r2,[r3,#184]
 3138 03d0 7B68     	 ldr r3,[r7,#4]
 3139 03d2 B3F8C230 	 ldrh r3,[r3,#194]
 3140 03d6 5B00     	 lsls r3,r3,#1
 3141 03d8 9BB2     	 uxth r3,r3
 809:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3142              	 .loc 4 809 0
 3143 03da 1344     	 add r3,r3,r2
 3144 03dc 9BB2     	 uxth r3,r3
 3145 03de 0846     	 mov r0,r1
 3146 03e0 0021     	 movs r1,#0
 3147 03e2 1A46     	 mov r2,r3
 3148 03e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 812:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3149              	 .loc 4 812 0
 3150 03e8 7B68     	 ldr r3,[r7,#4]
 3151 03ea 1B69     	 ldr r3,[r3,#16]
 3152 03ec 1A68     	 ldr r2,[r3]
 3153 03ee 7B68     	 ldr r3,[r7,#4]
 3154 03f0 B3F8B630 	 ldrh r3,[r3,#182]
 3155 03f4 1046     	 mov r0,r2
 3156 03f6 0121     	 movs r1,#1
 3157 03f8 1A46     	 mov r2,r3
 3158 03fa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 813:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 814:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3159              	 .loc 4 814 0
 3160 03fe B1E0     	 b .L77
 3161              	.L85:
 815:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case 4:/*sector 4*/
 816:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3162              	 .loc 4 816 0
 3163 0400 7B68     	 ldr r3,[r7,#4]
 3164 0402 9B68     	 ldr r3,[r3,#8]
 3165 0404 1968     	 ldr r1,[r3]
 817:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 818:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tmin);
 3166              	 .loc 4 818 0
 3167 0406 7B68     	 ldr r3,[r7,#4]
 3168 0408 B3F8B820 	 ldrh r2,[r3,#184]
 3169 040c 7B68     	 ldr r3,[r7,#4]
 3170 040e B3F8C230 	 ldrh r3,[r3,#194]
 816:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3171              	 .loc 4 816 0
 3172 0412 1344     	 add r3,r3,r2
 3173 0414 9BB2     	 uxth r3,r3
 3174 0416 0846     	 mov r0,r1
 3175 0418 0021     	 movs r1,#0
 3176 041a 1A46     	 mov r2,r3
 3177 041c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 819:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3178              	 .loc 4 819 0
 3179 0420 7B68     	 ldr r3,[r7,#4]
 3180 0422 9B68     	 ldr r3,[r3,#8]
 3181 0424 1968     	 ldr r1,[r3]
 820:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 821:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3182              	 .loc 4 821 0
 3183 0426 7B68     	 ldr r3,[r7,#4]
 3184 0428 B3F8B620 	 ldrh r2,[r3,#182]
 3185 042c 7B68     	 ldr r3,[r7,#4]
 3186 042e B3F8AE30 	 ldrh r3,[r3,#174]
 819:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3187              	 .loc 4 819 0
 3188 0432 D31A     	 subs r3,r2,r3
 3189 0434 9BB2     	 uxth r3,r3
 3190 0436 0846     	 mov r0,r1
 3191 0438 0121     	 movs r1,#1
 3192 043a 1A46     	 mov r2,r3
 3193 043c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 822:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 823:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3194              	 .loc 4 823 0
 3195 0440 7B68     	 ldr r3,[r7,#4]
 3196 0442 DB68     	 ldr r3,[r3,#12]
 3197 0444 1A68     	 ldr r2,[r3]
 3198 0446 7B68     	 ldr r3,[r7,#4]
 3199 0448 B3F8B830 	 ldrh r3,[r3,#184]
 3200 044c 1046     	 mov r0,r2
 3201 044e 0021     	 movs r1,#0
 3202 0450 1A46     	 mov r2,r3
 3203 0452 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 824:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 825:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3204              	 .loc 4 825 0
 3205 0456 7B68     	 ldr r3,[r7,#4]
 3206 0458 DB68     	 ldr r3,[r3,#12]
 3207 045a 1968     	 ldr r1,[r3]
 826:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 827:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - (uint16_t) HandlePtr->v_tb);
 3208              	 .loc 4 827 0
 3209 045c 7B68     	 ldr r3,[r7,#4]
 3210 045e B3F8BA20 	 ldrh r2,[r3,#186]
 3211 0462 7B68     	 ldr r3,[r7,#4]
 3212 0464 B3F8B830 	 ldrh r3,[r3,#184]
 825:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3213              	 .loc 4 825 0
 3214 0468 D31A     	 subs r3,r2,r3
 3215 046a 9BB2     	 uxth r3,r3
 3216 046c 0846     	 mov r0,r1
 3217 046e 0121     	 movs r1,#1
 3218 0470 1A46     	 mov r2,r3
 3219 0472 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 828:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 829:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3220              	 .loc 4 829 0
 3221 0476 7B68     	 ldr r3,[r7,#4]
 3222 0478 1B69     	 ldr r3,[r3,#16]
 3223 047a 1968     	 ldr r1,[r3]
 830:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 831:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3224              	 .loc 4 831 0
 3225 047c 7B68     	 ldr r3,[r7,#4]
 3226 047e B3F8B820 	 ldrh r2,[r3,#184]
 3227 0482 7B68     	 ldr r3,[r7,#4]
 3228 0484 B3F8C230 	 ldrh r3,[r3,#194]
 3229 0488 5B00     	 lsls r3,r3,#1
 3230 048a 9BB2     	 uxth r3,r3
 829:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3231              	 .loc 4 829 0
 3232 048c 1344     	 add r3,r3,r2
 3233 048e 9BB2     	 uxth r3,r3
 3234 0490 0846     	 mov r0,r1
 3235 0492 0021     	 movs r1,#0
 3236 0494 1A46     	 mov r2,r3
 3237 0496 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 832:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3238              	 .loc 4 832 0
 3239 049a 7B68     	 ldr r3,[r7,#4]
 3240 049c 1B69     	 ldr r3,[r3,#16]
 3241 049e 1A68     	 ldr r2,[r3]
 3242 04a0 7B68     	 ldr r3,[r7,#4]
 3243 04a2 B3F8B630 	 ldrh r3,[r3,#182]
 3244 04a6 1046     	 mov r0,r2
 3245 04a8 0121     	 movs r1,#1
 3246 04aa 1A46     	 mov r2,r3
 3247 04ac FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 833:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 834:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3248              	 .loc 4 834 0
 3249 04b0 58E0     	 b .L77
 3250              	.L79:
 835:../Dave/Generated/PWM_SVM/pwm_svm.c ****     default:/*sector 5*/
 836:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3251              	 .loc 4 836 0
 3252 04b2 7B68     	 ldr r3,[r7,#4]
 3253 04b4 9B68     	 ldr r3,[r3,#8]
 3254 04b6 1968     	 ldr r1,[r3]
 837:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 838:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t)((uint16_t) 2 * HandlePtr->tmin));
 3255              	 .loc 4 838 0
 3256 04b8 7B68     	 ldr r3,[r7,#4]
 3257 04ba B3F8B820 	 ldrh r2,[r3,#184]
 3258 04be 7B68     	 ldr r3,[r7,#4]
 3259 04c0 B3F8C230 	 ldrh r3,[r3,#194]
 3260 04c4 5B00     	 lsls r3,r3,#1
 3261 04c6 9BB2     	 uxth r3,r3
 836:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3262              	 .loc 4 836 0
 3263 04c8 1344     	 add r3,r3,r2
 3264 04ca 9BB2     	 uxth r3,r3
 3265 04cc 0846     	 mov r0,r1
 3266 04ce 0021     	 movs r1,#0
 3267 04d0 1A46     	 mov r2,r3
 3268 04d2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 839:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[0]->slice_ptr,
 3269              	 .loc 4 839 0
 3270 04d6 7B68     	 ldr r3,[r7,#4]
 3271 04d8 9B68     	 ldr r3,[r3,#8]
 3272 04da 1A68     	 ldr r2,[r3]
 3273 04dc 7B68     	 ldr r3,[r7,#4]
 3274 04de B3F8B630 	 ldrh r3,[r3,#182]
 3275 04e2 1046     	 mov r0,r2
 3276 04e4 0121     	 movs r1,#1
 3277 04e6 1A46     	 mov r2,r3
 3278 04e8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 840:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, (uint16_t) HandlePtr
 841:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 842:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3279              	 .loc 4 842 0
 3280 04ec 7B68     	 ldr r3,[r7,#4]
 3281 04ee DB68     	 ldr r3,[r3,#12]
 3282 04f0 1A68     	 ldr r2,[r3]
 3283 04f2 7B68     	 ldr r3,[r7,#4]
 3284 04f4 B3F8B830 	 ldrh r3,[r3,#184]
 3285 04f8 1046     	 mov r0,r2
 3286 04fa 0021     	 movs r1,#0
 3287 04fc 1A46     	 mov r2,r3
 3288 04fe FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 843:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint16_t) HandlePtr
 844:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[1]->slice_ptr,
 3289              	 .loc 4 844 0
 3290 0502 7B68     	 ldr r3,[r7,#4]
 3291 0504 DB68     	 ldr r3,[r3,#12]
 3292 0506 1968     	 ldr r1,[r3]
 845:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 846:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta2 - (uint16_t) HandlePtr->v_tb);
 3293              	 .loc 4 846 0
 3294 0508 7B68     	 ldr r3,[r7,#4]
 3295 050a B3F8BA20 	 ldrh r2,[r3,#186]
 3296 050e 7B68     	 ldr r3,[r7,#4]
 3297 0510 B3F8B830 	 ldrh r3,[r3,#184]
 844:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 3298              	 .loc 4 844 0
 3299 0514 D31A     	 subs r3,r2,r3
 3300 0516 9BB2     	 uxth r3,r3
 3301 0518 0846     	 mov r0,r1
 3302 051a 0121     	 movs r1,#1
 3303 051c 1A46     	 mov r2,r3
 3304 051e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 847:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 848:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3305              	 .loc 4 848 0
 3306 0522 7B68     	 ldr r3,[r7,#4]
 3307 0524 1B69     	 ldr r3,[r3,#16]
 3308 0526 1968     	 ldr r1,[r3]
 849:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 850:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_tb + (uint16_t) HandlePtr->tmin);
 3309              	 .loc 4 850 0
 3310 0528 7B68     	 ldr r3,[r7,#4]
 3311 052a B3F8B820 	 ldrh r2,[r3,#184]
 3312 052e 7B68     	 ldr r3,[r7,#4]
 3313 0530 B3F8C230 	 ldrh r3,[r3,#194]
 848:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1,
 3314              	 .loc 4 848 0
 3315 0534 1344     	 add r3,r3,r2
 3316 0536 9BB2     	 uxth r3,r3
 3317 0538 0846     	 mov r0,r1
 3318 053a 0021     	 movs r1,#0
 3319 053c 1A46     	 mov r2,r3
 3320 053e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 851:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3321              	 .loc 4 851 0
 3322 0542 7B68     	 ldr r3,[r7,#4]
 3323 0544 1B69     	 ldr r3,[r3,#16]
 3324 0546 1968     	 ldr r1,[r3]
 852:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2,
 853:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint16_t) HandlePtr->v_ta - (uint16_t) HandlePtr->ta);
 3325              	 .loc 4 853 0
 3326 0548 7B68     	 ldr r3,[r7,#4]
 3327 054a B3F8B620 	 ldrh r2,[r3,#182]
 3328 054e 7B68     	 ldr r3,[r7,#4]
 3329 0550 B3F8AE30 	 ldrh r3,[r3,#174]
 851:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[2]->slice_ptr,
 3330              	 .loc 4 851 0
 3331 0554 D31A     	 subs r3,r2,r3
 3332 0556 9BB2     	 uxth r3,r3
 3333 0558 0846     	 mov r0,r1
 3334 055a 0121     	 movs r1,#1
 3335 055c 1A46     	 mov r2,r3
 3336 055e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 854:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 3337              	 .loc 4 854 0
 3338 0562 00BF     	 nop
 3339              	.L77:
 855:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 856:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3340              	 .loc 4 856 0
 3341 0564 1037     	 adds r7,r7,#16
 3342              	.LCFI145:
 3343              	 .cfi_def_cfa_offset 8
 3344 0566 BD46     	 mov sp,r7
 3345              	.LCFI146:
 3346              	 .cfi_def_cfa_register 13
 3347              	 
 3348 0568 80BD     	 pop {r7,pc}
 3349              	 .cfi_endproc
 3350              	.LFE252:
 3352 056a 00BF     	 .section .ram_code
 3353              	 .align 2
 3354              	 .global PWM_SVM_TimecalcUsingLUT
 3355              	 .thumb
 3356              	 .thumb_func
 3358              	PWM_SVM_TimecalcUsingLUT:
 3359              	.LFB253:
 857:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 858:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if defined (MATH)
 859:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 860:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM Segment Time calculation using CORDIC
 861:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 862:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_TimecalcUsingCORDIC(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
 863:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 864:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cosx_amp;
 865:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sinx_amp;
 866:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t cosx;
 867:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sinx;
 868:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tacord_tmp;
 869:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tbcord_tmp;
 870:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Angle_tmp;
 871:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t sine_inv;
 872:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t ta_tb,ta;
 873:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Dividend_Sine, Divisor_Sine;
 874:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 875:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_lTimecalcUsingCORDIC:NULL Handle Pointer",
 876:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (HandlePtr != (PWM_SVM_t *)NULL));
 877:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 878:../Dave/Generated/PWM_SVM/pwm_svm.c ****   Angle_tmp =Angle & (uint32_t)0xFFFFFF;
 879:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 880:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector = ((uint32_t)((Angle_tmp * 6U) >> 24U) & 7U);
 881:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate sector angle*/
 882:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector_angle = (uint32_t)((Angle_tmp) - (uint32_t)(HandlePtr->sector * PWM_SVM_SIXTYDE
 883:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 884:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Clearing previous values of CORDX,CORDY and CORDZ Registers*/
 885:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->STATC = 0U;
 886:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 887:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Set CORDIC to Circular Operating Mode and Rotation Mode,
 888:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * Auto start of calculation after write access to X parameter data register,
 889:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * X result data format to Unsigned, when read,
 890:../Dave/Generated/PWM_SVM/pwm_svm.c ****    * After the last iteration of calculation the X & Y values are divided by 1
 891:../Dave/Generated/PWM_SVM/pwm_svm.c ****    */
 892:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CON = (uint32_t)0x2A;
 893:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 894:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Input sector angle*/
 895:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDZ = (uint32_t)(HandlePtr->sector_angle << ((uint32_t)MATH_CORDZ_DATA_Pos));
 896:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 897:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Set the Y value to zero*/
 898:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDY =  (uint32_t)(0U << MATH_CORDY_DATA_Pos);
 899:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 900:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Load the amplitude value */
 901:../Dave/Generated/PWM_SVM/pwm_svm.c ****   MATH->CORDX =  (uint32_t)(1024 << MATH_CORDX_DATA_Pos);
 902:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 903:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Checking busy status of CORDIC calculation*/
 904:../Dave/Generated/PWM_SVM/pwm_svm.c ****   while (MATH->STATC & 0x1U)
 905:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 906:../Dave/Generated/PWM_SVM/pwm_svm.c ****   };
 907:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 908:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Reading cordic X result which is costheta X amplitude*/
 909:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx_amp = (MATH->CORRX >> MATH_CORDX_DATA_Pos);
 910:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx     = (cosx_amp * PWM_SVM_KCOSSCALE)>>10;
 911:../Dave/Generated/PWM_SVM/pwm_svm.c ****   cosx_amp = cosx * Amplitude;
 912:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Reading cordic Y result which is sintheta X amplitude*/
 913:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx_amp = (MATH->CORRY >> MATH_CORDY_DATA_Pos);
 914:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx     = (sinx_amp * PWM_SVM_KSINSCALE)>>10;
 915:../Dave/Generated/PWM_SVM/pwm_svm.c ****   sinx_amp = sinx * Amplitude;
 916:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 917:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint16_t)Amplitude > (HandlePtr->max_amplitude))
 918:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 919:../Dave/Generated/PWM_SVM/pwm_svm.c ****     Amplitude = HandlePtr->max_amplitude;
 920:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 921:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 922:../Dave/Generated/PWM_SVM/pwm_svm.c ****    /* Multiply Result value with sinscale to eliminate gain factor K*/
 923:../Dave/Generated/PWM_SVM/pwm_svm.c ****    tacord_tmp = (uint32_t)(sinx_amp>>14U);
 924:../Dave/Generated/PWM_SVM/pwm_svm.c ****    HandlePtr->ta = (uint16_t)((tacord_tmp * (uint32_t)HandlePtr->confighandle_ptr->amplitude_scale)
 925:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 926:../Dave/Generated/PWM_SVM/pwm_svm.c ****    /* Multiply Result value with cosscale to eliminate gain factor K*
 927:../Dave/Generated/PWM_SVM/pwm_svm.c ****     * sin(60-Angle) = (Sqrt(3)*cos(angle) - sin(angle))/2
 928:../Dave/Generated/PWM_SVM/pwm_svm.c ****     */
 929:../Dave/Generated/PWM_SVM/pwm_svm.c ****    tbcord_tmp = (uint32_t)((cosx_amp - sinx_amp))>>15U;
 930:../Dave/Generated/PWM_SVM/pwm_svm.c ****    HandlePtr->tb = (uint16_t)((tbcord_tmp * (uint32_t)HandlePtr->confighandle_ptr->amplitude_scale)
 931:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 932:../Dave/Generated/PWM_SVM/pwm_svm.c ****   ta_tb = HandlePtr->ta + HandlePtr->tb;
 933:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->t0 = HandlePtr->period - ta_tb;
 934:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 935:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (ta_tb > (HandlePtr->period))
 936:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 937:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->over_modulation_enable == 1U)
 938:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 939:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 940:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Above Ta and Tb are not used for SVM PWM.*/
 941:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 942:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Dividend_Sine = HandlePtr->period * (sinx >> 14U);
 943:../Dave/Generated/PWM_SVM/pwm_svm.c ****       sine_inv = (cosx - sinx) >> 15U;
 944:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Divisor_Sine  = sinx + sine_inv;
 945:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
 946:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Divider Unit (DIV) #2 for T2 of Over-Modulation *###*/
 947:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Unsigned Div. Dividend << SHIFT_OVERMODULATION, Quotient >> SHIFT_OVERMODULATION, Divisor 
 948:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DIVCON = (0x00008004 | (PWM_SVM_SHIFT_OVERMODULATION << 16U) | (PWM_SVM_SHIFT_OVERMODUL
 949:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVD = Dividend_Sine;
 950:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVS = Divisor_Sine;
 951:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #else
 952:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = (Dividend_Sine/Divisor_Sine);
 953:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
 954:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* CPU computes the following simultaneously when DIV #2 is computing ###*/
 955:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->t0 = 0;
 956:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta_tb = HandlePtr->period;                /* Make sure below T0/2 >= 0.*/
 957:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
 958:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Results of DIV #2 for T2 of Over-Modulation ###*/
 959:../Dave/Generated/PWM_SVM/pwm_svm.c ****       while (MATH->DIVST) continue;          /* Wait if DIV is still running calculation.*/
 960:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = MATH->QUOT;     /* Read DIV Quotient result. T2 = Ts x sin(theta) / (sin(theta)+sin(60-t
 961:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
 962:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = ta;
 963:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Ta + Tb = PERIOD_REG for Vref on SVM Hexagon edges.*/
 964:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = HandlePtr->period - HandlePtr->ta;
 965:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 966:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
 967:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 968:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* If ta and tb values are less then zero, reset these values to zero */
 969:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->ta > HandlePtr->period)
 970:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 971:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = 0U;
 972:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 973:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->tb > HandlePtr->period)
 974:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 975:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = 0U;
 976:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 977:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 978:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
 979:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_LUT_ENABLE)
 980:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*
 981:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * SVM Segment Time calculation using Look up table
 982:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
 983:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_TimecalcUsingLUT(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
 984:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3360              	 .loc 4 984 0
 3361              	 .cfi_startproc
 3362              	 
 3363              	 
 3364              	 
 3365 0278 80B4     	 push {r7}
 3366              	.LCFI147:
 3367              	 .cfi_def_cfa_offset 4
 3368              	 .cfi_offset 7,-4
 3369 027a 8BB0     	 sub sp,sp,#44
 3370              	.LCFI148:
 3371              	 .cfi_def_cfa_offset 48
 3372 027c 00AF     	 add r7,sp,#0
 3373              	.LCFI149:
 3374              	 .cfi_def_cfa_register 7
 3375 027e F860     	 str r0,[r7,#12]
 3376 0280 0B46     	 mov r3,r1
 3377 0282 7A60     	 str r2,[r7,#4]
 3378 0284 7B81     	 strh r3,[r7,#10]
 985:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t angletemp;
 986:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint16_t ta_tb,ta;
 987:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t Dividend_Sine, Divisor_Sine;        /*Ts x sin(θrel), sin(θrel)+sin(60°-θrel)*/
 988:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_lTimecalcUsingLUT:NULL Handle Pointer",
 989:../Dave/Generated/PWM_SVM/pwm_svm.c ****       (HandlePtr != (PWM_SVM_t *)NULL));
 990:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
 991:../Dave/Generated/PWM_SVM/pwm_svm.c ****   angletemp = (uint32_t)((Angle & (uint32_t)0xFFFFFF) >> 14U) * 6U;
 3379              	 .loc 4 991 0
 3380 0286 7B68     	 ldr r3,[r7,#4]
 3381 0288 23F07F43 	 bic r3,r3,#-16777216
 3382 028c 9A0B     	 lsrs r2,r3,#14
 3383 028e 1346     	 mov r3,r2
 3384 0290 5B00     	 lsls r3,r3,#1
 3385 0292 1344     	 add r3,r3,r2
 3386 0294 5B00     	 lsls r3,r3,#1
 3387 0296 7B62     	 str r3,[r7,#36]
 992:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector_angle = (uint32_t)(angletemp & (uint32_t) 0x003FF);
 3388              	 .loc 4 992 0
 3389 0298 7B6A     	 ldr r3,[r7,#36]
 3390 029a C3F30902 	 ubfx r2,r3,#0,#10
 3391 029e FB68     	 ldr r3,[r7,#12]
 3392 02a0 C3F8A820 	 str r2,[r3,#168]
 993:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->sector = (uint32_t)((angletemp >> 10U) & 7U);
 3393              	 .loc 4 993 0
 3394 02a4 7B6A     	 ldr r3,[r7,#36]
 3395 02a6 9B0A     	 lsrs r3,r3,#10
 3396 02a8 03F00702 	 and r2,r3,#7
 3397 02ac FB68     	 ldr r3,[r7,#12]
 3398 02ae C3F8A420 	 str r2,[r3,#164]
 994:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint16_t)Amplitude > (HandlePtr->max_amplitude))
 3399              	 .loc 4 994 0
 3400 02b2 FB68     	 ldr r3,[r7,#12]
 3401 02b4 B3F8C630 	 ldrh r3,[r3,#198]
 3402 02b8 7A89     	 ldrh r2,[r7,#10]
 3403 02ba 9A42     	 cmp r2,r3
 3404 02bc 03D9     	 bls .L88
 995:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 996:../Dave/Generated/PWM_SVM/pwm_svm.c ****     Amplitude = HandlePtr->max_amplitude;
 3405              	 .loc 4 996 0
 3406 02be FB68     	 ldr r3,[r7,#12]
 3407 02c0 B3F8C630 	 ldrh r3,[r3,#198]
 3408 02c4 7B81     	 strh r3,[r7,#10]
 3409              	.L88:
 997:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
 998:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = (uint16_t)((Amplitude* Sinus60_tab[1023U - HandlePtr->sector_angle])>> 15U);
 3410              	 .loc 4 998 0
 3411 02c6 7A89     	 ldrh r2,[r7,#10]
 3412 02c8 FB68     	 ldr r3,[r7,#12]
 3413 02ca D3F8A830 	 ldr r3,[r3,#168]
 3414 02ce C3F57F73 	 rsb r3,r3,#1020
 3415 02d2 0333     	 adds r3,r3,#3
 3416 02d4 4949     	 ldr r1,.L90
 3417 02d6 31F81330 	 ldrh r3,[r1,r3,lsl#1]
 3418 02da 03FB02F3 	 mul r3,r3,r2
 3419 02de DB13     	 asrs r3,r3,#15
 3420 02e0 9AB2     	 uxth r2,r3
 3421 02e2 FB68     	 ldr r3,[r7,#12]
 3422 02e4 A3F8B020 	 strh r2,[r3,#176]
 999:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->tb = (uint16_t)((HandlePtr->tb * HandlePtr->confighandle_ptr->amplitude_scale) >> 10U)
 3423              	 .loc 4 999 0
 3424 02e8 FB68     	 ldr r3,[r7,#12]
 3425 02ea B3F8B030 	 ldrh r3,[r3,#176]
 3426 02ee 1A46     	 mov r2,r3
 3427 02f0 FB68     	 ldr r3,[r7,#12]
 3428 02f2 1B68     	 ldr r3,[r3]
 3429 02f4 B3F84230 	 ldrh r3,[r3,#66]
 3430 02f8 03FB02F3 	 mul r3,r3,r2
 3431 02fc 9B12     	 asrs r3,r3,#10
 3432 02fe 9AB2     	 uxth r2,r3
 3433 0300 FB68     	 ldr r3,[r7,#12]
 3434 0302 A3F8B020 	 strh r2,[r3,#176]
1000:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1001:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = (uint16_t)((Amplitude* Sinus60_tab[HandlePtr->sector_angle])>> 15U);
 3435              	 .loc 4 1001 0
 3436 0306 7B89     	 ldrh r3,[r7,#10]
 3437 0308 FA68     	 ldr r2,[r7,#12]
 3438 030a D2F8A820 	 ldr r2,[r2,#168]
 3439 030e 3B49     	 ldr r1,.L90
 3440 0310 31F81220 	 ldrh r2,[r1,r2,lsl#1]
 3441 0314 02FB03F3 	 mul r3,r2,r3
 3442 0318 DB13     	 asrs r3,r3,#15
 3443 031a 9AB2     	 uxth r2,r3
 3444 031c FB68     	 ldr r3,[r7,#12]
 3445 031e A3F8AE20 	 strh r2,[r3,#174]
1002:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->ta = (uint16_t)((HandlePtr->ta * HandlePtr->confighandle_ptr->amplitude_scale) >> 10U)
 3446              	 .loc 4 1002 0
 3447 0322 FB68     	 ldr r3,[r7,#12]
 3448 0324 B3F8AE30 	 ldrh r3,[r3,#174]
 3449 0328 1A46     	 mov r2,r3
 3450 032a FB68     	 ldr r3,[r7,#12]
 3451 032c 1B68     	 ldr r3,[r3]
 3452 032e B3F84230 	 ldrh r3,[r3,#66]
 3453 0332 03FB02F3 	 mul r3,r3,r2
 3454 0336 9B12     	 asrs r3,r3,#10
 3455 0338 9AB2     	 uxth r2,r3
 3456 033a FB68     	 ldr r3,[r7,#12]
 3457 033c A3F8AE20 	 strh r2,[r3,#174]
1003:../Dave/Generated/PWM_SVM/pwm_svm.c ****   ta_tb = HandlePtr->ta + HandlePtr->tb;
 3458              	 .loc 4 1003 0
 3459 0340 FB68     	 ldr r3,[r7,#12]
 3460 0342 B3F8AE20 	 ldrh r2,[r3,#174]
 3461 0346 FB68     	 ldr r3,[r7,#12]
 3462 0348 B3F8B030 	 ldrh r3,[r3,#176]
 3463 034c 1344     	 add r3,r3,r2
 3464 034e 7B84     	 strh r3,[r7,#34]
1004:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->t0 = (uint16_t)(HandlePtr->period - ta_tb);
 3465              	 .loc 4 1004 0
 3466 0350 FB68     	 ldr r3,[r7,#12]
 3467 0352 D3F89C30 	 ldr r3,[r3,#156]
 3468 0356 9AB2     	 uxth r2,r3
 3469 0358 7B8C     	 ldrh r3,[r7,#34]
 3470 035a D31A     	 subs r3,r2,r3
 3471 035c 9AB2     	 uxth r2,r3
 3472 035e FB68     	 ldr r3,[r7,#12]
 3473 0360 A3F8AC20 	 strh r2,[r3,#172]
1005:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1006:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (ta_tb > (HandlePtr->period))
 3474              	 .loc 4 1006 0
 3475 0364 7A8C     	 ldrh r2,[r7,#34]
 3476 0366 FB68     	 ldr r3,[r7,#12]
 3477 0368 D3F89C30 	 ldr r3,[r3,#156]
 3478 036c 9A42     	 cmp r2,r3
 3479 036e 3FD9     	 bls .L87
1007:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1008:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (HandlePtr->over_modulation_enable == 1U)
 3480              	 .loc 4 1008 0
 3481 0370 FB68     	 ldr r3,[r7,#12]
 3482 0372 B3F8C830 	 ldrh r3,[r3,#200]
 3483 0376 012B     	 cmp r3,#1
 3484 0378 3AD1     	 bne .L87
1009:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1010:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1011:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Above Ta and Tb are not used for SVM PWM.*/
1012:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1013:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Calculate new T1 and T2 of maximum Vref on SVM Hexagon edges,
1014:../Dave/Generated/PWM_SVM/pwm_svm.c ****        * where T0 = 0 (i.e.: T1+T2 = PERIOD_REG). Relative angle θrel kept the same.
1015:../Dave/Generated/PWM_SVM/pwm_svm.c ****        */
1016:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Dividend_Sine = HandlePtr->period * Sinus60_tab[HandlePtr->sector_angle];
 3485              	 .loc 4 1016 0
 3486 037a FB68     	 ldr r3,[r7,#12]
 3487 037c D3F89C30 	 ldr r3,[r3,#156]
 3488 0380 FA68     	 ldr r2,[r7,#12]
 3489 0382 D2F8A820 	 ldr r2,[r2,#168]
 3490 0386 1D49     	 ldr r1,.L90
 3491 0388 31F81220 	 ldrh r2,[r1,r2,lsl#1]
 3492 038c 02FB03F3 	 mul r3,r2,r3
 3493 0390 FB61     	 str r3,[r7,#28]
1017:../Dave/Generated/PWM_SVM/pwm_svm.c ****       Divisor_Sine  = Sinus60_tab[HandlePtr->sector_angle] + Sinus60_tab[1023U - HandlePtr->sector_
 3494              	 .loc 4 1017 0
 3495 0392 FB68     	 ldr r3,[r7,#12]
 3496 0394 D3F8A830 	 ldr r3,[r3,#168]
 3497 0398 184A     	 ldr r2,.L90
 3498 039a 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 3499 039e 1946     	 mov r1,r3
 3500 03a0 FB68     	 ldr r3,[r7,#12]
 3501 03a2 D3F8A830 	 ldr r3,[r3,#168]
 3502 03a6 C3F57F73 	 rsb r3,r3,#1020
 3503 03aa 0333     	 adds r3,r3,#3
 3504 03ac 134A     	 ldr r2,.L90
 3505 03ae 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 3506 03b2 0B44     	 add r3,r3,r1
 3507 03b4 BB61     	 str r3,[r7,#24]
1018:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
1019:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Divider Unit (DIV) #2 for T2 of Over-Modulation *###*/
1020:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Unsigned Div. Dividend << SHIFT_OVERMODULATION, Quotient >> SHIFT_OVERMODULATION, Divisor 
1021:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DIVCON = (0x00008004 | (PWM_SVM_SHIFT_OVERMODULATION << 16U) | (PWM_SVM_SHIFT_OVERMODUL
1022:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVD = Dividend_Sine;
1023:../Dave/Generated/PWM_SVM/pwm_svm.c ****       MATH->DVS = Divisor_Sine;
1024:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #else
1025:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = (uint16_t)(Dividend_Sine/Divisor_Sine);
 3508              	 .loc 4 1025 0
 3509 03b6 FA69     	 ldr r2,[r7,#28]
 3510 03b8 BB69     	 ldr r3,[r7,#24]
 3511 03ba B2FBF3F3 	 udiv r3,r2,r3
 3512 03be FB82     	 strh r3,[r7,#22]
1026:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
1027:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* CPU computes the following simultaneously when DIV #2 is computing ###*/
1028:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->t0 = 0U;
 3513              	 .loc 4 1028 0
 3514 03c0 FB68     	 ldr r3,[r7,#12]
 3515 03c2 0022     	 movs r2,#0
 3516 03c4 A3F8AC20 	 strh r2,[r3,#172]
1029:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta_tb = (uint16_t)HandlePtr->period;                /* Make sure below T0/2 >= 0.*/
 3517              	 .loc 4 1029 0
 3518 03c8 FB68     	 ldr r3,[r7,#12]
 3519 03ca D3F89C30 	 ldr r3,[r3,#156]
 3520 03ce 7B84     	 strh r3,[r7,#34]
1030:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #if defined (MATH)
1031:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*###* Results of DIV #2 for T2 of Over-Modulation ###*/
1032:../Dave/Generated/PWM_SVM/pwm_svm.c ****       while (MATH->DIVST) continue;          /* Wait if DIV is still running calculation.*/
1033:../Dave/Generated/PWM_SVM/pwm_svm.c ****       ta = MATH->QUOT;     /* Read DIV Quotient result. T2 = Ts x sin(theta) / (sin(theta)+sin(60-t
1034:../Dave/Generated/PWM_SVM/pwm_svm.c ****       #endif
1035:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->ta = ta;
 3521              	 .loc 4 1035 0
 3522 03d0 FB68     	 ldr r3,[r7,#12]
 3523 03d2 FA8A     	 ldrh r2,[r7,#22]
 3524 03d4 A3F8AE20 	 strh r2,[r3,#174]
1036:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Ta + Tb = PERIOD_REG for Vref on SVM Hexagon edges.*/
1037:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->tb = (uint16_t)(HandlePtr->period - HandlePtr->ta);
 3525              	 .loc 4 1037 0
 3526 03d8 FB68     	 ldr r3,[r7,#12]
 3527 03da D3F89C30 	 ldr r3,[r3,#156]
 3528 03de 9AB2     	 uxth r2,r3
 3529 03e0 FB68     	 ldr r3,[r7,#12]
 3530 03e2 B3F8AE30 	 ldrh r3,[r3,#174]
 3531 03e6 D31A     	 subs r3,r2,r3
 3532 03e8 9AB2     	 uxth r2,r3
 3533 03ea FB68     	 ldr r3,[r7,#12]
 3534 03ec A3F8B020 	 strh r2,[r3,#176]
 3535              	.L87:
1038:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1039:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1040:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1041:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3536              	 .loc 4 1041 0
 3537 03f0 2C37     	 adds r7,r7,#44
 3538              	.LCFI150:
 3539              	 .cfi_def_cfa_offset 4
 3540 03f2 BD46     	 mov sp,r7
 3541              	.LCFI151:
 3542              	 .cfi_def_cfa_register 13
 3543              	 
 3544 03f4 5DF8047B 	 ldr r7,[sp],#4
 3545              	.LCFI152:
 3546              	 .cfi_restore 7
 3547              	 .cfi_def_cfa_offset 0
 3548 03f8 7047     	 bx lr
 3549              	.L91:
 3550 03fa 00BF     	 .align 2
 3551              	.L90:
 3552 03fc 00000000 	 .word Sinus60_tab
 3553              	 .cfi_endproc
 3554              	.LFE253:
 3556              	 .section .text.PWM_SVM_GetAppVersion,"ax",%progbits
 3557              	 .align 2
 3558              	 .global PWM_SVM_GetAppVersion
 3559              	 .thumb
 3560              	 .thumb_func
 3562              	PWM_SVM_GetAppVersion:
 3563              	.LFB254:
1042:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1043:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*******************************************************************************
1044:../Dave/Generated/PWM_SVM/pwm_svm.c ****  **                      Public Function Definitions                           **
1045:../Dave/Generated/PWM_SVM/pwm_svm.c ****  *******************************************************************************/
1046:../Dave/Generated/PWM_SVM/pwm_svm.c **** /* App API to retrieve the App version info */
1047:../Dave/Generated/PWM_SVM/pwm_svm.c **** DAVE_APP_VERSION_t PWM_SVM_GetAppVersion(void)
1048:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3564              	 .loc 4 1048 0
 3565              	 .cfi_startproc
 3566              	 
 3567              	 
 3568              	 
 3569 0000 80B4     	 push {r7}
 3570              	.LCFI153:
 3571              	 .cfi_def_cfa_offset 4
 3572              	 .cfi_offset 7,-4
 3573 0002 83B0     	 sub sp,sp,#12
 3574              	.LCFI154:
 3575              	 .cfi_def_cfa_offset 16
 3576 0004 00AF     	 add r7,sp,#0
 3577              	.LCFI155:
 3578              	 .cfi_def_cfa_register 7
1049:../Dave/Generated/PWM_SVM/pwm_svm.c ****   DAVE_APP_VERSION_t version;
1050:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1051:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.major = PWM_SVM_MAJOR_VERSION;
 3579              	 .loc 4 1051 0
 3580 0006 0423     	 movs r3,#4
 3581 0008 3B70     	 strb r3,[r7]
1052:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.minor = PWM_SVM_MINOR_VERSION;
 3582              	 .loc 4 1052 0
 3583 000a 0023     	 movs r3,#0
 3584 000c 7B70     	 strb r3,[r7,#1]
1053:../Dave/Generated/PWM_SVM/pwm_svm.c ****   version.patch = PWM_SVM_PATCH_VERSION;
 3585              	 .loc 4 1053 0
 3586 000e 1E23     	 movs r3,#30
 3587 0010 BB70     	 strb r3,[r7,#2]
1054:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1055:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return version;
 3588              	 .loc 4 1055 0
 3589 0012 3B1D     	 adds r3,r7,#4
 3590 0014 3A46     	 mov r2,r7
 3591 0016 1268     	 ldr r2,[r2]
 3592 0018 1146     	 mov r1,r2
 3593 001a 1980     	 strh r1,[r3]
 3594 001c 0233     	 adds r3,r3,#2
 3595 001e 120C     	 lsrs r2,r2,#16
 3596 0020 1A70     	 strb r2,[r3]
 3597 0022 0023     	 movs r3,#0
 3598 0024 3A79     	 ldrb r2,[r7,#4]
 3599 0026 62F30703 	 bfi r3,r2,#0,#8
 3600 002a 7A79     	 ldrb r2,[r7,#5]
 3601 002c 62F30F23 	 bfi r3,r2,#8,#8
 3602 0030 BA79     	 ldrb r2,[r7,#6]
 3603 0032 62F31743 	 bfi r3,r2,#16,#8
1056:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3604              	 .loc 4 1056 0
 3605 0036 1846     	 mov r0,r3
 3606 0038 0C37     	 adds r7,r7,#12
 3607              	.LCFI156:
 3608              	 .cfi_def_cfa_offset 4
 3609 003a BD46     	 mov sp,r7
 3610              	.LCFI157:
 3611              	 .cfi_def_cfa_register 13
 3612              	 
 3613 003c 5DF8047B 	 ldr r7,[sp],#4
 3614              	.LCFI158:
 3615              	 .cfi_restore 7
 3616              	 .cfi_def_cfa_offset 0
 3617 0040 7047     	 bx lr
 3618              	 .cfi_endproc
 3619              	.LFE254:
 3621 0042 00BF     	 .section .text.PWM_SVM_Init,"ax",%progbits
 3622              	 .align 2
 3623              	 .global PWM_SVM_Init
 3624              	 .thumb
 3625              	 .thumb_func
 3627              	PWM_SVM_Init:
 3628              	.LFB255:
1057:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1058:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1059:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function initializes the peripherals and SVM structure 
1060:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * required for the SVM algorithm.
1061:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1062:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_Init(PWM_SVM_t* const HandlePtr)
1063:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3629              	 .loc 4 1063 0
 3630              	 .cfi_startproc
 3631              	 
 3632              	 
 3633 0000 80B5     	 push {r7,lr}
 3634              	.LCFI159:
 3635              	 .cfi_def_cfa_offset 8
 3636              	 .cfi_offset 7,-8
 3637              	 .cfi_offset 14,-4
 3638 0002 86B0     	 sub sp,sp,#24
 3639              	.LCFI160:
 3640              	 .cfi_def_cfa_offset 32
 3641 0004 00AF     	 add r7,sp,#0
 3642              	.LCFI161:
 3643              	 .cfi_def_cfa_register 7
 3644 0006 7860     	 str r0,[r7,#4]
1064:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count = 0U;
 3645              	 .loc 4 1064 0
 3646 0008 0023     	 movs r3,#0
 3647 000a 7B61     	 str r3,[r7,#20]
1065:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t phase_count = 0U;
 3648              	 .loc 4 1065 0
 3649 000c 0023     	 movs r3,#0
 3650 000e 3B61     	 str r3,[r7,#16]
1066:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = (PWM_SVM_STATUS_t) PWM_SVM_STATUS_SUCCESS;
 3651              	 .loc 4 1066 0
 3652 0010 0023     	 movs r3,#0
 3653 0012 FB73     	 strb r3,[r7,#15]
1067:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 3654              	 .loc 4 1067 0
 3655 0014 7B68     	 ldr r3,[r7,#4]
 3656 0016 1B68     	 ldr r3,[r3]
 3657 0018 BB60     	 str r3,[r7,#8]
1068:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Init:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1069:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_STATE_t) PWM_SVM_UNINITIALIZED == HandlePtr->state)
 3658              	 .loc 4 1069 0
 3659 001a 7B68     	 ldr r3,[r7,#4]
 3660 001c 93F89030 	 ldrb r3,[r3,#144]
 3661 0020 002B     	 cmp r3,#0
 3662 0022 40F03381 	 bne .L95
1070:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1071:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = (PWM_SVM_STATUS_t) GLOBAL_CCU8_Init(HandlePtr->globalccu8_handle_ptr);
 3663              	 .loc 4 1071 0
 3664 0026 7B68     	 ldr r3,[r7,#4]
 3665 0028 9B6E     	 ldr r3,[r3,#104]
 3666 002a 1846     	 mov r0,r3
 3667 002c FFF7FEFF 	 bl GLOBAL_CCU8_Init
 3668 0030 0346     	 mov r3,r0
 3669 0032 FB73     	 strb r3,[r7,#15]
1072:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for all three phases output*/
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (phase_count = 0U; phase_count < PWM_SVM_PHASE_IO_MAX; phase_count++)
 3670              	 .loc 4 1073 0
 3671 0034 0023     	 movs r3,#0
 3672 0036 3B61     	 str r3,[r7,#16]
 3673 0038 16E0     	 b .L96
 3674              	.L97:
1074:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1075:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->pwmoutpin_ptr[phase_count]->port, HandlePtr->pwmoutpin_ptr[phase_cou
 3675              	 .loc 4 1075 0 discriminator 3
 3676 003a 7B68     	 ldr r3,[r7,#4]
 3677 003c 3A69     	 ldr r2,[r7,#16]
 3678 003e 0832     	 adds r2,r2,#8
 3679 0040 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3680 0044 1868     	 ldr r0,[r3]
 3681 0046 7B68     	 ldr r3,[r7,#4]
 3682 0048 3A69     	 ldr r2,[r7,#16]
 3683 004a 0832     	 adds r2,r2,#8
 3684 004c 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3685 0050 1979     	 ldrb r1,[r3,#4]
 3686 0052 7B68     	 ldr r3,[r7,#4]
 3687 0054 3A69     	 ldr r2,[r7,#16]
 3688 0056 0E32     	 adds r2,r2,#14
 3689 0058 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3690 005c 1A46     	 mov r2,r3
 3691 005e FFF7FEFF 	 bl XMC_GPIO_Init
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3692              	 .loc 4 1073 0 discriminator 3
 3693 0062 3B69     	 ldr r3,[r7,#16]
 3694 0064 0133     	 adds r3,r3,#1
 3695 0066 3B61     	 str r3,[r7,#16]
 3696              	.L96:
1073:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3697              	 .loc 4 1073 0 is_stmt 0 discriminator 1
 3698 0068 3B69     	 ldr r3,[r7,#16]
 3699 006a 052B     	 cmp r3,#5
 3700 006c E5D9     	 bls .L97
1076:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->pwmoutconfig_ptr[phase_count]);
1077:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1078:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for trap input*/
1079:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((uint8_t) true == svmptr->enable_trap)
 3701              	 .loc 4 1079 0 is_stmt 1
 3702 006e BB68     	 ldr r3,[r7,#8]
 3703 0070 93F84730 	 ldrb r3,[r3,#71]
 3704 0074 012B     	 cmp r3,#1
 3705 0076 1AD1     	 bne .L98
1080:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1081:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin, HandlePtr->trapincon
 3706              	 .loc 4 1081 0
 3707 0078 7B68     	 ldr r3,[r7,#4]
 3708 007a 1B6D     	 ldr r3,[r3,#80]
 3709 007c 1968     	 ldr r1,[r3]
 3710 007e 7B68     	 ldr r3,[r7,#4]
 3711 0080 1B6D     	 ldr r3,[r3,#80]
 3712 0082 1A79     	 ldrb r2,[r3,#4]
 3713 0084 7B68     	 ldr r3,[r7,#4]
 3714 0086 5B6D     	 ldr r3,[r3,#84]
 3715 0088 0846     	 mov r0,r1
 3716 008a 1146     	 mov r1,r2
 3717 008c 1A46     	 mov r2,r3
 3718 008e FFF7FEFF 	 bl XMC_GPIO_Init
1082:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_SetHardwareControl(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin,
 3719              	 .loc 4 1082 0
 3720 0092 7B68     	 ldr r3,[r7,#4]
 3721 0094 1B6D     	 ldr r3,[r3,#80]
 3722 0096 1968     	 ldr r1,[r3]
 3723 0098 7B68     	 ldr r3,[r7,#4]
 3724 009a 1B6D     	 ldr r3,[r3,#80]
 3725 009c 1A79     	 ldrb r2,[r3,#4]
1083:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->trap_hwsel);
 3726              	 .loc 4 1083 0
 3727 009e 7B68     	 ldr r3,[r7,#4]
 3728 00a0 1B68     	 ldr r3,[r3]
1082:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_SetHardwareControl(HandlePtr->trappin_ptr->port, HandlePtr->trappin_ptr->pin,
 3729              	 .loc 4 1082 0
 3730 00a2 9B7C     	 ldrb r3,[r3,#18]
 3731 00a4 0846     	 mov r0,r1
 3732 00a6 1146     	 mov r1,r2
 3733 00a8 1A46     	 mov r2,r3
 3734 00aa FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 3735              	.L98:
1084:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1085:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1086:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Configure io init for inverter enable pin output*/
1087:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (svmptr->inverter_pin > (PWM_SVM_INVERTERPINLEVEL_t) PWM_SVM_IPIN_NOTREQUIRED)
 3736              	 .loc 4 1087 0
 3737 00ae BB68     	 ldr r3,[r7,#8]
 3738 00b0 DB7C     	 ldrb r3,[r3,#19]
 3739 00b2 002B     	 cmp r3,#0
 3740 00b4 0CD0     	 beq .L99
1088:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1089:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_GPIO_Init(HandlePtr->inverterpin_ptr->port, HandlePtr->inverterpin_ptr->pin,
 3741              	 .loc 4 1089 0
 3742 00b6 7B68     	 ldr r3,[r7,#4]
 3743 00b8 9B6D     	 ldr r3,[r3,#88]
 3744 00ba 1968     	 ldr r1,[r3]
 3745 00bc 7B68     	 ldr r3,[r7,#4]
 3746 00be 9B6D     	 ldr r3,[r3,#88]
 3747 00c0 1A79     	 ldrb r2,[r3,#4]
 3748 00c2 7B68     	 ldr r3,[r7,#4]
 3749 00c4 DB6D     	 ldr r3,[r3,#92]
 3750 00c6 0846     	 mov r0,r1
 3751 00c8 1146     	 mov r1,r2
 3752 00ca 1A46     	 mov r2,r3
 3753 00cc FFF7FEFF 	 bl XMC_GPIO_Init
 3754              	.L99:
1090:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->inverterpinconfig_ptr);
1091:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1092:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1093:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Inverter Enable pin level is set to passive level.*/
1094:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_InverterDisable(HandlePtr);
 3755              	 .loc 4 1094 0
 3756 00d0 7868     	 ldr r0,[r7,#4]
 3757 00d2 FFF7FEFF 	 bl PWM_SVM_InverterDisable
1095:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1096:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Phase configurations */
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 3758              	 .loc 4 1097 0
 3759 00d6 0023     	 movs r3,#0
 3760 00d8 7B61     	 str r3,[r7,#20]
 3761 00da A4E0     	 b .L100
 3762              	.L102:
1098:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1099:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_CompareInit(HandlePtr->phase_ptr[count]->slice_ptr, HandlePtr->phase_configini
 3763              	 .loc 4 1099 0
 3764 00dc 7B68     	 ldr r3,[r7,#4]
 3765 00de 7A69     	 ldr r2,[r7,#20]
 3766 00e0 0232     	 adds r2,r2,#2
 3767 00e2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3768 00e6 1A68     	 ldr r2,[r3]
 3769 00e8 7B68     	 ldr r3,[r7,#4]
 3770 00ea 9B69     	 ldr r3,[r3,#24]
 3771 00ec 1046     	 mov r0,r2
 3772 00ee 1946     	 mov r1,r3
 3773 00f0 FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
1100:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1101:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure dead time */
1102:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_DeadTimeInit(HandlePtr->phase_ptr[count]->slice_ptr, HandlePtr->deadtimeconfig
 3774              	 .loc 4 1102 0
 3775 00f4 7B68     	 ldr r3,[r7,#4]
 3776 00f6 7A69     	 ldr r2,[r7,#20]
 3777 00f8 0232     	 adds r2,r2,#2
 3778 00fa 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3779 00fe 1A68     	 ldr r2,[r3]
 3780 0100 7B68     	 ldr r3,[r7,#4]
 3781 0102 DB6E     	 ldr r3,[r3,#108]
 3782 0104 1046     	 mov r0,r2
 3783 0106 1946     	 mov r1,r3
 3784 0108 FFF7FEFF 	 bl XMC_CCU8_SLICE_DeadTimeInit
1103:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1104:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Configure external start to event 0 */
1105:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[count]->slice_ptr,
 3785              	 .loc 4 1105 0
 3786 010c 7B68     	 ldr r3,[r7,#4]
 3787 010e 7A69     	 ldr r2,[r7,#20]
 3788 0110 0232     	 adds r2,r2,#2
 3789 0112 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3790 0116 1A68     	 ldr r2,[r3]
 3791 0118 7B68     	 ldr r3,[r7,#4]
 3792 011a 5B6E     	 ldr r3,[r3,#100]
 3793 011c 1046     	 mov r0,r2
 3794 011e 0121     	 movs r1,#1
 3795 0120 1A46     	 mov r2,r3
 3796 0122 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
1106:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_EVENT_t) XMC_CCU8_SLICE_EVENT_0, HandlePtr->startconfig_ptr);
1107:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* if trap is enabled, Enable Trap for all the three phases
1108:../Dave/Generated/PWM_SVM/pwm_svm.c ****        map the external trap functionality to event 2 */
1109:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint8_t) true == svmptr->enable_trap)
 3797              	 .loc 4 1109 0
 3798 0126 BB68     	 ldr r3,[r7,#8]
 3799 0128 93F84730 	 ldrb r3,[r3,#71]
 3800 012c 012B     	 cmp r3,#1
 3801 012e 21D1     	 bne .L101
1110:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1111:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ConfigureEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_EVENT_
 3802              	 .loc 4 1111 0
 3803 0130 7B68     	 ldr r3,[r7,#4]
 3804 0132 7A69     	 ldr r2,[r7,#20]
 3805 0134 0232     	 adds r2,r2,#2
 3806 0136 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3807 013a 1A68     	 ldr r2,[r3]
 3808 013c 7B68     	 ldr r3,[r7,#4]
 3809 013e 1B6E     	 ldr r3,[r3,#96]
 3810 0140 1046     	 mov r0,r2
 3811 0142 0321     	 movs r1,#3
 3812 0144 1A46     	 mov r2,r3
 3813 0146 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
1112:../Dave/Generated/PWM_SVM/pwm_svm.c ****             HandlePtr->trapconfig_ptr);
1113:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_TrapConfig(HandlePtr->phase_ptr[count]->slice_ptr, svmptr->trap_exit_mode,
 3814              	 .loc 4 1113 0
 3815 014a 7B68     	 ldr r3,[r7,#4]
 3816 014c 7A69     	 ldr r2,[r7,#20]
 3817 014e 0232     	 adds r2,r2,#2
 3818 0150 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3819 0154 1968     	 ldr r1,[r3]
 3820 0156 BB68     	 ldr r3,[r7,#8]
 3821 0158 5A7C     	 ldrb r2,[r3,#17]
1114:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (bool)svmptr->trap_sync_pwm);
 3822              	 .loc 4 1114 0
 3823 015a BB68     	 ldr r3,[r7,#8]
 3824 015c 93F84830 	 ldrb r3,[r3,#72]
1113:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (bool)svmptr->trap_sync_pwm);
 3825              	 .loc 4 1113 0
 3826 0160 002B     	 cmp r3,#0
 3827 0162 14BF     	 ite ne
 3828 0164 0123     	 movne r3,#1
 3829 0166 0023     	 moveq r3,#0
 3830 0168 DBB2     	 uxtb r3,r3
 3831 016a 0846     	 mov r0,r1
 3832 016c 1146     	 mov r1,r2
 3833 016e 1A46     	 mov r2,r3
 3834 0170 FFF7FEFF 	 bl XMC_CCU8_SLICE_TrapConfig
 3835              	.L101:
1115:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1116:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1117:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program period  value of the timer  */
1118:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[count]->slice_ptr, (uint16_t) HandleP
 3836              	 .loc 4 1118 0 discriminator 2
 3837 0174 7B68     	 ldr r3,[r7,#4]
 3838 0176 7A69     	 ldr r2,[r7,#20]
 3839 0178 0232     	 adds r2,r2,#2
 3840 017a 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3841 017e 1A68     	 ldr r2,[r3]
 3842 0180 7B68     	 ldr r3,[r7,#4]
 3843 0182 D3F89C30 	 ldr r3,[r3,#156]
 3844 0186 9BB2     	 uxth r3,r3
 3845 0188 1046     	 mov r0,r2
 3846 018a 1946     	 mov r1,r3
 3847 018c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1119:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program timer compare value for channel 1 or channel 2*/
1120:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[count]->slice_ptr,
 3848              	 .loc 4 1120 0 discriminator 2
 3849 0190 7B68     	 ldr r3,[r7,#4]
 3850 0192 7A69     	 ldr r2,[r7,#20]
 3851 0194 0232     	 adds r2,r2,#2
 3852 0196 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3853 019a 1B68     	 ldr r3,[r3]
 3854 019c 1846     	 mov r0,r3
 3855 019e 0021     	 movs r1,#0
 3856 01a0 0022     	 movs r2,#0
 3857 01a2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
1121:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_1, 0U);
1122:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Program timer compare value for channel 1 or channel 2*/
1123:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(HandlePtr->phase_ptr[count]->slice_ptr,
 3858              	 .loc 4 1123 0 discriminator 2
 3859 01a6 7B68     	 ldr r3,[r7,#4]
 3860 01a8 7A69     	 ldr r2,[r7,#20]
 3861 01aa 0232     	 adds r2,r2,#2
 3862 01ac 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3863 01b0 1B68     	 ldr r3,[r3]
 3864 01b2 1846     	 mov r0,r3
 3865 01b4 0121     	 movs r1,#1
 3866 01b6 0022     	 movs r2,#0
 3867 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
1124:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_COMPARE_CHANNEL_t) XMC_CCU8_SLICE_COMPARE_CHANNEL_2, 0U);
1125:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Configures status ST1, ST2 mapping to STy */
1126:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_ConfigureStatusBitOutput(HandlePtr->phase_ptr[count]->slice_ptr,
 3868              	 .loc 4 1126 0 discriminator 2
 3869 01bc 7B68     	 ldr r3,[r7,#4]
 3870 01be 7A69     	 ldr r2,[r7,#20]
 3871 01c0 0232     	 adds r2,r2,#2
 3872 01c2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3873 01c6 1968     	 ldr r1,[r3]
1127:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_st_map[count]);
 3874              	 .loc 4 1127 0 discriminator 2
 3875 01c8 7B68     	 ldr r3,[r7,#4]
 3876 01ca 1A68     	 ldr r2,[r3]
1126:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_st_map[count]);
 3877              	 .loc 4 1126 0 discriminator 2
 3878 01cc 7B69     	 ldr r3,[r7,#20]
 3879 01ce 1344     	 add r3,r3,r2
 3880 01d0 0833     	 adds r3,r3,#8
 3881 01d2 1B79     	 ldrb r3,[r3,#4]
 3882 01d4 0846     	 mov r0,r1
 3883 01d6 1946     	 mov r1,r3
 3884 01d8 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureStatusBitOutput
1128:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1129:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Bind period match event to an NVIC node  */
1130:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->phase_ptr[count]->slice_ptr->SRS |= svmptr->event_sr_selector[count];
 3885              	 .loc 4 1130 0 discriminator 2
 3886 01dc 7B68     	 ldr r3,[r7,#4]
 3887 01de 7A69     	 ldr r2,[r7,#20]
 3888 01e0 0232     	 adds r2,r2,#2
 3889 01e2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3890 01e6 1B68     	 ldr r3,[r3]
 3891 01e8 7A68     	 ldr r2,[r7,#4]
 3892 01ea 7969     	 ldr r1,[r7,#20]
 3893 01ec 0231     	 adds r1,r1,#2
 3894 01ee 52F82120 	 ldr r2,[r2,r1,lsl#2]
 3895 01f2 1268     	 ldr r2,[r2]
 3896 01f4 D2F8A810 	 ldr r1,[r2,#168]
 3897 01f8 BA68     	 ldr r2,[r7,#8]
 3898 01fa 7869     	 ldr r0,[r7,#20]
 3899 01fc 0A30     	 adds r0,r0,#10
 3900 01fe 52F82020 	 ldr r2,[r2,r0,lsl#2]
 3901 0202 0A43     	 orrs r2,r2,r1
 3902 0204 C3F8A820 	 str r2,[r3,#168]
1131:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1132:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* enable module clock by clearing idle bit*/
1133:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_EnableClock(HandlePtr->global_ptr, HandlePtr->phase_ptr[count]->slice_number);
 3903              	 .loc 4 1133 0 discriminator 2
 3904 0208 7B68     	 ldr r3,[r7,#4]
 3905 020a 5968     	 ldr r1,[r3,#4]
 3906 020c 7B68     	 ldr r3,[r7,#4]
 3907 020e 7A69     	 ldr r2,[r7,#20]
 3908 0210 0232     	 adds r2,r2,#2
 3909 0212 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3910 0216 1B79     	 ldrb r3,[r3,#4]
 3911 0218 0846     	 mov r0,r1
 3912 021a 1946     	 mov r1,r3
 3913 021c FFF7FEFF 	 bl XMC_CCU8_EnableClock
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3914              	 .loc 4 1097 0 discriminator 2
 3915 0220 7B69     	 ldr r3,[r7,#20]
 3916 0222 0133     	 adds r3,r3,#1
 3917 0224 7B61     	 str r3,[r7,#20]
 3918              	.L100:
1097:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 3919              	 .loc 4 1097 0 is_stmt 0 discriminator 1
 3920 0226 7B69     	 ldr r3,[r7,#20]
 3921 0228 022B     	 cmp r3,#2
 3922 022a 7FF657AF 	 bls .L102
1134:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1135:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1136:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_lEnableEvent(HandlePtr);
 3923              	 .loc 4 1136 0 is_stmt 1
 3924 022e 7868     	 ldr r0,[r7,#4]
 3925 0230 FFF7FEFF 	 bl PWM_SVM_lEnableEvent
1137:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1138:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Current trigger slice configurations */
1139:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if(1U == PWM_SVM_IS_CURRENTTRIGGER_ENABLE)
1140:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t)PWM_SVM_NONE != svmptr->current_measurement)
1141:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1142:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lCurrentTrigSliceInit(HandlePtr);
1143:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1144:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1145:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1146:../Dave/Generated/PWM_SVM/pwm_svm.c **** #if defined (MATH)
1147:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Ungate Math coprocessor*/
1148:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MATH);
1149:../Dave/Generated/PWM_SVM/pwm_svm.c **** #endif
1150:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1151:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, svmptr->shadow_transfer_mask);
 3926              	 .loc 4 1151 0
 3927 0234 7B68     	 ldr r3,[r7,#4]
 3928 0236 5A68     	 ldr r2,[r3,#4]
 3929 0238 BB68     	 ldr r3,[r7,#8]
 3930 023a 5B6A     	 ldr r3,[r3,#36]
 3931 023c 1046     	 mov r0,r2
 3932 023e 1946     	 mov r1,r3
 3933 0240 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1152:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1153:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* update dead time variable*/
1154:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_rising_edge = HandlePtr->deadtimeconfig_ptr->channel1_st_rising_edge_counte
 3934              	 .loc 4 1154 0
 3935 0244 7B68     	 ldr r3,[r7,#4]
 3936 0246 DB6E     	 ldr r3,[r3,#108]
 3937 0248 1B79     	 ldrb r3,[r3,#4]
 3938 024a 1A46     	 mov r2,r3
 3939 024c 7B68     	 ldr r3,[r7,#4]
 3940 024e C3F89420 	 str r2,[r3,#148]
1155:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_falling_edge = HandlePtr->deadtimeconfig_ptr->channel1_st_falling_edge_coun
 3941              	 .loc 4 1155 0
 3942 0252 7B68     	 ldr r3,[r7,#4]
 3943 0254 DB6E     	 ldr r3,[r3,#108]
 3944 0256 5B79     	 ldrb r3,[r3,#5]
 3945 0258 1A46     	 mov r2,r3
 3946 025a 7B68     	 ldr r3,[r7,#4]
 3947 025c C3F89820 	 str r2,[r3,#152]
1156:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_div = (XMC_CCU8_SLICE_DTC_DIV_t) HandlePtr->deadtimeconfig_ptr->div;
 3948              	 .loc 4 1156 0
 3949 0260 7B68     	 ldr r3,[r7,#4]
 3950 0262 DB6E     	 ldr r3,[r3,#108]
 3951 0264 1B78     	 ldrb r3,[r3]
 3952 0266 C3F38113 	 ubfx r3,r3,#6,#2
 3953 026a DBB2     	 uxtb r3,r3
 3954 026c 1A46     	 mov r2,r3
 3955 026e 7B68     	 ldr r3,[r7,#4]
 3956 0270 83F89120 	 strb r2,[r3,#145]
1157:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1158:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_STATUS_t) PWM_SVM_STATUS_FAILURE != status)
 3957              	 .loc 4 1158 0
 3958 0274 FB7B     	 ldrb r3,[r7,#15]
 3959 0276 012B     	 cmp r3,#1
 3960 0278 06D0     	 beq .L103
1159:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1160:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_SUCCESS;
 3961              	 .loc 4 1160 0
 3962 027a 0023     	 movs r3,#0
 3963 027c FB73     	 strb r3,[r7,#15]
1161:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->state = (PWM_SVM_STATE_t) PWM_SVM_INITIALIZED;
 3964              	 .loc 4 1161 0
 3965 027e 7B68     	 ldr r3,[r7,#4]
 3966 0280 0122     	 movs r2,#1
 3967 0282 83F89020 	 strb r2,[r3,#144]
 3968 0286 01E0     	 b .L95
 3969              	.L103:
1162:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1163:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1164:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1165:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_FAILURE;
 3970              	 .loc 4 1165 0
 3971 0288 0123     	 movs r3,#1
 3972 028a FB73     	 strb r3,[r7,#15]
 3973              	.L95:
1166:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1167:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1168:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1169:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 3974              	 .loc 4 1169 0
 3975 028c FB7B     	 ldrb r3,[r7,#15]
1170:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 3976              	 .loc 4 1170 0
 3977 028e 1846     	 mov r0,r3
 3978 0290 1837     	 adds r7,r7,#24
 3979              	.LCFI162:
 3980              	 .cfi_def_cfa_offset 8
 3981 0292 BD46     	 mov sp,r7
 3982              	.LCFI163:
 3983              	 .cfi_def_cfa_register 13
 3984              	 
 3985 0294 80BD     	 pop {r7,pc}
 3986              	 .cfi_endproc
 3987              	.LFE255:
 3989 0296 00BF     	 .section .text.PWM_SVM_Start,"ax",%progbits
 3990              	 .align 2
 3991              	 .global PWM_SVM_Start
 3992              	 .thumb
 3993              	 .thumb_func
 3995              	PWM_SVM_Start:
 3996              	.LFB256:
1171:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1172:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1173:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function starts the CCU8 slices used to generate SVM.
1174:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1175:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Start(PWM_SVM_t* const HandlePtr)
1176:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 3997              	 .loc 4 1176 0
 3998              	 .cfi_startproc
 3999              	 
 4000              	 
 4001 0000 80B5     	 push {r7,lr}
 4002              	.LCFI164:
 4003              	 .cfi_def_cfa_offset 8
 4004              	 .cfi_offset 7,-8
 4005              	 .cfi_offset 14,-4
 4006 0002 84B0     	 sub sp,sp,#16
 4007              	.LCFI165:
 4008              	 .cfi_def_cfa_offset 24
 4009 0004 00AF     	 add r7,sp,#0
 4010              	.LCFI166:
 4011              	 .cfi_def_cfa_register 7
 4012 0006 7860     	 str r0,[r7,#4]
1177:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count = 0U;
 4013              	 .loc 4 1177 0
 4014 0008 0023     	 movs r3,#0
 4015 000a FB60     	 str r3,[r7,#12]
1178:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4016              	 .loc 4 1178 0
 4017 000c 7B68     	 ldr r3,[r7,#4]
 4018 000e 1B68     	 ldr r3,[r3]
 4019 0010 BB60     	 str r3,[r7,#8]
1179:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Start:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1180:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 4020              	 .loc 4 1180 0
 4021 0012 7B68     	 ldr r3,[r7,#4]
 4022 0014 93F89030 	 ldrb r3,[r3,#144]
 4023 0018 012B     	 cmp r3,#1
 4024 001a 05D0     	 beq .L106
1181:../Dave/Generated/PWM_SVM/pwm_svm.c ****       || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 4025              	 .loc 4 1181 0
 4026 001c 7B68     	 ldr r3,[r7,#4]
 4027 001e 93F89030 	 ldrb r3,[r3,#144]
 4028 0022 032B     	 cmp r3,#3
 4029 0024 40F03381 	 bne .L105
 4030              	.L106:
1182:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1183:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta = 0U;
 4031              	 .loc 4 1183 0
 4032 0028 7B68     	 ldr r3,[r7,#4]
 4033 002a 0022     	 movs r2,#0
 4034 002c A3F8AE20 	 strh r2,[r3,#174]
1184:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb = 0U;
 4035              	 .loc 4 1184 0
 4036 0030 7B68     	 ldr r3,[r7,#4]
 4037 0032 0022     	 movs r2,#0
 4038 0034 A3F8B020 	 strh r2,[r3,#176]
1185:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->ta2 = 0U;
 4039              	 .loc 4 1185 0
 4040 0038 7B68     	 ldr r3,[r7,#4]
 4041 003a 0022     	 movs r2,#0
 4042 003c A3F8B220 	 strh r2,[r3,#178]
1186:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tb2 = 0U;
 4043              	 .loc 4 1186 0
 4044 0040 7B68     	 ldr r3,[r7,#4]
 4045 0042 0022     	 movs r2,#0
 4046 0044 A3F8B420 	 strh r2,[r3,#180]
1187:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta = 0U;
 4047              	 .loc 4 1187 0
 4048 0048 7B68     	 ldr r3,[r7,#4]
 4049 004a 0022     	 movs r2,#0
 4050 004c A3F8B620 	 strh r2,[r3,#182]
1188:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb = 0U;
 4051              	 .loc 4 1188 0
 4052 0050 7B68     	 ldr r3,[r7,#4]
 4053 0052 0022     	 movs r2,#0
 4054 0054 A3F8B820 	 strh r2,[r3,#184]
1189:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_ta2 = 0U;
 4055              	 .loc 4 1189 0
 4056 0058 7B68     	 ldr r3,[r7,#4]
 4057 005a 0022     	 movs r2,#0
 4058 005c A3F8BA20 	 strh r2,[r3,#186]
1190:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->v_tb2 = 0U;
 4059              	 .loc 4 1190 0
 4060 0060 7B68     	 ldr r3,[r7,#4]
 4061 0062 0022     	 movs r2,#0
 4062 0064 A3F8BC20 	 strh r2,[r3,#188]
1191:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->sector = 0U;
 4063              	 .loc 4 1191 0
 4064 0068 7B68     	 ldr r3,[r7,#4]
 4065 006a 0022     	 movs r2,#0
 4066 006c C3F8A420 	 str r2,[r3,#164]
1192:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->subsector = 0U;
 4067              	 .loc 4 1192 0
 4068 0070 7B68     	 ldr r3,[r7,#4]
 4069 0072 0022     	 movs r2,#0
 4070 0074 A3F8C020 	 strh r2,[r3,#192]
1193:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1194:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable Inverter*/
1195:../Dave/Generated/PWM_SVM/pwm_svm.c ****     PWM_SVM_InverterEnable(HandlePtr);
 4071              	 .loc 4 1195 0
 4072 0078 7868     	 ldr r0,[r7,#4]
 4073 007a FFF7FEFF 	 bl PWM_SVM_InverterEnable
1196:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4074              	 .loc 4 1197 0
 4075 007e 0023     	 movs r3,#0
 4076 0080 FB60     	 str r3,[r7,#12]
 4077 0082 26E0     	 b .L108
 4078              	.L110:
1198:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1199:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* if trap is enabled, Enable Trap for all the three phases
1200:../Dave/Generated/PWM_SVM/pwm_svm.c ****        map the external trap functionality to event 2 */
1201:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint8_t) true == svmptr->enable_trap)
 4079              	 .loc 4 1201 0
 4080 0084 BB68     	 ldr r3,[r7,#8]
 4081 0086 93F84730 	 ldrb r3,[r3,#71]
 4082 008a 012B     	 cmp r3,#1
 4083 008c 13D1     	 bne .L109
1202:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1203:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVE
 4084              	 .loc 4 1203 0
 4085 008e 7B68     	 ldr r3,[r7,#4]
 4086 0090 FA68     	 ldr r2,[r7,#12]
 4087 0092 0232     	 adds r2,r2,#2
 4088 0094 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4089 0098 1B68     	 ldr r3,[r3]
 4090 009a 1846     	 mov r0,r3
 4091 009c 0A21     	 movs r1,#10
 4092 009e FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1204:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[count]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRA
 4093              	 .loc 4 1204 0
 4094 00a2 7B68     	 ldr r3,[r7,#4]
 4095 00a4 FA68     	 ldr r2,[r7,#12]
 4096 00a6 0232     	 adds r2,r2,#2
 4097 00a8 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4098 00ac 1B68     	 ldr r3,[r3]
 4099 00ae 1846     	 mov r0,r3
 4100 00b0 0B21     	 movs r1,#11
 4101 00b2 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 4102              	.L109:
1205:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1206:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure the Start trigger function*/
1207:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[count]->slice_ptr,
 4103              	 .loc 4 1207 0 discriminator 2
 4104 00b6 7B68     	 ldr r3,[r7,#4]
 4105 00b8 FA68     	 ldr r2,[r7,#12]
 4106 00ba 0232     	 adds r2,r2,#2
 4107 00bc 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4108 00c0 1B68     	 ldr r3,[r3]
 4109 00c2 1846     	 mov r0,r3
 4110 00c4 0121     	 movs r1,#1
 4111 00c6 0122     	 movs r2,#1
 4112 00c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4113              	 .loc 4 1197 0 discriminator 2
 4114 00cc FB68     	 ldr r3,[r7,#12]
 4115 00ce 0133     	 adds r3,r3,#1
 4116 00d0 FB60     	 str r3,[r7,#12]
 4117              	.L108:
1197:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4118              	 .loc 4 1197 0 is_stmt 0 discriminator 1
 4119 00d2 FB68     	 ldr r3,[r7,#12]
 4120 00d4 022B     	 cmp r3,#2
 4121 00d6 D5D9     	 bls .L110
1208:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_EVENT_t) XMC_CCU8_SLICE_EVENT_0,
1209:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1210:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1211:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1212:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((uint8_t) true == svmptr->enable_trap)
 4122              	 .loc 4 1212 0 is_stmt 1
 4123 00d8 BB68     	 ldr r3,[r7,#8]
 4124 00da 93F84730 	 ldrb r3,[r3,#71]
 4125 00de 012B     	 cmp r3,#1
 4126 00e0 29D1     	 bne .L111
1213:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1214:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase u out 0 and 1*/
1215:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[0]->slice_ptr,
 4127              	 .loc 4 1215 0
 4128 00e2 7B68     	 ldr r3,[r7,#4]
 4129 00e4 9B68     	 ldr r3,[r3,#8]
 4130 00e6 1A68     	 ldr r2,[r3]
1216:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4131              	 .loc 4 1216 0
 4132 00e8 BB68     	 ldr r3,[r7,#8]
 4133 00ea 1B7D     	 ldrb r3,[r3,#20]
 4134 00ec 1946     	 mov r1,r3
 4135 00ee BB68     	 ldr r3,[r7,#8]
 4136 00f0 1B7D     	 ldrb r3,[r3,#20]
 4137 00f2 5B00     	 lsls r3,r3,#1
1215:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4138              	 .loc 4 1215 0
 4139 00f4 0B43     	 orrs r3,r3,r1
 4140 00f6 1046     	 mov r0,r2
 4141 00f8 1946     	 mov r1,r3
 4142 00fa FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
1217:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1218:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase v out 0 and 1*/
1219:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[1]->slice_ptr,
 4143              	 .loc 4 1219 0
 4144 00fe 7B68     	 ldr r3,[r7,#4]
 4145 0100 DB68     	 ldr r3,[r3,#12]
 4146 0102 1A68     	 ldr r2,[r3]
1220:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4147              	 .loc 4 1220 0
 4148 0104 BB68     	 ldr r3,[r7,#8]
 4149 0106 5B7D     	 ldrb r3,[r3,#21]
 4150 0108 1946     	 mov r1,r3
 4151 010a BB68     	 ldr r3,[r7,#8]
 4152 010c 5B7D     	 ldrb r3,[r3,#21]
 4153 010e 5B00     	 lsls r3,r3,#1
1219:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4154              	 .loc 4 1219 0
 4155 0110 0B43     	 orrs r3,r3,r1
 4156 0112 1046     	 mov r0,r2
 4157 0114 1946     	 mov r1,r3
 4158 0116 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
1221:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1222:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* Enables trap feature for phase w out 0 and 1*/
1223:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_EnableTrap(HandlePtr->phase_ptr[2]->slice_ptr,
 4159              	 .loc 4 1223 0
 4160 011a 7B68     	 ldr r3,[r7,#4]
 4161 011c 1B69     	 ldr r3,[r3,#16]
 4162 011e 1A68     	 ldr r2,[r3]
1224:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4163              	 .loc 4 1224 0
 4164 0120 BB68     	 ldr r3,[r7,#8]
 4165 0122 9B7D     	 ldrb r3,[r3,#22]
 4166 0124 1946     	 mov r1,r3
 4167 0126 BB68     	 ldr r3,[r7,#8]
 4168 0128 9B7D     	 ldrb r3,[r3,#22]
 4169 012a 5B00     	 lsls r3,r3,#1
1223:../Dave/Generated/PWM_SVM/pwm_svm.c ****           ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4170              	 .loc 4 1223 0
 4171 012c 0B43     	 orrs r3,r3,r1
 4172 012e 1046     	 mov r0,r2
 4173 0130 1946     	 mov r1,r3
 4174 0132 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
 4175              	.L111:
1225:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1226:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1227:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*enable module clock by clearing idle bit if any of current measurement is selected */
1228:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4176              	 .loc 4 1228 0
 4177 0136 BB68     	 ldr r3,[r7,#8]
 4178 0138 1B7C     	 ldrb r3,[r3,#16]
 4179 013a 002B     	 cmp r3,#0
 4180 013c 75D0     	 beq .L112
1229:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1230:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_C
 4181              	 .loc 4 1230 0
 4182 013e 7B68     	 ldr r3,[r7,#4]
 4183 0140 5B69     	 ldr r3,[r3,#20]
 4184 0142 1B68     	 ldr r3,[r3]
 4185 0144 1846     	 mov r0,r3
 4186 0146 0121     	 movs r1,#1
 4187 0148 0122     	 movs r2,#1
 4188 014a FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1231:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1232:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1233:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* offset for current measurement trigger */
1234:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_CMTYPE_t) PWM_SVM_DCLINKCM == svmptr->current_measurement)
 4189              	 .loc 4 1234 0
 4190 014e BB68     	 ldr r3,[r7,#8]
 4191 0150 1B7C     	 ldrb r3,[r3,#16]
 4192 0152 012B     	 cmp r3,#1
 4193 0154 33D1     	 bne .L113
1235:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1236:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[0]->slice_ptr,
 4194              	 .loc 4 1236 0
 4195 0156 7B68     	 ldr r3,[r7,#4]
 4196 0158 9B68     	 ldr r3,[r3,#8]
 4197 015a 1968     	 ldr r1,[r3]
1237:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4198              	 .loc 4 1237 0
 4199 015c 7B68     	 ldr r3,[r7,#4]
 4200 015e B3F8C230 	 ldrh r3,[r3,#194]
 4201 0162 5B08     	 lsrs r3,r3,#1
 4202 0164 9AB2     	 uxth r2,r3
 4203 0166 BB68     	 ldr r3,[r7,#8]
 4204 0168 B3F84030 	 ldrh r3,[r3,#64]
1236:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4205              	 .loc 4 1236 0
 4206 016c 1344     	 add r3,r3,r2
 4207 016e 9BB2     	 uxth r3,r3
 4208 0170 0846     	 mov r0,r1
 4209 0172 1946     	 mov r1,r3
 4210 0174 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1238:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4211              	 .loc 4 1238 0
 4212 0178 7B68     	 ldr r3,[r7,#4]
 4213 017a DB68     	 ldr r3,[r3,#12]
 4214 017c 1968     	 ldr r1,[r3]
1239:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4215              	 .loc 4 1239 0
 4216 017e 7B68     	 ldr r3,[r7,#4]
 4217 0180 B3F8C230 	 ldrh r3,[r3,#194]
 4218 0184 5B08     	 lsrs r3,r3,#1
 4219 0186 9AB2     	 uxth r2,r3
 4220 0188 BB68     	 ldr r3,[r7,#8]
 4221 018a B3F84030 	 ldrh r3,[r3,#64]
1238:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4222              	 .loc 4 1238 0
 4223 018e 1344     	 add r3,r3,r2
 4224 0190 9BB2     	 uxth r3,r3
 4225 0192 0846     	 mov r0,r1
 4226 0194 1946     	 mov r1,r3
 4227 0196 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1240:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4228              	 .loc 4 1240 0
 4229 019a 7B68     	 ldr r3,[r7,#4]
 4230 019c 1B69     	 ldr r3,[r3,#16]
 4231 019e 1968     	 ldr r1,[r3]
1241:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint16_t)(HandlePtr->tmin >> (uint16_t) 1) + (uint16_t) svmptr->current_off
 4232              	 .loc 4 1241 0
 4233 01a0 7B68     	 ldr r3,[r7,#4]
 4234 01a2 B3F8C230 	 ldrh r3,[r3,#194]
 4235 01a6 5B08     	 lsrs r3,r3,#1
 4236 01a8 9AB2     	 uxth r2,r3
 4237 01aa BB68     	 ldr r3,[r7,#8]
 4238 01ac B3F84030 	 ldrh r3,[r3,#64]
1240:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4239              	 .loc 4 1240 0
 4240 01b0 1344     	 add r3,r3,r2
 4241 01b2 9BB2     	 uxth r3,r3
 4242 01b4 0846     	 mov r0,r1
 4243 01b6 1946     	 mov r1,r3
 4244 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
 4245 01bc 35E0     	 b .L112
 4246              	.L113:
1242:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1243:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else
1244:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[0]->slice_ptr,
 4247              	 .loc 4 1245 0
 4248 01be 7B68     	 ldr r3,[r7,#4]
 4249 01c0 9B68     	 ldr r3,[r3,#8]
 4250 01c2 1968     	 ldr r1,[r3]
1246:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4251              	 .loc 4 1246 0
 4252 01c4 7B68     	 ldr r3,[r7,#4]
 4253 01c6 D3F89430 	 ldr r3,[r3,#148]
 4254 01ca 9BB2     	 uxth r3,r3
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4255              	 .loc 4 1245 0
 4256 01cc DBB2     	 uxtb r3,r3
 4257 01ce 9AB2     	 uxth r2,r3
1247:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4258              	 .loc 4 1247 0
 4259 01d0 BB68     	 ldr r3,[r7,#8]
 4260 01d2 B3F84030 	 ldrh r3,[r3,#64]
1245:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4261              	 .loc 4 1245 0
 4262 01d6 1344     	 add r3,r3,r2
 4263 01d8 9BB2     	 uxth r3,r3
 4264 01da 0846     	 mov r0,r1
 4265 01dc 1946     	 mov r1,r3
 4266 01de FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4267              	 .loc 4 1248 0
 4268 01e2 7B68     	 ldr r3,[r7,#4]
 4269 01e4 DB68     	 ldr r3,[r3,#12]
 4270 01e6 1968     	 ldr r1,[r3]
1249:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge) & (uint16_t) 0xFF)
 4271              	 .loc 4 1249 0
 4272 01e8 7B68     	 ldr r3,[r7,#4]
 4273 01ea D3F89430 	 ldr r3,[r3,#148]
 4274 01ee 9BB2     	 uxth r3,r3
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4275              	 .loc 4 1248 0
 4276 01f0 DBB2     	 uxtb r3,r3
 4277 01f2 9AB2     	 uxth r2,r3
1250:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4278              	 .loc 4 1250 0
 4279 01f4 BB68     	 ldr r3,[r7,#8]
 4280 01f6 B3F84030 	 ldrh r3,[r3,#64]
1248:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[1]->slice_ptr,
 4281              	 .loc 4 1248 0
 4282 01fa 1344     	 add r3,r3,r2
 4283 01fc 9BB2     	 uxth r3,r3
 4284 01fe 0846     	 mov r0,r1
 4285 0200 1946     	 mov r1,r3
 4286 0202 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4287              	 .loc 4 1251 0
 4288 0206 7B68     	 ldr r3,[r7,#4]
 4289 0208 1B69     	 ldr r3,[r3,#16]
 4290 020a 1968     	 ldr r1,[r3]
1252:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((((uint16_t) HandlePtr->deadtime_rising_edge ) & (uint16_t) 0xFF)
 4291              	 .loc 4 1252 0
 4292 020c 7B68     	 ldr r3,[r7,#4]
 4293 020e D3F89430 	 ldr r3,[r3,#148]
 4294 0212 9BB2     	 uxth r3,r3
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4295              	 .loc 4 1251 0
 4296 0214 DBB2     	 uxtb r3,r3
 4297 0216 9AB2     	 uxth r2,r3
1253:../Dave/Generated/PWM_SVM/pwm_svm.c ****                     + (uint16_t) svmptr->current_offset));
 4298              	 .loc 4 1253 0
 4299 0218 BB68     	 ldr r3,[r7,#8]
 4300 021a B3F84030 	 ldrh r3,[r3,#64]
1251:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerValue(HandlePtr->phase_ptr[2]->slice_ptr,
 4301              	 .loc 4 1251 0
 4302 021e 1344     	 add r3,r3,r2
 4303 0220 9BB2     	 uxth r3,r3
 4304 0222 0846     	 mov r0,r1
 4305 0224 1946     	 mov r1,r3
 4306 0226 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerValue
 4307              	.L112:
1254:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1255:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1256:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1257:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* synchronous start of CCU8 slices */
1258:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_SCU_SetCcuTriggerHigh((uint32_t)(svmptr->sync_start_mask));
 4308              	 .loc 4 1258 0
 4309 022a BB68     	 ldr r3,[r7,#8]
 4310 022c 1B6A     	 ldr r3,[r3,#32]
 4311 022e 1846     	 mov r0,r3
 4312 0230 FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerHigh
1259:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1260:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* disable the Start trigger function*/
1261:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[0]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4313              	 .loc 4 1261 0
 4314 0234 7B68     	 ldr r3,[r7,#4]
 4315 0236 9B68     	 ldr r3,[r3,#8]
 4316 0238 1B68     	 ldr r3,[r3]
 4317 023a 1846     	 mov r0,r3
 4318 023c 0021     	 movs r1,#0
 4319 023e 0122     	 movs r2,#1
 4320 0240 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1262:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1263:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[1]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4321              	 .loc 4 1263 0
 4322 0244 7B68     	 ldr r3,[r7,#4]
 4323 0246 DB68     	 ldr r3,[r3,#12]
 4324 0248 1B68     	 ldr r3,[r3]
 4325 024a 1846     	 mov r0,r3
 4326 024c 0021     	 movs r1,#0
 4327 024e 0122     	 movs r2,#1
 4328 0250 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1264:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1265:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[2]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_CCU
 4329              	 .loc 4 1265 0
 4330 0254 7B68     	 ldr r3,[r7,#4]
 4331 0256 1B69     	 ldr r3,[r3,#16]
 4332 0258 1B68     	 ldr r3,[r3]
 4333 025a 1846     	 mov r0,r3
 4334 025c 0021     	 movs r1,#0
 4335 025e 0122     	 movs r2,#1
 4336 0260 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
1266:../Dave/Generated/PWM_SVM/pwm_svm.c ****         (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1267:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4337              	 .loc 4 1267 0
 4338 0264 BB68     	 ldr r3,[r7,#8]
 4339 0266 1B7C     	 ldrb r3,[r3,#16]
 4340 0268 002B     	 cmp r3,#0
 4341 026a 07D0     	 beq .L114
1268:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1269:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_StartConfig(HandlePtr->phase_ptr[3]->slice_ptr, (XMC_CCU8_SLICE_EVENT_t) XMC_C
 4342              	 .loc 4 1269 0
 4343 026c 7B68     	 ldr r3,[r7,#4]
 4344 026e 5B69     	 ldr r3,[r3,#20]
 4345 0270 1B68     	 ldr r3,[r3]
 4346 0272 1846     	 mov r0,r3
 4347 0274 0021     	 movs r1,#0
 4348 0276 0122     	 movs r2,#1
 4349 0278 FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
 4350              	.L114:
1270:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (XMC_CCU8_SLICE_START_MODE_t) XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR);
1271:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1272:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1273:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* disable synchronous start of CCU8 slices */
1274:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_SCU_SetCcuTriggerLow((uint32_t)(svmptr->sync_start_mask));
 4351              	 .loc 4 1274 0
 4352 027c BB68     	 ldr r3,[r7,#8]
 4353 027e 1B6A     	 ldr r3,[r3,#32]
 4354 0280 1846     	 mov r0,r3
 4355 0282 FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerLow
1275:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1276:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* change the state to RUNNING*/
1277:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->state = PWM_SVM_RUNNING;
 4356              	 .loc 4 1277 0
 4357 0286 7B68     	 ldr r3,[r7,#4]
 4358 0288 0222     	 movs r2,#2
 4359 028a 83F89020 	 strb r2,[r3,#144]
 4360              	.L105:
1278:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1279:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4361              	 .loc 4 1279 0
 4362 028e 1037     	 adds r7,r7,#16
 4363              	.LCFI167:
 4364              	 .cfi_def_cfa_offset 8
 4365 0290 BD46     	 mov sp,r7
 4366              	.LCFI168:
 4367              	 .cfi_def_cfa_register 13
 4368              	 
 4369 0292 80BD     	 pop {r7,pc}
 4370              	 .cfi_endproc
 4371              	.LFE256:
 4373              	 .section .text.PWM_SVM_Stop,"ax",%progbits
 4374              	 .align 2
 4375              	 .global PWM_SVM_Stop
 4376              	 .thumb
 4377              	 .thumb_func
 4379              	PWM_SVM_Stop:
 4380              	.LFB257:
1280:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1281:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1282:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This function stops the CCU8 slices used to generate SVM.
1283:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1284:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_Stop(PWM_SVM_t* const HandlePtr)
1285:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4381              	 .loc 4 1285 0
 4382              	 .cfi_startproc
 4383              	 
 4384              	 
 4385 0000 80B5     	 push {r7,lr}
 4386              	.LCFI169:
 4387              	 .cfi_def_cfa_offset 8
 4388              	 .cfi_offset 7,-8
 4389              	 .cfi_offset 14,-4
 4390 0002 84B0     	 sub sp,sp,#16
 4391              	.LCFI170:
 4392              	 .cfi_def_cfa_offset 24
 4393 0004 00AF     	 add r7,sp,#0
 4394              	.LCFI171:
 4395              	 .cfi_def_cfa_register 7
 4396 0006 7860     	 str r0,[r7,#4]
1286:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1287:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4397              	 .loc 4 1287 0
 4398 0008 7B68     	 ldr r3,[r7,#4]
 4399 000a 1B68     	 ldr r3,[r3]
 4400 000c BB60     	 str r3,[r7,#8]
1288:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_Stop:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1289:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Inverter Enable pin level is set to passive level.*/
1290:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_InverterDisable(HandlePtr);
 4401              	 .loc 4 1290 0
 4402 000e 7868     	 ldr r0,[r7,#4]
 4403 0010 FFF7FEFF 	 bl PWM_SVM_InverterDisable
1291:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1292:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Disable trap */
1293:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) 1 == svmptr->enable_trap)
 4404              	 .loc 4 1293 0
 4405 0014 BB68     	 ldr r3,[r7,#8]
 4406 0016 93F84730 	 ldrb r3,[r3,#71]
 4407 001a 012B     	 cmp r3,#1
 4408 001c 3ED1     	 bne .L116
1294:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1295:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase u out 0 and 1*/
1296:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[0]->slice_ptr,
 4409              	 .loc 4 1296 0
 4410 001e 7B68     	 ldr r3,[r7,#4]
 4411 0020 9B68     	 ldr r3,[r3,#8]
 4412 0022 1A68     	 ldr r2,[r3]
1297:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4413              	 .loc 4 1297 0
 4414 0024 BB68     	 ldr r3,[r7,#8]
 4415 0026 1B7D     	 ldrb r3,[r3,#20]
 4416 0028 1946     	 mov r1,r3
 4417 002a BB68     	 ldr r3,[r7,#8]
 4418 002c 1B7D     	 ldrb r3,[r3,#20]
 4419 002e 5B00     	 lsls r3,r3,#1
1296:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_u_out0 | ((uint32_t) svmptr->phase_u_out0 << 1U)));
 4420              	 .loc 4 1296 0
 4421 0030 0B43     	 orrs r3,r3,r1
 4422 0032 1046     	 mov r0,r2
 4423 0034 1946     	 mov r1,r3
 4424 0036 FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1298:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1299:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase v out 0 and 1*/
1300:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[1]->slice_ptr,
 4425              	 .loc 4 1300 0
 4426 003a 7B68     	 ldr r3,[r7,#4]
 4427 003c DB68     	 ldr r3,[r3,#12]
 4428 003e 1A68     	 ldr r2,[r3]
1301:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4429              	 .loc 4 1301 0
 4430 0040 BB68     	 ldr r3,[r7,#8]
 4431 0042 5B7D     	 ldrb r3,[r3,#21]
 4432 0044 1946     	 mov r1,r3
 4433 0046 BB68     	 ldr r3,[r7,#8]
 4434 0048 5B7D     	 ldrb r3,[r3,#21]
 4435 004a 5B00     	 lsls r3,r3,#1
1300:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_v_out0 | ((uint32_t) svmptr->phase_v_out0 << 1U)));
 4436              	 .loc 4 1300 0
 4437 004c 0B43     	 orrs r3,r3,r1
 4438 004e 1046     	 mov r0,r2
 4439 0050 1946     	 mov r1,r3
 4440 0052 FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1302:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1303:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* Disables trap feature for phase w out 0 and 1*/
1304:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_DisableTrap(HandlePtr->phase_ptr[2]->slice_ptr,
 4441              	 .loc 4 1304 0
 4442 0056 7B68     	 ldr r3,[r7,#4]
 4443 0058 1B69     	 ldr r3,[r3,#16]
 4444 005a 1A68     	 ldr r2,[r3]
1305:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4445              	 .loc 4 1305 0
 4446 005c BB68     	 ldr r3,[r7,#8]
 4447 005e 9B7D     	 ldrb r3,[r3,#22]
 4448 0060 1946     	 mov r1,r3
 4449 0062 BB68     	 ldr r3,[r7,#8]
 4450 0064 9B7D     	 ldrb r3,[r3,#22]
 4451 0066 5B00     	 lsls r3,r3,#1
1304:../Dave/Generated/PWM_SVM/pwm_svm.c ****         ((uint32_t) svmptr->phase_w_out0 | ((uint32_t) svmptr->phase_w_out0 << 1U)));
 4452              	 .loc 4 1304 0
 4453 0068 0B43     	 orrs r3,r3,r1
 4454 006a 1046     	 mov r0,r2
 4455 006c 1946     	 mov r1,r3
 4456 006e FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableTrap
1306:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1307:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[0]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4457              	 .loc 4 1307 0
 4458 0072 7B68     	 ldr r3,[r7,#4]
 4459 0074 9B68     	 ldr r3,[r3,#8]
 4460 0076 1B68     	 ldr r3,[r3]
 4461 0078 1846     	 mov r0,r3
 4462 007a 0B21     	 movs r1,#11
 4463 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1308:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[1]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4464              	 .loc 4 1308 0
 4465 0080 7B68     	 ldr r3,[r7,#4]
 4466 0082 DB68     	 ldr r3,[r3,#12]
 4467 0084 1B68     	 ldr r3,[r3]
 4468 0086 1846     	 mov r0,r3
 4469 0088 0B21     	 movs r1,#11
 4470 008a FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
1309:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_ClearEvent(HandlePtr->phase_ptr[2]->slice_ptr, XMC_CCU8_SLICE_IRQ_ID_TRAP);
 4471              	 .loc 4 1309 0
 4472 008e 7B68     	 ldr r3,[r7,#4]
 4473 0090 1B69     	 ldr r3,[r3,#16]
 4474 0092 1B68     	 ldr r3,[r3]
 4475 0094 1846     	 mov r0,r3
 4476 0096 0B21     	 movs r1,#11
 4477 0098 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 4478              	.L116:
1310:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1311:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1312:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* stop all three phases */
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4479              	 .loc 4 1313 0
 4480 009c 0023     	 movs r3,#0
 4481 009e FB60     	 str r3,[r7,#12]
 4482 00a0 0BE0     	 b .L117
 4483              	.L118:
1314:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1315:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StopTimer(HandlePtr->phase_ptr[count]->slice_ptr);
 4484              	 .loc 4 1315 0 discriminator 3
 4485 00a2 7B68     	 ldr r3,[r7,#4]
 4486 00a4 FA68     	 ldr r2,[r7,#12]
 4487 00a6 0232     	 adds r2,r2,#2
 4488 00a8 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4489 00ac 1B68     	 ldr r3,[r3]
 4490 00ae 1846     	 mov r0,r3
 4491 00b0 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 4492              	 .loc 4 1313 0 discriminator 3
 4493 00b4 FB68     	 ldr r3,[r7,#12]
 4494 00b6 0133     	 adds r3,r3,#1
 4495 00b8 FB60     	 str r3,[r7,#12]
 4496              	.L117:
1313:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
 4497              	 .loc 4 1313 0 is_stmt 0 discriminator 1
 4498 00ba FB68     	 ldr r3,[r7,#12]
 4499 00bc 022B     	 cmp r3,#2
 4500 00be F0D9     	 bls .L118
1316:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1317:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != svmptr->current_measurement)
 4501              	 .loc 4 1317 0 is_stmt 1
 4502 00c0 BB68     	 ldr r3,[r7,#8]
 4503 00c2 1B7C     	 ldrb r3,[r3,#16]
 4504 00c4 002B     	 cmp r3,#0
 4505 00c6 05D0     	 beq .L119
1318:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1319:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_StopTimer(HandlePtr->phase_ptr[3]->slice_ptr);
 4506              	 .loc 4 1319 0
 4507 00c8 7B68     	 ldr r3,[r7,#4]
 4508 00ca 5B69     	 ldr r3,[r3,#20]
 4509 00cc 1B68     	 ldr r3,[r3]
 4510 00ce 1846     	 mov r0,r3
 4511 00d0 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 4512              	.L119:
1320:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1321:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1322:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_SCU_SetCcuTriggerLow((uint32_t) svmptr->sync_start_mask);
 4513              	 .loc 4 1322 0
 4514 00d4 BB68     	 ldr r3,[r7,#8]
 4515 00d6 1B6A     	 ldr r3,[r3,#32]
 4516 00d8 1846     	 mov r0,r3
 4517 00da FFF7FEFF 	 bl XMC_SCU_SetCcuTriggerLow
1323:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->state = (PWM_SVM_STATE_t) PWM_SVM_STOPPED;
 4518              	 .loc 4 1323 0
 4519 00de 7B68     	 ldr r3,[r7,#4]
 4520 00e0 0322     	 movs r2,#3
 4521 00e2 83F89020 	 strb r2,[r3,#144]
1324:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1325:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4522              	 .loc 4 1325 0
 4523 00e6 1037     	 adds r7,r7,#16
 4524              	.LCFI172:
 4525              	 .cfi_def_cfa_offset 8
 4526 00e8 BD46     	 mov sp,r7
 4527              	.LCFI173:
 4528              	 .cfi_def_cfa_register 13
 4529              	 
 4530 00ea 80BD     	 pop {r7,pc}
 4531              	 .cfi_endproc
 4532              	.LFE257:
 4534              	 .section .ram_code
 4535              	 .align 2
 4536              	 .global PWM_SVM_SVMUpdate
 4537              	 .thumb
 4538              	 .thumb_func
 4540              	PWM_SVM_SVMUpdate:
 4541              	.LFB258:
1326:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1327:../Dave/Generated/PWM_SVM/pwm_svm.c **** /**
1328:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * This is the SVM algorithm for sinusoidal commutation.
1329:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * It updates the compare registers of the CCU8 slices as per calculated
1330:../Dave/Generated/PWM_SVM/pwm_svm.c ****  * duty cycle.
1331:../Dave/Generated/PWM_SVM/pwm_svm.c ****  */
1332:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_SVMUpdate(PWM_SVM_t* const HandlePtr, uint16_t Amplitude, uint32_t Angle)
1333:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4542              	 .loc 4 1333 0
 4543              	 .cfi_startproc
 4544              	 
 4545              	 
 4546 0400 80B5     	 push {r7,lr}
 4547              	.LCFI174:
 4548              	 .cfi_def_cfa_offset 8
 4549              	 .cfi_offset 7,-8
 4550              	 .cfi_offset 14,-4
 4551 0402 86B0     	 sub sp,sp,#24
 4552              	.LCFI175:
 4553              	 .cfi_def_cfa_offset 32
 4554 0404 00AF     	 add r7,sp,#0
 4555              	.LCFI176:
 4556              	 .cfi_def_cfa_register 7
 4557 0406 F860     	 str r0,[r7,#12]
 4558 0408 0B46     	 mov r3,r1
 4559 040a 7A60     	 str r2,[r7,#4]
 4560 040c 7B81     	 strh r3,[r7,#10]
1334:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4561              	 .loc 4 1334 0
 4562 040e FB68     	 ldr r3,[r7,#12]
 4563 0410 1B68     	 ldr r3,[r3]
 4564 0412 7B61     	 str r3,[r7,#20]
1335:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SVMUpdate:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1336:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1337:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*This function calculates segment time ta, tb using CORDIC or LUT as per UI configuration */
1338:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->seg_time_calc_ptr(HandlePtr, (uint16_t) Amplitude, (uint32_t) Angle);
 4565              	 .loc 4 1338 0
 4566 0414 FB68     	 ldr r3,[r7,#12]
 4567 0416 D3F88C30 	 ldr r3,[r3,#140]
 4568 041a 7A89     	 ldrh r2,[r7,#10]
 4569 041c F868     	 ldr r0,[r7,#12]
 4570 041e 1146     	 mov r1,r2
 4571 0420 7A68     	 ldr r2,[r7,#4]
 4572 0422 9847     	 blx r3
1339:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*This function calculates and updates compare values in compare register*/
1340:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->svm_schemesel_ptr(HandlePtr);
 4573              	 .loc 4 1340 0
 4574 0424 FB68     	 ldr r3,[r7,#12]
 4575 0426 D3F88830 	 ldr r3,[r3,#136]
 4576 042a F868     	 ldr r0,[r7,#12]
 4577 042c 9847     	 blx r3
1341:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1342:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Enable the shadow transfer for all three slice*/
1343:../Dave/Generated/PWM_SVM/pwm_svm.c ****   HandlePtr->global_ptr->GCSS |= svmptr->shadow_transfer_mask;
 4578              	 .loc 4 1343 0
 4579 042e FB68     	 ldr r3,[r7,#12]
 4580 0430 5B68     	 ldr r3,[r3,#4]
 4581 0432 FA68     	 ldr r2,[r7,#12]
 4582 0434 5268     	 ldr r2,[r2,#4]
 4583 0436 1169     	 ldr r1,[r2,#16]
 4584 0438 7A69     	 ldr r2,[r7,#20]
 4585 043a 526A     	 ldr r2,[r2,#36]
 4586 043c 0A43     	 orrs r2,r2,r1
 4587 043e 1A61     	 str r2,[r3,#16]
1344:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4588              	 .loc 4 1344 0
 4589 0440 1837     	 adds r7,r7,#24
 4590              	.LCFI177:
 4591              	 .cfi_def_cfa_offset 8
 4592 0442 BD46     	 mov sp,r7
 4593              	.LCFI178:
 4594              	 .cfi_def_cfa_register 13
 4595              	 
 4596 0444 80BD     	 pop {r7,pc}
 4597              	 .cfi_endproc
 4598              	.LFE258:
 4600 0446 00BF     	 .section .text.PWM_SVM_SetPWMFrequency,"ax",%progbits
 4601              	 .align 2
 4602              	 .global PWM_SVM_SetPWMFrequency
 4603              	 .thumb
 4604              	 .thumb_func
 4606              	PWM_SVM_SetPWMFrequency:
 4607              	.LFB259:
1345:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1346:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1347:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API updates the PWM Frequency in terms of hertz*/
1348:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetPWMFrequency(PWM_SVM_t* const HandlePtr, uint32_t Frequency)
1349:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4608              	 .loc 4 1349 0
 4609              	 .cfi_startproc
 4610              	 
 4611              	 
 4612 0000 80B5     	 push {r7,lr}
 4613              	.LCFI179:
 4614              	 .cfi_def_cfa_offset 8
 4615              	 .cfi_offset 7,-8
 4616              	 .cfi_offset 14,-4
 4617 0002 88B0     	 sub sp,sp,#32
 4618              	.LCFI180:
 4619              	 .cfi_def_cfa_offset 40
 4620 0004 00AF     	 add r7,sp,#0
 4621              	.LCFI181:
 4622              	 .cfi_def_cfa_register 7
 4623 0006 7860     	 str r0,[r7,#4]
 4624 0008 3960     	 str r1,[r7]
1350:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t pwm_time;
1351:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t period;
1352:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1353:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t max_amplitude_count;
1354:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_FAILURE;
 4625              	 .loc 4 1354 0
 4626 000a 0123     	 movs r3,#1
 4627 000c FB74     	 strb r3,[r7,#19]
1355:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4628              	 .loc 4 1355 0
 4629 000e 7B68     	 ldr r3,[r7,#4]
 4630 0010 1B68     	 ldr r3,[r3]
 4631 0012 FB60     	 str r3,[r7,#12]
1356:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetPWMFrequency:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1357:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1358:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 4632              	 .loc 4 1358 0
 4633 0014 7B68     	 ldr r3,[r7,#4]
 4634 0016 93F89030 	 ldrb r3,[r3,#144]
 4635 001a 012B     	 cmp r3,#1
 4636 001c 04D0     	 beq .L122
1359:../Dave/Generated/PWM_SVM/pwm_svm.c ****       || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 4637              	 .loc 4 1359 0
 4638 001e 7B68     	 ldr r3,[r7,#4]
 4639 0020 93F89030 	 ldrb r3,[r3,#144]
 4640 0024 032B     	 cmp r3,#3
 4641 0026 7ED1     	 bne .L123
 4642              	.L122:
1360:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1361:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((Frequency > HandlePtr->confighandle_ptr->period_min) && (Frequency <= HandlePtr->confighan
 4643              	 .loc 4 1361 0
 4644 0028 7B68     	 ldr r3,[r7,#4]
 4645 002a 1B68     	 ldr r3,[r3]
 4646 002c DA6B     	 ldr r2,[r3,#60]
 4647 002e 3B68     	 ldr r3,[r7]
 4648 0030 9A42     	 cmp r2,r3
 4649 0032 76D2     	 bcs .L124
 4650              	 .loc 4 1361 0 is_stmt 0 discriminator 1
 4651 0034 7B68     	 ldr r3,[r7,#4]
 4652 0036 1B68     	 ldr r3,[r3]
 4653 0038 9A6B     	 ldr r2,[r3,#56]
 4654 003a 3B68     	 ldr r3,[r7]
 4655 003c 9A42     	 cmp r2,r3
 4656 003e 70D3     	 bcc .L124
1362:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1363:../Dave/Generated/PWM_SVM/pwm_svm.c ****       pwm_time = (uint32_t)((svmptr->module_freq) / Frequency);
 4657              	 .loc 4 1363 0 is_stmt 1
 4658 0040 FB68     	 ldr r3,[r7,#12]
 4659 0042 DA69     	 ldr r2,[r3,#28]
 4660 0044 3B68     	 ldr r3,[r7]
 4661 0046 B2FBF3F3 	 udiv r3,r2,r3
 4662 004a BB60     	 str r3,[r7,#8]
1364:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1365:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == HandlePtr->phase_configinit_ptr->timer_m
 4663              	 .loc 4 1365 0
 4664 004c 7B68     	 ldr r3,[r7,#4]
 4665 004e 9B69     	 ldr r3,[r3,#24]
 4666 0050 1B78     	 ldrb r3,[r3]
 4667 0052 03F00103 	 and r3,r3,#1
 4668 0056 DBB2     	 uxtb r3,r3
 4669 0058 002B     	 cmp r3,#0
 4670 005a 03D1     	 bne .L125
1366:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1367:../Dave/Generated/PWM_SVM/pwm_svm.c ****         period = (uint32_t)(pwm_time - 1U);
 4671              	 .loc 4 1367 0
 4672 005c BB68     	 ldr r3,[r7,#8]
 4673 005e 013B     	 subs r3,r3,#1
 4674 0060 FB61     	 str r3,[r7,#28]
 4675 0062 03E0     	 b .L126
 4676              	.L125:
1368:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1369:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else /*CENTER_ALIGNED - hence half of the calculated period value is used*/
1370:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1371:../Dave/Generated/PWM_SVM/pwm_svm.c ****         period = (uint32_t)((pwm_time >> 1U) - 1U);
 4677              	 .loc 4 1371 0
 4678 0064 BB68     	 ldr r3,[r7,#8]
 4679 0066 5B08     	 lsrs r3,r3,#1
 4680 0068 013B     	 subs r3,r3,#1
 4681 006a FB61     	 str r3,[r7,#28]
 4682              	.L126:
1372:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1373:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*set max amplitude for pseudo null vector based on scheme*/
1374:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_SVMCONFIG_t) PWM_SVM_PSEUDONULL_3ACTIVE == HandlePtr->svm_config)
 4683              	 .loc 4 1374 0
 4684 006c 7B68     	 ldr r3,[r7,#4]
 4685 006e 93F89230 	 ldrb r3,[r3,#146]
 4686 0072 042B     	 cmp r3,#4
 4687 0074 0AD1     	 bne .L127
1375:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1376:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 
 4688              	 .loc 4 1376 0
 4689 0076 7B68     	 ldr r3,[r7,#4]
 4690 0078 B3F8C430 	 ldrh r3,[r3,#196]
 4691 007c 1A46     	 mov r2,r3
 4692 007e 1346     	 mov r3,r2
 4693 0080 5B00     	 lsls r3,r3,#1
 4694 0082 1344     	 add r3,r3,r2
 4695 0084 C3F58043 	 rsb r3,r3,#16384
 4696 0088 7B61     	 str r3,[r7,#20]
 4697 008a 13E0     	 b .L128
 4698              	.L127:
1377:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1378:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else if ((PWM_SVM_SVMCONFIG_t) PWM_SVM_PSEUDONULL_4ACTIVE == HandlePtr->svm_config)
 4699              	 .loc 4 1378 0
 4700 008c 7B68     	 ldr r3,[r7,#4]
 4701 008e 93F89230 	 ldrb r3,[r3,#146]
 4702 0092 052B     	 cmp r3,#5
 4703 0094 0BD1     	 bne .L129
1379:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1380:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 
 4704              	 .loc 4 1380 0
 4705 0096 7B68     	 ldr r3,[r7,#4]
 4706 0098 B3F8C430 	 ldrh r3,[r3,#196]
 4707 009c 1A46     	 mov r2,r3
 4708 009e 1346     	 mov r3,r2
 4709 00a0 9B07     	 lsls r3,r3,#30
 4710 00a2 9B1A     	 subs r3,r3,r2
 4711 00a4 9B00     	 lsls r3,r3,#2
 4712 00a6 03F58043 	 add r3,r3,#16384
 4713 00aa 7B61     	 str r3,[r7,#20]
 4714 00ac 02E0     	 b .L128
 4715              	.L129:
1381:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1382:../Dave/Generated/PWM_SVM/pwm_svm.c ****       else
1383:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1384:../Dave/Generated/PWM_SVM/pwm_svm.c ****         max_amplitude_count = (uint32_t) PWM_SVM_MAX_AMPLITUDE;
 4716              	 .loc 4 1384 0
 4717 00ae 4FF48043 	 mov r3,#16384
 4718 00b2 7B61     	 str r3,[r7,#20]
 4719              	.L128:
1385:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1386:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*update the calcualted period value in period register*/
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 4720              	 .loc 4 1387 0
 4721 00b4 0023     	 movs r3,#0
 4722 00b6 BB61     	 str r3,[r7,#24]
 4723 00b8 0EE0     	 b .L130
 4724              	.L131:
1388:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1389:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[count]->slice_ptr, (uint16_t) perio
 4725              	 .loc 4 1389 0 discriminator 3
 4726 00ba 7B68     	 ldr r3,[r7,#4]
 4727 00bc BA69     	 ldr r2,[r7,#24]
 4728 00be 0232     	 adds r2,r2,#2
 4729 00c0 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4730 00c4 1A68     	 ldr r2,[r3]
 4731 00c6 FB69     	 ldr r3,[r7,#28]
 4732 00c8 9BB2     	 uxth r3,r3
 4733 00ca 1046     	 mov r0,r2
 4734 00cc 1946     	 mov r1,r3
 4735 00ce FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
 4736              	 .loc 4 1387 0 discriminator 3
 4737 00d2 BB69     	 ldr r3,[r7,#24]
 4738 00d4 0133     	 adds r3,r3,#1
 4739 00d6 BB61     	 str r3,[r7,#24]
 4740              	.L130:
1387:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
 4741              	 .loc 4 1387 0 is_stmt 0 discriminator 1
 4742 00d8 BB69     	 ldr r3,[r7,#24]
 4743 00da 022B     	 cmp r3,#2
 4744 00dc EDD9     	 bls .L131
1390:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1391:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 4745              	 .loc 4 1391 0 is_stmt 1
 4746 00de 7B68     	 ldr r3,[r7,#4]
 4747 00e0 1B68     	 ldr r3,[r3]
 4748 00e2 1B7C     	 ldrb r3,[r3,#16]
 4749 00e4 002B     	 cmp r3,#0
 4750 00e6 08D0     	 beq .L132
1392:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1393:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) period);
 4751              	 .loc 4 1393 0
 4752 00e8 7B68     	 ldr r3,[r7,#4]
 4753 00ea 5B69     	 ldr r3,[r3,#20]
 4754 00ec 1A68     	 ldr r2,[r3]
 4755 00ee FB69     	 ldr r3,[r7,#28]
 4756 00f0 9BB2     	 uxth r3,r3
 4757 00f2 1046     	 mov r0,r2
 4758 00f4 1946     	 mov r1,r3
 4759 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 4760              	.L132:
1394:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1395:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1396:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Enable the shadow transfer for all three slice*/
1397:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, svmptr->shadow_transfer_mask);
 4761              	 .loc 4 1397 0
 4762 00fa 7B68     	 ldr r3,[r7,#4]
 4763 00fc 5A68     	 ldr r2,[r3,#4]
 4764 00fe FB68     	 ldr r3,[r7,#12]
 4765 0100 5B6A     	 ldr r3,[r3,#36]
 4766 0102 1046     	 mov r0,r2
 4767 0104 1946     	 mov r1,r3
 4768 0106 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1398:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* update dynamic handle parameters */
1399:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->period = (uint32_t) period;
 4769              	 .loc 4 1399 0
 4770 010a 7B68     	 ldr r3,[r7,#4]
 4771 010c FA69     	 ldr r2,[r7,#28]
 4772 010e C3F89C20 	 str r2,[r3,#156]
1400:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->max_amplitude = (uint16_t) max_amplitude_count;
 4773              	 .loc 4 1400 0
 4774 0112 7B69     	 ldr r3,[r7,#20]
 4775 0114 9AB2     	 uxth r2,r3
 4776 0116 7B68     	 ldr r3,[r7,#4]
 4777 0118 A3F8C620 	 strh r2,[r3,#198]
1401:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_STATUS_SUCCESS;
 4778              	 .loc 4 1401 0
 4779 011c 0023     	 movs r3,#0
 4780 011e FB74     	 strb r3,[r7,#19]
 4781 0120 01E0     	 b .L123
 4782              	.L124:
1402:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1403:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1404:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1405:../Dave/Generated/PWM_SVM/pwm_svm.c ****       status = PWM_SVM_INVALID_PARAM;
 4783              	 .loc 4 1405 0
 4784 0122 0223     	 movs r3,#2
 4785 0124 FB74     	 strb r3,[r7,#19]
 4786              	.L123:
1406:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1407:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1408:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return status;
 4787              	 .loc 4 1408 0
 4788 0126 FB7C     	 ldrb r3,[r7,#19]
1409:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4789              	 .loc 4 1409 0
 4790 0128 1846     	 mov r0,r3
 4791 012a 2037     	 adds r7,r7,#32
 4792              	.LCFI182:
 4793              	 .cfi_def_cfa_offset 8
 4794 012c BD46     	 mov sp,r7
 4795              	.LCFI183:
 4796              	 .cfi_def_cfa_register 13
 4797              	 
 4798 012e 80BD     	 pop {r7,pc}
 4799              	 .cfi_endproc
 4800              	.LFE259:
 4802              	 .section .text.PWM_SVM_GetPWMFrequency,"ax",%progbits
 4803              	 .align 2
 4804              	 .global PWM_SVM_GetPWMFrequency
 4805              	 .thumb
 4806              	 .thumb_func
 4808              	PWM_SVM_GetPWMFrequency:
 4809              	.LFB260:
1410:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1411:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the PWM Frequency in terms of hertz*/
1412:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetPWMFrequency(PWM_SVM_t* const HandlePtr)
1413:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4810              	 .loc 4 1413 0
 4811              	 .cfi_startproc
 4812              	 
 4813              	 
 4814              	 
 4815 0000 80B4     	 push {r7}
 4816              	.LCFI184:
 4817              	 .cfi_def_cfa_offset 4
 4818              	 .cfi_offset 7,-4
 4819 0002 85B0     	 sub sp,sp,#20
 4820              	.LCFI185:
 4821              	 .cfi_def_cfa_offset 24
 4822 0004 00AF     	 add r7,sp,#0
 4823              	.LCFI186:
 4824              	 .cfi_def_cfa_register 7
 4825 0006 7860     	 str r0,[r7,#4]
1414:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t frequency;
1415:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4826              	 .loc 4 1415 0
 4827 0008 7B68     	 ldr r3,[r7,#4]
 4828 000a 1B68     	 ldr r3,[r3]
 4829 000c BB60     	 str r3,[r7,#8]
1416:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetPWMFrequency:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1417:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1418:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*calculate the frequency based on timer mode*/
1419:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == HandlePtr->phase_configinit_ptr->timer_mode)
 4830              	 .loc 4 1419 0
 4831 000e 7B68     	 ldr r3,[r7,#4]
 4832 0010 9B69     	 ldr r3,[r3,#24]
 4833 0012 1B78     	 ldrb r3,[r3]
 4834 0014 03F00103 	 and r3,r3,#1
 4835 0018 DBB2     	 uxtb r3,r3
 4836 001a 002B     	 cmp r3,#0
 4837 001c 09D1     	 bne .L135
1420:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1421:../Dave/Generated/PWM_SVM/pwm_svm.c ****     frequency = (uint32_t)((uint32_t) svmptr->module_freq / ((uint32_t) HandlePtr->period + 1U));
 4838              	 .loc 4 1421 0
 4839 001e BB68     	 ldr r3,[r7,#8]
 4840 0020 DA69     	 ldr r2,[r3,#28]
 4841 0022 7B68     	 ldr r3,[r7,#4]
 4842 0024 D3F89C30 	 ldr r3,[r3,#156]
 4843 0028 0133     	 adds r3,r3,#1
 4844 002a B2FBF3F3 	 udiv r3,r2,r3
 4845 002e FB60     	 str r3,[r7,#12]
 4846 0030 09E0     	 b .L136
 4847              	.L135:
1422:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1423:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1424:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1425:../Dave/Generated/PWM_SVM/pwm_svm.c ****     frequency = (uint32_t)((uint32_t) svmptr->module_freq / (((uint32_t) HandlePtr->period + 1U) <<
 4848              	 .loc 4 1425 0
 4849 0032 BB68     	 ldr r3,[r7,#8]
 4850 0034 DA69     	 ldr r2,[r3,#28]
 4851 0036 7B68     	 ldr r3,[r7,#4]
 4852 0038 D3F89C30 	 ldr r3,[r3,#156]
 4853 003c 0133     	 adds r3,r3,#1
 4854 003e 5B00     	 lsls r3,r3,#1
 4855 0040 B2FBF3F3 	 udiv r3,r2,r3
 4856 0044 FB60     	 str r3,[r7,#12]
 4857              	.L136:
1426:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1427:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*return the calculated frequency*/
1428:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (frequency);
 4858              	 .loc 4 1428 0
 4859 0046 FB68     	 ldr r3,[r7,#12]
1429:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 4860              	 .loc 4 1429 0
 4861 0048 1846     	 mov r0,r3
 4862 004a 1437     	 adds r7,r7,#20
 4863              	.LCFI187:
 4864              	 .cfi_def_cfa_offset 4
 4865 004c BD46     	 mov sp,r7
 4866              	.LCFI188:
 4867              	 .cfi_def_cfa_register 13
 4868              	 
 4869 004e 5DF8047B 	 ldr r7,[sp],#4
 4870              	.LCFI189:
 4871              	 .cfi_restore 7
 4872              	 .cfi_def_cfa_offset 0
 4873 0052 7047     	 bx lr
 4874              	 .cfi_endproc
 4875              	.LFE260:
 4877              	 .section .text.PWM_SVM_SetDeadTime,"ax",%progbits
 4878              	 .align 2
 4879              	 .global PWM_SVM_SetDeadTime
 4880              	 .thumb
 4881              	 .thumb_func
 4883              	PWM_SVM_SetDeadTime:
 4884              	.LFB261:
1430:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1431:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API updates the ccu8 pwm phase deadtime dynamically*/
1432:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API sets the dead time value in terms of nano seconds*/
1433:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetDeadTime(PWM_SVM_t* const HandlePtr, uint32_t DeadTimeRisingEdge,
1434:../Dave/Generated/PWM_SVM/pwm_svm.c ****                                      uint32_t DeadTimeFallingEdge)
1435:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 4885              	 .loc 4 1435 0
 4886              	 .cfi_startproc
 4887              	 
 4888              	 
 4889 0000 80B5     	 push {r7,lr}
 4890              	.LCFI190:
 4891              	 .cfi_def_cfa_offset 8
 4892              	 .cfi_offset 7,-8
 4893              	 .cfi_offset 14,-4
 4894 0002 8AB0     	 sub sp,sp,#40
 4895              	.LCFI191:
 4896              	 .cfi_def_cfa_offset 48
 4897 0004 00AF     	 add r7,sp,#0
 4898              	.LCFI192:
 4899              	 .cfi_def_cfa_register 7
 4900 0006 F860     	 str r0,[r7,#12]
 4901 0008 B960     	 str r1,[r7,#8]
 4902 000a 7A60     	 str r2,[r7,#4]
1436:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime_count;
1437:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t count;
1438:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime_max;
1439:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 4903              	 .loc 4 1439 0
 4904 000c 0023     	 movs r3,#0
 4905 000e FB76     	 strb r3,[r7,#27]
1440:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_CCU8_SLICE_DTC_DIV_t prescaler = HandlePtr->deadtime_div;
 4906              	 .loc 4 1440 0
 4907 0010 FB68     	 ldr r3,[r7,#12]
 4908 0012 93F89130 	 ldrb r3,[r3,#145]
 4909 0016 BB76     	 strb r3,[r7,#26]
1441:../Dave/Generated/PWM_SVM/pwm_svm.c ****   const PWM_SVM_Config_t* const svmptr = HandlePtr->confighandle_ptr;
 4910              	 .loc 4 1441 0
 4911 0018 FB68     	 ldr r3,[r7,#12]
 4912 001a 1B68     	 ldr r3,[r3]
 4913 001c 3B61     	 str r3,[r7,#16]
1442:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = ((svmptr->module_freq >> (uint32_t) prescaler) / PWM_SVM_MILLISECCONV)
 4914              	 .loc 4 1442 0
 4915 001e 3B69     	 ldr r3,[r7,#16]
 4916 0020 DA69     	 ldr r2,[r3,#28]
 4917 0022 BB7E     	 ldrb r3,[r7,#26]
 4918 0024 22FA03F3 	 lsr r3,r2,r3
 4919 0028 484A     	 ldr r2,.L151
 4920 002a A2FB0323 	 umull r2,r3,r2,r3
 4921 002e 9B09     	 lsrs r3,r3,#6
 4922 0030 7B61     	 str r3,[r7,#20]
1443:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1444:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /*Check for maximum dead time */
1445:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (DeadTimeRisingEdge > DeadTimeFallingEdge)
 4923              	 .loc 4 1445 0
 4924 0032 BA68     	 ldr r2,[r7,#8]
 4925 0034 7B68     	 ldr r3,[r7,#4]
 4926 0036 9A42     	 cmp r2,r3
 4927 0038 02D9     	 bls .L139
1446:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1447:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_max = DeadTimeRisingEdge;
 4928              	 .loc 4 1447 0
 4929 003a BB68     	 ldr r3,[r7,#8]
 4930 003c FB61     	 str r3,[r7,#28]
 4931 003e 01E0     	 b .L140
 4932              	.L139:
1448:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1449:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1450:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1451:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_max = DeadTimeFallingEdge;
 4933              	 .loc 4 1451 0
 4934 0040 7B68     	 ldr r3,[r7,#4]
 4935 0042 FB61     	 str r3,[r7,#28]
 4936              	.L140:
1452:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1453:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((deadtime_max > PWM_SVM_DEADTIME_LOWERLIMIT) && (deadtime_max <= PWM_SVM_DEADTIME_UPPERLIMIT)
 4937              	 .loc 4 1453 0
 4938 0044 FB69     	 ldr r3,[r7,#28]
 4939 0046 322B     	 cmp r3,#50
 4940 0048 79D9     	 bls .L141
 4941              	 .loc 4 1453 0 is_stmt 0 discriminator 1
 4942 004a FB69     	 ldr r3,[r7,#28]
 4943 004c 41F28832 	 movw r2,#5000
 4944 0050 9342     	 cmp r3,r2
 4945 0052 74D8     	 bhi .L141
1454:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1455:../Dave/Generated/PWM_SVM/pwm_svm.c ****     deadtime_count = (uint32_t)((deadtime_max * dead_time_scale) / PWM_SVM_MICROSECCONV);
 4946              	 .loc 4 1455 0 is_stmt 1
 4947 0054 FB69     	 ldr r3,[r7,#28]
 4948 0056 7A69     	 ldr r2,[r7,#20]
 4949 0058 02FB03F3 	 mul r3,r2,r3
 4950 005c 3C4A     	 ldr r2,.L151+4
 4951 005e A2FB0323 	 umull r2,r3,r2,r3
 4952 0062 9B0C     	 lsrs r3,r3,#18
 4953 0064 7B62     	 str r3,[r7,#36]
1456:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     while ((deadtime_count > PWM_SVM_DEADTIME_REG_MAX) && ((uint32_t) prescaler <= PWM_SVM_DEADTIME
 4954              	 .loc 4 1457 0
 4955 0066 15E0     	 b .L142
 4956              	.L144:
1458:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1459:../Dave/Generated/PWM_SVM/pwm_svm.c ****       prescaler++;
 4957              	 .loc 4 1459 0
 4958 0068 BB7E     	 ldrb r3,[r7,#26]
 4959 006a 0133     	 adds r3,r3,#1
 4960 006c BB76     	 strb r3,[r7,#26]
1460:../Dave/Generated/PWM_SVM/pwm_svm.c ****       dead_time_scale = ((svmptr->module_freq >> (uint32_t) prescaler) / PWM_SVM_MILLISECCONV);
 4961              	 .loc 4 1460 0
 4962 006e 3B69     	 ldr r3,[r7,#16]
 4963 0070 DA69     	 ldr r2,[r3,#28]
 4964 0072 BB7E     	 ldrb r3,[r7,#26]
 4965 0074 22FA03F3 	 lsr r3,r2,r3
 4966 0078 344A     	 ldr r2,.L151
 4967 007a A2FB0323 	 umull r2,r3,r2,r3
 4968 007e 9B09     	 lsrs r3,r3,#6
 4969 0080 7B61     	 str r3,[r7,#20]
1461:../Dave/Generated/PWM_SVM/pwm_svm.c ****       deadtime_count = (uint32_t)((deadtime_max * dead_time_scale) / PWM_SVM_MICROSECCONV);
 4970              	 .loc 4 1461 0
 4971 0082 FB69     	 ldr r3,[r7,#28]
 4972 0084 7A69     	 ldr r2,[r7,#20]
 4973 0086 02FB03F3 	 mul r3,r2,r3
 4974 008a 314A     	 ldr r2,.L151+4
 4975 008c A2FB0323 	 umull r2,r3,r2,r3
 4976 0090 9B0C     	 lsrs r3,r3,#18
 4977 0092 7B62     	 str r3,[r7,#36]
 4978              	.L142:
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4979              	 .loc 4 1457 0
 4980 0094 7B6A     	 ldr r3,[r7,#36]
 4981 0096 FF2B     	 cmp r3,#255
 4982 0098 02D9     	 bls .L143
1457:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 4983              	 .loc 4 1457 0 is_stmt 0 discriminator 1
 4984 009a BB7E     	 ldrb r3,[r7,#26]
 4985 009c 032B     	 cmp r3,#3
 4986 009e E3D9     	 bls .L144
 4987              	.L143:
1462:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1463:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1464:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if (DeadTimeRisingEdge > DeadTimeFallingEdge)
 4988              	 .loc 4 1464 0 is_stmt 1
 4989 00a0 BA68     	 ldr r2,[r7,#8]
 4990 00a2 7B68     	 ldr r3,[r7,#4]
 4991 00a4 9A42     	 cmp r2,r3
 4992 00a6 0FD9     	 bls .L145
1465:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1466:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_rising_edge = deadtime_count;
 4993              	 .loc 4 1466 0
 4994 00a8 FB68     	 ldr r3,[r7,#12]
 4995 00aa 7A6A     	 ldr r2,[r7,#36]
 4996 00ac C3F89420 	 str r2,[r3,#148]
1467:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_falling_edge = (uint32_t)((DeadTimeFallingEdge * dead_time_scale) / PWM_S
 4997              	 .loc 4 1467 0
 4998 00b0 7B68     	 ldr r3,[r7,#4]
 4999 00b2 7A69     	 ldr r2,[r7,#20]
 5000 00b4 02FB03F3 	 mul r3,r2,r3
 5001 00b8 254A     	 ldr r2,.L151+4
 5002 00ba A2FB0323 	 umull r2,r3,r2,r3
 5003 00be 9A0C     	 lsrs r2,r3,#18
 5004 00c0 FB68     	 ldr r3,[r7,#12]
 5005 00c2 C3F89820 	 str r2,[r3,#152]
 5006 00c6 0EE0     	 b .L146
 5007              	.L145:
1468:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1469:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1470:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1471:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_falling_edge = deadtime_count;
 5008              	 .loc 4 1471 0
 5009 00c8 FB68     	 ldr r3,[r7,#12]
 5010 00ca 7A6A     	 ldr r2,[r7,#36]
 5011 00cc C3F89820 	 str r2,[r3,#152]
1472:../Dave/Generated/PWM_SVM/pwm_svm.c ****       HandlePtr->deadtime_rising_edge = (uint32_t)((DeadTimeRisingEdge * dead_time_scale) / PWM_SVM
 5012              	 .loc 4 1472 0
 5013 00d0 BB68     	 ldr r3,[r7,#8]
 5014 00d2 7A69     	 ldr r2,[r7,#20]
 5015 00d4 02FB03F3 	 mul r3,r2,r3
 5016 00d8 1D4A     	 ldr r2,.L151+4
 5017 00da A2FB0323 	 umull r2,r3,r2,r3
 5018 00de 9A0C     	 lsrs r2,r3,#18
 5019 00e0 FB68     	 ldr r3,[r7,#12]
 5020 00e2 C3F89420 	 str r2,[r3,#148]
 5021              	.L146:
1473:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1474:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1475:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*configure the calculated deadtime*/
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     for (count = 0U; count < PWM_SVM_NUMBERPHASE; count++)
 5022              	 .loc 4 1476 0
 5023 00e6 0023     	 movs r3,#0
 5024 00e8 3B62     	 str r3,[r7,#32]
 5025 00ea 20E0     	 b .L147
 5026              	.L148:
1477:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1478:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /* configure dead time */
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetDeadTimeValue(HandlePtr->phase_ptr[count]->slice_ptr,
 5027              	 .loc 4 1479 0 discriminator 3
 5028 00ec FB68     	 ldr r3,[r7,#12]
 5029 00ee 3A6A     	 ldr r2,[r7,#32]
 5030 00f0 0232     	 adds r2,r2,#2
 5031 00f2 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5032 00f6 1868     	 ldr r0,[r3]
1480:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5033              	 .loc 4 1480 0 discriminator 3
 5034 00f8 FB68     	 ldr r3,[r7,#12]
 5035 00fa 1B68     	 ldr r3,[r3]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5036              	 .loc 4 1479 0 discriminator 3
 5037 00fc 197A     	 ldrb r1,[r3,#8]
 5038              	 .loc 4 1480 0 discriminator 3
 5039 00fe FB68     	 ldr r3,[r7,#12]
 5040 0100 D3F89430 	 ldr r3,[r3,#148]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5041              	 .loc 4 1479 0 discriminator 3
 5042 0104 DAB2     	 uxtb r2,r3
1481:../Dave/Generated/PWM_SVM/pwm_svm.c ****           (uint8_t) HandlePtr->deadtime_falling_edge);
 5043              	 .loc 4 1481 0 discriminator 3
 5044 0106 FB68     	 ldr r3,[r7,#12]
 5045 0108 D3F89830 	 ldr r3,[r3,#152]
1479:../Dave/Generated/PWM_SVM/pwm_svm.c ****           HandlePtr->confighandle_ptr->phase_cmpch_map[0], (uint8_t) HandlePtr->deadtime_rising_edg
 5046              	 .loc 4 1479 0 discriminator 3
 5047 010c DBB2     	 uxtb r3,r3
 5048 010e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimeValue
1482:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetDeadTimePrescaler(HandlePtr->phase_ptr[count]->slice_ptr, (XMC_CCU8_SLICE_D
 5049              	 .loc 4 1482 0 discriminator 3
 5050 0112 FB68     	 ldr r3,[r7,#12]
 5051 0114 3A6A     	 ldr r2,[r7,#32]
 5052 0116 0232     	 adds r2,r2,#2
 5053 0118 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5054 011c 1A68     	 ldr r2,[r3]
 5055 011e BB7E     	 ldrb r3,[r7,#26]
 5056 0120 1046     	 mov r0,r2
 5057 0122 1946     	 mov r1,r3
 5058 0124 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimePrescaler
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5059              	 .loc 4 1476 0 discriminator 3
 5060 0128 3B6A     	 ldr r3,[r7,#32]
 5061 012a 0133     	 adds r3,r3,#1
 5062 012c 3B62     	 str r3,[r7,#32]
 5063              	.L147:
1476:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5064              	 .loc 4 1476 0 is_stmt 0 discriminator 1
 5065 012e 3B6A     	 ldr r3,[r7,#32]
 5066 0130 022B     	 cmp r3,#2
 5067 0132 DBD9     	 bls .L148
1483:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1484:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1485:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->deadtime_div = prescaler;
 5068              	 .loc 4 1485 0 is_stmt 1
 5069 0134 FB68     	 ldr r3,[r7,#12]
 5070 0136 BA7E     	 ldrb r2,[r7,#26]
 5071 0138 83F89120 	 strb r2,[r3,#145]
 5072 013c 01E0     	 b .L149
 5073              	.L141:
1486:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1487:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1488:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1489:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5074              	 .loc 4 1489 0
 5075 013e 0223     	 movs r3,#2
 5076 0140 FB76     	 strb r3,[r7,#27]
 5077              	.L149:
1490:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1491:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return status;
 5078              	 .loc 4 1491 0
 5079 0142 FB7E     	 ldrb r3,[r7,#27]
1492:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5080              	 .loc 4 1492 0
 5081 0144 1846     	 mov r0,r3
 5082 0146 2837     	 adds r7,r7,#40
 5083              	.LCFI193:
 5084              	 .cfi_def_cfa_offset 8
 5085 0148 BD46     	 mov sp,r7
 5086              	.LCFI194:
 5087              	 .cfi_def_cfa_register 13
 5088              	 
 5089 014a 80BD     	 pop {r7,pc}
 5090              	.L152:
 5091              	 .align 2
 5092              	.L151:
 5093 014c D34D6210 	 .word 274877907
 5094 0150 83DE1B43 	 .word 1125899907
 5095              	 .cfi_endproc
 5096              	.LFE261:
 5098              	 .section .text.PWM_SVM_GetRisingEdgeDeadTime,"ax",%progbits
 5099              	 .align 2
 5100              	 .global PWM_SVM_GetRisingEdgeDeadTime
 5101              	 .thumb
 5102              	 .thumb_func
 5104              	PWM_SVM_GetRisingEdgeDeadTime:
 5105              	.LFB262:
1493:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1494:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the rising edge dead time */
1495:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetRisingEdgeDeadTime(PWM_SVM_t* const HandlePtr)
1496:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5106              	 .loc 4 1496 0
 5107              	 .cfi_startproc
 5108              	 
 5109              	 
 5110              	 
 5111 0000 80B4     	 push {r7}
 5112              	.LCFI195:
 5113              	 .cfi_def_cfa_offset 4
 5114              	 .cfi_offset 7,-4
 5115 0002 85B0     	 sub sp,sp,#20
 5116              	.LCFI196:
 5117              	 .cfi_def_cfa_offset 24
 5118 0004 00AF     	 add r7,sp,#0
 5119              	.LCFI197:
 5120              	 .cfi_def_cfa_register 7
 5121 0006 7860     	 str r0,[r7,#4]
1497:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime;
1498:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = (PWM_SVM_NANOSECCONV
1499:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5122              	 .loc 4 1499 0
 5123 0008 7B68     	 ldr r3,[r7,#4]
 5124 000a 1B68     	 ldr r3,[r3]
 5125 000c DB69     	 ldr r3,[r3,#28]
 5126 000e 0F4A     	 ldr r2,.L155
 5127 0010 A2FB0323 	 umull r2,r3,r2,r3
 5128 0014 9B09     	 lsrs r3,r3,#6
 5129 0016 7A68     	 ldr r2,[r7,#4]
 5130 0018 92F89120 	 ldrb r2,[r2,#145]
 5131 001c D340     	 lsrs r3,r3,r2
1498:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5132              	 .loc 4 1498 0
 5133 001e 0C4A     	 ldr r2,.L155+4
 5134 0020 B2FBF3F3 	 udiv r3,r2,r3
 5135 0024 FB60     	 str r3,[r7,#12]
1500:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetRisingEdgeDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL)
1501:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* calculate the deadtime from dead time count*/
1502:../Dave/Generated/PWM_SVM/pwm_svm.c ****   deadtime = (uint32_t)((HandlePtr->deadtime_rising_edge * dead_time_scale) / PWM_SVM_MILLISECCONV)
 5136              	 .loc 4 1502 0
 5137 0026 7B68     	 ldr r3,[r7,#4]
 5138 0028 D3F89430 	 ldr r3,[r3,#148]
 5139 002c FA68     	 ldr r2,[r7,#12]
 5140 002e 02FB03F3 	 mul r3,r2,r3
 5141 0032 064A     	 ldr r2,.L155
 5142 0034 A2FB0323 	 umull r2,r3,r2,r3
 5143 0038 9B09     	 lsrs r3,r3,#6
 5144 003a BB60     	 str r3,[r7,#8]
1503:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (deadtime);
 5145              	 .loc 4 1503 0
 5146 003c BB68     	 ldr r3,[r7,#8]
1504:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5147              	 .loc 4 1504 0
 5148 003e 1846     	 mov r0,r3
 5149 0040 1437     	 adds r7,r7,#20
 5150              	.LCFI198:
 5151              	 .cfi_def_cfa_offset 4
 5152 0042 BD46     	 mov sp,r7
 5153              	.LCFI199:
 5154              	 .cfi_def_cfa_register 13
 5155              	 
 5156 0044 5DF8047B 	 ldr r7,[sp],#4
 5157              	.LCFI200:
 5158              	 .cfi_restore 7
 5159              	 .cfi_def_cfa_offset 0
 5160 0048 7047     	 bx lr
 5161              	.L156:
 5162 004a 00BF     	 .align 2
 5163              	.L155:
 5164 004c D34D6210 	 .word 274877907
 5165 0050 00CA9A3B 	 .word 1000000000
 5166              	 .cfi_endproc
 5167              	.LFE262:
 5169              	 .section .text.PWM_SVM_GetFallingEdgeDeadTime,"ax",%progbits
 5170              	 .align 2
 5171              	 .global PWM_SVM_GetFallingEdgeDeadTime
 5172              	 .thumb
 5173              	 .thumb_func
 5175              	PWM_SVM_GetFallingEdgeDeadTime:
 5176              	.LFB263:
1505:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1506:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the falling edge dead time*/
1507:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetFallingEdgeDeadTime(PWM_SVM_t* const HandlePtr)
1508:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5177              	 .loc 4 1508 0
 5178              	 .cfi_startproc
 5179              	 
 5180              	 
 5181              	 
 5182 0000 80B4     	 push {r7}
 5183              	.LCFI201:
 5184              	 .cfi_def_cfa_offset 4
 5185              	 .cfi_offset 7,-4
 5186 0002 85B0     	 sub sp,sp,#20
 5187              	.LCFI202:
 5188              	 .cfi_def_cfa_offset 24
 5189 0004 00AF     	 add r7,sp,#0
 5190              	.LCFI203:
 5191              	 .cfi_def_cfa_register 7
 5192 0006 7860     	 str r0,[r7,#4]
1509:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t deadtime;
1510:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t dead_time_scale = (PWM_SVM_NANOSECCONV
1511:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5193              	 .loc 4 1511 0
 5194 0008 7B68     	 ldr r3,[r7,#4]
 5195 000a 1B68     	 ldr r3,[r3]
 5196 000c DB69     	 ldr r3,[r3,#28]
 5197 000e 0F4A     	 ldr r2,.L159
 5198 0010 A2FB0323 	 umull r2,r3,r2,r3
 5199 0014 9B09     	 lsrs r3,r3,#6
 5200 0016 7A68     	 ldr r2,[r7,#4]
 5201 0018 92F89120 	 ldrb r2,[r2,#145]
 5202 001c D340     	 lsrs r3,r3,r2
1510:../Dave/Generated/PWM_SVM/pwm_svm.c ****       / ((HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV) >> (uint32_t) HandlePtr-
 5203              	 .loc 4 1510 0
 5204 001e 0C4A     	 ldr r2,.L159+4
 5205 0020 B2FBF3F3 	 udiv r3,r2,r3
 5206 0024 FB60     	 str r3,[r7,#12]
1512:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetFallingEdgeDeadTime:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL
1513:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* calculate the deadtime from dead time count*/
1514:../Dave/Generated/PWM_SVM/pwm_svm.c ****   deadtime = (uint32_t)((HandlePtr->deadtime_falling_edge * dead_time_scale) / PWM_SVM_MILLISECCONV
 5207              	 .loc 4 1514 0
 5208 0026 7B68     	 ldr r3,[r7,#4]
 5209 0028 D3F89830 	 ldr r3,[r3,#152]
 5210 002c FA68     	 ldr r2,[r7,#12]
 5211 002e 02FB03F3 	 mul r3,r2,r3
 5212 0032 064A     	 ldr r2,.L159
 5213 0034 A2FB0323 	 umull r2,r3,r2,r3
 5214 0038 9B09     	 lsrs r3,r3,#6
 5215 003a BB60     	 str r3,[r7,#8]
1515:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (deadtime);
 5216              	 .loc 4 1515 0
 5217 003c BB68     	 ldr r3,[r7,#8]
1516:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5218              	 .loc 4 1516 0
 5219 003e 1846     	 mov r0,r3
 5220 0040 1437     	 adds r7,r7,#20
 5221              	.LCFI204:
 5222              	 .cfi_def_cfa_offset 4
 5223 0042 BD46     	 mov sp,r7
 5224              	.LCFI205:
 5225              	 .cfi_def_cfa_register 13
 5226              	 
 5227 0044 5DF8047B 	 ldr r7,[sp],#4
 5228              	.LCFI206:
 5229              	 .cfi_restore 7
 5230              	 .cfi_def_cfa_offset 0
 5231 0048 7047     	 bx lr
 5232              	.L160:
 5233 004a 00BF     	 .align 2
 5234              	.L159:
 5235 004c D34D6210 	 .word 274877907
 5236 0050 00CA9A3B 	 .word 1000000000
 5237              	 .cfi_endproc
 5238              	.LFE263:
 5240              	 .section .text.PWM_SVM_SetTmin,"ax",%progbits
 5241              	 .align 2
 5242              	 .global PWM_SVM_SetTmin
 5243              	 .thumb
 5244              	 .thumb_func
 5246              	PWM_SVM_SetTmin:
 5247              	.LFB264:
1517:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1518:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API sets the Tmin value in terms of nano seconds*/
1519:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetTmin(PWM_SVM_t* const HandlePtr, uint32_t Tmin)
1520:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5248              	 .loc 4 1520 0
 5249              	 .cfi_startproc
 5250              	 
 5251              	 
 5252              	 
 5253 0000 80B4     	 push {r7}
 5254              	.LCFI207:
 5255              	 .cfi_def_cfa_offset 4
 5256              	 .cfi_offset 7,-4
 5257 0002 85B0     	 sub sp,sp,#20
 5258              	.LCFI208:
 5259              	 .cfi_def_cfa_offset 24
 5260 0004 00AF     	 add r7,sp,#0
 5261              	.LCFI209:
 5262              	 .cfi_def_cfa_register 7
 5263 0006 7860     	 str r0,[r7,#4]
 5264 0008 3960     	 str r1,[r7]
1521:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tmin_scale = (uint32_t)(HandlePtr->confighandle_ptr->module_freq / PWM_SVM_MILLISECCONV)
 5265              	 .loc 4 1521 0
 5266 000a 7B68     	 ldr r3,[r7,#4]
 5267 000c 1B68     	 ldr r3,[r3]
 5268 000e DB69     	 ldr r3,[r3,#28]
 5269 0010 104A     	 ldr r2,.L165
 5270 0012 A2FB0323 	 umull r2,r3,r2,r3
 5271 0016 9B09     	 lsrs r3,r3,#6
 5272 0018 BB60     	 str r3,[r7,#8]
1522:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 5273              	 .loc 4 1522 0
 5274 001a 0023     	 movs r3,#0
 5275 001c FB73     	 strb r3,[r7,#15]
1523:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetTmin:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1524:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (Tmin <= PWM_SVM_TMIN_LIMIT)
 5276              	 .loc 4 1524 0
 5277 001e 3B68     	 ldr r3,[r7]
 5278 0020 41F28832 	 movw r2,#5000
 5279 0024 9342     	 cmp r3,r2
 5280 0026 0CD8     	 bhi .L162
1525:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1526:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* calculate the Tmin to Tmin count*/
1527:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->tmin = (uint16_t)(((uint32_t)(Tmin * tmin_scale)) / PWM_SVM_MICROSECCONV);
 5281              	 .loc 4 1527 0
 5282 0028 3B68     	 ldr r3,[r7]
 5283 002a BA68     	 ldr r2,[r7,#8]
 5284 002c 02FB03F3 	 mul r3,r2,r3
 5285 0030 094A     	 ldr r2,.L165+4
 5286 0032 A2FB0323 	 umull r2,r3,r2,r3
 5287 0036 9B0C     	 lsrs r3,r3,#18
 5288 0038 9AB2     	 uxth r2,r3
 5289 003a 7B68     	 ldr r3,[r7,#4]
 5290 003c A3F8C220 	 strh r2,[r3,#194]
 5291 0040 01E0     	 b .L163
 5292              	.L162:
1528:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1529:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1530:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1531:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5293              	 .loc 4 1531 0
 5294 0042 0223     	 movs r3,#2
 5295 0044 FB73     	 strb r3,[r7,#15]
 5296              	.L163:
1532:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1533:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 5297              	 .loc 4 1533 0
 5298 0046 FB7B     	 ldrb r3,[r7,#15]
1534:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5299              	 .loc 4 1534 0
 5300 0048 1846     	 mov r0,r3
 5301 004a 1437     	 adds r7,r7,#20
 5302              	.LCFI210:
 5303              	 .cfi_def_cfa_offset 4
 5304 004c BD46     	 mov sp,r7
 5305              	.LCFI211:
 5306              	 .cfi_def_cfa_register 13
 5307              	 
 5308 004e 5DF8047B 	 ldr r7,[sp],#4
 5309              	.LCFI212:
 5310              	 .cfi_restore 7
 5311              	 .cfi_def_cfa_offset 0
 5312 0052 7047     	 bx lr
 5313              	.L166:
 5314              	 .align 2
 5315              	.L165:
 5316 0054 D34D6210 	 .word 274877907
 5317 0058 83DE1B43 	 .word 1125899907
 5318              	 .cfi_endproc
 5319              	.LFE264:
 5321              	 .section .text.PWM_SVM_GetTmin,"ax",%progbits
 5322              	 .align 2
 5323              	 .global PWM_SVM_GetTmin
 5324              	 .thumb
 5325              	 .thumb_func
 5327              	PWM_SVM_GetTmin:
 5328              	.LFB265:
1535:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1536:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*returns the Tmin value in terms of nano second*/
1537:../Dave/Generated/PWM_SVM/pwm_svm.c **** uint32_t PWM_SVM_GetTmin(PWM_SVM_t* const HandlePtr)
1538:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5329              	 .loc 4 1538 0
 5330              	 .cfi_startproc
 5331              	 
 5332              	 
 5333              	 
 5334 0000 80B4     	 push {r7}
 5335              	.LCFI213:
 5336              	 .cfi_def_cfa_offset 4
 5337              	 .cfi_offset 7,-4
 5338 0002 85B0     	 sub sp,sp,#20
 5339              	.LCFI214:
 5340              	 .cfi_def_cfa_offset 24
 5341 0004 00AF     	 add r7,sp,#0
 5342              	.LCFI215:
 5343              	 .cfi_def_cfa_register 7
 5344 0006 7860     	 str r0,[r7,#4]
1539:../Dave/Generated/PWM_SVM/pwm_svm.c ****   uint32_t tmin_scale = (PWM_SVM_NANOSECCONV / (HandlePtr->confighandle_ptr->module_freq /
 5345              	 .loc 4 1539 0
 5346 0008 7B68     	 ldr r3,[r7,#4]
 5347 000a 1B68     	 ldr r3,[r3]
 5348 000c DB69     	 ldr r3,[r3,#28]
 5349 000e 0C4A     	 ldr r2,.L169
 5350 0010 A2FB0323 	 umull r2,r3,r2,r3
 5351 0014 9B09     	 lsrs r3,r3,#6
 5352 0016 0B4A     	 ldr r2,.L169+4
 5353 0018 B2FBF3F3 	 udiv r3,r2,r3
 5354 001c FB60     	 str r3,[r7,#12]
1540:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_MILLISECCONV));
1541:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetTmin:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1542:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (uint32_t)(((uint32_t) HandlePtr->tmin * tmin_scale) / PWM_SVM_MILLISECCONV);
 5355              	 .loc 4 1542 0
 5356 001e 7B68     	 ldr r3,[r7,#4]
 5357 0020 B3F8C230 	 ldrh r3,[r3,#194]
 5358 0024 1A46     	 mov r2,r3
 5359 0026 FB68     	 ldr r3,[r7,#12]
 5360 0028 03FB02F3 	 mul r3,r3,r2
 5361 002c 044A     	 ldr r2,.L169
 5362 002e A2FB0323 	 umull r2,r3,r2,r3
 5363 0032 9B09     	 lsrs r3,r3,#6
1543:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5364              	 .loc 4 1543 0
 5365 0034 1846     	 mov r0,r3
 5366 0036 1437     	 adds r7,r7,#20
 5367              	.LCFI216:
 5368              	 .cfi_def_cfa_offset 4
 5369 0038 BD46     	 mov sp,r7
 5370              	.LCFI217:
 5371              	 .cfi_def_cfa_register 13
 5372              	 
 5373 003a 5DF8047B 	 ldr r7,[sp],#4
 5374              	.LCFI218:
 5375              	 .cfi_restore 7
 5376              	 .cfi_def_cfa_offset 0
 5377 003e 7047     	 bx lr
 5378              	.L170:
 5379              	 .align 2
 5380              	.L169:
 5381 0040 D34D6210 	 .word 274877907
 5382 0044 00CA9A3B 	 .word 1000000000
 5383              	 .cfi_endproc
 5384              	.LFE265:
 5386              	 .section .text.PWM_SVM_SetSVMScheme,"ax",%progbits
 5387              	 .align 2
 5388              	 .global PWM_SVM_SetSVMScheme
 5389              	 .thumb
 5390              	 .thumb_func
 5392              	PWM_SVM_SetSVMScheme:
 5393              	.LFB266:
1544:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1545:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API modifies the SVM scheme dynamically*/
1546:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_STATUS_t PWM_SVM_SetSVMScheme(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1547:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5394              	 .loc 4 1547 0
 5395              	 .cfi_startproc
 5396              	 
 5397              	 
 5398 0000 80B5     	 push {r7,lr}
 5399              	.LCFI219:
 5400              	 .cfi_def_cfa_offset 8
 5401              	 .cfi_offset 7,-8
 5402              	 .cfi_offset 14,-4
 5403 0002 84B0     	 sub sp,sp,#16
 5404              	.LCFI220:
 5405              	 .cfi_def_cfa_offset 24
 5406 0004 00AF     	 add r7,sp,#0
 5407              	.LCFI221:
 5408              	 .cfi_def_cfa_register 7
 5409 0006 7860     	 str r0,[r7,#4]
 5410 0008 0B46     	 mov r3,r1
 5411 000a FB70     	 strb r3,[r7,#3]
1548:../Dave/Generated/PWM_SVM/pwm_svm.c ****   PWM_SVM_STATUS_t status = PWM_SVM_STATUS_SUCCESS;
 5412              	 .loc 4 1548 0
 5413 000c 0023     	 movs r3,#0
 5414 000e FB73     	 strb r3,[r7,#15]
1549:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_SetSVMScheme:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1550:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((Scheme == PWM_SVM_7SEG_SYMM) || (Scheme == PWM_SVM_5SEG_SYMM))
 5415              	 .loc 4 1550 0
 5416 0010 FB78     	 ldrb r3,[r7,#3]
 5417 0012 002B     	 cmp r3,#0
 5418 0014 02D0     	 beq .L172
 5419              	 .loc 4 1550 0 is_stmt 0 discriminator 1
 5420 0016 FB78     	 ldrb r3,[r7,#3]
 5421 0018 022B     	 cmp r3,#2
 5422 001a 1BD1     	 bne .L173
 5423              	.L172:
1551:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1552:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* It is possible to change the SVM scheme in RUNNING state if timer counting and compare mode 
1553:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_RUNNING == HandlePtr->state))
 5424              	 .loc 4 1553 0 is_stmt 1
 5425 001c 7B68     	 ldr r3,[r7,#4]
 5426 001e 93F89030 	 ldrb r3,[r3,#144]
 5427 0022 022B     	 cmp r3,#2
 5428 0024 05D1     	 bne .L174
1554:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1555:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lDynamicSVMSchemeModification(HandlePtr, Scheme);
 5429              	 .loc 4 1555 0
 5430 0026 FB78     	 ldrb r3,[r7,#3]
 5431 0028 7868     	 ldr r0,[r7,#4]
 5432 002a 1946     	 mov r1,r3
 5433 002c FFF7FEFF 	 bl PWM_SVM_lDynamicSVMSchemeModification
 5434 0030 0FE0     	 b .L175
 5435              	.L174:
1556:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1557:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /* when PWM is stopped, SVM scheme can be changed without any constraint */
1558:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else if (((PWM_SVM_STATE_t) PWM_SVM_INITIALIZED == HandlePtr->state)
 5436              	 .loc 4 1558 0
 5437 0032 7B68     	 ldr r3,[r7,#4]
 5438 0034 93F89030 	 ldrb r3,[r3,#144]
 5439 0038 012B     	 cmp r3,#1
 5440 003a 04D0     	 beq .L176
1559:../Dave/Generated/PWM_SVM/pwm_svm.c ****         || ((PWM_SVM_STATE_t) PWM_SVM_STOPPED == HandlePtr->state))
 5441              	 .loc 4 1559 0
 5442 003c 7B68     	 ldr r3,[r7,#4]
 5443 003e 93F89030 	 ldrb r3,[r3,#144]
 5444 0042 032B     	 cmp r3,#3
 5445 0044 05D1     	 bne .L175
 5446              	.L176:
1560:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1561:../Dave/Generated/PWM_SVM/pwm_svm.c ****       PWM_SVM_lStaticSVMSchemeModification(HandlePtr, Scheme);
 5447              	 .loc 4 1561 0
 5448 0046 FB78     	 ldrb r3,[r7,#3]
 5449 0048 7868     	 ldr r0,[r7,#4]
 5450 004a 1946     	 mov r1,r3
 5451 004c FFF7FEFF 	 bl PWM_SVM_lStaticSVMSchemeModification
1553:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
 5452              	 .loc 4 1553 0
 5453 0050 02E0     	 b .L177
 5454              	.L175:
 5455 0052 01E0     	 b .L177
 5456              	.L173:
1562:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1563:../Dave/Generated/PWM_SVM/pwm_svm.c ****     else
1564:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1565:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*Do Nothing*/
1566:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1567:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1568:../Dave/Generated/PWM_SVM/pwm_svm.c ****   else
1569:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1570:../Dave/Generated/PWM_SVM/pwm_svm.c ****     status = PWM_SVM_INVALID_PARAM;
 5457              	 .loc 4 1570 0
 5458 0054 0223     	 movs r3,#2
 5459 0056 FB73     	 strb r3,[r7,#15]
 5460              	.L177:
1571:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1572:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (status);
 5461              	 .loc 4 1572 0
 5462 0058 FB7B     	 ldrb r3,[r7,#15]
1573:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5463              	 .loc 4 1573 0
 5464 005a 1846     	 mov r0,r3
 5465 005c 1037     	 adds r7,r7,#16
 5466              	.LCFI222:
 5467              	 .cfi_def_cfa_offset 8
 5468 005e BD46     	 mov sp,r7
 5469              	.LCFI223:
 5470              	 .cfi_def_cfa_register 13
 5471              	 
 5472 0060 80BD     	 pop {r7,pc}
 5473              	 .cfi_endproc
 5474              	.LFE266:
 5476 0062 00BF     	 .section .text.PWM_SVM_lDynamicSVMSchemeModification,"ax",%progbits
 5477              	 .align 2
 5478              	 .global PWM_SVM_lDynamicSVMSchemeModification
 5479              	 .thumb
 5480              	 .thumb_func
 5482              	PWM_SVM_lDynamicSVMSchemeModification:
 5483              	.LFB267:
1574:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1575:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lDynamicSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1576:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5484              	 .loc 4 1576 0
 5485              	 .cfi_startproc
 5486              	 
 5487              	 
 5488 0000 80B5     	 push {r7,lr}
 5489              	.LCFI224:
 5490              	 .cfi_def_cfa_offset 8
 5491              	 .cfi_offset 7,-8
 5492              	 .cfi_offset 14,-4
 5493 0002 82B0     	 sub sp,sp,#8
 5494              	.LCFI225:
 5495              	 .cfi_def_cfa_offset 16
 5496 0004 00AF     	 add r7,sp,#0
 5497              	.LCFI226:
 5498              	 .cfi_def_cfa_register 7
 5499 0006 7860     	 str r0,[r7,#4]
 5500 0008 0B46     	 mov r3,r1
 5501 000a FB70     	 strb r3,[r7,#3]
1577:../Dave/Generated/PWM_SVM/pwm_svm.c ****   switch (Scheme)
 5502              	 .loc 4 1577 0
 5503 000c FB78     	 ldrb r3,[r7,#3]
 5504 000e 052B     	 cmp r3,#5
 5505 0010 00F2BF80 	 bhi .L179
 5506 0014 01A2     	 adr r2,.L182
 5507 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 5508 001a 00BF     	 .p2align 2
 5509              	.L182:
 5510 001c 35000000 	 .word .L181+1
 5511 0020 B5000000 	 .word .L183+1
 5512 0024 CB000000 	 .word .L184+1
 5513 0028 05010000 	 .word .L185+1
 5514 002c 23010000 	 .word .L186+1
 5515 0030 5B010000 	 .word .L187+1
 5516              	 .p2align 1
 5517              	.L181:
1578:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1579:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_7SEG_SYMM:
1580:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 5 segment symmetric*/
1581:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_5SEG_SYMM == HandlePtr->svm_config))
 5518              	 .loc 4 1581 0
 5519 0034 7B68     	 ldr r3,[r7,#4]
 5520 0036 93F89230 	 ldrb r3,[r3,#146]
 5521 003a 022B     	 cmp r3,#2
 5522 003c 39D1     	 bne .L188
1582:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1583:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*if DC link configure compare match event and bind to NVIC node accordingly*/
1584:../Dave/Generated/PWM_SVM/pwm_svm.c ****         if (PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 5523              	 .loc 4 1584 0
 5524 003e 7B68     	 ldr r3,[r7,#4]
 5525 0040 1B68     	 ldr r3,[r3]
 5526 0042 1B7C     	 ldrb r3,[r3,#16]
 5527 0044 012B     	 cmp r3,#1
 5528 0046 2BD1     	 bne .L189
1585:../Dave/Generated/PWM_SVM/pwm_svm.c ****         {
1586:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5529              	 .loc 4 1586 0
 5530 0048 7B68     	 ldr r3,[r7,#4]
 5531 004a 5B69     	 ldr r3,[r3,#20]
 5532 004c 1B68     	 ldr r3,[r3]
 5533 004e 1846     	 mov r0,r3
 5534 0050 0221     	 movs r1,#2
 5535 0052 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1587:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1);
1588:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5536              	 .loc 4 1588 0
 5537 0056 7B68     	 ldr r3,[r7,#4]
 5538 0058 5B69     	 ldr r3,[r3,#20]
 5539 005a 1B68     	 ldr r3,[r3]
 5540 005c 1846     	 mov r0,r3
 5541 005e 0321     	 movs r1,#3
 5542 0060 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1589:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1590:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5543              	 .loc 4 1590 0
 5544 0064 7B68     	 ldr r3,[r7,#4]
 5545 0066 5B69     	 ldr r3,[r3,#20]
 5546 0068 1B68     	 ldr r3,[r3]
 5547 006a 1846     	 mov r0,r3
 5548 006c 0421     	 movs r1,#4
 5549 006e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1591:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2);
1592:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5550              	 .loc 4 1592 0
 5551 0072 7B68     	 ldr r3,[r7,#4]
 5552 0074 5B69     	 ldr r3,[r3,#20]
 5553 0076 1B68     	 ldr r3,[r3]
 5554 0078 1846     	 mov r0,r3
 5555 007a 0521     	 movs r1,#5
 5556 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1593:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1594:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_SetInterruptNode(HandlePtr->phase_ptr[3]->slice_ptr,
 5557              	 .loc 4 1594 0
 5558 0080 7B68     	 ldr r3,[r7,#4]
 5559 0082 5B69     	 ldr r3,[r3,#20]
 5560 0084 1A68     	 ldr r2,[r3]
1595:../Dave/Generated/PWM_SVM/pwm_svm.c ****               XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
1596:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_SR_ID_t)(
1597:../Dave/Generated/PWM_SVM/pwm_svm.c ****                   (HandlePtr->confighandle_ptr->event_sr_selector[0] >> CCU8_CC8_SRS_CM1SR_Pos) & (
 5561              	 .loc 4 1597 0
 5562 0086 7B68     	 ldr r3,[r7,#4]
 5563 0088 1B68     	 ldr r3,[r3]
 5564 008a 9B6A     	 ldr r3,[r3,#40]
 5565 008c 9B08     	 lsrs r3,r3,#2
1594:../Dave/Generated/PWM_SVM/pwm_svm.c ****               XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
 5566              	 .loc 4 1594 0
 5567 008e DBB2     	 uxtb r3,r3
 5568 0090 03F00303 	 and r3,r3,#3
 5569 0094 DBB2     	 uxtb r3,r3
 5570 0096 1046     	 mov r0,r2
 5571 0098 0421     	 movs r1,#4
 5572 009a 1A46     	 mov r2,r3
 5573 009c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 5574              	.L189:
1598:../Dave/Generated/PWM_SVM/pwm_svm.c ****         }
1599:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the scheme*/
1600:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5575              	 .loc 4 1600 0
 5576 00a0 7B68     	 ldr r3,[r7,#4]
 5577 00a2 FA78     	 ldrb r2,[r7,#3]
 5578 00a4 83F89220 	 strb r2,[r3,#146]
1601:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym7;
 5579              	 .loc 4 1601 0
 5580 00a8 7B68     	 ldr r3,[r7,#4]
 5581 00aa 3B4A     	 ldr r2,.L195
 5582 00ac C3F88820 	 str r2,[r3,#136]
1602:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1603:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5583              	 .loc 4 1603 0
 5584 00b0 6FE0     	 b .L179
 5585              	.L188:
 5586 00b2 6EE0     	 b .L179
 5587              	.L183:
1604:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_7SEG_ASYMM:
1605:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 5 segment asymmetric*/
1606:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_5SEG_ASYMM == HandlePtr->svm_config))
 5588              	 .loc 4 1606 0
 5589 00b4 7B68     	 ldr r3,[r7,#4]
 5590 00b6 93F89230 	 ldrb r3,[r3,#146]
 5591 00ba 032B     	 cmp r3,#3
 5592 00bc 04D1     	 bne .L190
1607:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1608:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5593              	 .loc 4 1608 0
 5594 00be 7B68     	 ldr r3,[r7,#4]
 5595 00c0 FA78     	 ldrb r2,[r7,#3]
 5596 00c2 83F89220 	 strb r2,[r3,#146]
1609:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1610:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5597              	 .loc 4 1610 0
 5598 00c6 64E0     	 b .L179
 5599              	.L190:
 5600 00c8 63E0     	 b .L179
 5601              	.L184:
1611:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1612:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_5SEG_SYMM:
1613:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 7 segment asymmetric*/
1614:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_7SEG_SYMM == HandlePtr->svm_config))
 5602              	 .loc 4 1614 0
 5603 00ca 7B68     	 ldr r3,[r7,#4]
 5604 00cc 93F89230 	 ldrb r3,[r3,#146]
 5605 00d0 002B     	 cmp r3,#0
 5606 00d2 16D1     	 bne .L191
1615:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1616:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*disable two of compare match event as it is not required for 5 segment*/
1617:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_DisableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5607              	 .loc 4 1617 0
 5608 00d4 7B68     	 ldr r3,[r7,#4]
 5609 00d6 5B69     	 ldr r3,[r3,#20]
 5610 00d8 1B68     	 ldr r3,[r3]
 5611 00da 1846     	 mov r0,r3
 5612 00dc 0321     	 movs r1,#3
 5613 00de FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableEvent
1618:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1619:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_DisableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 5614              	 .loc 4 1619 0
 5615 00e2 7B68     	 ldr r3,[r7,#4]
 5616 00e4 5B69     	 ldr r3,[r3,#20]
 5617 00e6 1B68     	 ldr r3,[r3]
 5618 00e8 1846     	 mov r0,r3
 5619 00ea 0521     	 movs r1,#5
 5620 00ec FFF7FEFF 	 bl XMC_CCU8_SLICE_DisableEvent
1620:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1621:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5621              	 .loc 4 1621 0
 5622 00f0 7B68     	 ldr r3,[r7,#4]
 5623 00f2 FA78     	 ldrb r2,[r7,#3]
 5624 00f4 83F89220 	 strb r2,[r3,#146]
1622:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym5;
 5625              	 .loc 4 1622 0
 5626 00f8 7B68     	 ldr r3,[r7,#4]
 5627 00fa 284A     	 ldr r2,.L195+4
 5628 00fc C3F88820 	 str r2,[r3,#136]
1623:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1624:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5629              	 .loc 4 1624 0
 5630 0100 47E0     	 b .L179
 5631              	.L191:
 5632 0102 46E0     	 b .L179
 5633              	.L185:
1625:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1626:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_5SEG_ASYMM:
1627:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is 7 segment asymmetric*/
1628:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_7SEG_ASYMM == HandlePtr->svm_config))
 5634              	 .loc 4 1628 0
 5635 0104 7B68     	 ldr r3,[r7,#4]
 5636 0106 93F89230 	 ldrb r3,[r3,#146]
 5637 010a 012B     	 cmp r3,#1
 5638 010c 08D1     	 bne .L192
1629:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1630:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5639              	 .loc 4 1630 0
 5640 010e 7B68     	 ldr r3,[r7,#4]
 5641 0110 FA78     	 ldrb r2,[r7,#3]
 5642 0112 83F89220 	 strb r2,[r3,#146]
1631:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym5;
 5643              	 .loc 4 1631 0
 5644 0116 7B68     	 ldr r3,[r7,#4]
 5645 0118 214A     	 ldr r2,.L195+8
 5646 011a C3F88820 	 str r2,[r3,#136]
1632:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1633:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5647              	 .loc 4 1633 0
 5648 011e 38E0     	 b .L179
 5649              	.L192:
 5650 0120 37E0     	 b .L179
 5651              	.L186:
1634:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1635:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_PSEUDONULL_3ACTIVE:
1636:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is pseudo null 4 active v
1637:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_PSEUDONULL_4ACTIVE == HandlePtr->svm_config))
 5652              	 .loc 4 1637 0
 5653 0122 7B68     	 ldr r3,[r7,#4]
 5654 0124 93F89230 	 ldrb r3,[r3,#146]
 5655 0128 052B     	 cmp r3,#5
 5656 012a 15D1     	 bne .L193
1638:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1639:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)(
1640:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 * (uint32_t) HandlePtr->tmin_
 5657              	 .loc 4 1640 0
 5658 012c 7B68     	 ldr r3,[r7,#4]
 5659 012e B3F8C430 	 ldrh r3,[r3,#196]
1639:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 3 * (uint32_t) HandlePtr->tmin_
 5660              	 .loc 4 1639 0
 5661 0132 1A46     	 mov r2,r3
 5662 0134 5200     	 lsls r2,r2,#1
 5663 0136 1344     	 add r3,r3,r2
 5664 0138 9BB2     	 uxth r3,r3
 5665 013a C3F58043 	 rsb r3,r3,#16384
 5666 013e 9AB2     	 uxth r2,r3
 5667 0140 7B68     	 ldr r3,[r7,#4]
 5668 0142 A3F8C620 	 strh r2,[r3,#198]
1641:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5669              	 .loc 4 1641 0
 5670 0146 7B68     	 ldr r3,[r7,#4]
 5671 0148 FA78     	 ldrb r2,[r7,#3]
 5672 014a 83F89220 	 strb r2,[r3,#146]
1642:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc3av5segmentCompVal;
 5673              	 .loc 4 1642 0
 5674 014e 7B68     	 ldr r3,[r7,#4]
 5675 0150 144A     	 ldr r2,.L195+12
 5676 0152 C3F88820 	 str r2,[r3,#136]
1643:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1644:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5677              	 .loc 4 1644 0
 5678 0156 1CE0     	 b .L179
 5679              	.L193:
 5680 0158 1BE0     	 b .L179
 5681              	.L187:
1645:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1646:../Dave/Generated/PWM_SVM/pwm_svm.c ****     case PWM_SVM_PSEUDONULL_4ACTIVE:
1647:../Dave/Generated/PWM_SVM/pwm_svm.c ****       /*change to required SVM scheme is possible only if existing scheme is pseudo null 3 active v
1648:../Dave/Generated/PWM_SVM/pwm_svm.c ****       if ((PWM_SVM_PSEUDONULL_3ACTIVE == HandlePtr->svm_config))
 5682              	 .loc 4 1648 0
 5683 015a 7B68     	 ldr r3,[r7,#4]
 5684 015c 93F89230 	 ldrb r3,[r3,#146]
 5685 0160 042B     	 cmp r3,#4
 5686 0162 15D1     	 bne .L194
1649:../Dave/Generated/PWM_SVM/pwm_svm.c ****       {
1650:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)(
1651:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) HandlePtr->tmin_
 5687              	 .loc 4 1651 0
 5688 0164 7B68     	 ldr r3,[r7,#4]
 5689 0166 B3F8C430 	 ldrh r3,[r3,#196]
1650:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) HandlePtr->tmin_
 5690              	 .loc 4 1650 0
 5691 016a 1A46     	 mov r2,r3
 5692 016c 9203     	 lsls r2,r2,#14
 5693 016e D31A     	 subs r3,r2,r3
 5694 0170 9B00     	 lsls r3,r3,#2
 5695 0172 9BB2     	 uxth r3,r3
 5696 0174 03F58043 	 add r3,r3,#16384
 5697 0178 9AB2     	 uxth r2,r3
 5698 017a 7B68     	 ldr r3,[r7,#4]
 5699 017c A3F8C620 	 strh r2,[r3,#198]
1652:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_config = Scheme;
 5700              	 .loc 4 1652 0
 5701 0180 7B68     	 ldr r3,[r7,#4]
 5702 0182 FA78     	 ldrb r2,[r7,#3]
 5703 0184 83F89220 	 strb r2,[r3,#146]
1653:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc4av7segmentCompVal;
 5704              	 .loc 4 1653 0
 5705 0188 7B68     	 ldr r3,[r7,#4]
 5706 018a 074A     	 ldr r2,.L195+16
 5707 018c C3F88820 	 str r2,[r3,#136]
 5708              	.L194:
1654:../Dave/Generated/PWM_SVM/pwm_svm.c ****       }
1655:../Dave/Generated/PWM_SVM/pwm_svm.c ****       break;
 5709              	 .loc 4 1655 0
 5710 0190 00BF     	 nop
 5711              	.L179:
1656:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1657:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5712              	 .loc 4 1657 0
 5713 0192 0837     	 adds r7,r7,#8
 5714              	.LCFI227:
 5715              	 .cfi_def_cfa_offset 8
 5716 0194 BD46     	 mov sp,r7
 5717              	.LCFI228:
 5718              	 .cfi_def_cfa_register 13
 5719              	 
 5720 0196 80BD     	 pop {r7,pc}
 5721              	.L196:
 5722              	 .align 2
 5723              	.L195:
 5724 0198 00000000 	 .word PWM_SVM_CalCmpValueSym7
 5725 019c 00000000 	 .word PWM_SVM_CalCmpValueSym5
 5726 01a0 00000000 	 .word PWM_SVM_CalCmpValueAsym5
 5727 01a4 00000000 	 .word PWM_SVM_Calc3av5segmentCompVal
 5728 01a8 00000000 	 .word PWM_SVM_Calc4av7segmentCompVal
 5729              	 .cfi_endproc
 5730              	.LFE267:
 5732              	 .section .text.PWM_SVM_lCAPeriodValueConfig,"ax",%progbits
 5733              	 .align 2
 5734              	 .global PWM_SVM_lCAPeriodValueConfig
 5735              	 .thumb
 5736              	 .thumb_func
 5738              	PWM_SVM_lCAPeriodValueConfig:
 5739              	.LFB268:
1658:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1659:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lCAPeriodValueConfig(PWM_SVM_t* const HandlePtr)
1660:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5740              	 .loc 4 1660 0
 5741              	 .cfi_startproc
 5742              	 
 5743              	 
 5744 0000 80B5     	 push {r7,lr}
 5745              	.LCFI229:
 5746              	 .cfi_def_cfa_offset 8
 5747              	 .cfi_offset 7,-8
 5748              	 .cfi_offset 14,-4
 5749 0002 82B0     	 sub sp,sp,#8
 5750              	.LCFI230:
 5751              	 .cfi_def_cfa_offset 16
 5752 0004 00AF     	 add r7,sp,#0
 5753              	.LCFI231:
 5754              	 .cfi_def_cfa_register 7
 5755 0006 7860     	 str r0,[r7,#4]
1661:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((PWM_SVM_5SEG_ASYMM < HandlePtr->svm_config))
 5756              	 .loc 4 1661 0
 5757 0008 7B68     	 ldr r3,[r7,#4]
 5758 000a 93F89230 	 ldrb r3,[r3,#146]
 5759 000e 032B     	 cmp r3,#3
 5760 0010 47D9     	 bls .L197
1662:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1663:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->period = ((HandlePtr->period + 1U) >> 1U) - 1U;
 5761              	 .loc 4 1663 0
 5762 0012 7B68     	 ldr r3,[r7,#4]
 5763 0014 D3F89C30 	 ldr r3,[r3,#156]
 5764 0018 0133     	 adds r3,r3,#1
 5765 001a 5B08     	 lsrs r3,r3,#1
 5766 001c 5A1E     	 subs r2,r3,#1
 5767 001e 7B68     	 ldr r3,[r7,#4]
 5768 0020 C3F89C20 	 str r2,[r3,#156]
1664:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[0]->slice_ptr, (uint16_t) HandlePtr->pe
 5769              	 .loc 4 1664 0
 5770 0024 7B68     	 ldr r3,[r7,#4]
 5771 0026 9B68     	 ldr r3,[r3,#8]
 5772 0028 1A68     	 ldr r2,[r3]
 5773 002a 7B68     	 ldr r3,[r7,#4]
 5774 002c D3F89C30 	 ldr r3,[r3,#156]
 5775 0030 9BB2     	 uxth r3,r3
 5776 0032 1046     	 mov r0,r2
 5777 0034 1946     	 mov r1,r3
 5778 0036 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1665:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[1]->slice_ptr, (uint16_t) HandlePtr->pe
 5779              	 .loc 4 1665 0
 5780 003a 7B68     	 ldr r3,[r7,#4]
 5781 003c DB68     	 ldr r3,[r3,#12]
 5782 003e 1A68     	 ldr r2,[r3]
 5783 0040 7B68     	 ldr r3,[r7,#4]
 5784 0042 D3F89C30 	 ldr r3,[r3,#156]
 5785 0046 9BB2     	 uxth r3,r3
 5786 0048 1046     	 mov r0,r2
 5787 004a 1946     	 mov r1,r3
 5788 004c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1666:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[2]->slice_ptr, (uint16_t) HandlePtr->pe
 5789              	 .loc 4 1666 0
 5790 0050 7B68     	 ldr r3,[r7,#4]
 5791 0052 1B69     	 ldr r3,[r3,#16]
 5792 0054 1A68     	 ldr r2,[r3]
 5793 0056 7B68     	 ldr r3,[r7,#4]
 5794 0058 D3F89C30 	 ldr r3,[r3,#156]
 5795 005c 9BB2     	 uxth r3,r3
 5796 005e 1046     	 mov r0,r2
 5797 0060 1946     	 mov r1,r3
 5798 0062 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1667:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 5799              	 .loc 4 1667 0
 5800 0066 7B68     	 ldr r3,[r7,#4]
 5801 0068 1B68     	 ldr r3,[r3]
 5802 006a 1B7C     	 ldrb r3,[r3,#16]
 5803 006c 002B     	 cmp r3,#0
 5804 006e 0AD0     	 beq .L199
1668:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1669:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->
 5805              	 .loc 4 1669 0
 5806 0070 7B68     	 ldr r3,[r7,#4]
 5807 0072 5B69     	 ldr r3,[r3,#20]
 5808 0074 1A68     	 ldr r2,[r3]
 5809 0076 7B68     	 ldr r3,[r7,#4]
 5810 0078 D3F89C30 	 ldr r3,[r3,#156]
 5811 007c 9BB2     	 uxth r3,r3
 5812 007e 1046     	 mov r0,r2
 5813 0080 1946     	 mov r1,r3
 5814 0082 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 5815              	.L199:
1670:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1671:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1672:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, HandlePtr->confighandle_ptr->shadow_transf
 5816              	 .loc 4 1672 0
 5817 0086 7B68     	 ldr r3,[r7,#4]
 5818 0088 5A68     	 ldr r2,[r3,#4]
 5819 008a 7B68     	 ldr r3,[r7,#4]
 5820 008c 1B68     	 ldr r3,[r3]
 5821 008e 5B6A     	 ldr r3,[r3,#36]
 5822 0090 1046     	 mov r0,r2
 5823 0092 1946     	 mov r1,r3
 5824 0094 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
1673:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->max_amplitude = (uint16_t)PWM_SVM_MAX_AMPLITUDE;
 5825              	 .loc 4 1673 0
 5826 0098 7B68     	 ldr r3,[r7,#4]
 5827 009a 4FF48042 	 mov r2,#16384
 5828 009e A3F8C620 	 strh r2,[r3,#198]
 5829              	.L197:
1674:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1675:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5830              	 .loc 4 1675 0
 5831 00a2 0837     	 adds r7,r7,#8
 5832              	.LCFI232:
 5833              	 .cfi_def_cfa_offset 8
 5834 00a4 BD46     	 mov sp,r7
 5835              	.LCFI233:
 5836              	 .cfi_def_cfa_register 13
 5837              	 
 5838 00a6 80BD     	 pop {r7,pc}
 5839              	 .cfi_endproc
 5840              	.LFE268:
 5842              	 .section .text.PWM_SVM_lEAPeriodValueConfig,"ax",%progbits
 5843              	 .align 2
 5844              	 .global PWM_SVM_lEAPeriodValueConfig
 5845              	 .thumb
 5846              	 .thumb_func
 5848              	PWM_SVM_lEAPeriodValueConfig:
 5849              	.LFB269:
1676:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1677:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lEAPeriodValueConfig(PWM_SVM_t* const HandlePtr)
1678:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5850              	 .loc 4 1678 0
 5851              	 .cfi_startproc
 5852              	 
 5853              	 
 5854 0000 80B5     	 push {r7,lr}
 5855              	.LCFI234:
 5856              	 .cfi_def_cfa_offset 8
 5857              	 .cfi_offset 7,-8
 5858              	 .cfi_offset 14,-4
 5859 0002 82B0     	 sub sp,sp,#8
 5860              	.LCFI235:
 5861              	 .cfi_def_cfa_offset 16
 5862 0004 00AF     	 add r7,sp,#0
 5863              	.LCFI236:
 5864              	 .cfi_def_cfa_register 7
 5865 0006 7860     	 str r0,[r7,#4]
1679:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if (HandlePtr->svm_config <= PWM_SVM_5SEG_ASYMM)
 5866              	 .loc 4 1679 0
 5867 0008 7B68     	 ldr r3,[r7,#4]
 5868 000a 93F89230 	 ldrb r3,[r3,#146]
 5869 000e 032B     	 cmp r3,#3
 5870 0010 41D8     	 bhi .L200
1680:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1681:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->period = (HandlePtr->period << 1U) + 1U;
 5871              	 .loc 4 1681 0
 5872 0012 7B68     	 ldr r3,[r7,#4]
 5873 0014 D3F89C30 	 ldr r3,[r3,#156]
 5874 0018 5B00     	 lsls r3,r3,#1
 5875 001a 5A1C     	 adds r2,r3,#1
 5876 001c 7B68     	 ldr r3,[r7,#4]
 5877 001e C3F89C20 	 str r2,[r3,#156]
1682:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[0]->slice_ptr, (uint16_t) HandlePtr->pe
 5878              	 .loc 4 1682 0
 5879 0022 7B68     	 ldr r3,[r7,#4]
 5880 0024 9B68     	 ldr r3,[r3,#8]
 5881 0026 1A68     	 ldr r2,[r3]
 5882 0028 7B68     	 ldr r3,[r7,#4]
 5883 002a D3F89C30 	 ldr r3,[r3,#156]
 5884 002e 9BB2     	 uxth r3,r3
 5885 0030 1046     	 mov r0,r2
 5886 0032 1946     	 mov r1,r3
 5887 0034 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1683:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[1]->slice_ptr, (uint16_t) HandlePtr->pe
 5888              	 .loc 4 1683 0
 5889 0038 7B68     	 ldr r3,[r7,#4]
 5890 003a DB68     	 ldr r3,[r3,#12]
 5891 003c 1A68     	 ldr r2,[r3]
 5892 003e 7B68     	 ldr r3,[r7,#4]
 5893 0040 D3F89C30 	 ldr r3,[r3,#156]
 5894 0044 9BB2     	 uxth r3,r3
 5895 0046 1046     	 mov r0,r2
 5896 0048 1946     	 mov r1,r3
 5897 004a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1684:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[2]->slice_ptr, (uint16_t) HandlePtr->pe
 5898              	 .loc 4 1684 0
 5899 004e 7B68     	 ldr r3,[r7,#4]
 5900 0050 1B69     	 ldr r3,[r3,#16]
 5901 0052 1A68     	 ldr r2,[r3]
 5902 0054 7B68     	 ldr r3,[r7,#4]
 5903 0056 D3F89C30 	 ldr r3,[r3,#156]
 5904 005a 9BB2     	 uxth r3,r3
 5905 005c 1046     	 mov r0,r2
 5906 005e 1946     	 mov r1,r3
 5907 0060 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
1685:../Dave/Generated/PWM_SVM/pwm_svm.c ****     if ((PWM_SVM_CMTYPE_t) PWM_SVM_NONE != HandlePtr->confighandle_ptr->current_measurement)
 5908              	 .loc 4 1685 0
 5909 0064 7B68     	 ldr r3,[r7,#4]
 5910 0066 1B68     	 ldr r3,[r3]
 5911 0068 1B7C     	 ldrb r3,[r3,#16]
 5912 006a 002B     	 cmp r3,#0
 5913 006c 0AD0     	 beq .L202
1686:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1687:../Dave/Generated/PWM_SVM/pwm_svm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(HandlePtr->phase_ptr[3]->slice_ptr, (uint16_t) HandlePtr->
 5914              	 .loc 4 1687 0
 5915 006e 7B68     	 ldr r3,[r7,#4]
 5916 0070 5B69     	 ldr r3,[r3,#20]
 5917 0072 1A68     	 ldr r2,[r3]
 5918 0074 7B68     	 ldr r3,[r7,#4]
 5919 0076 D3F89C30 	 ldr r3,[r3,#156]
 5920 007a 9BB2     	 uxth r3,r3
 5921 007c 1046     	 mov r0,r2
 5922 007e 1946     	 mov r1,r3
 5923 0080 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 5924              	.L202:
1688:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1689:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*Enable the shadow transfer for all three slice*/
1690:../Dave/Generated/PWM_SVM/pwm_svm.c ****     XMC_CCU8_EnableShadowTransfer(HandlePtr->global_ptr, HandlePtr->confighandle_ptr->shadow_transf
 5925              	 .loc 4 1690 0
 5926 0084 7B68     	 ldr r3,[r7,#4]
 5927 0086 5A68     	 ldr r2,[r3,#4]
 5928 0088 7B68     	 ldr r3,[r7,#4]
 5929 008a 1B68     	 ldr r3,[r3]
 5930 008c 5B6A     	 ldr r3,[r3,#36]
 5931 008e 1046     	 mov r0,r2
 5932 0090 1946     	 mov r1,r3
 5933 0092 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 5934              	.L200:
1691:../Dave/Generated/PWM_SVM/pwm_svm.c ****   }
1692:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 5935              	 .loc 4 1692 0
 5936 0096 0837     	 adds r7,r7,#8
 5937              	.LCFI237:
 5938              	 .cfi_def_cfa_offset 8
 5939 0098 BD46     	 mov sp,r7
 5940              	.LCFI238:
 5941              	 .cfi_def_cfa_register 13
 5942              	 
 5943 009a 80BD     	 pop {r7,pc}
 5944              	 .cfi_endproc
 5945              	.LFE269:
 5947              	 .section .text.PWM_SVM_lStaticSVMSchemeModification,"ax",%progbits
 5948              	 .align 2
 5949              	 .global PWM_SVM_lStaticSVMSchemeModification
 5950              	 .thumb
 5951              	 .thumb_func
 5953              	PWM_SVM_lStaticSVMSchemeModification:
 5954              	.LFB270:
1693:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1694:../Dave/Generated/PWM_SVM/pwm_svm.c **** void PWM_SVM_lStaticSVMSchemeModification(PWM_SVM_t* const HandlePtr, PWM_SVM_SVMCONFIG_t Scheme)
1695:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 5955              	 .loc 4 1695 0
 5956              	 .cfi_startproc
 5957              	 
 5958              	 
 5959 0000 80B5     	 push {r7,lr}
 5960              	.LCFI239:
 5961              	 .cfi_def_cfa_offset 8
 5962              	 .cfi_offset 7,-8
 5963              	 .cfi_offset 14,-4
 5964 0002 82B0     	 sub sp,sp,#8
 5965              	.LCFI240:
 5966              	 .cfi_def_cfa_offset 16
 5967 0004 00AF     	 add r7,sp,#0
 5968              	.LCFI241:
 5969              	 .cfi_def_cfa_register 7
 5970 0006 7860     	 str r0,[r7,#4]
 5971 0008 0B46     	 mov r3,r1
 5972 000a FB70     	 strb r3,[r7,#3]
1696:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1697:../Dave/Generated/PWM_SVM/pwm_svm.c ****   /* Optimized slice consumption should be unchecked for change of SVM scheme */
1698:../Dave/Generated/PWM_SVM/pwm_svm.c ****   if ((uint8_t) false == HandlePtr->confighandle_ptr->enable_optimized_slice)
 5973              	 .loc 4 1698 0
 5974 000c 7B68     	 ldr r3,[r7,#4]
 5975 000e 1B68     	 ldr r3,[r3]
 5976 0010 93F84630 	 ldrb r3,[r3,#70]
 5977 0014 002B     	 cmp r3,#0
 5978 0016 40F06F81 	 bne .L203
1699:../Dave/Generated/PWM_SVM/pwm_svm.c ****   {
1700:../Dave/Generated/PWM_SVM/pwm_svm.c ****     switch (Scheme)
 5979              	 .loc 4 1700 0
 5980 001a FB78     	 ldrb r3,[r7,#3]
 5981 001c 052B     	 cmp r3,#5
 5982 001e 00F26781 	 bhi .L205
 5983 0022 01A2     	 adr r2,.L207
 5984 0024 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 5985              	 .p2align 2
 5986              	.L207:
 5987 0028 41000000 	 .word .L206+1
 5988 002c E5000000 	 .word .L208+1
 5989 0030 43010000 	 .word .L209+1
 5990 0034 A1010000 	 .word .L210+1
 5991 0038 FF010000 	 .word .L211+1
 5992 003c 77020000 	 .word .L212+1
 5993              	 .p2align 1
 5994              	.L206:
1701:../Dave/Generated/PWM_SVM/pwm_svm.c ****     {
1702:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_7SEG_SYMM:
1703:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1704:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 5995              	 .loc 4 1704 0
 5996 0040 7B68     	 ldr r3,[r7,#4]
 5997 0042 9B68     	 ldr r3,[r3,#8]
 5998 0044 1B68     	 ldr r3,[r3]
 5999 0046 1846     	 mov r0,r3
 6000 0048 0121     	 movs r1,#1
 6001 004a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1705:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1706:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6002              	 .loc 4 1706 0
 6003 004e 7B68     	 ldr r3,[r7,#4]
 6004 0050 DB68     	 ldr r3,[r3,#12]
 6005 0052 1B68     	 ldr r3,[r3]
 6006 0054 1846     	 mov r0,r3
 6007 0056 0121     	 movs r1,#1
 6008 0058 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1707:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1708:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6009              	 .loc 4 1708 0
 6010 005c 7B68     	 ldr r3,[r7,#4]
 6011 005e 1B69     	 ldr r3,[r3,#16]
 6012 0060 1B68     	 ldr r3,[r3]
 6013 0062 1846     	 mov r0,r3
 6014 0064 0121     	 movs r1,#1
 6015 0066 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1709:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1710:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1711:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6016              	 .loc 4 1711 0
 6017 006a 7868     	 ldr r0,[r7,#4]
 6018 006c FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1712:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to symmetric*/
1713:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6019              	 .loc 4 1713 0
 6020 0070 7B68     	 ldr r3,[r7,#4]
 6021 0072 9B68     	 ldr r3,[r3,#8]
 6022 0074 1B68     	 ldr r3,[r3]
 6023 0076 1846     	 mov r0,r3
 6024 0078 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1714:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6025              	 .loc 4 1714 0
 6026 007c 7B68     	 ldr r3,[r7,#4]
 6027 007e DB68     	 ldr r3,[r3,#12]
 6028 0080 1B68     	 ldr r3,[r3]
 6029 0082 1846     	 mov r0,r3
 6030 0084 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1715:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6031              	 .loc 4 1715 0
 6032 0088 7B68     	 ldr r3,[r7,#4]
 6033 008a 1B69     	 ldr r3,[r3,#16]
 6034 008c 1B68     	 ldr r3,[r3]
 6035 008e 1846     	 mov r0,r3
 6036 0090 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1716:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1717:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*enable compare match event and bind to respective node*/
1718:../Dave/Generated/PWM_SVM/pwm_svm.c ****         if (PWM_SVM_DCLINKCM == HandlePtr->confighandle_ptr->current_measurement)
 6037              	 .loc 4 1718 0
 6038 0094 7B68     	 ldr r3,[r7,#4]
 6039 0096 1B68     	 ldr r3,[r3]
 6040 0098 1B7C     	 ldrb r3,[r3,#16]
 6041 009a 012B     	 cmp r3,#1
 6042 009c 1DD1     	 bne .L213
1719:../Dave/Generated/PWM_SVM/pwm_svm.c ****         {
1720:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 6043              	 .loc 4 1720 0
 6044 009e 7B68     	 ldr r3,[r7,#4]
 6045 00a0 5B69     	 ldr r3,[r3,#20]
 6046 00a2 1B68     	 ldr r3,[r3]
 6047 00a4 1846     	 mov r0,r3
 6048 00a6 0321     	 movs r1,#3
 6049 00a8 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1721:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1);
1722:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_EnableEvent(HandlePtr->phase_ptr[3]->slice_ptr,
 6050              	 .loc 4 1722 0
 6051 00ac 7B68     	 ldr r3,[r7,#4]
 6052 00ae 5B69     	 ldr r3,[r3,#20]
 6053 00b0 1B68     	 ldr r3,[r3]
 6054 00b2 1846     	 mov r0,r3
 6055 00b4 0521     	 movs r1,#5
 6056 00b6 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
1723:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2);
1724:../Dave/Generated/PWM_SVM/pwm_svm.c ****           XMC_CCU8_SLICE_SetInterruptNode(HandlePtr->phase_ptr[3]->slice_ptr,
 6057              	 .loc 4 1724 0
 6058 00ba 7B68     	 ldr r3,[r7,#4]
 6059 00bc 5B69     	 ldr r3,[r3,#20]
 6060 00be 1A68     	 ldr r2,[r3]
1725:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
1726:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_SR_ID_t)(
1727:../Dave/Generated/PWM_SVM/pwm_svm.c ****                   (HandlePtr->confighandle_ptr->event_sr_selector[3] >> CCU8_CC8_SRS_CM1SR_Pos) & 0
 6061              	 .loc 4 1727 0
 6062 00c0 7B68     	 ldr r3,[r7,#4]
 6063 00c2 1B68     	 ldr r3,[r3]
 6064 00c4 5B6B     	 ldr r3,[r3,#52]
 6065 00c6 9B08     	 lsrs r3,r3,#2
1724:../Dave/Generated/PWM_SVM/pwm_svm.c ****               (XMC_CCU8_SLICE_IRQ_ID_t) XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2,
 6066              	 .loc 4 1724 0
 6067 00c8 DBB2     	 uxtb r3,r3
 6068 00ca 03F00303 	 and r3,r3,#3
 6069 00ce DBB2     	 uxtb r3,r3
 6070 00d0 1046     	 mov r0,r2
 6071 00d2 0421     	 movs r1,#4
 6072 00d4 1A46     	 mov r2,r3
 6073 00d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 6074              	.L213:
1728:../Dave/Generated/PWM_SVM/pwm_svm.c ****         }
1729:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym7;
 6075              	 .loc 4 1729 0
 6076 00da 7B68     	 ldr r3,[r7,#4]
 6077 00dc 884A     	 ldr r2,.L214
 6078 00de C3F88820 	 str r2,[r3,#136]
1730:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6079              	 .loc 4 1730 0
 6080 00e2 05E1     	 b .L205
 6081              	.L208:
1731:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1732:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_7SEG_ASYMM:
1733:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1734:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6082              	 .loc 4 1734 0
 6083 00e4 7B68     	 ldr r3,[r7,#4]
 6084 00e6 9B68     	 ldr r3,[r3,#8]
 6085 00e8 1B68     	 ldr r3,[r3]
 6086 00ea 1846     	 mov r0,r3
 6087 00ec 0121     	 movs r1,#1
 6088 00ee FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1735:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1736:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6089              	 .loc 4 1736 0
 6090 00f2 7B68     	 ldr r3,[r7,#4]
 6091 00f4 DB68     	 ldr r3,[r3,#12]
 6092 00f6 1B68     	 ldr r3,[r3]
 6093 00f8 1846     	 mov r0,r3
 6094 00fa 0121     	 movs r1,#1
 6095 00fc FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1737:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1738:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6096              	 .loc 4 1738 0
 6097 0100 7B68     	 ldr r3,[r7,#4]
 6098 0102 1B69     	 ldr r3,[r3,#16]
 6099 0104 1B68     	 ldr r3,[r3]
 6100 0106 1846     	 mov r0,r3
 6101 0108 0121     	 movs r1,#1
 6102 010a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1739:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1740:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1741:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6103              	 .loc 4 1741 0
 6104 010e 7868     	 ldr r0,[r7,#4]
 6105 0110 FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1742:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to asymmetric*/
1743:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6106              	 .loc 4 1743 0
 6107 0114 7B68     	 ldr r3,[r7,#4]
 6108 0116 9B68     	 ldr r3,[r3,#8]
 6109 0118 1B68     	 ldr r3,[r3]
 6110 011a 1846     	 mov r0,r3
 6111 011c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1744:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6112              	 .loc 4 1744 0
 6113 0120 7B68     	 ldr r3,[r7,#4]
 6114 0122 DB68     	 ldr r3,[r3,#12]
 6115 0124 1B68     	 ldr r3,[r3]
 6116 0126 1846     	 mov r0,r3
 6117 0128 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1745:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6118              	 .loc 4 1745 0
 6119 012c 7B68     	 ldr r3,[r7,#4]
 6120 012e 1B69     	 ldr r3,[r3,#16]
 6121 0130 1B68     	 ldr r3,[r3]
 6122 0132 1846     	 mov r0,r3
 6123 0134 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1746:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym7;
 6124              	 .loc 4 1746 0
 6125 0138 7B68     	 ldr r3,[r7,#4]
 6126 013a 724A     	 ldr r2,.L214+4
 6127 013c C3F88820 	 str r2,[r3,#136]
1747:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6128              	 .loc 4 1747 0
 6129 0140 D6E0     	 b .L205
 6130              	.L209:
1748:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1749:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_5SEG_SYMM:
1750:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1751:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6131              	 .loc 4 1751 0
 6132 0142 7B68     	 ldr r3,[r7,#4]
 6133 0144 9B68     	 ldr r3,[r3,#8]
 6134 0146 1B68     	 ldr r3,[r3]
 6135 0148 1846     	 mov r0,r3
 6136 014a 0121     	 movs r1,#1
 6137 014c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1752:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1753:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6138              	 .loc 4 1753 0
 6139 0150 7B68     	 ldr r3,[r7,#4]
 6140 0152 DB68     	 ldr r3,[r3,#12]
 6141 0154 1B68     	 ldr r3,[r3]
 6142 0156 1846     	 mov r0,r3
 6143 0158 0121     	 movs r1,#1
 6144 015a FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1754:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1755:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6145              	 .loc 4 1755 0
 6146 015e 7B68     	 ldr r3,[r7,#4]
 6147 0160 1B69     	 ldr r3,[r3,#16]
 6148 0162 1B68     	 ldr r3,[r3]
 6149 0164 1846     	 mov r0,r3
 6150 0166 0121     	 movs r1,#1
 6151 0168 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1756:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1757:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1758:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6152              	 .loc 4 1758 0
 6153 016c 7868     	 ldr r0,[r7,#4]
 6154 016e FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1759:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set the pwm type to symmetric*/
1760:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6155              	 .loc 4 1760 0
 6156 0172 7B68     	 ldr r3,[r7,#4]
 6157 0174 9B68     	 ldr r3,[r3,#8]
 6158 0176 1B68     	 ldr r3,[r3]
 6159 0178 1846     	 mov r0,r3
 6160 017a FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1761:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6161              	 .loc 4 1761 0
 6162 017e 7B68     	 ldr r3,[r7,#4]
 6163 0180 DB68     	 ldr r3,[r3,#12]
 6164 0182 1B68     	 ldr r3,[r3]
 6165 0184 1846     	 mov r0,r3
 6166 0186 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1762:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableSymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6167              	 .loc 4 1762 0
 6168 018a 7B68     	 ldr r3,[r7,#4]
 6169 018c 1B69     	 ldr r3,[r3,#16]
 6170 018e 1B68     	 ldr r3,[r3]
 6171 0190 1846     	 mov r0,r3
 6172 0192 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableSymmetricCompareMode
1763:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueSym5;
 6173              	 .loc 4 1763 0
 6174 0196 7B68     	 ldr r3,[r7,#4]
 6175 0198 5B4A     	 ldr r2,.L214+8
 6176 019a C3F88820 	 str r2,[r3,#136]
1764:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6177              	 .loc 4 1764 0
 6178 019e A7E0     	 b .L205
 6179              	.L210:
1765:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1766:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_5SEG_ASYMM:
1767:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to centre aligned*/
1768:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6180              	 .loc 4 1768 0
 6181 01a0 7B68     	 ldr r3,[r7,#4]
 6182 01a2 9B68     	 ldr r3,[r3,#8]
 6183 01a4 1B68     	 ldr r3,[r3]
 6184 01a6 1846     	 mov r0,r3
 6185 01a8 0121     	 movs r1,#1
 6186 01aa FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1769:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1770:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6187              	 .loc 4 1770 0
 6188 01ae 7B68     	 ldr r3,[r7,#4]
 6189 01b0 DB68     	 ldr r3,[r3,#12]
 6190 01b2 1B68     	 ldr r3,[r3]
 6191 01b4 1846     	 mov r0,r3
 6192 01b6 0121     	 movs r1,#1
 6193 01b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1771:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1772:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6194              	 .loc 4 1772 0
 6195 01bc 7B68     	 ldr r3,[r7,#4]
 6196 01be 1B69     	 ldr r3,[r3,#16]
 6197 01c0 1B68     	 ldr r3,[r3]
 6198 01c2 1846     	 mov r0,r3
 6199 01c4 0121     	 movs r1,#1
 6200 01c6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1773:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA);
1774:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1775:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lCAPeriodValueConfig(HandlePtr);
 6201              	 .loc 4 1775 0
 6202 01ca 7868     	 ldr r0,[r7,#4]
 6203 01cc FFF7FEFF 	 bl PWM_SVM_lCAPeriodValueConfig
1776:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1777:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6204              	 .loc 4 1777 0
 6205 01d0 7B68     	 ldr r3,[r7,#4]
 6206 01d2 9B68     	 ldr r3,[r3,#8]
 6207 01d4 1B68     	 ldr r3,[r3]
 6208 01d6 1846     	 mov r0,r3
 6209 01d8 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1778:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6210              	 .loc 4 1778 0
 6211 01dc 7B68     	 ldr r3,[r7,#4]
 6212 01de DB68     	 ldr r3,[r3,#12]
 6213 01e0 1B68     	 ldr r3,[r3]
 6214 01e2 1846     	 mov r0,r3
 6215 01e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1779:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6216              	 .loc 4 1779 0
 6217 01e8 7B68     	 ldr r3,[r7,#4]
 6218 01ea 1B69     	 ldr r3,[r3,#16]
 6219 01ec 1B68     	 ldr r3,[r3]
 6220 01ee 1846     	 mov r0,r3
 6221 01f0 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1780:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_CalCmpValueAsym5;
 6222              	 .loc 4 1780 0
 6223 01f4 7B68     	 ldr r3,[r7,#4]
 6224 01f6 454A     	 ldr r2,.L214+12
 6225 01f8 C3F88820 	 str r2,[r3,#136]
1781:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6226              	 .loc 4 1781 0
 6227 01fc 78E0     	 b .L205
 6228              	.L211:
1782:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1783:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_PSEUDONULL_3ACTIVE:
1784:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to edge aligned*/
1785:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6229              	 .loc 4 1785 0
 6230 01fe 7B68     	 ldr r3,[r7,#4]
 6231 0200 9B68     	 ldr r3,[r3,#8]
 6232 0202 1B68     	 ldr r3,[r3]
 6233 0204 1846     	 mov r0,r3
 6234 0206 0021     	 movs r1,#0
 6235 0208 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1786:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1787:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6236              	 .loc 4 1787 0
 6237 020c 7B68     	 ldr r3,[r7,#4]
 6238 020e DB68     	 ldr r3,[r3,#12]
 6239 0210 1B68     	 ldr r3,[r3]
 6240 0212 1846     	 mov r0,r3
 6241 0214 0021     	 movs r1,#0
 6242 0216 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1788:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1789:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6243              	 .loc 4 1789 0
 6244 021a 7B68     	 ldr r3,[r7,#4]
 6245 021c 1B69     	 ldr r3,[r3,#16]
 6246 021e 1B68     	 ldr r3,[r3]
 6247 0220 1846     	 mov r0,r3
 6248 0222 0021     	 movs r1,#0
 6249 0224 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1790:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1791:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1792:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lEAPeriodValueConfig(HandlePtr);
 6250              	 .loc 4 1792 0
 6251 0228 7868     	 ldr r0,[r7,#4]
 6252 022a FFF7FEFF 	 bl PWM_SVM_lEAPeriodValueConfig
1793:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude = (uint16_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_
 6253              	 .loc 4 1793 0
 6254 022e 7B68     	 ldr r3,[r7,#4]
 6255 0230 B3F8C430 	 ldrh r3,[r3,#196]
 6256 0234 1A46     	 mov r2,r3
 6257 0236 5200     	 lsls r2,r2,#1
 6258 0238 1344     	 add r3,r3,r2
 6259 023a 9BB2     	 uxth r3,r3
 6260 023c C3F58043 	 rsb r3,r3,#16384
 6261 0240 9AB2     	 uxth r2,r3
 6262 0242 7B68     	 ldr r3,[r7,#4]
 6263 0244 A3F8C620 	 strh r2,[r3,#198]
1794:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6264              	 .loc 4 1794 0
 6265 0248 7B68     	 ldr r3,[r7,#4]
 6266 024a 9B68     	 ldr r3,[r3,#8]
 6267 024c 1B68     	 ldr r3,[r3]
 6268 024e 1846     	 mov r0,r3
 6269 0250 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1795:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6270              	 .loc 4 1795 0
 6271 0254 7B68     	 ldr r3,[r7,#4]
 6272 0256 DB68     	 ldr r3,[r3,#12]
 6273 0258 1B68     	 ldr r3,[r3]
 6274 025a 1846     	 mov r0,r3
 6275 025c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1796:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6276              	 .loc 4 1796 0
 6277 0260 7B68     	 ldr r3,[r7,#4]
 6278 0262 1B69     	 ldr r3,[r3,#16]
 6279 0264 1B68     	 ldr r3,[r3]
 6280 0266 1846     	 mov r0,r3
 6281 0268 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1797:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc3av5segmentCompVal;
 6282              	 .loc 4 1797 0
 6283 026c 7B68     	 ldr r3,[r7,#4]
 6284 026e 284A     	 ldr r2,.L214+16
 6285 0270 C3F88820 	 str r2,[r3,#136]
1798:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6286              	 .loc 4 1798 0
 6287 0274 3CE0     	 b .L205
 6288              	.L212:
1799:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1800:../Dave/Generated/PWM_SVM/pwm_svm.c ****       case PWM_SVM_PSEUDONULL_4ACTIVE:
1801:../Dave/Generated/PWM_SVM/pwm_svm.c ****         /*set counting mode to edge aligned*/
1802:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[0]->slice_ptr,
 6289              	 .loc 4 1802 0
 6290 0276 7B68     	 ldr r3,[r7,#4]
 6291 0278 9B68     	 ldr r3,[r3,#8]
 6292 027a 1B68     	 ldr r3,[r3]
 6293 027c 1846     	 mov r0,r3
 6294 027e 0021     	 movs r1,#0
 6295 0280 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1803:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1804:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[1]->slice_ptr,
 6296              	 .loc 4 1804 0
 6297 0284 7B68     	 ldr r3,[r7,#4]
 6298 0286 DB68     	 ldr r3,[r3,#12]
 6299 0288 1B68     	 ldr r3,[r3]
 6300 028a 1846     	 mov r0,r3
 6301 028c 0021     	 movs r1,#0
 6302 028e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1805:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1806:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_SetTimerCountingMode(HandlePtr->phase_ptr[2]->slice_ptr,
 6303              	 .loc 4 1806 0
 6304 0292 7B68     	 ldr r3,[r7,#4]
 6305 0294 1B69     	 ldr r3,[r3,#16]
 6306 0296 1B68     	 ldr r3,[r3]
 6307 0298 1846     	 mov r0,r3
 6308 029a 0021     	 movs r1,#0
 6309 029c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCountingMode
1807:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (XMC_CCU8_SLICE_TIMER_COUNT_MODE_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA);
1808:../Dave/Generated/PWM_SVM/pwm_svm.c **** 
1809:../Dave/Generated/PWM_SVM/pwm_svm.c ****         PWM_SVM_lEAPeriodValueConfig(HandlePtr);
 6310              	 .loc 4 1809 0
 6311 02a0 7868     	 ldr r0,[r7,#4]
 6312 02a2 FFF7FEFF 	 bl PWM_SVM_lEAPeriodValueConfig
1810:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude =
1811:../Dave/Generated/PWM_SVM/pwm_svm.c ****             (uint16_t)((uint32_t)PWM_SVM_MAX_AMPLITUDE - (uint32_t)((uint32_t) 4 * (uint32_t) Handl
 6313              	 .loc 4 1811 0
 6314 02a6 7B68     	 ldr r3,[r7,#4]
 6315 02a8 B3F8C430 	 ldrh r3,[r3,#196]
 6316 02ac 1A46     	 mov r2,r3
 6317 02ae 9203     	 lsls r2,r2,#14
 6318 02b0 D31A     	 subs r3,r2,r3
 6319 02b2 9B00     	 lsls r3,r3,#2
 6320 02b4 9BB2     	 uxth r3,r3
 6321 02b6 03F58043 	 add r3,r3,#16384
 6322 02ba 9AB2     	 uxth r2,r3
1810:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->max_amplitude =
 6323              	 .loc 4 1810 0
 6324 02bc 7B68     	 ldr r3,[r7,#4]
 6325 02be A3F8C620 	 strh r2,[r3,#198]
1812:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[0]->slice_ptr);
 6326              	 .loc 4 1812 0
 6327 02c2 7B68     	 ldr r3,[r7,#4]
 6328 02c4 9B68     	 ldr r3,[r3,#8]
 6329 02c6 1B68     	 ldr r3,[r3]
 6330 02c8 1846     	 mov r0,r3
 6331 02ca FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1813:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[1]->slice_ptr);
 6332              	 .loc 4 1813 0
 6333 02ce 7B68     	 ldr r3,[r7,#4]
 6334 02d0 DB68     	 ldr r3,[r3,#12]
 6335 02d2 1B68     	 ldr r3,[r3]
 6336 02d4 1846     	 mov r0,r3
 6337 02d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1814:../Dave/Generated/PWM_SVM/pwm_svm.c ****         XMC_CCU8_SLICE_EnableAsymmetricCompareMode(HandlePtr->phase_ptr[2]->slice_ptr);
 6338              	 .loc 4 1814 0
 6339 02da 7B68     	 ldr r3,[r7,#4]
 6340 02dc 1B69     	 ldr r3,[r3,#16]
 6341 02de 1B68     	 ldr r3,[r3]
 6342 02e0 1846     	 mov r0,r3
 6343 02e2 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableAsymmetricCompareMode
1815:../Dave/Generated/PWM_SVM/pwm_svm.c ****         HandlePtr->svm_schemesel_ptr = (PWM_SVM_SVMSCHEME_PTR_t) PWM_SVM_Calc4av7segmentCompVal;
 6344              	 .loc 4 1815 0
 6345 02e6 7B68     	 ldr r3,[r7,#4]
 6346 02e8 0A4A     	 ldr r2,.L214+20
 6347 02ea C3F88820 	 str r2,[r3,#136]
1816:../Dave/Generated/PWM_SVM/pwm_svm.c ****         break;
 6348              	 .loc 4 1816 0
 6349 02ee 00BF     	 nop
 6350              	.L205:
1817:../Dave/Generated/PWM_SVM/pwm_svm.c ****     }
1818:../Dave/Generated/PWM_SVM/pwm_svm.c ****     /*set the scheme*/
1819:../Dave/Generated/PWM_SVM/pwm_svm.c ****     HandlePtr->svm_config = Scheme;
 6351              	 .loc 4 1819 0
 6352 02f0 7B68     	 ldr r3,[r7,#4]
 6353 02f2 FA78     	 ldrb r2,[r7,#3]
 6354 02f4 83F89220 	 strb r2,[r3,#146]
 6355              	.L203:
1820:../Dave/Generated/PWM_SVM/pwm_svm.c ****   } /* END OF if (false == HandlePtr->enable_optimized_slice) */
1821:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 6356              	 .loc 4 1821 0
 6357 02f8 0837     	 adds r7,r7,#8
 6358              	.LCFI242:
 6359              	 .cfi_def_cfa_offset 8
 6360 02fa BD46     	 mov sp,r7
 6361              	.LCFI243:
 6362              	 .cfi_def_cfa_register 13
 6363              	 
 6364 02fc 80BD     	 pop {r7,pc}
 6365              	.L215:
 6366 02fe 00BF     	 .align 2
 6367              	.L214:
 6368 0300 00000000 	 .word PWM_SVM_CalCmpValueSym7
 6369 0304 00000000 	 .word PWM_SVM_CalCmpValueAsym7
 6370 0308 00000000 	 .word PWM_SVM_CalCmpValueSym5
 6371 030c 00000000 	 .word PWM_SVM_CalCmpValueAsym5
 6372 0310 00000000 	 .word PWM_SVM_Calc3av5segmentCompVal
 6373 0314 00000000 	 .word PWM_SVM_Calc4av7segmentCompVal
 6374              	 .cfi_endproc
 6375              	.LFE270:
 6377              	 .section .text.PWM_SVM_GetSVMScheme,"ax",%progbits
 6378              	 .align 2
 6379              	 .global PWM_SVM_GetSVMScheme
 6380              	 .thumb
 6381              	 .thumb_func
 6383              	PWM_SVM_GetSVMScheme:
 6384              	.LFB271:
1822:../Dave/Generated/PWM_SVM/pwm_svm.c **** /*This API returns the SVM scheme*/
1823:../Dave/Generated/PWM_SVM/pwm_svm.c **** PWM_SVM_SVMCONFIG_t PWM_SVM_GetSVMScheme(PWM_SVM_t* const HandlePtr)
1824:../Dave/Generated/PWM_SVM/pwm_svm.c **** {
 6385              	 .loc 4 1824 0
 6386              	 .cfi_startproc
 6387              	 
 6388              	 
 6389              	 
 6390 0000 80B4     	 push {r7}
 6391              	.LCFI244:
 6392              	 .cfi_def_cfa_offset 4
 6393              	 .cfi_offset 7,-4
 6394 0002 83B0     	 sub sp,sp,#12
 6395              	.LCFI245:
 6396              	 .cfi_def_cfa_offset 16
 6397 0004 00AF     	 add r7,sp,#0
 6398              	.LCFI246:
 6399              	 .cfi_def_cfa_register 7
 6400 0006 7860     	 str r0,[r7,#4]
1825:../Dave/Generated/PWM_SVM/pwm_svm.c ****   XMC_ASSERT("PWM_SVM_GetSVMScheme:NULL Handle Pointer", (HandlePtr != (PWM_SVM_t *) NULL));
1826:../Dave/Generated/PWM_SVM/pwm_svm.c ****   return (HandlePtr->svm_config);
 6401              	 .loc 4 1826 0
 6402 0008 7B68     	 ldr r3,[r7,#4]
 6403 000a 93F89230 	 ldrb r3,[r3,#146]
1827:../Dave/Generated/PWM_SVM/pwm_svm.c **** }
 6404              	 .loc 4 1827 0
 6405 000e 1846     	 mov r0,r3
 6406 0010 0C37     	 adds r7,r7,#12
 6407              	.LCFI247:
 6408              	 .cfi_def_cfa_offset 4
 6409 0012 BD46     	 mov sp,r7
 6410              	.LCFI248:
 6411              	 .cfi_def_cfa_register 13
 6412              	 
 6413 0014 5DF8047B 	 ldr r7,[sp],#4
 6414              	.LCFI249:
 6415              	 .cfi_restore 7
 6416              	 .cfi_def_cfa_offset 0
 6417 0018 7047     	 bx lr
 6418              	 .cfi_endproc
 6419              	.LFE271:
 6421 001a 00BF     	 .text
 6422              	.Letext0:
 6423              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 6424              	 .file 6 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 6425              	 .file 7 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 6426              	 .file 8 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc4_scu.h"
 6427              	 .file 9 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Dave/Generated/DAVE_Common.h"
 6428              	 .file 10 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 6429              	 .file 11 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc4_gpio.h"
 6430              	 .file 12 "../Dave/Generated/PWM_SVM/pwm_svm.h"
 6431              	 .file 13 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Include/cmsis_gcc.h"
 6432              	 .file 14 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Include/core_cm4.h"
 6433              	 .file 15 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm_svm.c
    {standard input}:20     .text.XMC_CCU8_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU8_EnableClock:00000000 XMC_CCU8_EnableClock
    {standard input}:68     .text.XMC_CCU8_SLICE_EnableTrap:00000000 $t
    {standard input}:72     .text.XMC_CCU8_SLICE_EnableTrap:00000000 XMC_CCU8_SLICE_EnableTrap
    {standard input}:116    .text.XMC_CCU8_SLICE_DisableTrap:00000000 $t
    {standard input}:120    .text.XMC_CCU8_SLICE_DisableTrap:00000000 XMC_CCU8_SLICE_DisableTrap
    {standard input}:165    .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:169    .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:208    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:212    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:252    .text.XMC_CCU8_SLICE_SetTimerValue:00000000 $t
    {standard input}:256    .text.XMC_CCU8_SLICE_SetTimerValue:00000000 XMC_CCU8_SLICE_SetTimerValue
    {standard input}:297    .text.XMC_CCU8_SLICE_EnableEvent:00000000 $t
    {standard input}:301    .text.XMC_CCU8_SLICE_EnableEvent:00000000 XMC_CCU8_SLICE_EnableEvent
    {standard input}:347    .text.XMC_CCU8_SLICE_DisableEvent:00000000 $t
    {standard input}:351    .text.XMC_CCU8_SLICE_DisableEvent:00000000 XMC_CCU8_SLICE_DisableEvent
    {standard input}:398    .text.XMC_CCU8_SLICE_ClearEvent:00000000 $t
    {standard input}:402    .text.XMC_CCU8_SLICE_ClearEvent:00000000 XMC_CCU8_SLICE_ClearEvent
    {standard input}:445    .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode:00000000 $t
    {standard input}:449    .text.XMC_CCU8_SLICE_EnableAsymmetricCompareMode:00000000 XMC_CCU8_SLICE_EnableAsymmetricCompareMode
    {standard input}:490    .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode:00000000 $t
    {standard input}:494    .text.XMC_CCU8_SLICE_EnableSymmetricCompareMode:00000000 XMC_CCU8_SLICE_EnableSymmetricCompareMode
    {standard input}:535    .text.XMC_SCU_SetCcuTriggerHigh:00000000 $t
    {standard input}:539    .text.XMC_SCU_SetCcuTriggerHigh:00000000 XMC_SCU_SetCcuTriggerHigh
    {standard input}:581    .text.XMC_SCU_SetCcuTriggerHigh:00000020 $d
    {standard input}:586    .text.XMC_SCU_SetCcuTriggerLow:00000000 $t
    {standard input}:590    .text.XMC_SCU_SetCcuTriggerLow:00000000 XMC_SCU_SetCcuTriggerLow
    {standard input}:632    .text.XMC_SCU_SetCcuTriggerLow:00000020 $d
    {standard input}:637    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:641    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:685    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:689    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:732    .text.PWM_SVM_lEnableEvent:00000000 $t
    {standard input}:737    .text.PWM_SVM_lEnableEvent:00000000 PWM_SVM_lEnableEvent
    {standard input}:797    .text.PWM_SVM_InverterDisable:00000000 $t
    {standard input}:802    .text.PWM_SVM_InverterDisable:00000000 PWM_SVM_InverterDisable
    {standard input}:867    .text.PWM_SVM_InverterEnable:00000000 $t
    {standard input}:872    .text.PWM_SVM_InverterEnable:00000000 PWM_SVM_InverterEnable
    {standard input}:937    .ram_code:00000000 $t
    {standard input}:941    .ram_code:00000000 PWM_SVM_lSymCompValUpdate
    {standard input}:969    .ram_code:00000020 $d
    {standard input}:974    .ram_code:00000034 $t
    {standard input}:1143   .text.PWM_SVM_lAsymCompValUpdate:00000000 $t
    {standard input}:1147   .text.PWM_SVM_lAsymCompValUpdate:00000000 PWM_SVM_lAsymCompValUpdate
    {standard input}:1175   .text.PWM_SVM_lAsymCompValUpdate:00000020 $d
    {standard input}:1180   .text.PWM_SVM_lAsymCompValUpdate:00000034 $t
    {standard input}:1486   .ram_code:00000160 PWM_SVM_CalCmpValueSym7
    {standard input}:1582   .ram_code:000001f8 PWM_SVM_CalCmpValueSym5
    {standard input}:1664   .text.PWM_SVM_CalCmpValueAsym7:00000000 $t
    {standard input}:1669   .text.PWM_SVM_CalCmpValueAsym7:00000000 PWM_SVM_CalCmpValueAsym7
    {standard input}:1830   .text.PWM_SVM_CalCmpValueAsym5:00000000 $t
    {standard input}:1835   .text.PWM_SVM_CalCmpValueAsym5:00000000 PWM_SVM_CalCmpValueAsym5
    {standard input}:1957   .text.PWM_SVM_Calc3av5segmentCompVal:00000000 $t
    {standard input}:1962   .text.PWM_SVM_Calc3av5segmentCompVal:00000000 PWM_SVM_Calc3av5segmentCompVal
    {standard input}:2139   .text.PWM_SVM_Calc3av5segmentCompVal:0000016c $d
    {standard input}:2144   .text.PWM_SVM_Calc3av5segmentCompVal:00000180 $t
    {standard input}:2645   .text.PWM_SVM_Calc4av7segmentCompVal:00000000 $t
    {standard input}:2650   .text.PWM_SVM_Calc4av7segmentCompVal:00000000 PWM_SVM_Calc4av7segmentCompVal
    {standard input}:2799   .text.PWM_SVM_Calc4av7segmentCompVal:00000124 $d
    {standard input}:2804   .text.PWM_SVM_Calc4av7segmentCompVal:00000138 $t
    {standard input}:3358   .ram_code:00000278 PWM_SVM_TimecalcUsingLUT
    {standard input}:3552   .ram_code:000003fc $d
    {standard input}:3557   .text.PWM_SVM_GetAppVersion:00000000 $t
    {standard input}:3562   .text.PWM_SVM_GetAppVersion:00000000 PWM_SVM_GetAppVersion
    {standard input}:3622   .text.PWM_SVM_Init:00000000 $t
    {standard input}:3627   .text.PWM_SVM_Init:00000000 PWM_SVM_Init
    {standard input}:3990   .text.PWM_SVM_Start:00000000 $t
    {standard input}:3995   .text.PWM_SVM_Start:00000000 PWM_SVM_Start
    {standard input}:4374   .text.PWM_SVM_Stop:00000000 $t
    {standard input}:4379   .text.PWM_SVM_Stop:00000000 PWM_SVM_Stop
    {standard input}:4535   .ram_code:00000400 $t
    {standard input}:4540   .ram_code:00000400 PWM_SVM_SVMUpdate
    {standard input}:4601   .text.PWM_SVM_SetPWMFrequency:00000000 $t
    {standard input}:4606   .text.PWM_SVM_SetPWMFrequency:00000000 PWM_SVM_SetPWMFrequency
    {standard input}:4803   .text.PWM_SVM_GetPWMFrequency:00000000 $t
    {standard input}:4808   .text.PWM_SVM_GetPWMFrequency:00000000 PWM_SVM_GetPWMFrequency
    {standard input}:4878   .text.PWM_SVM_SetDeadTime:00000000 $t
    {standard input}:4883   .text.PWM_SVM_SetDeadTime:00000000 PWM_SVM_SetDeadTime
    {standard input}:5093   .text.PWM_SVM_SetDeadTime:0000014c $d
    {standard input}:5099   .text.PWM_SVM_GetRisingEdgeDeadTime:00000000 $t
    {standard input}:5104   .text.PWM_SVM_GetRisingEdgeDeadTime:00000000 PWM_SVM_GetRisingEdgeDeadTime
    {standard input}:5164   .text.PWM_SVM_GetRisingEdgeDeadTime:0000004c $d
    {standard input}:5170   .text.PWM_SVM_GetFallingEdgeDeadTime:00000000 $t
    {standard input}:5175   .text.PWM_SVM_GetFallingEdgeDeadTime:00000000 PWM_SVM_GetFallingEdgeDeadTime
    {standard input}:5235   .text.PWM_SVM_GetFallingEdgeDeadTime:0000004c $d
    {standard input}:5241   .text.PWM_SVM_SetTmin:00000000 $t
    {standard input}:5246   .text.PWM_SVM_SetTmin:00000000 PWM_SVM_SetTmin
    {standard input}:5316   .text.PWM_SVM_SetTmin:00000054 $d
    {standard input}:5322   .text.PWM_SVM_GetTmin:00000000 $t
    {standard input}:5327   .text.PWM_SVM_GetTmin:00000000 PWM_SVM_GetTmin
    {standard input}:5381   .text.PWM_SVM_GetTmin:00000040 $d
    {standard input}:5387   .text.PWM_SVM_SetSVMScheme:00000000 $t
    {standard input}:5392   .text.PWM_SVM_SetSVMScheme:00000000 PWM_SVM_SetSVMScheme
    {standard input}:5482   .text.PWM_SVM_lDynamicSVMSchemeModification:00000000 PWM_SVM_lDynamicSVMSchemeModification
    {standard input}:5953   .text.PWM_SVM_lStaticSVMSchemeModification:00000000 PWM_SVM_lStaticSVMSchemeModification
    {standard input}:5477   .text.PWM_SVM_lDynamicSVMSchemeModification:00000000 $t
    {standard input}:5510   .text.PWM_SVM_lDynamicSVMSchemeModification:0000001c $d
    {standard input}:5516   .text.PWM_SVM_lDynamicSVMSchemeModification:00000034 $t
    {standard input}:5724   .text.PWM_SVM_lDynamicSVMSchemeModification:00000198 $d
    {standard input}:5733   .text.PWM_SVM_lCAPeriodValueConfig:00000000 $t
    {standard input}:5738   .text.PWM_SVM_lCAPeriodValueConfig:00000000 PWM_SVM_lCAPeriodValueConfig
    {standard input}:5843   .text.PWM_SVM_lEAPeriodValueConfig:00000000 $t
    {standard input}:5848   .text.PWM_SVM_lEAPeriodValueConfig:00000000 PWM_SVM_lEAPeriodValueConfig
    {standard input}:5948   .text.PWM_SVM_lStaticSVMSchemeModification:00000000 $t
    {standard input}:5987   .text.PWM_SVM_lStaticSVMSchemeModification:00000028 $d
    {standard input}:5993   .text.PWM_SVM_lStaticSVMSchemeModification:00000040 $t
    {standard input}:6368   .text.PWM_SVM_lStaticSVMSchemeModification:00000300 $d
    {standard input}:6378   .text.PWM_SVM_GetSVMScheme:00000000 $t
    {standard input}:6383   .text.PWM_SVM_GetSVMScheme:00000000 PWM_SVM_GetSVMScheme
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_CCU8_SLICE_SetTimerCompareMatch
Sinus60_tab
GLOBAL_CCU8_Init
XMC_GPIO_Init
XMC_GPIO_SetHardwareControl
XMC_CCU8_SLICE_CompareInit
XMC_CCU8_SLICE_DeadTimeInit
XMC_CCU8_SLICE_ConfigureEvent
XMC_CCU8_SLICE_TrapConfig
XMC_CCU8_SLICE_SetTimerPeriodMatch
XMC_CCU8_SLICE_ConfigureStatusBitOutput
XMC_CCU8_SLICE_StartConfig
XMC_CCU8_SLICE_SetDeadTimeValue
XMC_CCU8_SLICE_SetDeadTimePrescaler
XMC_CCU8_SLICE_SetInterruptNode
XMC_CCU8_SLICE_SetTimerCountingMode
