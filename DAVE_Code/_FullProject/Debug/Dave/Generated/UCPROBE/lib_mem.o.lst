   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "lib_mem.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm Mem_Heap,1024,4
  20              	 .comm Mem_SegHeap,20,4
  21              	 .comm Mem_SegHeadPtr,4,4
  22              	 .section .rodata
  23              	 .align 2
  24              	.LC0:
  25 0000 48656170 	 .ascii "Heap\000"
  25      00
  26              	 .section .text.Mem_Init,"ax",%progbits
  27              	 .align 2
  28              	 .global Mem_Init
  29              	 .thumb
  30              	 .thumb_func
  32              	Mem_Init:
  33              	.LFB0:
  34              	 .file 1 "../Dave/Generated/UCPROBE/lib_mem.c"
   1:../Dave/Generated/UCPROBE/lib_mem.c **** /*
   2:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
   3:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                uC/LIB
   4:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        CUSTOM LIBRARY MODULES
   5:../Dave/Generated/UCPROBE/lib_mem.c **** *
   6:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (c) Copyright 2004-2014; Micrium, Inc.; Weston, FL
   7:../Dave/Generated/UCPROBE/lib_mem.c **** *
   8:../Dave/Generated/UCPROBE/lib_mem.c **** *                  All rights reserved.  Protected by international copyright laws.
   9:../Dave/Generated/UCPROBE/lib_mem.c **** *
  10:../Dave/Generated/UCPROBE/lib_mem.c **** *                  uC/LIB is provided in source form to registered licensees ONLY.  It is
  11:../Dave/Generated/UCPROBE/lib_mem.c **** *                  illegal to distribute this source code to any third party unless you receive
  12:../Dave/Generated/UCPROBE/lib_mem.c **** *                  written permission by an authorized Micrium representative.  Knowledge of
  13:../Dave/Generated/UCPROBE/lib_mem.c **** *                  the source code may NOT be used to develop a similar product.
  14:../Dave/Generated/UCPROBE/lib_mem.c **** *
  15:../Dave/Generated/UCPROBE/lib_mem.c **** *                  Please help us continue to provide the Embedded community with the finest
  16:../Dave/Generated/UCPROBE/lib_mem.c **** *                  software available.  Your honesty is greatly appreciated.
  17:../Dave/Generated/UCPROBE/lib_mem.c **** *
  18:../Dave/Generated/UCPROBE/lib_mem.c **** *                  You can find our product's user manual, API reference, release notes and
  19:../Dave/Generated/UCPROBE/lib_mem.c **** *                  more information at: https://doc.micrium.com
  20:../Dave/Generated/UCPROBE/lib_mem.c **** *
  21:../Dave/Generated/UCPROBE/lib_mem.c **** *                  You can contact us at: http://www.micrium.com
  22:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  23:../Dave/Generated/UCPROBE/lib_mem.c **** */
  24:../Dave/Generated/UCPROBE/lib_mem.c **** 
  25:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  26:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  27:../Dave/Generated/UCPROBE/lib_mem.c **** *
  28:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     STANDARD MEMORY OPERATIONS
  29:../Dave/Generated/UCPROBE/lib_mem.c **** *
  30:../Dave/Generated/UCPROBE/lib_mem.c **** * Filename      : lib_mem.c
  31:../Dave/Generated/UCPROBE/lib_mem.c **** * Version       : V1.38.01
  32:../Dave/Generated/UCPROBE/lib_mem.c **** * Programmer(s) : ITJ
  33:../Dave/Generated/UCPROBE/lib_mem.c **** *                 FGK
  34:../Dave/Generated/UCPROBE/lib_mem.c **** *                 JFD
  35:../Dave/Generated/UCPROBE/lib_mem.c **** *                 FBJ
  36:../Dave/Generated/UCPROBE/lib_mem.c **** *                 EJ
  37:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  38:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  39:../Dave/Generated/UCPROBE/lib_mem.c **** *
  40:../Dave/Generated/UCPROBE/lib_mem.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  41:../Dave/Generated/UCPROBE/lib_mem.c **** *
  42:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (1) \<Custom Library Directory>\lib_*.*
  43:../Dave/Generated/UCPROBE/lib_mem.c **** *
  44:../Dave/Generated/UCPROBE/lib_mem.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  45:../Dave/Generated/UCPROBE/lib_mem.c **** *
  46:../Dave/Generated/UCPROBE/lib_mem.c **** *                               where
  47:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <Custom Library Directory>      directory path for custom l
  48:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <cpu>                           directory name for specific
  49:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       <compiler>                      directory name for specific
  50:../Dave/Generated/UCPROBE/lib_mem.c **** *
  51:../Dave/Generated/UCPROBE/lib_mem.c **** *                     (b) Product-specific library functions are implemented in individual products
  52:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  53:../Dave/Generated/UCPROBE/lib_mem.c **** */
  54:../Dave/Generated/UCPROBE/lib_mem.c **** 
  55:../Dave/Generated/UCPROBE/lib_mem.c **** 
  56:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  57:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  58:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            INCLUDE FILES
  59:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  60:../Dave/Generated/UCPROBE/lib_mem.c **** */
  61:../Dave/Generated/UCPROBE/lib_mem.c **** 
  62:../Dave/Generated/UCPROBE/lib_mem.c **** #define    MICRIUM_SOURCE
  63:../Dave/Generated/UCPROBE/lib_mem.c **** #define    LIB_MEM_MODULE
  64:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_mem.h"
  65:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_math.h"
  66:../Dave/Generated/UCPROBE/lib_mem.c **** #include  "lib_str.h"
  67:../Dave/Generated/UCPROBE/lib_mem.c **** 
  68:../Dave/Generated/UCPROBE/lib_mem.c **** 
  69:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  70:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  71:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            LOCAL DEFINES
  72:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  73:../Dave/Generated/UCPROBE/lib_mem.c **** */
  74:../Dave/Generated/UCPROBE/lib_mem.c **** 
  75:../Dave/Generated/UCPROBE/lib_mem.c **** 
  76:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  77:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  78:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           LOCAL CONSTANTS
  79:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  80:../Dave/Generated/UCPROBE/lib_mem.c **** */
  81:../Dave/Generated/UCPROBE/lib_mem.c **** 
  82:../Dave/Generated/UCPROBE/lib_mem.c **** 
  83:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  84:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  85:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          LOCAL DATA TYPES
  86:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  87:../Dave/Generated/UCPROBE/lib_mem.c **** */
  88:../Dave/Generated/UCPROBE/lib_mem.c **** 
  89:../Dave/Generated/UCPROBE/lib_mem.c **** 
  90:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  91:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  92:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            LOCAL TABLES
  93:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  94:../Dave/Generated/UCPROBE/lib_mem.c **** */
  95:../Dave/Generated/UCPROBE/lib_mem.c **** 
  96:../Dave/Generated/UCPROBE/lib_mem.c **** 
  97:../Dave/Generated/UCPROBE/lib_mem.c **** /*
  98:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
  99:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       LOCAL GLOBAL VARIABLES
 100:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 101:../Dave/Generated/UCPROBE/lib_mem.c **** */
 102:../Dave/Generated/UCPROBE/lib_mem.c **** 
 103:../Dave/Generated/UCPROBE/lib_mem.c **** 
 104:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 105:../Dave/Generated/UCPROBE/lib_mem.c **** #ifndef  LIB_MEM_CFG_HEAP_BASE_ADDR
 106:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_INT08U   Mem_Heap[LIB_MEM_CFG_HEAP_SIZE];                   /* Mem heap.                       
 107:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 108:../Dave/Generated/UCPROBE/lib_mem.c **** 
 109:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_SEG      Mem_SegHeap;                                       /* Heap mem seg.                   
 110:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 111:../Dave/Generated/UCPROBE/lib_mem.c **** 
 112:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_SEG     *Mem_SegHeadPtr;                                    /* Ptr to head of seg list.        
 113:../Dave/Generated/UCPROBE/lib_mem.c **** 
 114:../Dave/Generated/UCPROBE/lib_mem.c **** 
 115:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 116:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 117:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      LOCAL FUNCTION PROTOTYPES
 118:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 119:../Dave/Generated/UCPROBE/lib_mem.c **** */
 120:../Dave/Generated/UCPROBE/lib_mem.c **** 
 121:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_SegCreateCritical    (const  CPU_CHAR      *p_name,
 122:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 123:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_ADDR       seg_base_addr,
 124:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 125:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size);
 126:../Dave/Generated/UCPROBE/lib_mem.c **** 
 127:../Dave/Generated/UCPROBE/lib_mem.c **** static  MEM_SEG      *Mem_SegOverlapChkCritical(       CPU_ADDR       seg_base_addr,
 128:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 129:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 130:../Dave/Generated/UCPROBE/lib_mem.c **** 
 131:../Dave/Generated/UCPROBE/lib_mem.c **** static  void         *Mem_SegAllocInternal     (const  CPU_CHAR      *p_name,
 132:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 133:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 134:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     align,
 135:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 136:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T    *p_bytes_reqd,
 137:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 138:../Dave/Generated/UCPROBE/lib_mem.c **** 
 139:../Dave/Generated/UCPROBE/lib_mem.c **** static  void         *Mem_SegAllocExtCritical  (       MEM_SEG       *p_seg,
 140:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 141:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     align,
 142:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     padding_align,
 143:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T    *p_bytes_reqd,
 144:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 145:../Dave/Generated/UCPROBE/lib_mem.c **** 
 146:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_DynPoolCreateInternal(const  CPU_CHAR      *p_name,
 147:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_DYN_POOL  *p_pool,
 148:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 149:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_size,
 150:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_align,
 151:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_padding_align,
 152:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_qty_init,
 153:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     blk_qty_max,
 154:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 155:../Dave/Generated/UCPROBE/lib_mem.c **** 
 156:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
 157:../Dave/Generated/UCPROBE/lib_mem.c **** static  void          Mem_SegAllocTrackCritical(const  CPU_CHAR      *p_name,
 158:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        MEM_SEG       *p_seg,
 159:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        CPU_SIZE_T     size,
 160:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_ERR       *p_err);
 161:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 162:../Dave/Generated/UCPROBE/lib_mem.c **** 
 163:../Dave/Generated/UCPROBE/lib_mem.c **** #if ((LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED) && \
 164:../Dave/Generated/UCPROBE/lib_mem.c ****      (LIB_MEM_CFG_HEAP_SIZE      >  0u))
 165:../Dave/Generated/UCPROBE/lib_mem.c **** static  CPU_BOOLEAN   Mem_PoolBlkIsValidAddr   (       MEM_POOL      *p_pool,
 166:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        void          *p_mem);
 167:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 168:../Dave/Generated/UCPROBE/lib_mem.c **** 
 169:../Dave/Generated/UCPROBE/lib_mem.c **** 
 170:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 171:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 172:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     LOCAL CONFIGURATION ERRORS
 173:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 174:../Dave/Generated/UCPROBE/lib_mem.c **** */
 175:../Dave/Generated/UCPROBE/lib_mem.c **** 
 176:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 177:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 178:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 179:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            GLOBAL FUNCTIONS
 180:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 181:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 182:../Dave/Generated/UCPROBE/lib_mem.c **** */
 183:../Dave/Generated/UCPROBE/lib_mem.c **** 
 184:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 185:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 186:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Init()
 187:../Dave/Generated/UCPROBE/lib_mem.c **** *
 188:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : (1) Initializes Memory Management Module :
 189:../Dave/Generated/UCPROBE/lib_mem.c **** *
 190:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) Initialize heap memory pool
 191:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Initialize      memory pool table
 192:../Dave/Generated/UCPROBE/lib_mem.c **** *
 193:../Dave/Generated/UCPROBE/lib_mem.c **** *
 194:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : none.
 195:../Dave/Generated/UCPROBE/lib_mem.c **** *
 196:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 197:../Dave/Generated/UCPROBE/lib_mem.c **** *
 198:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 199:../Dave/Generated/UCPROBE/lib_mem.c **** *
 200:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (2) Mem_Init() MUST be called ... :
 201:../Dave/Generated/UCPROBE/lib_mem.c **** *
 202:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) ONLY ONCE from a product's application; ...
 203:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) BEFORE product's application calls any memory library module function(s)
 204:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 205:../Dave/Generated/UCPROBE/lib_mem.c **** */
 206:../Dave/Generated/UCPROBE/lib_mem.c **** 
 207:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Init (void)
 208:../Dave/Generated/UCPROBE/lib_mem.c **** {
  35              	 .loc 1 208 0
  36              	 .cfi_startproc
  37              	 
  38              	 
  39 0000 80B5     	 push {r7,lr}
  40              	.LCFI0:
  41              	 .cfi_def_cfa_offset 8
  42              	 .cfi_offset 7,-8
  43              	 .cfi_offset 14,-4
  44 0002 84B0     	 sub sp,sp,#16
  45              	.LCFI1:
  46              	 .cfi_def_cfa_offset 24
  47 0004 02AF     	 add r7,sp,#8
  48              	.LCFI2:
  49              	 .cfi_def_cfa 7,16
 209:../Dave/Generated/UCPROBE/lib_mem.c **** 
 210:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT SEG LIST
 211:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegHeadPtr = DEF_NULL;
  50              	 .loc 1 211 0
  51 0006 0D4B     	 ldr r3,.L3
  52 0008 0022     	 movs r2,#0
  53 000a 1A60     	 str r2,[r3]
  54              	.LBB2:
 212:../Dave/Generated/UCPROBE/lib_mem.c **** 
 213:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 214:../Dave/Generated/UCPROBE/lib_mem.c ****     {
 215:../Dave/Generated/UCPROBE/lib_mem.c ****         LIB_ERR   err;
 216:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_ADDR  heap_base_addr;
 217:../Dave/Generated/UCPROBE/lib_mem.c **** 
 218:../Dave/Generated/UCPROBE/lib_mem.c **** 
 219:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT HEAP SEG
 220:../Dave/Generated/UCPROBE/lib_mem.c **** #ifdef  LIB_MEM_CFG_HEAP_BASE_ADDR
 221:../Dave/Generated/UCPROBE/lib_mem.c ****         heap_base_addr = LIB_MEM_CFG_HEAP_BASE_ADDR;
 222:../Dave/Generated/UCPROBE/lib_mem.c **** #else
 223:../Dave/Generated/UCPROBE/lib_mem.c ****         heap_base_addr = (CPU_ADDR)&Mem_Heap[0u];
  55              	 .loc 1 223 0
  56 000c 0C4B     	 ldr r3,.L3+4
  57 000e 7B60     	 str r3,[r7,#4]
 224:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 225:../Dave/Generated/UCPROBE/lib_mem.c **** 
 226:../Dave/Generated/UCPROBE/lib_mem.c ****         Mem_SegCreate("Heap",
  58              	 .loc 1 226 0
  59 0010 0123     	 movs r3,#1
  60 0012 0093     	 str r3,[sp]
  61 0014 BB1C     	 adds r3,r7,#2
  62 0016 0193     	 str r3,[sp,#4]
  63 0018 0A48     	 ldr r0,.L3+8
  64 001a 0B49     	 ldr r1,.L3+12
  65 001c 7A68     	 ldr r2,[r7,#4]
  66 001e 4FF48063 	 mov r3,#1024
  67 0022 FFF7FEFF 	 bl Mem_SegCreate
 227:../Dave/Generated/UCPROBE/lib_mem.c ****                       &Mem_SegHeap,                             /* Create heap seg.                
 228:../Dave/Generated/UCPROBE/lib_mem.c ****                        heap_base_addr,
 229:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_MEM_CFG_HEAP_SIZE,
 230:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_MEM_PADDING_ALIGN_NONE,
 231:../Dave/Generated/UCPROBE/lib_mem.c ****                       &err);
 232:../Dave/Generated/UCPROBE/lib_mem.c ****         if (err != LIB_MEM_ERR_NONE) {
  68              	 .loc 1 232 0
  69 0026 7B88     	 ldrh r3,[r7,#2]
  70 0028 42F21072 	 movw r2,#10000
  71 002c 9342     	 cmp r3,r2
  72 002e 01D0     	 beq .L1
 233:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_SW_EXCEPTION(;);
  73              	 .loc 1 233 0
  74 0030 FFF7FEFF 	 bl CPU_SW_Exception
  75              	.L1:
  76              	.LBE2:
 234:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 235:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 236:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 237:../Dave/Generated/UCPROBE/lib_mem.c **** }
  77              	 .loc 1 237 0
  78 0034 0837     	 adds r7,r7,#8
  79              	.LCFI3:
  80              	 .cfi_def_cfa_offset 8
  81 0036 BD46     	 mov sp,r7
  82              	.LCFI4:
  83              	 .cfi_def_cfa_register 13
  84              	 
  85 0038 80BD     	 pop {r7,pc}
  86              	.L4:
  87 003a 00BF     	 .align 2
  88              	.L3:
  89 003c 00000000 	 .word Mem_SegHeadPtr
  90 0040 00000000 	 .word Mem_Heap
  91 0044 00000000 	 .word .LC0
  92 0048 00000000 	 .word Mem_SegHeap
  93              	 .cfi_endproc
  94              	.LFE0:
  96              	 .section .text.Mem_Clr,"ax",%progbits
  97              	 .align 2
  98              	 .global Mem_Clr
  99              	 .thumb
 100              	 .thumb_func
 102              	Mem_Clr:
 103              	.LFB1:
 238:../Dave/Generated/UCPROBE/lib_mem.c **** 
 239:../Dave/Generated/UCPROBE/lib_mem.c **** 
 240:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 241:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 242:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Clr()
 243:../Dave/Generated/UCPROBE/lib_mem.c **** *
 244:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears data buffer (see Note #2).
 245:../Dave/Generated/UCPROBE/lib_mem.c **** *
 246:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to clear.
 247:../Dave/Generated/UCPROBE/lib_mem.c **** *
 248:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to clear (see Note #1).
 249:../Dave/Generated/UCPROBE/lib_mem.c **** *
 250:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 251:../Dave/Generated/UCPROBE/lib_mem.c **** *
 252:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 253:../Dave/Generated/UCPROBE/lib_mem.c **** *
 254:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null clears allowed (i.e. zero-length clears).
 255:../Dave/Generated/UCPROBE/lib_mem.c **** *
 256:../Dave/Generated/UCPROBE/lib_mem.c **** *                   See also 'Mem_Set()  Note #1'.
 257:../Dave/Generated/UCPROBE/lib_mem.c **** *
 258:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Clear data by setting each data octet to 0.
 259:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 260:../Dave/Generated/UCPROBE/lib_mem.c **** */
 261:../Dave/Generated/UCPROBE/lib_mem.c **** 
 262:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Clr (void        *pmem,
 263:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_SIZE_T   size)
 264:../Dave/Generated/UCPROBE/lib_mem.c **** {
 104              	 .loc 1 264 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108 0000 80B5     	 push {r7,lr}
 109              	.LCFI5:
 110              	 .cfi_def_cfa_offset 8
 111              	 .cfi_offset 7,-8
 112              	 .cfi_offset 14,-4
 113 0002 82B0     	 sub sp,sp,#8
 114              	.LCFI6:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI7:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 120 0008 3960     	 str r1,[r7]
 265:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_Set(pmem,
 121              	 .loc 1 265 0
 122 000a 7868     	 ldr r0,[r7,#4]
 123 000c 0021     	 movs r1,#0
 124 000e 3A68     	 ldr r2,[r7]
 125 0010 FFF7FEFF 	 bl Mem_Set
 266:../Dave/Generated/UCPROBE/lib_mem.c ****             0u,                                                 /* See Note #2.                    
 267:../Dave/Generated/UCPROBE/lib_mem.c ****             size);
 268:../Dave/Generated/UCPROBE/lib_mem.c **** }
 126              	 .loc 1 268 0
 127 0014 0837     	 adds r7,r7,#8
 128              	.LCFI8:
 129              	 .cfi_def_cfa_offset 8
 130 0016 BD46     	 mov sp,r7
 131              	.LCFI9:
 132              	 .cfi_def_cfa_register 13
 133              	 
 134 0018 80BD     	 pop {r7,pc}
 135              	 .cfi_endproc
 136              	.LFE1:
 138 001a 00BF     	 .section .text.Mem_Set,"ax",%progbits
 139              	 .align 2
 140              	 .global Mem_Set
 141              	 .thumb
 142              	 .thumb_func
 144              	Mem_Set:
 145              	.LFB2:
 269:../Dave/Generated/UCPROBE/lib_mem.c **** 
 270:../Dave/Generated/UCPROBE/lib_mem.c **** 
 271:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 272:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 273:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Set()
 274:../Dave/Generated/UCPROBE/lib_mem.c **** *
 275:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Fills data buffer with specified data octet.
 276:../Dave/Generated/UCPROBE/lib_mem.c **** *
 277:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to fill with specified data octet.
 278:../Dave/Generated/UCPROBE/lib_mem.c **** *
 279:../Dave/Generated/UCPROBE/lib_mem.c **** *               data_val    Data fill octet value.
 280:../Dave/Generated/UCPROBE/lib_mem.c **** *
 281:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to fill (see Note #1).
 282:../Dave/Generated/UCPROBE/lib_mem.c **** *
 283:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 284:../Dave/Generated/UCPROBE/lib_mem.c **** *
 285:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 286:../Dave/Generated/UCPROBE/lib_mem.c **** *
 287:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null sets allowed (i.e. zero-length sets).
 288:../Dave/Generated/UCPROBE/lib_mem.c **** *
 289:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) For best CPU performance, optimized to fill data buffer using 'CPU_ALIGN'-sized
 290:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 291:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 292:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 293:../Dave/Generated/UCPROBE/lib_mem.c **** *
 294:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 295:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 296:../Dave/Generated/UCPROBE/lib_mem.c **** *
 297:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 298:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 299:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 300:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 301:../Dave/Generated/UCPROBE/lib_mem.c **** */
 302:../Dave/Generated/UCPROBE/lib_mem.c **** 
 303:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Set (void        *pmem,
 304:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_INT08U   data_val,
 305:../Dave/Generated/UCPROBE/lib_mem.c ****                CPU_SIZE_T   size)
 306:../Dave/Generated/UCPROBE/lib_mem.c **** {
 146              	 .loc 1 306 0
 147              	 .cfi_startproc
 148              	 
 149              	 
 150              	 
 151 0000 80B4     	 push {r7}
 152              	.LCFI10:
 153              	 .cfi_def_cfa_offset 4
 154              	 .cfi_offset 7,-4
 155 0002 8BB0     	 sub sp,sp,#44
 156              	.LCFI11:
 157              	 .cfi_def_cfa_offset 48
 158 0004 00AF     	 add r7,sp,#0
 159              	.LCFI12:
 160              	 .cfi_def_cfa_register 7
 161 0006 F860     	 str r0,[r7,#12]
 162 0008 0B46     	 mov r3,r1
 163 000a 7A60     	 str r2,[r7,#4]
 164 000c FB72     	 strb r3,[r7,#11]
 307:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   size_rem;
 308:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ALIGN    data_align;
 309:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ALIGN   *pmem_align;
 310:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *pmem_08;
 311:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_DATA     mem_align_mod;
 312:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_DATA     i;
 313:../Dave/Generated/UCPROBE/lib_mem.c **** 
 314:../Dave/Generated/UCPROBE/lib_mem.c **** 
 315:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 316:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 317:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 318:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 319:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pmem == (void *)0) {
 320:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 321:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 322:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 323:../Dave/Generated/UCPROBE/lib_mem.c **** 
 324:../Dave/Generated/UCPROBE/lib_mem.c **** 
 325:../Dave/Generated/UCPROBE/lib_mem.c ****     data_align = 0u;
 165              	 .loc 1 325 0
 166 000e 0023     	 movs r3,#0
 167 0010 3B62     	 str r3,[r7,#32]
 326:../Dave/Generated/UCPROBE/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 168              	 .loc 1 326 0
 169 0012 0023     	 movs r3,#0
 170 0014 7B61     	 str r3,[r7,#20]
 171 0016 09E0     	 b .L7
 172              	.L8:
 327:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 173              	 .loc 1 327 0 discriminator 3
 174 0018 3B6A     	 ldr r3,[r7,#32]
 175 001a 1B02     	 lsls r3,r3,#8
 176 001c 3B62     	 str r3,[r7,#32]
 328:../Dave/Generated/UCPROBE/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 177              	 .loc 1 328 0 discriminator 3
 178 001e FB7A     	 ldrb r3,[r7,#11]
 179 0020 3A6A     	 ldr r2,[r7,#32]
 180 0022 1343     	 orrs r3,r3,r2
 181 0024 3B62     	 str r3,[r7,#32]
 326:../Dave/Generated/UCPROBE/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 182              	 .loc 1 326 0 discriminator 3
 183 0026 7B69     	 ldr r3,[r7,#20]
 184 0028 0133     	 adds r3,r3,#1
 185 002a 7B61     	 str r3,[r7,#20]
 186              	.L7:
 326:../Dave/Generated/UCPROBE/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 187              	 .loc 1 326 0 is_stmt 0 discriminator 1
 188 002c 7B69     	 ldr r3,[r7,#20]
 189 002e 032B     	 cmp r3,#3
 190 0030 F2D9     	 bls .L8
 329:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 330:../Dave/Generated/UCPROBE/lib_mem.c **** 
 331:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem      =  size;
 191              	 .loc 1 331 0 is_stmt 1
 192 0032 7B68     	 ldr r3,[r7,#4]
 193 0034 7B62     	 str r3,[r7,#36]
 332:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod = (CPU_INT08U)((CPU_ADDR)pmem % sizeof(CPU_ALIGN));   /* See Note #3.            
 194              	 .loc 1 332 0
 195 0036 FB68     	 ldr r3,[r7,#12]
 196 0038 DBB2     	 uxtb r3,r3
 197 003a 03F00303 	 and r3,r3,#3
 198 003e 3B61     	 str r3,[r7,#16]
 333:../Dave/Generated/UCPROBE/lib_mem.c **** 
 334:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem;
 199              	 .loc 1 334 0
 200 0040 FB68     	 ldr r3,[r7,#12]
 201 0042 BB61     	 str r3,[r7,#24]
 335:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_align_mod != 0u) {                                  /* If leading octets avail,        
 202              	 .loc 1 335 0
 203 0044 3B69     	 ldr r3,[r7,#16]
 204 0046 002B     	 cmp r3,#0
 205 0048 13D0     	 beq .L9
 336:../Dave/Generated/UCPROBE/lib_mem.c ****         i = mem_align_mod;
 206              	 .loc 1 336 0
 207 004a 3B69     	 ldr r3,[r7,#16]
 208 004c 7B61     	 str r3,[r7,#20]
 337:../Dave/Generated/UCPROBE/lib_mem.c ****         while ((size_rem > 0) &&                                /* ... start mem buf fill with lead
 209              	 .loc 1 337 0
 210 004e 0AE0     	 b .L10
 211              	.L11:
 338:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 339:../Dave/Generated/UCPROBE/lib_mem.c ****            *pmem_08++ = data_val;
 212              	 .loc 1 339 0
 213 0050 BB69     	 ldr r3,[r7,#24]
 214 0052 5A1C     	 adds r2,r3,#1
 215 0054 BA61     	 str r2,[r7,#24]
 216 0056 FA7A     	 ldrb r2,[r7,#11]
 217 0058 1A70     	 strb r2,[r3]
 340:../Dave/Generated/UCPROBE/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 218              	 .loc 1 340 0
 219 005a 7B6A     	 ldr r3,[r7,#36]
 220 005c 013B     	 subs r3,r3,#1
 221 005e 7B62     	 str r3,[r7,#36]
 341:../Dave/Generated/UCPROBE/lib_mem.c ****             i++;
 222              	 .loc 1 341 0
 223 0060 7B69     	 ldr r3,[r7,#20]
 224 0062 0133     	 adds r3,r3,#1
 225 0064 7B61     	 str r3,[r7,#20]
 226              	.L10:
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 227              	 .loc 1 337 0
 228 0066 7B6A     	 ldr r3,[r7,#36]
 229 0068 002B     	 cmp r3,#0
 230 006a 02D0     	 beq .L9
 337:../Dave/Generated/UCPROBE/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 231              	 .loc 1 337 0 is_stmt 0 discriminator 1
 232 006c 7B69     	 ldr r3,[r7,#20]
 233 006e 032B     	 cmp r3,#3
 234 0070 EED9     	 bls .L11
 235              	.L9:
 342:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 343:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 344:../Dave/Generated/UCPROBE/lib_mem.c **** 
 345:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_align = (CPU_ALIGN *)pmem_08;                          /* See Note #2.                    
 236              	 .loc 1 345 0 is_stmt 1
 237 0072 BB69     	 ldr r3,[r7,#24]
 238 0074 FB61     	 str r3,[r7,#28]
 346:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem >= sizeof(CPU_ALIGN)) {                     /* While mem buf aligned on CPU_ALI
 239              	 .loc 1 346 0
 240 0076 07E0     	 b .L12
 241              	.L13:
 347:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 242              	 .loc 1 347 0
 243 0078 FB69     	 ldr r3,[r7,#28]
 244 007a 1A1D     	 adds r2,r3,#4
 245 007c FA61     	 str r2,[r7,#28]
 246 007e 3A6A     	 ldr r2,[r7,#32]
 247 0080 1A60     	 str r2,[r3]
 348:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 248              	 .loc 1 348 0
 249 0082 7B6A     	 ldr r3,[r7,#36]
 250 0084 043B     	 subs r3,r3,#4
 251 0086 7B62     	 str r3,[r7,#36]
 252              	.L12:
 346:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem >= sizeof(CPU_ALIGN)) {                     /* While mem buf aligned on CPU_ALI
 253              	 .loc 1 346 0
 254 0088 7B6A     	 ldr r3,[r7,#36]
 255 008a 032B     	 cmp r3,#3
 256 008c F4D8     	 bhi .L13
 349:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 350:../Dave/Generated/UCPROBE/lib_mem.c **** 
 351:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem_align;
 257              	 .loc 1 351 0
 258 008e FB69     	 ldr r3,[r7,#28]
 259 0090 BB61     	 str r3,[r7,#24]
 352:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* Finish mem buf fill with trailin
 260              	 .loc 1 352 0
 261 0092 07E0     	 b .L14
 262              	.L15:
 353:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08++   = data_val;
 263              	 .loc 1 353 0
 264 0094 BB69     	 ldr r3,[r7,#24]
 265 0096 5A1C     	 adds r2,r3,#1
 266 0098 BA61     	 str r2,[r7,#24]
 267 009a FA7A     	 ldrb r2,[r7,#11]
 268 009c 1A70     	 strb r2,[r3]
 354:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem   -= sizeof(CPU_INT08U);
 269              	 .loc 1 354 0
 270 009e 7B6A     	 ldr r3,[r7,#36]
 271 00a0 013B     	 subs r3,r3,#1
 272 00a2 7B62     	 str r3,[r7,#36]
 273              	.L14:
 352:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* Finish mem buf fill with trailin
 274              	 .loc 1 352 0
 275 00a4 7B6A     	 ldr r3,[r7,#36]
 276 00a6 002B     	 cmp r3,#0
 277 00a8 F4D1     	 bne .L15
 355:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 356:../Dave/Generated/UCPROBE/lib_mem.c **** }
 278              	 .loc 1 356 0
 279 00aa 2C37     	 adds r7,r7,#44
 280              	.LCFI13:
 281              	 .cfi_def_cfa_offset 4
 282 00ac BD46     	 mov sp,r7
 283              	.LCFI14:
 284              	 .cfi_def_cfa_register 13
 285              	 
 286 00ae 5DF8047B 	 ldr r7,[sp],#4
 287              	.LCFI15:
 288              	 .cfi_restore 7
 289              	 .cfi_def_cfa_offset 0
 290 00b2 7047     	 bx lr
 291              	 .cfi_endproc
 292              	.LFE2:
 294              	 .section .text.Mem_Copy,"ax",%progbits
 295              	 .align 2
 296              	 .global Mem_Copy
 297              	 .thumb
 298              	 .thumb_func
 300              	Mem_Copy:
 301              	.LFB3:
 357:../Dave/Generated/UCPROBE/lib_mem.c **** 
 358:../Dave/Generated/UCPROBE/lib_mem.c **** 
 359:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 360:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 361:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Copy()
 362:../Dave/Generated/UCPROBE/lib_mem.c **** *
 363:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Copies data octets from one memory buffer to another memory buffer.
 364:../Dave/Generated/UCPROBE/lib_mem.c **** *
 365:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 366:../Dave/Generated/UCPROBE/lib_mem.c **** *
 367:../Dave/Generated/UCPROBE/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 368:../Dave/Generated/UCPROBE/lib_mem.c **** *
 369:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of octets to copy (see Note #1).
 370:../Dave/Generated/UCPROBE/lib_mem.c **** *
 371:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 372:../Dave/Generated/UCPROBE/lib_mem.c **** *
 373:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 374:../Dave/Generated/UCPROBE/lib_mem.c **** *
 375:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null copies allowed (i.e. zero-length copies).
 376:../Dave/Generated/UCPROBE/lib_mem.c **** *
 377:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Memory buffers NOT checked for overlapping.
 378:../Dave/Generated/UCPROBE/lib_mem.c **** *
 379:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) IEEE Std 1003.1, 2004 Edition, Section 'memcpy() : DESCRIPTION' states that
 380:../Dave/Generated/UCPROBE/lib_mem.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 381:../Dave/Generated/UCPROBE/lib_mem.c **** *
 382:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) However, data octets from a source memory buffer at a higher address value 
 383:../Dave/Generated/UCPROBE/lib_mem.c **** *                       successfully copy to a destination memory buffer at a lower  address value 
 384:../Dave/Generated/UCPROBE/lib_mem.c **** *                       if any octets of the memory buffers overlap as long as no individual, atomi
 385:../Dave/Generated/UCPROBE/lib_mem.c **** *                       word copy overlaps.
 386:../Dave/Generated/UCPROBE/lib_mem.c **** *
 387:../Dave/Generated/UCPROBE/lib_mem.c **** *                       Since Mem_Copy() performs the data octet copy via 'CPU_ALIGN'-sized words &
 388:../Dave/Generated/UCPROBE/lib_mem.c **** *                       octets; & since 'CPU_ALIGN'-sized words MUST be accessed on word-aligned ad
 389:../Dave/Generated/UCPROBE/lib_mem.c **** *                       (see Note #3b), neither 'CPU_ALIGN'-sized words nor octets at unique addres
 390:../Dave/Generated/UCPROBE/lib_mem.c **** *                       ever overlap.
 391:../Dave/Generated/UCPROBE/lib_mem.c **** *
 392:../Dave/Generated/UCPROBE/lib_mem.c **** *                       Therefore, Mem_Copy() SHOULD be able to successfully copy overlapping memor
 393:../Dave/Generated/UCPROBE/lib_mem.c **** *                       buffers as long as the source memory buffer is at a higher address value th
 394:../Dave/Generated/UCPROBE/lib_mem.c **** *                       destination memory buffer.
 395:../Dave/Generated/UCPROBE/lib_mem.c **** *
 396:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 397:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 398:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 399:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 400:../Dave/Generated/UCPROBE/lib_mem.c **** *
 401:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 402:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 403:../Dave/Generated/UCPROBE/lib_mem.c **** *
 404:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 405:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 406:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 407:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 408:../Dave/Generated/UCPROBE/lib_mem.c **** */
 409:../Dave/Generated/UCPROBE/lib_mem.c **** 
 410:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_OPTIMIZE_ASM_EN != DEF_ENABLED)
 411:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Copy (       void        *pdest,
 412:../Dave/Generated/UCPROBE/lib_mem.c ****                 const  void        *psrc,
 413:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size)
 414:../Dave/Generated/UCPROBE/lib_mem.c **** {
 302              	 .loc 1 414 0
 303              	 .cfi_startproc
 304              	 
 305              	 
 306              	 
 307 0000 80B4     	 push {r7}
 308              	.LCFI16:
 309              	 .cfi_def_cfa_offset 4
 310              	 .cfi_offset 7,-4
 311 0002 8FB0     	 sub sp,sp,#60
 312              	.LCFI17:
 313              	 .cfi_def_cfa_offset 64
 314 0004 00AF     	 add r7,sp,#0
 315              	.LCFI18:
 316              	 .cfi_def_cfa_register 7
 317 0006 F860     	 str r0,[r7,#12]
 318 0008 B960     	 str r1,[r7,#8]
 319 000a 7A60     	 str r2,[r7,#4]
 415:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 416:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 417:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 418:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 419:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 420:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 421:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      i;
 422:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 423:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 424:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 425:../Dave/Generated/UCPROBE/lib_mem.c **** 
 426:../Dave/Generated/UCPROBE/lib_mem.c **** 
 427:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 428:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 429:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 430:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 431:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pdest == (void *)0) {
 432:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 433:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 434:../Dave/Generated/UCPROBE/lib_mem.c ****     if (psrc  == (void *)0) {
 435:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 436:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 437:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 438:../Dave/Generated/UCPROBE/lib_mem.c **** 
 439:../Dave/Generated/UCPROBE/lib_mem.c **** 
 440:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem           =  size;
 320              	 .loc 1 440 0
 321 000c 7B68     	 ldr r3,[r7,#4]
 322 000e 7B63     	 str r3,[r7,#52]
 441:../Dave/Generated/UCPROBE/lib_mem.c **** 
 442:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest       = (      CPU_INT08U *)pdest;
 323              	 .loc 1 442 0
 324 0010 FB68     	 ldr r3,[r7,#12]
 325 0012 BB62     	 str r3,[r7,#40]
 443:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc;
 326              	 .loc 1 443 0
 327 0014 BB68     	 ldr r3,[r7,#8]
 328 0016 7B62     	 str r3,[r7,#36]
 444:../Dave/Generated/UCPROBE/lib_mem.c **** 
 445:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_gap_octets     = pmem_08_src - pmem_08_dest;
 329              	 .loc 1 445 0
 330 0018 7A6A     	 ldr r2,[r7,#36]
 331 001a BB6A     	 ldr r3,[r7,#40]
 332 001c D31A     	 subs r3,r2,r3
 333 001e FB61     	 str r3,[r7,#28]
 446:../Dave/Generated/UCPROBE/lib_mem.c **** 
 447:../Dave/Generated/UCPROBE/lib_mem.c **** 
 448:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_gap_octets >= sizeof(CPU_ALIGN)) {                  /* Avoid bufs overlap.             
 334              	 .loc 1 448 0
 335 0020 FB69     	 ldr r3,[r7,#28]
 336 0022 032B     	 cmp r3,#3
 337 0024 45D9     	 bls .L17
 449:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 450:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 338              	 .loc 1 450 0
 339 0026 BB6A     	 ldr r3,[r7,#40]
 340 0028 DBB2     	 uxtb r3,r3
 341 002a 03F00303 	 and r3,r3,#3
 342 002e BB61     	 str r3,[r7,#24]
 451:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 343              	 .loc 1 451 0
 344 0030 7B6A     	 ldr r3,[r7,#36]
 345 0032 DBB2     	 uxtb r3,r3
 346 0034 03F00303 	 and r3,r3,#3
 347 0038 7B61     	 str r3,[r7,#20]
 452:../Dave/Generated/UCPROBE/lib_mem.c **** 
 453:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_aligned        = (mem_align_mod_dest == mem_align_mod_src) ? DEF_YES : DEF_NO;
 348              	 .loc 1 453 0
 349 003a BA69     	 ldr r2,[r7,#24]
 350 003c 7B69     	 ldr r3,[r7,#20]
 351 003e 9A42     	 cmp r2,r3
 352 0040 01D1     	 bne .L18
 353              	 .loc 1 453 0 is_stmt 0 discriminator 1
 354 0042 0123     	 movs r3,#1
 355 0044 00E0     	 b .L19
 356              	.L18:
 357              	 .loc 1 453 0 discriminator 2
 358 0046 0023     	 movs r3,#0
 359              	.L19:
 360              	 .loc 1 453 0 discriminator 4
 361 0048 FB74     	 strb r3,[r7,#19]
 454:../Dave/Generated/UCPROBE/lib_mem.c **** 
 455:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_aligned == DEF_YES) {                           /* If mem bufs' alignment offset eq
 362              	 .loc 1 455 0 is_stmt 1 discriminator 4
 363 004a FB7C     	 ldrb r3,[r7,#19]
 364 004c 012B     	 cmp r3,#1
 365 004e 30D1     	 bne .L17
 456:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 457:../Dave/Generated/UCPROBE/lib_mem.c ****             if (mem_align_mod_dest != 0u) {                     /* If leading octets avail,        
 366              	 .loc 1 457 0
 367 0050 BB69     	 ldr r3,[r7,#24]
 368 0052 002B     	 cmp r3,#0
 369 0054 16D0     	 beq .L20
 458:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 370              	 .loc 1 458 0
 371 0056 BB69     	 ldr r3,[r7,#24]
 372 0058 3B62     	 str r3,[r7,#32]
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 373              	 .loc 1 459 0
 374 005a 0DE0     	 b .L21
 375              	.L22:
 460:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 461:../Dave/Generated/UCPROBE/lib_mem.c ****                    *pmem_08_dest++ = *pmem_08_src++;
 376              	 .loc 1 461 0
 377 005c BB6A     	 ldr r3,[r7,#40]
 378 005e 5A1C     	 adds r2,r3,#1
 379 0060 BA62     	 str r2,[r7,#40]
 380 0062 7A6A     	 ldr r2,[r7,#36]
 381 0064 511C     	 adds r1,r2,#1
 382 0066 7962     	 str r1,[r7,#36]
 383 0068 1278     	 ldrb r2,[r2]
 384 006a 1A70     	 strb r2,[r3]
 462:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 385              	 .loc 1 462 0
 386 006c 7B6B     	 ldr r3,[r7,#52]
 387 006e 013B     	 subs r3,r3,#1
 388 0070 7B63     	 str r3,[r7,#52]
 463:../Dave/Generated/UCPROBE/lib_mem.c ****                     i++;
 389              	 .loc 1 463 0
 390 0072 3B6A     	 ldr r3,[r7,#32]
 391 0074 0133     	 adds r3,r3,#1
 392 0076 3B62     	 str r3,[r7,#32]
 393              	.L21:
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 394              	 .loc 1 459 0
 395 0078 7B6B     	 ldr r3,[r7,#52]
 396 007a 002B     	 cmp r3,#0
 397 007c 02D0     	 beq .L20
 459:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          <  sizeof(CPU_ALIGN ))) {    /* ... until next CPU_ALIGN word bo
 398              	 .loc 1 459 0 is_stmt 0 discriminator 1
 399 007e 3B6A     	 ldr r3,[r7,#32]
 400 0080 032B     	 cmp r3,#3
 401 0082 EBD9     	 bls .L22
 402              	.L20:
 464:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 465:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 466:../Dave/Generated/UCPROBE/lib_mem.c **** 
 467:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_dest = (      CPU_ALIGN *)pmem_08_dest;  /* See Note #3.                    
 403              	 .loc 1 467 0 is_stmt 1
 404 0084 BB6A     	 ldr r3,[r7,#40]
 405 0086 3B63     	 str r3,[r7,#48]
 468:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)pmem_08_src;
 406              	 .loc 1 468 0
 407 0088 7B6A     	 ldr r3,[r7,#36]
 408 008a FB62     	 str r3,[r7,#44]
 469:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 409              	 .loc 1 469 0
 410 008c 0AE0     	 b .L23
 411              	.L24:
 470:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest++ = *pmem_align_src++;          /* ... copy psrc to pdest with CPU_
 412              	 .loc 1 470 0
 413 008e 3B6B     	 ldr r3,[r7,#48]
 414 0090 1A1D     	 adds r2,r3,#4
 415 0092 3A63     	 str r2,[r7,#48]
 416 0094 FA6A     	 ldr r2,[r7,#44]
 417 0096 111D     	 adds r1,r2,#4
 418 0098 F962     	 str r1,[r7,#44]
 419 009a 1268     	 ldr r2,[r2]
 420 009c 1A60     	 str r2,[r3]
 471:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 421              	 .loc 1 471 0
 422 009e 7B6B     	 ldr r3,[r7,#52]
 423 00a0 043B     	 subs r3,r3,#4
 424 00a2 7B63     	 str r3,[r7,#52]
 425              	.L23:
 469:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 426              	 .loc 1 469 0
 427 00a4 7B6B     	 ldr r3,[r7,#52]
 428 00a6 032B     	 cmp r3,#3
 429 00a8 F1D8     	 bhi .L24
 472:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 473:../Dave/Generated/UCPROBE/lib_mem.c **** 
 474:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_dest = (      CPU_INT08U *)pmem_align_dest;
 430              	 .loc 1 474 0
 431 00aa 3B6B     	 ldr r3,[r7,#48]
 432 00ac BB62     	 str r3,[r7,#40]
 475:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src;
 433              	 .loc 1 475 0
 434 00ae FB6A     	 ldr r3,[r7,#44]
 435 00b0 7B62     	 str r3,[r7,#36]
 436              	.L17:
 476:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 477:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 478:../Dave/Generated/UCPROBE/lib_mem.c **** 
 479:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 437              	 .loc 1 479 0
 438 00b2 0AE0     	 b .L25
 439              	.L26:
 480:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 440              	 .loc 1 480 0
 441 00b4 BB6A     	 ldr r3,[r7,#40]
 442 00b6 5A1C     	 adds r2,r3,#1
 443 00b8 BA62     	 str r2,[r7,#40]
 444 00ba 7A6A     	 ldr r2,[r7,#36]
 445 00bc 511C     	 adds r1,r2,#1
 446 00be 7962     	 str r1,[r7,#36]
 447 00c0 1278     	 ldrb r2,[r2]
 448 00c2 1A70     	 strb r2,[r3]
 481:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 449              	 .loc 1 481 0
 450 00c4 7B6B     	 ldr r3,[r7,#52]
 451 00c6 013B     	 subs r3,r3,#1
 452 00c8 7B63     	 str r3,[r7,#52]
 453              	.L25:
 479:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 454              	 .loc 1 479 0
 455 00ca 7B6B     	 ldr r3,[r7,#52]
 456 00cc 002B     	 cmp r3,#0
 457 00ce F1D1     	 bne .L26
 482:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 483:../Dave/Generated/UCPROBE/lib_mem.c **** }
 458              	 .loc 1 483 0
 459 00d0 3C37     	 adds r7,r7,#60
 460              	.LCFI19:
 461              	 .cfi_def_cfa_offset 4
 462 00d2 BD46     	 mov sp,r7
 463              	.LCFI20:
 464              	 .cfi_def_cfa_register 13
 465              	 
 466 00d4 5DF8047B 	 ldr r7,[sp],#4
 467              	.LCFI21:
 468              	 .cfi_restore 7
 469              	 .cfi_def_cfa_offset 0
 470 00d8 7047     	 bx lr
 471              	 .cfi_endproc
 472              	.LFE3:
 474 00da 00BF     	 .section .text.Mem_Move,"ax",%progbits
 475              	 .align 2
 476              	 .global Mem_Move
 477              	 .thumb
 478              	 .thumb_func
 480              	Mem_Move:
 481              	.LFB4:
 484:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 485:../Dave/Generated/UCPROBE/lib_mem.c **** 
 486:../Dave/Generated/UCPROBE/lib_mem.c **** 
 487:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 488:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 489:../Dave/Generated/UCPROBE/lib_mem.c **** *                                             Mem_Move()
 490:../Dave/Generated/UCPROBE/lib_mem.c **** *
 491:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Moves data octets from one memory buffer to another memory buffer, or within the sa
 492:../Dave/Generated/UCPROBE/lib_mem.c **** *               memory buffer. Overlapping is correctly handled for all move operations.
 493:../Dave/Generated/UCPROBE/lib_mem.c **** *
 494:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 495:../Dave/Generated/UCPROBE/lib_mem.c **** *
 496:../Dave/Generated/UCPROBE/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 497:../Dave/Generated/UCPROBE/lib_mem.c **** *
 498:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of octets to move (see Note #1).
 499:../Dave/Generated/UCPROBE/lib_mem.c **** *
 500:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
 501:../Dave/Generated/UCPROBE/lib_mem.c **** *
 502:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 503:../Dave/Generated/UCPROBE/lib_mem.c **** *
 504:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null move operations allowed (i.e. zero-length).
 505:../Dave/Generated/UCPROBE/lib_mem.c **** *
 506:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Memory buffers checked for overlapping.
 507:../Dave/Generated/UCPROBE/lib_mem.c **** *
 508:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 509:../Dave/Generated/UCPROBE/lib_mem.c **** *                   words. Since many word-aligned processors REQUIRE that multi-octet words be acc
 510:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 511:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 512:../Dave/Generated/UCPROBE/lib_mem.c **** *
 513:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 514:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 515:../Dave/Generated/UCPROBE/lib_mem.c **** *
 516:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 517:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 518:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 519:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 520:../Dave/Generated/UCPROBE/lib_mem.c **** */
 521:../Dave/Generated/UCPROBE/lib_mem.c **** 
 522:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_Move (       void        *pdest,
 523:../Dave/Generated/UCPROBE/lib_mem.c ****                 const  void        *psrc,
 524:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size)
 525:../Dave/Generated/UCPROBE/lib_mem.c **** {
 482              	 .loc 1 525 0
 483              	 .cfi_startproc
 484              	 
 485              	 
 486 0000 80B5     	 push {r7,lr}
 487              	.LCFI22:
 488              	 .cfi_def_cfa_offset 8
 489              	 .cfi_offset 7,-8
 490              	 .cfi_offset 14,-4
 491 0002 8EB0     	 sub sp,sp,#56
 492              	.LCFI23:
 493              	 .cfi_def_cfa_offset 64
 494 0004 00AF     	 add r7,sp,#0
 495              	.LCFI24:
 496              	 .cfi_def_cfa_register 7
 497 0006 F860     	 str r0,[r7,#12]
 498 0008 B960     	 str r1,[r7,#8]
 499 000a 7A60     	 str r2,[r7,#4]
 526:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 527:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    mem_gap_octets;
 528:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 529:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 530:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 531:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 532:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_INT08S    i;
 533:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_dest;
 534:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_src;
 535:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 536:../Dave/Generated/UCPROBE/lib_mem.c **** 
 537:../Dave/Generated/UCPROBE/lib_mem.c **** 
 538:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 539:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {
 540:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 541:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 542:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pdest == (void *)0) {
 543:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 544:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 545:../Dave/Generated/UCPROBE/lib_mem.c ****     if (psrc  == (void *)0) {
 546:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 547:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 548:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 549:../Dave/Generated/UCPROBE/lib_mem.c **** 
 550:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src  = (const CPU_INT08U *)psrc;
 500              	 .loc 1 550 0
 501 000c BB68     	 ldr r3,[r7,#8]
 502 000e 7B62     	 str r3,[r7,#36]
 551:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest = (      CPU_INT08U *)pdest;
 503              	 .loc 1 551 0
 504 0010 FB68     	 ldr r3,[r7,#12]
 505 0012 BB62     	 str r3,[r7,#40]
 552:../Dave/Generated/UCPROBE/lib_mem.c ****     if (pmem_08_src > pmem_08_dest) {
 506              	 .loc 1 552 0
 507 0014 7A6A     	 ldr r2,[r7,#36]
 508 0016 BB6A     	 ldr r3,[r7,#40]
 509 0018 9A42     	 cmp r2,r3
 510 001a 05D9     	 bls .L28
 553:../Dave/Generated/UCPROBE/lib_mem.c ****         Mem_Copy(pdest, psrc, size);
 511              	 .loc 1 553 0
 512 001c F868     	 ldr r0,[r7,#12]
 513 001e B968     	 ldr r1,[r7,#8]
 514 0020 7A68     	 ldr r2,[r7,#4]
 515 0022 FFF7FEFF 	 bl Mem_Copy
 554:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 516              	 .loc 1 554 0
 517 0026 71E0     	 b .L27
 518              	.L28:
 555:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 556:../Dave/Generated/UCPROBE/lib_mem.c **** 
 557:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem           =  size;
 519              	 .loc 1 557 0
 520 0028 7B68     	 ldr r3,[r7,#4]
 521 002a 7B63     	 str r3,[r7,#52]
 558:../Dave/Generated/UCPROBE/lib_mem.c **** 
 559:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_dest       = (      CPU_INT08U *)pdest + size - 1;
 522              	 .loc 1 559 0
 523 002c 7B68     	 ldr r3,[r7,#4]
 524 002e 013B     	 subs r3,r3,#1
 525 0030 FA68     	 ldr r2,[r7,#12]
 526 0032 1344     	 add r3,r3,r2
 527 0034 BB62     	 str r3,[r7,#40]
 560:../Dave/Generated/UCPROBE/lib_mem.c ****     pmem_08_src        = (const CPU_INT08U *)psrc  + size - 1;
 528              	 .loc 1 560 0
 529 0036 7B68     	 ldr r3,[r7,#4]
 530 0038 013B     	 subs r3,r3,#1
 531 003a BA68     	 ldr r2,[r7,#8]
 532 003c 1344     	 add r3,r3,r2
 533 003e 7B62     	 str r3,[r7,#36]
 561:../Dave/Generated/UCPROBE/lib_mem.c **** 
 562:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_gap_octets     = pmem_08_dest - pmem_08_src;
 534              	 .loc 1 562 0
 535 0040 BA6A     	 ldr r2,[r7,#40]
 536 0042 7B6A     	 ldr r3,[r7,#36]
 537 0044 D31A     	 subs r3,r2,r3
 538 0046 FB61     	 str r3,[r7,#28]
 563:../Dave/Generated/UCPROBE/lib_mem.c **** 
 564:../Dave/Generated/UCPROBE/lib_mem.c **** 
 565:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_gap_octets >= sizeof(CPU_ALIGN)) {                  /* Avoid bufs overlap.             
 539              	 .loc 1 565 0
 540 0048 FB69     	 ldr r3,[r7,#28]
 541 004a 032B     	 cmp r3,#3
 542 004c 4FD9     	 bls .L30
 566:../Dave/Generated/UCPROBE/lib_mem.c **** 
 567:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 568:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 543              	 .loc 1 568 0
 544 004e BB6A     	 ldr r3,[r7,#40]
 545 0050 DBB2     	 uxtb r3,r3
 546 0052 03F00303 	 and r3,r3,#3
 547 0056 BB61     	 str r3,[r7,#24]
 569:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_align_mod_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 548              	 .loc 1 569 0
 549 0058 7B6A     	 ldr r3,[r7,#36]
 550 005a DBB2     	 uxtb r3,r3
 551 005c 03F00303 	 and r3,r3,#3
 552 0060 7B61     	 str r3,[r7,#20]
 570:../Dave/Generated/UCPROBE/lib_mem.c **** 
 571:../Dave/Generated/UCPROBE/lib_mem.c ****         mem_aligned        = (mem_align_mod_dest == mem_align_mod_src) ? DEF_YES : DEF_NO;
 553              	 .loc 1 571 0
 554 0062 BA69     	 ldr r2,[r7,#24]
 555 0064 7B69     	 ldr r3,[r7,#20]
 556 0066 9A42     	 cmp r2,r3
 557 0068 01D1     	 bne .L31
 558              	 .loc 1 571 0 is_stmt 0 discriminator 1
 559 006a 0123     	 movs r3,#1
 560 006c 00E0     	 b .L32
 561              	.L31:
 562              	 .loc 1 571 0 discriminator 2
 563 006e 0023     	 movs r3,#0
 564              	.L32:
 565              	 .loc 1 571 0 discriminator 4
 566 0070 FB74     	 strb r3,[r7,#19]
 572:../Dave/Generated/UCPROBE/lib_mem.c **** 
 573:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_aligned == DEF_YES) {                           /* If mem bufs' alignment offset eq
 567              	 .loc 1 573 0 is_stmt 1 discriminator 4
 568 0072 FB7C     	 ldrb r3,[r7,#19]
 569 0074 012B     	 cmp r3,#1
 570 0076 3AD1     	 bne .L30
 574:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 575:../Dave/Generated/UCPROBE/lib_mem.c ****             if (mem_align_mod_dest != (sizeof(CPU_ALIGN) - 1)) {/* If leading octets avail,        
 571              	 .loc 1 575 0
 572 0078 BB69     	 ldr r3,[r7,#24]
 573 007a 032B     	 cmp r3,#3
 574 007c 1CD0     	 beq .L33
 576:../Dave/Generated/UCPROBE/lib_mem.c ****                 i = mem_align_mod_dest;
 575              	 .loc 1 576 0
 576 007e BB69     	 ldr r3,[r7,#24]
 577 0080 87F82330 	 strb r3,[r7,#35]
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                 while ((size_rem   >  0) &&                     /* ... start mem buf copy with lead
 578              	 .loc 1 577 0
 579 0084 11E0     	 b .L34
 580              	.L35:
 578:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 579:../Dave/Generated/UCPROBE/lib_mem.c ****                    *pmem_08_dest-- = *pmem_08_src--;
 581              	 .loc 1 579 0
 582 0086 BB6A     	 ldr r3,[r7,#40]
 583 0088 5A1E     	 subs r2,r3,#1
 584 008a BA62     	 str r2,[r7,#40]
 585 008c 7A6A     	 ldr r2,[r7,#36]
 586 008e 511E     	 subs r1,r2,#1
 587 0090 7962     	 str r1,[r7,#36]
 588 0092 1278     	 ldrb r2,[r2]
 589 0094 1A70     	 strb r2,[r3]
 580:../Dave/Generated/UCPROBE/lib_mem.c ****                     size_rem      -=  sizeof(CPU_INT08U);
 590              	 .loc 1 580 0
 591 0096 7B6B     	 ldr r3,[r7,#52]
 592 0098 013B     	 subs r3,r3,#1
 593 009a 7B63     	 str r3,[r7,#52]
 581:../Dave/Generated/UCPROBE/lib_mem.c ****                     i--;
 594              	 .loc 1 581 0
 595 009c 97F82330 	 ldrb r3,[r7,#35]
 596 00a0 DBB2     	 uxtb r3,r3
 597 00a2 013B     	 subs r3,r3,#1
 598 00a4 DBB2     	 uxtb r3,r3
 599 00a6 87F82330 	 strb r3,[r7,#35]
 600              	.L34:
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 601              	 .loc 1 577 0
 602 00aa 7B6B     	 ldr r3,[r7,#52]
 603 00ac 002B     	 cmp r3,#0
 604 00ae 03D0     	 beq .L33
 577:../Dave/Generated/UCPROBE/lib_mem.c ****                        (i          >= 0)) {                     /* ... until next CPU_ALIGN word bo
 605              	 .loc 1 577 0 is_stmt 0 discriminator 1
 606 00b0 97F92330 	 ldrsb r3,[r7,#35]
 607 00b4 002B     	 cmp r3,#0
 608 00b6 E6DA     	 bge .L35
 609              	.L33:
 582:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 583:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 584:../Dave/Generated/UCPROBE/lib_mem.c **** 
 585:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #3.                    
 586:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_dest = (      CPU_ALIGN *)((CPU_INT08U *)pmem_08_dest - sizeof(CPU_ALIGN) + 
 610              	 .loc 1 586 0 is_stmt 1
 611 00b8 BB6A     	 ldr r3,[r7,#40]
 612 00ba 033B     	 subs r3,r3,#3
 613 00bc 3B63     	 str r3,[r7,#48]
 587:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_align_src  = (const CPU_ALIGN *)((CPU_INT08U *)pmem_08_src  - sizeof(CPU_ALIGN) + 
 614              	 .loc 1 587 0
 615 00be 7B6A     	 ldr r3,[r7,#36]
 616 00c0 033B     	 subs r3,r3,#3
 617 00c2 FB62     	 str r3,[r7,#44]
 588:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 618              	 .loc 1 588 0
 619 00c4 0AE0     	 b .L36
 620              	.L37:
 589:../Dave/Generated/UCPROBE/lib_mem.c ****                *pmem_align_dest-- = *pmem_align_src--;          /* ... copy psrc to pdest with CPU_
 621              	 .loc 1 589 0
 622 00c6 3B6B     	 ldr r3,[r7,#48]
 623 00c8 1A1F     	 subs r2,r3,#4
 624 00ca 3A63     	 str r2,[r7,#48]
 625 00cc FA6A     	 ldr r2,[r7,#44]
 626 00ce 111F     	 subs r1,r2,#4
 627 00d0 F962     	 str r1,[r7,#44]
 628 00d2 1268     	 ldr r2,[r2]
 629 00d4 1A60     	 str r2,[r3]
 590:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem         -=  sizeof(CPU_ALIGN);
 630              	 .loc 1 590 0
 631 00d6 7B6B     	 ldr r3,[r7,#52]
 632 00d8 043B     	 subs r3,r3,#4
 633 00da 7B63     	 str r3,[r7,#52]
 634              	.L36:
 588:../Dave/Generated/UCPROBE/lib_mem.c ****             while (size_rem      >=  sizeof(CPU_ALIGN)) {       /* While mem bufs aligned on CPU_AL
 635              	 .loc 1 588 0
 636 00dc 7B6B     	 ldr r3,[r7,#52]
 637 00de 032B     	 cmp r3,#3
 638 00e0 F1D8     	 bhi .L37
 591:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 592:../Dave/Generated/UCPROBE/lib_mem.c **** 
 593:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_dest = (      CPU_INT08U *)pmem_align_dest + sizeof(CPU_ALIGN) - 1;
 639              	 .loc 1 593 0
 640 00e2 3B6B     	 ldr r3,[r7,#48]
 641 00e4 0333     	 adds r3,r3,#3
 642 00e6 BB62     	 str r3,[r7,#40]
 594:../Dave/Generated/UCPROBE/lib_mem.c ****             pmem_08_src  = (const CPU_INT08U *)pmem_align_src  + sizeof(CPU_ALIGN) - 1;
 643              	 .loc 1 594 0
 644 00e8 FB6A     	 ldr r3,[r7,#44]
 645 00ea 0333     	 adds r3,r3,#3
 646 00ec 7B62     	 str r3,[r7,#36]
 647              	.L30:
 595:../Dave/Generated/UCPROBE/lib_mem.c **** 
 596:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 597:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 598:../Dave/Generated/UCPROBE/lib_mem.c **** 
 599:../Dave/Generated/UCPROBE/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 648              	 .loc 1 599 0
 649 00ee 0AE0     	 b .L38
 650              	.L39:
 600:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 651              	 .loc 1 600 0
 652 00f0 BB6A     	 ldr r3,[r7,#40]
 653 00f2 5A1E     	 subs r2,r3,#1
 654 00f4 BA62     	 str r2,[r7,#40]
 655 00f6 7A6A     	 ldr r2,[r7,#36]
 656 00f8 511E     	 subs r1,r2,#1
 657 00fa 7962     	 str r1,[r7,#36]
 658 00fc 1278     	 ldrb r2,[r2]
 659 00fe 1A70     	 strb r2,[r3]
 601:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 660              	 .loc 1 601 0
 661 0100 7B6B     	 ldr r3,[r7,#52]
 662 0102 013B     	 subs r3,r3,#1
 663 0104 7B63     	 str r3,[r7,#52]
 664              	.L38:
 599:../Dave/Generated/UCPROBE/lib_mem.c ****        *pmem_08_dest-- = *pmem_08_src--;                        /* ... copy psrc to pdest by octets
 665              	 .loc 1 599 0
 666 0106 7B6B     	 ldr r3,[r7,#52]
 667 0108 002B     	 cmp r3,#0
 668 010a F1D1     	 bne .L39
 669              	.L27:
 602:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 603:../Dave/Generated/UCPROBE/lib_mem.c **** }
 670              	 .loc 1 603 0
 671 010c 3837     	 adds r7,r7,#56
 672              	.LCFI25:
 673              	 .cfi_def_cfa_offset 8
 674 010e BD46     	 mov sp,r7
 675              	.LCFI26:
 676              	 .cfi_def_cfa_register 13
 677              	 
 678 0110 80BD     	 pop {r7,pc}
 679              	 .cfi_endproc
 680              	.LFE4:
 682 0112 00BF     	 .section .text.Mem_Cmp,"ax",%progbits
 683              	 .align 2
 684              	 .global Mem_Cmp
 685              	 .thumb
 686              	 .thumb_func
 688              	Mem_Cmp:
 689              	.LFB5:
 604:../Dave/Generated/UCPROBE/lib_mem.c **** 
 605:../Dave/Generated/UCPROBE/lib_mem.c **** 
 606:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 607:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 608:../Dave/Generated/UCPROBE/lib_mem.c **** *                                              Mem_Cmp()
 609:../Dave/Generated/UCPROBE/lib_mem.c **** *
 610:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Verifies that ALL data octets in two memory buffers are identical in sequence.
 611:../Dave/Generated/UCPROBE/lib_mem.c **** *
 612:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p1_mem      Pointer to first  memory buffer.
 613:../Dave/Generated/UCPROBE/lib_mem.c **** *
 614:../Dave/Generated/UCPROBE/lib_mem.c **** *               p2_mem      Pointer to second memory buffer.
 615:../Dave/Generated/UCPROBE/lib_mem.c **** *
 616:../Dave/Generated/UCPROBE/lib_mem.c **** *               size        Number of data buffer octets to compare (see Note #1).
 617:../Dave/Generated/UCPROBE/lib_mem.c **** *
 618:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : DEF_YES, if 'size' number of data octets are identical in both memory buffers.
 619:../Dave/Generated/UCPROBE/lib_mem.c **** *
 620:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NO,  otherwise.
 621:../Dave/Generated/UCPROBE/lib_mem.c **** *
 622:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 623:../Dave/Generated/UCPROBE/lib_mem.c **** *
 624:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Null compares allowed (i.e. zero-length compares); 'DEF_YES' returned to indica
 625:../Dave/Generated/UCPROBE/lib_mem.c **** *                   identical null compare.
 626:../Dave/Generated/UCPROBE/lib_mem.c **** *
 627:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Many memory buffer comparisons vary ONLY in the least significant octets -- e.g
 628:../Dave/Generated/UCPROBE/lib_mem.c **** *                   network address buffers.  Consequently, memory buffer comparison is more effici
 629:../Dave/Generated/UCPROBE/lib_mem.c **** *                   if the comparison starts from the end of the memory buffers which will abort so
 630:../Dave/Generated/UCPROBE/lib_mem.c **** *                   on dissimilar memory buffers that vary only in the least significant octets.
 631:../Dave/Generated/UCPROBE/lib_mem.c **** *
 632:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) For best CPU performance, optimized to compare data buffers using 'CPU_ALIGN'-s
 633:../Dave/Generated/UCPROBE/lib_mem.c **** *                   data words. Since many word-aligned processors REQUIRE that multi-octet words b
 634:../Dave/Generated/UCPROBE/lib_mem.c **** *                   word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_ALIGN'
 635:../Dave/Generated/UCPROBE/lib_mem.c **** *                   addresses.
 636:../Dave/Generated/UCPROBE/lib_mem.c **** *
 637:../Dave/Generated/UCPROBE/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 638:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address boundary.
 639:../Dave/Generated/UCPROBE/lib_mem.c **** *
 640:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 641:../Dave/Generated/UCPROBE/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 642:../Dave/Generated/UCPROBE/lib_mem.c **** *                  'mem_align_mod' arithmetic operation.
 643:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 644:../Dave/Generated/UCPROBE/lib_mem.c **** */
 645:../Dave/Generated/UCPROBE/lib_mem.c **** 
 646:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_BOOLEAN  Mem_Cmp (const  void        *p1_mem,
 647:../Dave/Generated/UCPROBE/lib_mem.c ****                       const  void        *p2_mem,
 648:../Dave/Generated/UCPROBE/lib_mem.c ****                              CPU_SIZE_T   size)
 649:../Dave/Generated/UCPROBE/lib_mem.c **** {
 690              	 .loc 1 649 0
 691              	 .cfi_startproc
 692              	 
 693              	 
 694              	 
 695 0000 80B4     	 push {r7}
 696              	.LCFI27:
 697              	 .cfi_def_cfa_offset 4
 698              	 .cfi_offset 7,-4
 699 0002 8FB0     	 sub sp,sp,#60
 700              	.LCFI28:
 701              	 .cfi_def_cfa_offset 64
 702 0004 00AF     	 add r7,sp,#0
 703              	.LCFI29:
 704              	 .cfi_def_cfa_register 7
 705 0006 F860     	 str r0,[r7,#12]
 706 0008 B960     	 str r1,[r7,#8]
 707 000a 7A60     	 str r2,[r7,#4]
 650:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_SIZE_T    size_rem;
 651:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *p1_mem_align;
 652:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_ALIGN    *p2_mem_align;
 653:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *p1_mem_08;
 654:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_INT08U   *p2_mem_08;
 655:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      i;
 656:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_1;
 657:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_DATA      mem_align_mod_2;
 658:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 659:../Dave/Generated/UCPROBE/lib_mem.c ****            CPU_BOOLEAN   mem_cmp;
 660:../Dave/Generated/UCPROBE/lib_mem.c **** 
 661:../Dave/Generated/UCPROBE/lib_mem.c **** 
 662:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 708              	 .loc 1 662 0
 709 000c 7B68     	 ldr r3,[r7,#4]
 710 000e 002B     	 cmp r3,#0
 711 0010 01D1     	 bne .L41
 663:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_YES);
 712              	 .loc 1 663 0
 713 0012 0123     	 movs r3,#1
 714 0014 89E0     	 b .L42
 715              	.L41:
 664:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 665:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p1_mem == (void *)0) {
 716              	 .loc 1 665 0
 717 0016 FB68     	 ldr r3,[r7,#12]
 718 0018 002B     	 cmp r3,#0
 719 001a 01D1     	 bne .L43
 666:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NO);
 720              	 .loc 1 666 0
 721 001c 0023     	 movs r3,#0
 722 001e 84E0     	 b .L42
 723              	.L43:
 667:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 668:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p2_mem == (void *)0) {
 724              	 .loc 1 668 0
 725 0020 BB68     	 ldr r3,[r7,#8]
 726 0022 002B     	 cmp r3,#0
 727 0024 01D1     	 bne .L44
 669:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NO);
 728              	 .loc 1 669 0
 729 0026 0023     	 movs r3,#0
 730 0028 7FE0     	 b .L42
 731              	.L44:
 670:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 671:../Dave/Generated/UCPROBE/lib_mem.c **** 
 672:../Dave/Generated/UCPROBE/lib_mem.c **** 
 673:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_cmp         =  DEF_YES;                                 /* Assume mem bufs are identical un
 732              	 .loc 1 673 0
 733 002a 0123     	 movs r3,#1
 734 002c FB77     	 strb r3,[r7,#31]
 674:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem        =  size;
 735              	 .loc 1 674 0
 736 002e 7B68     	 ldr r3,[r7,#4]
 737 0030 7B63     	 str r3,[r7,#52]
 675:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Start @ end of mem bufs (see Not
 676:../Dave/Generated/UCPROBE/lib_mem.c ****     p1_mem_08       = (const CPU_INT08U *)p1_mem + size;
 738              	 .loc 1 676 0
 739 0032 FA68     	 ldr r2,[r7,#12]
 740 0034 7B68     	 ldr r3,[r7,#4]
 741 0036 1344     	 add r3,r3,r2
 742 0038 BB62     	 str r3,[r7,#40]
 677:../Dave/Generated/UCPROBE/lib_mem.c ****     p2_mem_08       = (const CPU_INT08U *)p2_mem + size;
 743              	 .loc 1 677 0
 744 003a BA68     	 ldr r2,[r7,#8]
 745 003c 7B68     	 ldr r3,[r7,#4]
 746 003e 1344     	 add r3,r3,r2
 747 0040 7B62     	 str r3,[r7,#36]
 678:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* See Note #4.                    
 679:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod_1 = (CPU_INT08U)((CPU_ADDR)p1_mem_08 % sizeof(CPU_ALIGN));
 748              	 .loc 1 679 0
 749 0042 BB6A     	 ldr r3,[r7,#40]
 750 0044 DBB2     	 uxtb r3,r3
 751 0046 03F00303 	 and r3,r3,#3
 752 004a BB61     	 str r3,[r7,#24]
 680:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_align_mod_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 753              	 .loc 1 680 0
 754 004c 7B6A     	 ldr r3,[r7,#36]
 755 004e DBB2     	 uxtb r3,r3
 756 0050 03F00303 	 and r3,r3,#3
 757 0054 7B61     	 str r3,[r7,#20]
 681:../Dave/Generated/UCPROBE/lib_mem.c **** 
 682:../Dave/Generated/UCPROBE/lib_mem.c ****     mem_aligned     = (mem_align_mod_1 == mem_align_mod_2) ? DEF_YES : DEF_NO;
 758              	 .loc 1 682 0
 759 0056 BA69     	 ldr r2,[r7,#24]
 760 0058 7B69     	 ldr r3,[r7,#20]
 761 005a 9A42     	 cmp r2,r3
 762 005c 01D1     	 bne .L45
 763              	 .loc 1 682 0 is_stmt 0 discriminator 1
 764 005e 0123     	 movs r3,#1
 765 0060 00E0     	 b .L46
 766              	.L45:
 767              	 .loc 1 682 0 discriminator 2
 768 0062 0023     	 movs r3,#0
 769              	.L46:
 770              	 .loc 1 682 0 discriminator 4
 771 0064 FB74     	 strb r3,[r7,#19]
 683:../Dave/Generated/UCPROBE/lib_mem.c **** 
 684:../Dave/Generated/UCPROBE/lib_mem.c ****     if (mem_aligned == DEF_YES) {                               /* If mem bufs' alignment offset eq
 772              	 .loc 1 684 0 is_stmt 1 discriminator 4
 773 0066 FB7C     	 ldrb r3,[r7,#19]
 774 0068 012B     	 cmp r3,#1
 775 006a 45D1     	 bne .L47
 685:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... optimize cmp for mem buf ali
 686:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_align_mod_1 != 0u) {                            /* If trailing octets avail,       
 776              	 .loc 1 686 0
 777 006c BB69     	 ldr r3,[r7,#24]
 778 006e 002B     	 cmp r3,#0
 779 0070 1FD0     	 beq .L48
 687:../Dave/Generated/UCPROBE/lib_mem.c ****             i = mem_align_mod_1;
 780              	 .loc 1 687 0
 781 0072 BB69     	 ldr r3,[r7,#24]
 782 0074 3B62     	 str r3,[r7,#32]
 688:../Dave/Generated/UCPROBE/lib_mem.c ****             while ((mem_cmp == DEF_YES) &&                      /* ... cmp mem bufs while identical
 783              	 .loc 1 688 0
 784 0076 13E0     	 b .L49
 785              	.L51:
 689:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 690:../Dave/Generated/UCPROBE/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 691:../Dave/Generated/UCPROBE/lib_mem.c ****                 p1_mem_08--;
 786              	 .loc 1 691 0
 787 0078 BB6A     	 ldr r3,[r7,#40]
 788 007a 013B     	 subs r3,r3,#1
 789 007c BB62     	 str r3,[r7,#40]
 692:../Dave/Generated/UCPROBE/lib_mem.c ****                 p2_mem_08--;
 790              	 .loc 1 692 0
 791 007e 7B6A     	 ldr r3,[r7,#36]
 792 0080 013B     	 subs r3,r3,#1
 793 0082 7B62     	 str r3,[r7,#36]
 693:../Dave/Generated/UCPROBE/lib_mem.c ****                 if (*p1_mem_08 != *p2_mem_08) {                 /* If ANY data octet(s) NOT identic
 794              	 .loc 1 693 0
 795 0084 BB6A     	 ldr r3,[r7,#40]
 796 0086 1A78     	 ldrb r2,[r3]
 797 0088 7B6A     	 ldr r3,[r7,#36]
 798 008a 1B78     	 ldrb r3,[r3]
 799 008c 9A42     	 cmp r2,r3
 800 008e 01D0     	 beq .L50
 694:../Dave/Generated/UCPROBE/lib_mem.c ****                      mem_cmp = DEF_NO;
 801              	 .loc 1 694 0
 802 0090 0023     	 movs r3,#0
 803 0092 FB77     	 strb r3,[r7,#31]
 804              	.L50:
 695:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 696:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem -= sizeof(CPU_INT08U);
 805              	 .loc 1 696 0
 806 0094 7B6B     	 ldr r3,[r7,#52]
 807 0096 013B     	 subs r3,r3,#1
 808 0098 7B63     	 str r3,[r7,#52]
 697:../Dave/Generated/UCPROBE/lib_mem.c ****                 i--;
 809              	 .loc 1 697 0
 810 009a 3B6A     	 ldr r3,[r7,#32]
 811 009c 013B     	 subs r3,r3,#1
 812 009e 3B62     	 str r3,[r7,#32]
 813              	.L49:
 688:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 814              	 .loc 1 688 0
 815 00a0 FB7F     	 ldrb r3,[r7,#31]
 816 00a2 012B     	 cmp r3,#1
 817 00a4 05D1     	 bne .L48
 688:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 818              	 .loc 1 688 0 is_stmt 0 discriminator 1
 819 00a6 7B6B     	 ldr r3,[r7,#52]
 820 00a8 002B     	 cmp r3,#0
 821 00aa 02D0     	 beq .L48
 689:../Dave/Generated/UCPROBE/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 822              	 .loc 1 689 0 is_stmt 1
 823 00ac 3B6A     	 ldr r3,[r7,#32]
 824 00ae 002B     	 cmp r3,#0
 825 00b0 E2D1     	 bne .L51
 826              	.L48:
 698:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 699:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 700:../Dave/Generated/UCPROBE/lib_mem.c **** 
 701:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_cmp == DEF_YES) {                               /* If cmp still identical, cmp alig
 827              	 .loc 1 701 0
 828 00b2 FB7F     	 ldrb r3,[r7,#31]
 829 00b4 012B     	 cmp r3,#1
 830 00b6 1FD1     	 bne .L47
 702:../Dave/Generated/UCPROBE/lib_mem.c ****             p1_mem_align = (CPU_ALIGN *)p1_mem_08;              /* See Note #3.                    
 831              	 .loc 1 702 0
 832 00b8 BB6A     	 ldr r3,[r7,#40]
 833 00ba 3B63     	 str r3,[r7,#48]
 703:../Dave/Generated/UCPROBE/lib_mem.c ****             p2_mem_align = (CPU_ALIGN *)p2_mem_08;
 834              	 .loc 1 703 0
 835 00bc 7B6A     	 ldr r3,[r7,#36]
 836 00be FB62     	 str r3,[r7,#44]
 704:../Dave/Generated/UCPROBE/lib_mem.c **** 
 705:../Dave/Generated/UCPROBE/lib_mem.c ****             while ((mem_cmp  == DEF_YES) &&                     /* Cmp mem bufs while identical & .
 837              	 .loc 1 705 0
 838 00c0 10E0     	 b .L52
 839              	.L55:
 706:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 707:../Dave/Generated/UCPROBE/lib_mem.c ****                 p1_mem_align--;
 840              	 .loc 1 707 0
 841 00c2 3B6B     	 ldr r3,[r7,#48]
 842 00c4 043B     	 subs r3,r3,#4
 843 00c6 3B63     	 str r3,[r7,#48]
 708:../Dave/Generated/UCPROBE/lib_mem.c ****                 p2_mem_align--;
 844              	 .loc 1 708 0
 845 00c8 FB6A     	 ldr r3,[r7,#44]
 846 00ca 043B     	 subs r3,r3,#4
 847 00cc FB62     	 str r3,[r7,#44]
 709:../Dave/Generated/UCPROBE/lib_mem.c ****                 if (*p1_mem_align != *p2_mem_align) {           /* If ANY data octet(s) NOT identic
 848              	 .loc 1 709 0
 849 00ce 3B6B     	 ldr r3,[r7,#48]
 850 00d0 1A68     	 ldr r2,[r3]
 851 00d2 FB6A     	 ldr r3,[r7,#44]
 852 00d4 1B68     	 ldr r3,[r3]
 853 00d6 9A42     	 cmp r2,r3
 854 00d8 01D0     	 beq .L53
 710:../Dave/Generated/UCPROBE/lib_mem.c ****                      mem_cmp = DEF_NO;
 855              	 .loc 1 710 0
 856 00da 0023     	 movs r3,#0
 857 00dc FB77     	 strb r3,[r7,#31]
 858              	.L53:
 711:../Dave/Generated/UCPROBE/lib_mem.c ****                 }
 712:../Dave/Generated/UCPROBE/lib_mem.c ****                 size_rem -= sizeof(CPU_ALIGN);
 859              	 .loc 1 712 0
 860 00de 7B6B     	 ldr r3,[r7,#52]
 861 00e0 043B     	 subs r3,r3,#4
 862 00e2 7B63     	 str r3,[r7,#52]
 863              	.L52:
 705:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 864              	 .loc 1 705 0
 865 00e4 FB7F     	 ldrb r3,[r7,#31]
 866 00e6 012B     	 cmp r3,#1
 867 00e8 02D1     	 bne .L54
 705:../Dave/Generated/UCPROBE/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 868              	 .loc 1 705 0 is_stmt 0 discriminator 1
 869 00ea 7B6B     	 ldr r3,[r7,#52]
 870 00ec 032B     	 cmp r3,#3
 871 00ee E8D8     	 bhi .L55
 872              	.L54:
 713:../Dave/Generated/UCPROBE/lib_mem.c ****             }
 714:../Dave/Generated/UCPROBE/lib_mem.c **** 
 715:../Dave/Generated/UCPROBE/lib_mem.c ****             p1_mem_08 = (CPU_INT08U *)p1_mem_align;
 873              	 .loc 1 715 0 is_stmt 1
 874 00f0 3B6B     	 ldr r3,[r7,#48]
 875 00f2 BB62     	 str r3,[r7,#40]
 716:../Dave/Generated/UCPROBE/lib_mem.c ****             p2_mem_08 = (CPU_INT08U *)p2_mem_align;
 876              	 .loc 1 716 0
 877 00f4 FB6A     	 ldr r3,[r7,#44]
 878 00f6 7B62     	 str r3,[r7,#36]
 879              	.L47:
 717:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 718:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 719:../Dave/Generated/UCPROBE/lib_mem.c **** 
 720:../Dave/Generated/UCPROBE/lib_mem.c ****     while ((mem_cmp == DEF_YES) &&                              /* Cmp mem bufs while identical ...
 880              	 .loc 1 720 0
 881 00f8 10E0     	 b .L56
 882              	.L59:
 721:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 722:../Dave/Generated/UCPROBE/lib_mem.c ****         p1_mem_08--;
 883              	 .loc 1 722 0
 884 00fa BB6A     	 ldr r3,[r7,#40]
 885 00fc 013B     	 subs r3,r3,#1
 886 00fe BB62     	 str r3,[r7,#40]
 723:../Dave/Generated/UCPROBE/lib_mem.c ****         p2_mem_08--;
 887              	 .loc 1 723 0
 888 0100 7B6A     	 ldr r3,[r7,#36]
 889 0102 013B     	 subs r3,r3,#1
 890 0104 7B62     	 str r3,[r7,#36]
 724:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p1_mem_08 != *p2_mem_08) {                         /* If ANY data octet(s) NOT identic
 891              	 .loc 1 724 0
 892 0106 BB6A     	 ldr r3,[r7,#40]
 893 0108 1A78     	 ldrb r2,[r3]
 894 010a 7B6A     	 ldr r3,[r7,#36]
 895 010c 1B78     	 ldrb r3,[r3]
 896 010e 9A42     	 cmp r2,r3
 897 0110 01D0     	 beq .L57
 725:../Dave/Generated/UCPROBE/lib_mem.c ****              mem_cmp = DEF_NO;
 898              	 .loc 1 725 0
 899 0112 0023     	 movs r3,#0
 900 0114 FB77     	 strb r3,[r7,#31]
 901              	.L57:
 726:../Dave/Generated/UCPROBE/lib_mem.c ****         }
 727:../Dave/Generated/UCPROBE/lib_mem.c ****         size_rem -= sizeof(CPU_INT08U);
 902              	 .loc 1 727 0
 903 0116 7B6B     	 ldr r3,[r7,#52]
 904 0118 013B     	 subs r3,r3,#1
 905 011a 7B63     	 str r3,[r7,#52]
 906              	.L56:
 720:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 907              	 .loc 1 720 0
 908 011c FB7F     	 ldrb r3,[r7,#31]
 909 011e 012B     	 cmp r3,#1
 910 0120 02D1     	 bne .L58
 720:../Dave/Generated/UCPROBE/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 911              	 .loc 1 720 0 is_stmt 0 discriminator 1
 912 0122 7B6B     	 ldr r3,[r7,#52]
 913 0124 002B     	 cmp r3,#0
 914 0126 E8D1     	 bne .L59
 915              	.L58:
 728:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 729:../Dave/Generated/UCPROBE/lib_mem.c **** 
 730:../Dave/Generated/UCPROBE/lib_mem.c ****     return (mem_cmp);
 916              	 .loc 1 730 0 is_stmt 1
 917 0128 FB7F     	 ldrb r3,[r7,#31]
 918              	.L42:
 731:../Dave/Generated/UCPROBE/lib_mem.c **** }
 919              	 .loc 1 731 0
 920 012a 1846     	 mov r0,r3
 921 012c 3C37     	 adds r7,r7,#60
 922              	.LCFI30:
 923              	 .cfi_def_cfa_offset 4
 924 012e BD46     	 mov sp,r7
 925              	.LCFI31:
 926              	 .cfi_def_cfa_register 13
 927              	 
 928 0130 5DF8047B 	 ldr r7,[sp],#4
 929              	.LCFI32:
 930              	 .cfi_restore 7
 931              	 .cfi_def_cfa_offset 0
 932 0134 7047     	 bx lr
 933              	 .cfi_endproc
 934              	.LFE5:
 936 0136 00BF     	 .section .text.Mem_HeapAlloc,"ax",%progbits
 937              	 .align 2
 938              	 .global Mem_HeapAlloc
 939              	 .thumb
 940              	 .thumb_func
 942              	Mem_HeapAlloc:
 943              	.LFB6:
 732:../Dave/Generated/UCPROBE/lib_mem.c **** 
 733:../Dave/Generated/UCPROBE/lib_mem.c **** 
 734:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 735:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 736:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_HeapAlloc()
 737:../Dave/Generated/UCPROBE/lib_mem.c **** *
 738:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates a memory block from the heap memory segment.
 739:../Dave/Generated/UCPROBE/lib_mem.c **** *
 740:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : size            Size      of memory block to allocate (in bytes).
 741:../Dave/Generated/UCPROBE/lib_mem.c **** *
 742:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Alignment of memory block to specific word boundary (in bytes).
 743:../Dave/Generated/UCPROBE/lib_mem.c **** *
 744:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Optional pointer to a variable to ... :
 745:../Dave/Generated/UCPROBE/lib_mem.c **** *
 746:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (a) Return the number of bytes required to successfully
 747:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           allocate the memory block, if any error(s);
 748:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (b) Return 0, otherwise.
 749:../Dave/Generated/UCPROBE/lib_mem.c **** *
 750:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 751:../Dave/Generated/UCPROBE/lib_mem.c **** *
 752:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
 753:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_HEAP_EMPTY          No more memory available on hea
 754:../Dave/Generated/UCPROBE/lib_mem.c **** *
 755:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------------RETURNED BY Mem_SegAllocInternal()--------
 756:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
 757:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
 758:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
 759:../Dave/Generated/UCPROBE/lib_mem.c **** *
 760:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
 761:../Dave/Generated/UCPROBE/lib_mem.c **** *
 762:../Dave/Generated/UCPROBE/lib_mem.c **** *               Pointer to NULL,         otherwise.
 763:../Dave/Generated/UCPROBE/lib_mem.c **** *
 764:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 765:../Dave/Generated/UCPROBE/lib_mem.c **** *
 766:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) Pointers to variables that return values MUST be initialized PRIOR to all other
 767:../Dave/Generated/UCPROBE/lib_mem.c **** *                   validation or function handling in case of any error(s).
 768:../Dave/Generated/UCPROBE/lib_mem.c **** *
 769:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) This function is DEPRECATED and will be removed in a future version of this pro
 770:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegAlloc(), Mem_SegAllocExt() or Mem_SegAllocHW() should be used instead.
 771:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 772:../Dave/Generated/UCPROBE/lib_mem.c **** */
 773:../Dave/Generated/UCPROBE/lib_mem.c **** 
 774:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 775:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_HeapAlloc (CPU_SIZE_T   size,
 776:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T   align,
 777:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T  *p_bytes_reqd,
 778:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR     *p_err)
 779:../Dave/Generated/UCPROBE/lib_mem.c **** {
 944              	 .loc 1 779 0
 945              	 .cfi_startproc
 946              	 
 947              	 
 948 0000 80B5     	 push {r7,lr}
 949              	.LCFI33:
 950              	 .cfi_def_cfa_offset 8
 951              	 .cfi_offset 7,-8
 952              	 .cfi_offset 14,-4
 953 0002 8AB0     	 sub sp,sp,#40
 954              	.LCFI34:
 955              	 .cfi_def_cfa_offset 48
 956 0004 04AF     	 add r7,sp,#16
 957              	.LCFI35:
 958              	 .cfi_def_cfa 7,32
 959 0006 F860     	 str r0,[r7,#12]
 960 0008 B960     	 str r1,[r7,#8]
 961 000a 7A60     	 str r2,[r7,#4]
 962 000c 3B60     	 str r3,[r7]
 780:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_mem;
 781:../Dave/Generated/UCPROBE/lib_mem.c **** 
 782:../Dave/Generated/UCPROBE/lib_mem.c **** 
 783:../Dave/Generated/UCPROBE/lib_mem.c ****     p_mem = Mem_SegAllocInternal(DEF_NULL,
 963              	 .loc 1 783 0
 964 000e 0123     	 movs r3,#1
 965 0010 0093     	 str r3,[sp]
 966 0012 7B68     	 ldr r3,[r7,#4]
 967 0014 0193     	 str r3,[sp,#4]
 968 0016 3B68     	 ldr r3,[r7]
 969 0018 0293     	 str r3,[sp,#8]
 970 001a 0020     	 movs r0,#0
 971 001c 0A49     	 ldr r1,.L63
 972 001e FA68     	 ldr r2,[r7,#12]
 973 0020 BB68     	 ldr r3,[r7,#8]
 974 0022 FFF7FEFF 	 bl Mem_SegAllocInternal
 975 0026 7861     	 str r0,[r7,#20]
 784:../Dave/Generated/UCPROBE/lib_mem.c ****                                 &Mem_SegHeap,
 785:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
 786:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
 787:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_CFG_HEAP_PADDING_ALIGN,
 788:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
 789:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
 790:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err == LIB_MEM_ERR_SEG_OVF) {
 976              	 .loc 1 790 0
 977 0028 3B68     	 ldr r3,[r7]
 978 002a 1B88     	 ldrh r3,[r3]
 979 002c 42F2D972 	 movw r2,#10201
 980 0030 9342     	 cmp r3,r2
 981 0032 03D1     	 bne .L61
 791:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_HEAP_OVF;
 982              	 .loc 1 791 0
 983 0034 3B68     	 ldr r3,[r7]
 984 0036 42F2E372 	 movw r2,#10211
 985 003a 1A80     	 strh r2,[r3]
 986              	.L61:
 792:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 793:../Dave/Generated/UCPROBE/lib_mem.c **** 
 794:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_mem);
 987              	 .loc 1 794 0
 988 003c 7B69     	 ldr r3,[r7,#20]
 795:../Dave/Generated/UCPROBE/lib_mem.c **** }
 989              	 .loc 1 795 0
 990 003e 1846     	 mov r0,r3
 991 0040 1837     	 adds r7,r7,#24
 992              	.LCFI36:
 993              	 .cfi_def_cfa_offset 8
 994 0042 BD46     	 mov sp,r7
 995              	.LCFI37:
 996              	 .cfi_def_cfa_register 13
 997              	 
 998 0044 80BD     	 pop {r7,pc}
 999              	.L64:
 1000 0046 00BF     	 .align 2
 1001              	.L63:
 1002 0048 00000000 	 .word Mem_SegHeap
 1003              	 .cfi_endproc
 1004              	.LFE6:
 1006              	 .section .text.Mem_HeapGetSizeRem,"ax",%progbits
 1007              	 .align 2
 1008              	 .global Mem_HeapGetSizeRem
 1009              	 .thumb
 1010              	 .thumb_func
 1012              	Mem_HeapGetSizeRem:
 1013              	.LFB7:
 796:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 797:../Dave/Generated/UCPROBE/lib_mem.c **** 
 798:../Dave/Generated/UCPROBE/lib_mem.c **** 
 799:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 800:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 801:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        Mem_HeapGetSizeRem()
 802:../Dave/Generated/UCPROBE/lib_mem.c **** *
 803:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets remaining heap memory size available to allocate.
 804:../Dave/Generated/UCPROBE/lib_mem.c **** *
 805:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : align       Desired word boundary alignment (in bytes) to return remaining memory s
 806:../Dave/Generated/UCPROBE/lib_mem.c **** *
 807:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
 808:../Dave/Generated/UCPROBE/lib_mem.c **** *
 809:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
 810:../Dave/Generated/UCPROBE/lib_mem.c **** *
 811:../Dave/Generated/UCPROBE/lib_mem.c **** *                               --------------------RETURNED BY Mem_SegRemSizeGet()----------------
 812:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
 813:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
 814:../Dave/Generated/UCPROBE/lib_mem.c **** *
 815:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Remaining heap memory size (in bytes), if NO error(s).
 816:../Dave/Generated/UCPROBE/lib_mem.c **** *
 817:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                                     otherwise.
 818:../Dave/Generated/UCPROBE/lib_mem.c **** *
 819:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 820:../Dave/Generated/UCPROBE/lib_mem.c **** *
 821:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
 822:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegRemSizeGet() should be used instead.
 823:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 824:../Dave/Generated/UCPROBE/lib_mem.c **** */
 825:../Dave/Generated/UCPROBE/lib_mem.c **** 
 826:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
 827:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_HeapGetSizeRem (CPU_SIZE_T   align,
 828:../Dave/Generated/UCPROBE/lib_mem.c ****                                 LIB_ERR     *p_err)
 829:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1014              	 .loc 1 829 0
 1015              	 .cfi_startproc
 1016              	 
 1017              	 
 1018 0000 80B5     	 push {r7,lr}
 1019              	.LCFI38:
 1020              	 .cfi_def_cfa_offset 8
 1021              	 .cfi_offset 7,-8
 1022              	 .cfi_offset 14,-4
 1023 0002 84B0     	 sub sp,sp,#16
 1024              	.LCFI39:
 1025              	 .cfi_def_cfa_offset 24
 1026 0004 00AF     	 add r7,sp,#0
 1027              	.LCFI40:
 1028              	 .cfi_def_cfa_register 7
 1029 0006 7860     	 str r0,[r7,#4]
 1030 0008 3960     	 str r1,[r7]
 830:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
 831:../Dave/Generated/UCPROBE/lib_mem.c **** 
 832:../Dave/Generated/UCPROBE/lib_mem.c **** 
 833:../Dave/Generated/UCPROBE/lib_mem.c ****     rem_size = Mem_SegRemSizeGet(&Mem_SegHeap,
 1031              	 .loc 1 833 0
 1032 000a 0A48     	 ldr r0,.L68
 1033 000c 7968     	 ldr r1,[r7,#4]
 1034 000e 0022     	 movs r2,#0
 1035 0010 3B68     	 ldr r3,[r7]
 1036 0012 FFF7FEFF 	 bl Mem_SegRemSizeGet
 1037 0016 F860     	 str r0,[r7,#12]
 834:../Dave/Generated/UCPROBE/lib_mem.c ****                                   align,
 835:../Dave/Generated/UCPROBE/lib_mem.c ****                                   DEF_NULL,
 836:../Dave/Generated/UCPROBE/lib_mem.c ****                                   p_err);
 837:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 1038              	 .loc 1 837 0
 1039 0018 3B68     	 ldr r3,[r7]
 1040 001a 1B88     	 ldrh r3,[r3]
 1041 001c 42F21072 	 movw r2,#10000
 1042 0020 9342     	 cmp r3,r2
 1043 0022 01D0     	 beq .L66
 838:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
 1044              	 .loc 1 838 0
 1045 0024 0023     	 movs r3,#0
 1046 0026 00E0     	 b .L67
 1047              	.L66:
 839:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 840:../Dave/Generated/UCPROBE/lib_mem.c **** 
 841:../Dave/Generated/UCPROBE/lib_mem.c ****     return (rem_size);
 1048              	 .loc 1 841 0
 1049 0028 FB68     	 ldr r3,[r7,#12]
 1050              	.L67:
 842:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1051              	 .loc 1 842 0
 1052 002a 1846     	 mov r0,r3
 1053 002c 1037     	 adds r7,r7,#16
 1054              	.LCFI41:
 1055              	 .cfi_def_cfa_offset 8
 1056 002e BD46     	 mov sp,r7
 1057              	.LCFI42:
 1058              	 .cfi_def_cfa_register 13
 1059              	 
 1060 0030 80BD     	 pop {r7,pc}
 1061              	.L69:
 1062 0032 00BF     	 .align 2
 1063              	.L68:
 1064 0034 00000000 	 .word Mem_SegHeap
 1065              	 .cfi_endproc
 1066              	.LFE7:
 1068              	 .section .text.Mem_SegCreate,"ax",%progbits
 1069              	 .align 2
 1070              	 .global Mem_SegCreate
 1071              	 .thumb
 1072              	 .thumb_func
 1074              	Mem_SegCreate:
 1075              	.LFB8:
 843:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 844:../Dave/Generated/UCPROBE/lib_mem.c **** 
 845:../Dave/Generated/UCPROBE/lib_mem.c **** 
 846:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 847:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 848:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegCreate()
 849:../Dave/Generated/UCPROBE/lib_mem.c **** *
 850:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a new memory segment to be used for runtime memory allocation.
 851:../Dave/Generated/UCPROBE/lib_mem.c **** *
 852:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to segment name.
 853:../Dave/Generated/UCPROBE/lib_mem.c **** *
 854:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment data. Must be allocated by caller.
 855:../Dave/Generated/UCPROBE/lib_mem.c **** *
 856:../Dave/Generated/UCPROBE/lib_mem.c **** *               seg_base_addr   Address of segment's first byte.
 857:../Dave/Generated/UCPROBE/lib_mem.c **** *
 858:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Total size of segment, in bytes.
 859:../Dave/Generated/UCPROBE/lib_mem.c **** *
 860:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
 861:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
 862:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
 863:../Dave/Generated/UCPROBE/lib_mem.c **** *
 864:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 865:../Dave/Generated/UCPROBE/lib_mem.c **** *
 866:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                    Operation was successful.
 867:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid segment size specif
 868:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid padding alignment.
 869:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Error or segment data point
 870:../Dave/Generated/UCPROBE/lib_mem.c **** *
 871:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -------------------RETURNED BY Mem_SegOverlapChkCritical()-----
 872:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another ex
 873:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
 874:../Dave/Generated/UCPROBE/lib_mem.c **** *
 875:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
 876:../Dave/Generated/UCPROBE/lib_mem.c **** *
 877:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 878:../Dave/Generated/UCPROBE/lib_mem.c **** *
 879:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) New segments are checked for overlap with existing segments. A critical section
 880:../Dave/Generated/UCPROBE/lib_mem.c **** *                   to be maintained during the whole list search and add procedure to prevent a re
 881:../Dave/Generated/UCPROBE/lib_mem.c **** *                   call from creating another segment overlapping with the one being added.
 882:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 883:../Dave/Generated/UCPROBE/lib_mem.c **** */
 884:../Dave/Generated/UCPROBE/lib_mem.c **** 
 885:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_SegCreate (const  CPU_CHAR    *p_name,
 886:../Dave/Generated/UCPROBE/lib_mem.c ****                             MEM_SEG     *p_seg,
 887:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_ADDR     seg_base_addr,
 888:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   size,
 889:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   padding_align,
 890:../Dave/Generated/UCPROBE/lib_mem.c ****                             LIB_ERR     *p_err)
 891:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1076              	 .loc 1 891 0
 1077              	 .cfi_startproc
 1078              	 
 1079              	 
 1080 0000 80B5     	 push {r7,lr}
 1081              	.LCFI43:
 1082              	 .cfi_def_cfa_offset 8
 1083              	 .cfi_offset 7,-8
 1084              	 .cfi_offset 14,-4
 1085 0002 88B0     	 sub sp,sp,#32
 1086              	.LCFI44:
 1087              	 .cfi_def_cfa_offset 40
 1088 0004 02AF     	 add r7,sp,#8
 1089              	.LCFI45:
 1090              	 .cfi_def_cfa 7,32
 1091 0006 F860     	 str r0,[r7,#12]
 1092 0008 B960     	 str r1,[r7,#8]
 1093 000a 7A60     	 str r2,[r7,#4]
 1094 000c 3B60     	 str r3,[r7]
 892:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1095              	 .loc 1 892 0
 1096 000e 0023     	 movs r3,#0
 1097 0010 7B61     	 str r3,[r7,#20]
 893:../Dave/Generated/UCPROBE/lib_mem.c **** 
 894:../Dave/Generated/UCPROBE/lib_mem.c **** 
 895:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 896:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
 897:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 898:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 899:../Dave/Generated/UCPROBE/lib_mem.c **** 
 900:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Chk for null seg ptr.           
 901:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
 902:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 903:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 904:../Dave/Generated/UCPROBE/lib_mem.c **** 
 905:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Chk for invalid sized seg.      
 906:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
 907:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 908:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 909:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Chk for addr space ovf.         
 910:../Dave/Generated/UCPROBE/lib_mem.c ****     if (seg_base_addr + (size - 1u) < seg_base_addr) {
 911:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
 912:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 913:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 914:../Dave/Generated/UCPROBE/lib_mem.c **** 
 915:../Dave/Generated/UCPROBE/lib_mem.c ****     if ((padding_align               != LIB_MEM_PADDING_ALIGN_NONE) &&
 916:../Dave/Generated/UCPROBE/lib_mem.c ****         (MATH_IS_PWR2(padding_align) != DEF_YES)) {
 917:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
 918:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 919:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 920:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 921:../Dave/Generated/UCPROBE/lib_mem.c **** 
 922:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1098              	 .loc 1 922 0
 1099 0012 FFF7FEFF 	 bl CPU_SR_Save
 1100 0016 7861     	 str r0,[r7,#20]
 923:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 924:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)Mem_SegOverlapChkCritical(seg_base_addr,              /* Chk for overlap.                
 925:../Dave/Generated/UCPROBE/lib_mem.c ****                                     size,
 926:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_err);
 927:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 928:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 929:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 930:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 931:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 932:../Dave/Generated/UCPROBE/lib_mem.c **** 
 933:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegCreateCritical(p_name,                               /* Create seg.                     
 1101              	 .loc 1 933 0
 1102 0018 3B68     	 ldr r3,[r7]
 1103 001a 0093     	 str r3,[sp]
 1104 001c F868     	 ldr r0,[r7,#12]
 1105 001e B968     	 ldr r1,[r7,#8]
 1106 0020 7A68     	 ldr r2,[r7,#4]
 1107 0022 3B6A     	 ldr r3,[r7,#32]
 1108 0024 FFF7FEFF 	 bl Mem_SegCreateCritical
 934:../Dave/Generated/UCPROBE/lib_mem.c ****                           p_seg,
 935:../Dave/Generated/UCPROBE/lib_mem.c ****                           seg_base_addr,
 936:../Dave/Generated/UCPROBE/lib_mem.c ****                           padding_align,
 937:../Dave/Generated/UCPROBE/lib_mem.c ****                           size);
 938:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1109              	 .loc 1 938 0
 1110 0028 7869     	 ldr r0,[r7,#20]
 1111 002a FFF7FEFF 	 bl CPU_SR_Restore
 939:../Dave/Generated/UCPROBE/lib_mem.c **** 
 940:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1112              	 .loc 1 940 0
 1113 002e 7B6A     	 ldr r3,[r7,#36]
 1114 0030 42F21072 	 movw r2,#10000
 1115 0034 1A80     	 strh r2,[r3]
 941:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1116              	 .loc 1 941 0
 1117 0036 1837     	 adds r7,r7,#24
 1118              	.LCFI46:
 1119              	 .cfi_def_cfa_offset 8
 1120 0038 BD46     	 mov sp,r7
 1121              	.LCFI47:
 1122              	 .cfi_def_cfa_register 13
 1123              	 
 1124 003a 80BD     	 pop {r7,pc}
 1125              	 .cfi_endproc
 1126              	.LFE8:
 1128              	 .section .text.Mem_SegClr,"ax",%progbits
 1129              	 .align 2
 1130              	 .global Mem_SegClr
 1131              	 .thumb
 1132              	 .thumb_func
 1134              	Mem_SegClr:
 1135              	.LFB9:
 942:../Dave/Generated/UCPROBE/lib_mem.c **** 
 943:../Dave/Generated/UCPROBE/lib_mem.c **** 
 944:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 945:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 946:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegClr()
 947:../Dave/Generated/UCPROBE/lib_mem.c **** *
 948:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears a memory segment.
 949:../Dave/Generated/UCPROBE/lib_mem.c **** *
 950:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg           Pointer to segment data. Must be allocated by caller.
 951:../Dave/Generated/UCPROBE/lib_mem.c **** *
 952:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
 953:../Dave/Generated/UCPROBE/lib_mem.c **** *
 954:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
 955:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
 956:../Dave/Generated/UCPROBE/lib_mem.c **** *
 957:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
 958:../Dave/Generated/UCPROBE/lib_mem.c **** *
 959:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
 960:../Dave/Generated/UCPROBE/lib_mem.c **** *
 961:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function must be used with extreme caution. It must only be called on memo
 962:../Dave/Generated/UCPROBE/lib_mem.c **** *                   segments that are no longer used.
 963:../Dave/Generated/UCPROBE/lib_mem.c **** *
 964:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) This function is disabled when debug mode is enabled to avoid heap memory leaks
 965:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 966:../Dave/Generated/UCPROBE/lib_mem.c **** */
 967:../Dave/Generated/UCPROBE/lib_mem.c **** 
 968:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_DISABLED)
 969:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_SegClr (MEM_SEG  *p_seg,
 970:../Dave/Generated/UCPROBE/lib_mem.c ****                   LIB_ERR  *p_err)
 971:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1136              	 .loc 1 971 0
 1137              	 .cfi_startproc
 1138              	 
 1139              	 
 1140 0000 80B5     	 push {r7,lr}
 1141              	.LCFI48:
 1142              	 .cfi_def_cfa_offset 8
 1143              	 .cfi_offset 7,-8
 1144              	 .cfi_offset 14,-4
 1145 0002 84B0     	 sub sp,sp,#16
 1146              	.LCFI49:
 1147              	 .cfi_def_cfa_offset 24
 1148 0004 00AF     	 add r7,sp,#0
 1149              	.LCFI50:
 1150              	 .cfi_def_cfa_register 7
 1151 0006 7860     	 str r0,[r7,#4]
 1152 0008 3960     	 str r1,[r7]
 972:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1153              	 .loc 1 972 0
 1154 000a 0023     	 movs r3,#0
 1155 000c FB60     	 str r3,[r7,#12]
 973:../Dave/Generated/UCPROBE/lib_mem.c **** 
 974:../Dave/Generated/UCPROBE/lib_mem.c **** 
 975:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 976:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
 977:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 978:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 979:../Dave/Generated/UCPROBE/lib_mem.c **** 
 980:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Chk for null seg ptr.           
 981:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
 982:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 983:../Dave/Generated/UCPROBE/lib_mem.c ****     }
 984:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 985:../Dave/Generated/UCPROBE/lib_mem.c **** 
 986:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1156              	 .loc 1 986 0
 1157 000e FFF7FEFF 	 bl CPU_SR_Save
 1158 0012 F860     	 str r0,[r7,#12]
 987:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext = p_seg->AddrBase;
 1159              	 .loc 1 987 0
 1160 0014 7B68     	 ldr r3,[r7,#4]
 1161 0016 1A68     	 ldr r2,[r3]
 1162 0018 7B68     	 ldr r3,[r7,#4]
 1163 001a 9A60     	 str r2,[r3,#8]
 988:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1164              	 .loc 1 988 0
 1165 001c F868     	 ldr r0,[r7,#12]
 1166 001e FFF7FEFF 	 bl CPU_SR_Restore
 989:../Dave/Generated/UCPROBE/lib_mem.c **** 
 990:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1167              	 .loc 1 990 0
 1168 0022 3B68     	 ldr r3,[r7]
 1169 0024 42F21072 	 movw r2,#10000
 1170 0028 1A80     	 strh r2,[r3]
 991:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1171              	 .loc 1 991 0
 1172 002a 1037     	 adds r7,r7,#16
 1173              	.LCFI51:
 1174              	 .cfi_def_cfa_offset 8
 1175 002c BD46     	 mov sp,r7
 1176              	.LCFI52:
 1177              	 .cfi_def_cfa_register 13
 1178              	 
 1179 002e 80BD     	 pop {r7,pc}
 1180              	 .cfi_endproc
 1181              	.LFE9:
 1183              	 .section .text.Mem_SegRemSizeGet,"ax",%progbits
 1184              	 .align 2
 1185              	 .global Mem_SegRemSizeGet
 1186              	 .thumb
 1187              	 .thumb_func
 1189              	Mem_SegRemSizeGet:
 1190              	.LFB10:
 992:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
 993:../Dave/Generated/UCPROBE/lib_mem.c **** 
 994:../Dave/Generated/UCPROBE/lib_mem.c **** 
 995:../Dave/Generated/UCPROBE/lib_mem.c **** /*
 996:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
 997:../Dave/Generated/UCPROBE/lib_mem.c **** *                                         Mem_SegRemSizeGet()
 998:../Dave/Generated/UCPROBE/lib_mem.c **** *
 999:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets free space of memory segment.
1000:../Dave/Generated/UCPROBE/lib_mem.c **** *
1001:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg       Pointer to segment data.
1002:../Dave/Generated/UCPROBE/lib_mem.c **** *
1003:../Dave/Generated/UCPROBE/lib_mem.c **** *               align       Alignment in bytes to assume for calculation of free space.
1004:../Dave/Generated/UCPROBE/lib_mem.c **** *
1005:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg_info  Pointer to structure that will receive further segment info data (used 
1006:../Dave/Generated/UCPROBE/lib_mem.c **** *                           total size, base address and next allocation address).
1007:../Dave/Generated/UCPROBE/lib_mem.c **** *
1008:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
1009:../Dave/Generated/UCPROBE/lib_mem.c **** *
1010:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1011:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
1012:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
1013:../Dave/Generated/UCPROBE/lib_mem.c **** *
1014:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Memory segment remaining size in bytes,     if successful.
1015:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                                          otherwise or if memory segment empty.
1016:../Dave/Generated/UCPROBE/lib_mem.c **** *
1017:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application,
1018:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_HeapGetSizeRem(),
1019:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_OutputUsage().
1020:../Dave/Generated/UCPROBE/lib_mem.c **** *
1021:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : None.
1022:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1023:../Dave/Generated/UCPROBE/lib_mem.c **** */
1024:../Dave/Generated/UCPROBE/lib_mem.c **** 
1025:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_SegRemSizeGet (MEM_SEG       *p_seg,
1026:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T     align,
1027:../Dave/Generated/UCPROBE/lib_mem.c ****                                MEM_SEG_INFO  *p_seg_info,
1028:../Dave/Generated/UCPROBE/lib_mem.c ****                                LIB_ERR       *p_err)
1029:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1191              	 .loc 1 1029 0
 1192              	 .cfi_startproc
 1193              	 
 1194              	 
 1195 0000 80B5     	 push {r7,lr}
 1196              	.LCFI53:
 1197              	 .cfi_def_cfa_offset 8
 1198              	 .cfi_offset 7,-8
 1199              	 .cfi_offset 14,-4
 1200 0002 8AB0     	 sub sp,sp,#40
 1201              	.LCFI54:
 1202              	 .cfi_def_cfa_offset 48
 1203 0004 00AF     	 add r7,sp,#0
 1204              	.LCFI55:
 1205              	 .cfi_def_cfa_register 7
 1206 0006 F860     	 str r0,[r7,#12]
 1207 0008 B960     	 str r1,[r7,#8]
 1208 000a 7A60     	 str r2,[r7,#4]
 1209 000c 3B60     	 str r3,[r7]
1030:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  rem_size;
1031:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  total_size;
1032:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  used_size;
1033:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    next_addr_align;
1034:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1210              	 .loc 1 1034 0
 1211 000e 0023     	 movs r3,#0
 1212 0010 7B62     	 str r3,[r7,#36]
1035:../Dave/Generated/UCPROBE/lib_mem.c **** 
1036:../Dave/Generated/UCPROBE/lib_mem.c **** 
1037:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1038:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
1039:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(seg_info);
1040:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1041:../Dave/Generated/UCPROBE/lib_mem.c **** 
1042:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(align) != DEF_YES) {                       /* Chk for invalid align val.      
1043:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
1044:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1045:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1046:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1047:../Dave/Generated/UCPROBE/lib_mem.c **** 
1048:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Dflt to heap in case p_seg is nu
 1213              	 .loc 1 1048 0
 1214 0012 FB68     	 ldr r3,[r7,#12]
 1215 0014 002B     	 cmp r3,#0
 1216 0016 01D1     	 bne .L73
1049:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1050:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1217              	 .loc 1 1050 0
 1218 0018 204B     	 ldr r3,.L78
 1219 001a FB60     	 str r3,[r7,#12]
 1220              	.L73:
1051:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1052:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1053:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1054:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1055:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1056:../Dave/Generated/UCPROBE/lib_mem.c **** 
1057:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();                                       /* Calc seg stats.                 
 1221              	 .loc 1 1057 0
 1222 001c FFF7FEFF 	 bl CPU_SR_Save
 1223 0020 7862     	 str r0,[r7,#36]
1058:../Dave/Generated/UCPROBE/lib_mem.c ****     next_addr_align = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext, align);
 1224              	 .loc 1 1058 0
 1225 0022 FB68     	 ldr r3,[r7,#12]
 1226 0024 9A68     	 ldr r2,[r3,#8]
 1227 0026 BB68     	 ldr r3,[r7,#8]
 1228 0028 5B42     	 negs r3,r3
 1229 002a 1A40     	 ands r2,r2,r3
 1230 002c FB68     	 ldr r3,[r7,#12]
 1231 002e 9968     	 ldr r1,[r3,#8]
 1232 0030 BB68     	 ldr r3,[r7,#8]
 1233 0032 013B     	 subs r3,r3,#1
 1234 0034 0B40     	 ands r3,r3,r1
 1235 0036 002B     	 cmp r3,#0
 1236 0038 01D0     	 beq .L74
 1237              	 .loc 1 1058 0 is_stmt 0 discriminator 1
 1238 003a BB68     	 ldr r3,[r7,#8]
 1239 003c 00E0     	 b .L75
 1240              	.L74:
 1241              	 .loc 1 1058 0 discriminator 2
 1242 003e 0023     	 movs r3,#0
 1243              	.L75:
 1244              	 .loc 1 1058 0 discriminator 4
 1245 0040 1344     	 add r3,r3,r2
 1246 0042 3B62     	 str r3,[r7,#32]
1059:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1247              	 .loc 1 1059 0 is_stmt 1 discriminator 4
 1248 0044 786A     	 ldr r0,[r7,#36]
 1249 0046 FFF7FEFF 	 bl CPU_SR_Restore
1060:../Dave/Generated/UCPROBE/lib_mem.c **** 
1061:../Dave/Generated/UCPROBE/lib_mem.c ****     total_size = p_seg->AddrEnd  - p_seg->AddrBase + 1u;
 1250              	 .loc 1 1061 0 discriminator 4
 1251 004a FB68     	 ldr r3,[r7,#12]
 1252 004c 5A68     	 ldr r2,[r3,#4]
 1253 004e FB68     	 ldr r3,[r7,#12]
 1254 0050 1B68     	 ldr r3,[r3]
 1255 0052 D31A     	 subs r3,r2,r3
 1256 0054 0133     	 adds r3,r3,#1
 1257 0056 FB61     	 str r3,[r7,#28]
1062:../Dave/Generated/UCPROBE/lib_mem.c ****     used_size  = next_addr_align - p_seg->AddrBase;
 1258              	 .loc 1 1062 0 discriminator 4
 1259 0058 FB68     	 ldr r3,[r7,#12]
 1260 005a 1B68     	 ldr r3,[r3]
 1261 005c 3A6A     	 ldr r2,[r7,#32]
 1262 005e D31A     	 subs r3,r2,r3
 1263 0060 BB61     	 str r3,[r7,#24]
1063:../Dave/Generated/UCPROBE/lib_mem.c ****     rem_size   = total_size      - used_size;
 1264              	 .loc 1 1063 0 discriminator 4
 1265 0062 FA69     	 ldr r2,[r7,#28]
 1266 0064 BB69     	 ldr r3,[r7,#24]
 1267 0066 D31A     	 subs r3,r2,r3
 1268 0068 7B61     	 str r3,[r7,#20]
1064:../Dave/Generated/UCPROBE/lib_mem.c **** 
1065:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg_info != DEF_NULL) {
 1269              	 .loc 1 1065 0 discriminator 4
 1270 006a 7B68     	 ldr r3,[r7,#4]
 1271 006c 002B     	 cmp r3,#0
 1272 006e 0CD0     	 beq .L76
1066:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->TotalSize     = total_size;
 1273              	 .loc 1 1066 0
 1274 0070 7B68     	 ldr r3,[r7,#4]
 1275 0072 FA69     	 ldr r2,[r7,#28]
 1276 0074 5A60     	 str r2,[r3,#4]
1067:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->UsedSize      = used_size;
 1277              	 .loc 1 1067 0
 1278 0076 7B68     	 ldr r3,[r7,#4]
 1279 0078 BA69     	 ldr r2,[r7,#24]
 1280 007a 1A60     	 str r2,[r3]
1068:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->AddrBase      = p_seg->AddrBase;
 1281              	 .loc 1 1068 0
 1282 007c FB68     	 ldr r3,[r7,#12]
 1283 007e 1A68     	 ldr r2,[r3]
 1284 0080 7B68     	 ldr r3,[r7,#4]
 1285 0082 9A60     	 str r2,[r3,#8]
1069:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_info->AddrNextAlloc = next_addr_align;
 1286              	 .loc 1 1069 0
 1287 0084 7B68     	 ldr r3,[r7,#4]
 1288 0086 3A6A     	 ldr r2,[r7,#32]
 1289 0088 DA60     	 str r2,[r3,#12]
 1290              	.L76:
1070:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1071:../Dave/Generated/UCPROBE/lib_mem.c **** 
1072:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1291              	 .loc 1 1072 0
 1292 008a 3B68     	 ldr r3,[r7]
 1293 008c 42F21072 	 movw r2,#10000
 1294 0090 1A80     	 strh r2,[r3]
1073:../Dave/Generated/UCPROBE/lib_mem.c **** 
1074:../Dave/Generated/UCPROBE/lib_mem.c ****     return (rem_size);
 1295              	 .loc 1 1074 0
 1296 0092 7B69     	 ldr r3,[r7,#20]
1075:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1297              	 .loc 1 1075 0
 1298 0094 1846     	 mov r0,r3
 1299 0096 2837     	 adds r7,r7,#40
 1300              	.LCFI56:
 1301              	 .cfi_def_cfa_offset 8
 1302 0098 BD46     	 mov sp,r7
 1303              	.LCFI57:
 1304              	 .cfi_def_cfa_register 13
 1305              	 
 1306 009a 80BD     	 pop {r7,pc}
 1307              	.L79:
 1308              	 .align 2
 1309              	.L78:
 1310 009c 00000000 	 .word Mem_SegHeap
 1311              	 .cfi_endproc
 1312              	.LFE10:
 1314              	 .section .text.Mem_SegAlloc,"ax",%progbits
 1315              	 .align 2
 1316              	 .global Mem_SegAlloc
 1317              	 .thumb
 1318              	 .thumb_func
 1320              	Mem_SegAlloc:
 1321              	.LFB11:
1076:../Dave/Generated/UCPROBE/lib_mem.c **** 
1077:../Dave/Generated/UCPROBE/lib_mem.c **** 
1078:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1079:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1080:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_SegAlloc()
1081:../Dave/Generated/UCPROBE/lib_mem.c **** *
1082:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment. Returned memory block will be aligned on a
1083:../Dave/Generated/UCPROBE/lib_mem.c **** *               word boundary.
1084:../Dave/Generated/UCPROBE/lib_mem.c **** *
1085:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to allocated object name. Used for allocations tracking. May be DEF
1086:../Dave/Generated/UCPROBE/lib_mem.c **** *
1087:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg   Pointer to segment from which to allocate memory. Will be allocated from
1088:../Dave/Generated/UCPROBE/lib_mem.c **** *                       general-purpose heap if null.
1089:../Dave/Generated/UCPROBE/lib_mem.c **** *
1090:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Size of memory block to allocate, in bytes.
1091:../Dave/Generated/UCPROBE/lib_mem.c **** *
1092:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1093:../Dave/Generated/UCPROBE/lib_mem.c **** *
1094:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1095:../Dave/Generated/UCPROBE/lib_mem.c **** *
1096:../Dave/Generated/UCPROBE/lib_mem.c **** *                           ------------------RETURNED BY Mem_SegAllocInternal()-------------------
1097:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment requeste
1098:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size specified.
1099:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Error or segment data pointer NULL.
1100:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF             Allocation would overflow memory segmen
1101:../Dave/Generated/UCPROBE/lib_mem.c **** *
1102:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1103:../Dave/Generated/UCPROBE/lib_mem.c **** *
1104:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1105:../Dave/Generated/UCPROBE/lib_mem.c **** *
1106:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1107:../Dave/Generated/UCPROBE/lib_mem.c **** *
1108:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) The memory block returned  by this function will be aligned on a word boundary.
1109:../Dave/Generated/UCPROBE/lib_mem.c **** *                   order to specify a specific alignment value, use either Mem_SegAllocExt() or
1110:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_SegAllocHW().
1111:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1112:../Dave/Generated/UCPROBE/lib_mem.c **** */
1113:../Dave/Generated/UCPROBE/lib_mem.c **** 
1114:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAlloc (const  CPU_CHAR    *p_name,
1115:../Dave/Generated/UCPROBE/lib_mem.c ****                             MEM_SEG     *p_seg,
1116:../Dave/Generated/UCPROBE/lib_mem.c ****                             CPU_SIZE_T   size,
1117:../Dave/Generated/UCPROBE/lib_mem.c ****                             LIB_ERR     *p_err)
1118:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1322              	 .loc 1 1118 0
 1323              	 .cfi_startproc
 1324              	 
 1325              	 
 1326 0000 80B5     	 push {r7,lr}
 1327              	.LCFI58:
 1328              	 .cfi_def_cfa_offset 8
 1329              	 .cfi_offset 7,-8
 1330              	 .cfi_offset 14,-4
 1331 0002 8AB0     	 sub sp,sp,#40
 1332              	.LCFI59:
 1333              	 .cfi_def_cfa_offset 48
 1334 0004 04AF     	 add r7,sp,#16
 1335              	.LCFI60:
 1336              	 .cfi_def_cfa 7,32
 1337 0006 F860     	 str r0,[r7,#12]
 1338 0008 B960     	 str r1,[r7,#8]
 1339 000a 7A60     	 str r2,[r7,#4]
 1340 000c 3B60     	 str r3,[r7]
1119:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1120:../Dave/Generated/UCPROBE/lib_mem.c **** 
1121:../Dave/Generated/UCPROBE/lib_mem.c **** 
1122:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 1341              	 .loc 1 1122 0
 1342 000e BB68     	 ldr r3,[r7,#8]
 1343 0010 002B     	 cmp r3,#0
 1344 0012 01D1     	 bne .L81
1123:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1124:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1345              	 .loc 1 1124 0
 1346 0014 094B     	 ldr r3,.L83
 1347 0016 BB60     	 str r3,[r7,#8]
 1348              	.L81:
1125:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1126:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1127:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1128:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1129:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1130:../Dave/Generated/UCPROBE/lib_mem.c **** 
1131:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
 1349              	 .loc 1 1131 0
 1350 0018 0123     	 movs r3,#1
 1351 001a 0093     	 str r3,[sp]
 1352 001c 0023     	 movs r3,#0
 1353 001e 0193     	 str r3,[sp,#4]
 1354 0020 3B68     	 ldr r3,[r7]
 1355 0022 0293     	 str r3,[sp,#8]
 1356 0024 F868     	 ldr r0,[r7,#12]
 1357 0026 B968     	 ldr r1,[r7,#8]
 1358 0028 7A68     	 ldr r2,[r7,#4]
 1359 002a 0423     	 movs r3,#4
 1360 002c FFF7FEFF 	 bl Mem_SegAllocInternal
 1361 0030 7861     	 str r0,[r7,#20]
1132:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1133:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1134:../Dave/Generated/UCPROBE/lib_mem.c ****                                  sizeof(CPU_ALIGN),
1135:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_PADDING_ALIGN_NONE,
1136:../Dave/Generated/UCPROBE/lib_mem.c ****                                  DEF_NULL,
1137:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1138:../Dave/Generated/UCPROBE/lib_mem.c **** 
1139:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 1362              	 .loc 1 1139 0
 1363 0032 7B69     	 ldr r3,[r7,#20]
1140:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1364              	 .loc 1 1140 0
 1365 0034 1846     	 mov r0,r3
 1366 0036 1837     	 adds r7,r7,#24
 1367              	.LCFI61:
 1368              	 .cfi_def_cfa_offset 8
 1369 0038 BD46     	 mov sp,r7
 1370              	.LCFI62:
 1371              	 .cfi_def_cfa_register 13
 1372              	 
 1373 003a 80BD     	 pop {r7,pc}
 1374              	.L84:
 1375              	 .align 2
 1376              	.L83:
 1377 003c 00000000 	 .word Mem_SegHeap
 1378              	 .cfi_endproc
 1379              	.LFE11:
 1381              	 .section .text.Mem_SegAllocExt,"ax",%progbits
 1382              	 .align 2
 1383              	 .global Mem_SegAllocExt
 1384              	 .thumb
 1385              	 .thumb_func
 1387              	Mem_SegAllocExt:
 1388              	.LFB12:
1141:../Dave/Generated/UCPROBE/lib_mem.c **** 
1142:../Dave/Generated/UCPROBE/lib_mem.c **** 
1143:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1144:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1145:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_SegAllocExt()
1146:../Dave/Generated/UCPROBE/lib_mem.c **** *
1147:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified memory segment.
1148:../Dave/Generated/UCPROBE/lib_mem.c **** *
1149:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to allocated object name. Used for allocations tracking. Ma
1150:../Dave/Generated/UCPROBE/lib_mem.c **** *
1151:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1152:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1153:../Dave/Generated/UCPROBE/lib_mem.c **** *
1154:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
1155:../Dave/Generated/UCPROBE/lib_mem.c **** *
1156:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
1157:../Dave/Generated/UCPROBE/lib_mem.c **** *
1158:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
1159:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
1160:../Dave/Generated/UCPROBE/lib_mem.c **** *
1161:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1162:../Dave/Generated/UCPROBE/lib_mem.c **** *
1163:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1164:../Dave/Generated/UCPROBE/lib_mem.c **** *
1165:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1166:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1167:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1168:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1169:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1170:../Dave/Generated/UCPROBE/lib_mem.c **** *
1171:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1172:../Dave/Generated/UCPROBE/lib_mem.c **** *
1173:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1174:../Dave/Generated/UCPROBE/lib_mem.c **** *
1175:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1176:../Dave/Generated/UCPROBE/lib_mem.c **** *
1177:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1178:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1179:../Dave/Generated/UCPROBE/lib_mem.c **** */
1180:../Dave/Generated/UCPROBE/lib_mem.c **** 
1181:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAllocExt (const  CPU_CHAR    *p_name,
1182:../Dave/Generated/UCPROBE/lib_mem.c ****                                MEM_SEG     *p_seg,
1183:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T   size,
1184:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T   align,
1185:../Dave/Generated/UCPROBE/lib_mem.c ****                                CPU_SIZE_T  *p_bytes_reqd,
1186:../Dave/Generated/UCPROBE/lib_mem.c ****                                LIB_ERR     *p_err)
1187:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1389              	 .loc 1 1187 0
 1390              	 .cfi_startproc
 1391              	 
 1392              	 
 1393 0000 80B5     	 push {r7,lr}
 1394              	.LCFI63:
 1395              	 .cfi_def_cfa_offset 8
 1396              	 .cfi_offset 7,-8
 1397              	 .cfi_offset 14,-4
 1398 0002 8AB0     	 sub sp,sp,#40
 1399              	.LCFI64:
 1400              	 .cfi_def_cfa_offset 48
 1401 0004 04AF     	 add r7,sp,#16
 1402              	.LCFI65:
 1403              	 .cfi_def_cfa 7,32
 1404 0006 F860     	 str r0,[r7,#12]
 1405 0008 B960     	 str r1,[r7,#8]
 1406 000a 7A60     	 str r2,[r7,#4]
 1407 000c 3B60     	 str r3,[r7]
1188:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1189:../Dave/Generated/UCPROBE/lib_mem.c **** 
1190:../Dave/Generated/UCPROBE/lib_mem.c **** 
1191:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 1408              	 .loc 1 1191 0
 1409 000e BB68     	 ldr r3,[r7,#8]
 1410 0010 002B     	 cmp r3,#0
 1411 0012 01D1     	 bne .L86
1192:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1193:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1412              	 .loc 1 1193 0
 1413 0014 094B     	 ldr r3,.L88
 1414 0016 BB60     	 str r3,[r7,#8]
 1415              	.L86:
1194:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1195:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1196:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1197:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1198:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1199:../Dave/Generated/UCPROBE/lib_mem.c **** 
1200:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
 1416              	 .loc 1 1200 0
 1417 0018 0123     	 movs r3,#1
 1418 001a 0093     	 str r3,[sp]
 1419 001c 3B6A     	 ldr r3,[r7,#32]
 1420 001e 0193     	 str r3,[sp,#4]
 1421 0020 7B6A     	 ldr r3,[r7,#36]
 1422 0022 0293     	 str r3,[sp,#8]
 1423 0024 F868     	 ldr r0,[r7,#12]
 1424 0026 B968     	 ldr r1,[r7,#8]
 1425 0028 7A68     	 ldr r2,[r7,#4]
 1426 002a 3B68     	 ldr r3,[r7]
 1427 002c FFF7FEFF 	 bl Mem_SegAllocInternal
 1428 0030 7861     	 str r0,[r7,#20]
1201:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1202:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1203:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
1204:../Dave/Generated/UCPROBE/lib_mem.c ****                                  LIB_MEM_PADDING_ALIGN_NONE,
1205:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
1206:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1207:../Dave/Generated/UCPROBE/lib_mem.c **** 
1208:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 1429              	 .loc 1 1208 0
 1430 0032 7B69     	 ldr r3,[r7,#20]
1209:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1431              	 .loc 1 1209 0
 1432 0034 1846     	 mov r0,r3
 1433 0036 1837     	 adds r7,r7,#24
 1434              	.LCFI66:
 1435              	 .cfi_def_cfa_offset 8
 1436 0038 BD46     	 mov sp,r7
 1437              	.LCFI67:
 1438              	 .cfi_def_cfa_register 13
 1439              	 
 1440 003a 80BD     	 pop {r7,pc}
 1441              	.L89:
 1442              	 .align 2
 1443              	.L88:
 1444 003c 00000000 	 .word Mem_SegHeap
 1445              	 .cfi_endproc
 1446              	.LFE12:
 1448              	 .section .text.Mem_SegAllocHW,"ax",%progbits
 1449              	 .align 2
 1450              	 .global Mem_SegAllocHW
 1451              	 .thumb
 1452              	 .thumb_func
 1454              	Mem_SegAllocHW:
 1455              	.LFB13:
1210:../Dave/Generated/UCPROBE/lib_mem.c **** 
1211:../Dave/Generated/UCPROBE/lib_mem.c **** 
1212:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1213:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1214:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_SegAllocHW()
1215:../Dave/Generated/UCPROBE/lib_mem.c **** *
1216:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment. The returned buffer will be padded in func
1217:../Dave/Generated/UCPROBE/lib_mem.c **** *               of memory segment's properties.
1218:../Dave/Generated/UCPROBE/lib_mem.c **** *
1219:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to allocated object name. Used for allocations tracking. Ma
1220:../Dave/Generated/UCPROBE/lib_mem.c **** *
1221:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1222:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1223:../Dave/Generated/UCPROBE/lib_mem.c **** *
1224:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
1225:../Dave/Generated/UCPROBE/lib_mem.c **** *
1226:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
1227:../Dave/Generated/UCPROBE/lib_mem.c **** *
1228:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
1229:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
1230:../Dave/Generated/UCPROBE/lib_mem.c **** *
1231:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1232:../Dave/Generated/UCPROBE/lib_mem.c **** *
1233:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1234:../Dave/Generated/UCPROBE/lib_mem.c **** *
1235:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1236:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1237:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1238:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1239:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1240:../Dave/Generated/UCPROBE/lib_mem.c **** *
1241:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
1242:../Dave/Generated/UCPROBE/lib_mem.c **** *
1243:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1244:../Dave/Generated/UCPROBE/lib_mem.c **** *
1245:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1246:../Dave/Generated/UCPROBE/lib_mem.c **** *
1247:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1248:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1249:../Dave/Generated/UCPROBE/lib_mem.c **** */
1250:../Dave/Generated/UCPROBE/lib_mem.c **** 
1251:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_SegAllocHW (const  CPU_CHAR    *p_name,
1252:../Dave/Generated/UCPROBE/lib_mem.c ****                               MEM_SEG     *p_seg,
1253:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T   size,
1254:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T   align,
1255:../Dave/Generated/UCPROBE/lib_mem.c ****                               CPU_SIZE_T  *p_bytes_reqd,
1256:../Dave/Generated/UCPROBE/lib_mem.c ****                               LIB_ERR     *p_err)
1257:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1456              	 .loc 1 1257 0
 1457              	 .cfi_startproc
 1458              	 
 1459              	 
 1460 0000 80B5     	 push {r7,lr}
 1461              	.LCFI68:
 1462              	 .cfi_def_cfa_offset 8
 1463              	 .cfi_offset 7,-8
 1464              	 .cfi_offset 14,-4
 1465 0002 8AB0     	 sub sp,sp,#40
 1466              	.LCFI69:
 1467              	 .cfi_def_cfa_offset 48
 1468 0004 04AF     	 add r7,sp,#16
 1469              	.LCFI70:
 1470              	 .cfi_def_cfa 7,32
 1471 0006 F860     	 str r0,[r7,#12]
 1472 0008 B960     	 str r1,[r7,#8]
 1473 000a 7A60     	 str r2,[r7,#4]
 1474 000c 3B60     	 str r3,[r7]
1258:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
1259:../Dave/Generated/UCPROBE/lib_mem.c **** 
1260:../Dave/Generated/UCPROBE/lib_mem.c **** 
1261:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 1475              	 .loc 1 1261 0
 1476 000e BB68     	 ldr r3,[r7,#8]
 1477 0010 002B     	 cmp r3,#0
 1478 0012 01D1     	 bne .L91
1262:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1263:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1479              	 .loc 1 1263 0
 1480 0014 0A4B     	 ldr r3,.L93
 1481 0016 BB60     	 str r3,[r7,#8]
 1482              	.L91:
1264:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1265:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1266:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1267:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1268:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1269:../Dave/Generated/UCPROBE/lib_mem.c **** 
1270:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_name,
 1483              	 .loc 1 1270 0
 1484 0018 BB68     	 ldr r3,[r7,#8]
 1485 001a 1B69     	 ldr r3,[r3,#16]
 1486 001c 0093     	 str r3,[sp]
 1487 001e 3B6A     	 ldr r3,[r7,#32]
 1488 0020 0193     	 str r3,[sp,#4]
 1489 0022 7B6A     	 ldr r3,[r7,#36]
 1490 0024 0293     	 str r3,[sp,#8]
 1491 0026 F868     	 ldr r0,[r7,#12]
 1492 0028 B968     	 ldr r1,[r7,#8]
 1493 002a 7A68     	 ldr r2,[r7,#4]
 1494 002c 3B68     	 ldr r3,[r7]
 1495 002e FFF7FEFF 	 bl Mem_SegAllocInternal
 1496 0032 7861     	 str r0,[r7,#20]
1271:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg,
1272:../Dave/Generated/UCPROBE/lib_mem.c ****                                  size,
1273:../Dave/Generated/UCPROBE/lib_mem.c ****                                  align,
1274:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_seg->PaddingAlign,
1275:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_bytes_reqd,
1276:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
1277:../Dave/Generated/UCPROBE/lib_mem.c **** 
1278:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 1497              	 .loc 1 1278 0
 1498 0034 7B69     	 ldr r3,[r7,#20]
1279:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1499              	 .loc 1 1279 0
 1500 0036 1846     	 mov r0,r3
 1501 0038 1837     	 adds r7,r7,#24
 1502              	.LCFI71:
 1503              	 .cfi_def_cfa_offset 8
 1504 003a BD46     	 mov sp,r7
 1505              	.LCFI72:
 1506              	 .cfi_def_cfa_register 13
 1507              	 
 1508 003c 80BD     	 pop {r7,pc}
 1509              	.L94:
 1510 003e 00BF     	 .align 2
 1511              	.L93:
 1512 0040 00000000 	 .word Mem_SegHeap
 1513              	 .cfi_endproc
 1514              	.LFE13:
 1516              	 .section .rodata
 1517 0005 000000   	 .align 2
 1518              	.LC1:
 1519 0008 556E6E61 	 .ascii "Unnamed static pool\000"
 1519      6D656420 
 1519      73746174 
 1519      69632070 
 1519      6F6F6C00 
 1520              	 .align 2
 1521              	.LC2:
 1522 001c 556E6E61 	 .ascii "Unnamed static pool free blk tbl\000"
 1522      6D656420 
 1522      73746174 
 1522      69632070 
 1522      6F6F6C20 
 1523 003d 000000   	 .section .text.Mem_PoolCreate,"ax",%progbits
 1524              	 .align 2
 1525              	 .global Mem_PoolCreate
 1526              	 .thumb
 1527              	 .thumb_func
 1529              	Mem_PoolCreate:
 1530              	.LFB14:
1280:../Dave/Generated/UCPROBE/lib_mem.c **** 
1281:../Dave/Generated/UCPROBE/lib_mem.c **** 
1282:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1283:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1284:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolCreate()
1285:../Dave/Generated/UCPROBE/lib_mem.c **** *
1286:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : (1) Creates a memory pool :
1287:../Dave/Generated/UCPROBE/lib_mem.c **** *
1288:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (a) Create    memory pool from heap or dedicated memory
1289:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Allocate  memory pool memory blocks
1290:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (c) Configure memory pool
1291:../Dave/Generated/UCPROBE/lib_mem.c **** *
1292:../Dave/Generated/UCPROBE/lib_mem.c **** *
1293:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool          Pointer to a memory pool structure to create (see Note #1).
1294:../Dave/Generated/UCPROBE/lib_mem.c **** *
1295:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_mem_base      Memory pool segment base address :
1296:../Dave/Generated/UCPROBE/lib_mem.c **** *
1297:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (a)     Null address    Memory pool allocated from general-
1298:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (b) Non-null address    Memory pool allocated from dedicate
1299:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                   specified by its base address.
1300:../Dave/Generated/UCPROBE/lib_mem.c **** *
1301:../Dave/Generated/UCPROBE/lib_mem.c **** *               mem_size        Size      of memory pool segment          (in bytes).
1302:../Dave/Generated/UCPROBE/lib_mem.c **** *
1303:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_nbr         Number    of memory pool blocks to create.
1304:../Dave/Generated/UCPROBE/lib_mem.c **** *
1305:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size      of memory pool blocks to create (in bytes).
1306:../Dave/Generated/UCPROBE/lib_mem.c **** *
1307:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Alignment of memory pool blocks to specific word boundary (in bytes
1308:../Dave/Generated/UCPROBE/lib_mem.c **** *
1309:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Optional pointer to a variable to ... :
1310:../Dave/Generated/UCPROBE/lib_mem.c **** *
1311:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   (a) Return the number of bytes required to successfully
1312:../Dave/Generated/UCPROBE/lib_mem.c **** *                                               allocate the memory pool, if any error(s);
1313:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       (b) Return 0, otherwise.
1314:../Dave/Generated/UCPROBE/lib_mem.c **** *
1315:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1316:../Dave/Generated/UCPROBE/lib_mem.c **** *
1317:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                    Operation was successful.
1318:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Pointer to memory pool is n
1319:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN       Invalid block alignment req
1320:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR         Invalid number of blocks sp
1321:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE        Invalid block size specifie
1322:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid segment size.
1323:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_HEAP_EMPTY              No more memory available on
1324:../Dave/Generated/UCPROBE/lib_mem.c **** *
1325:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------RETURNED BY Mem_SegOverlapChkCritical()---------
1326:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
1327:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another ex
1328:../Dave/Generated/UCPROBE/lib_mem.c **** *
1329:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -----------------RETURNED BY Mem_SegAllocExtCritical()---------
1330:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF                 Allocation would overflow m
1331:../Dave/Generated/UCPROBE/lib_mem.c **** *
1332:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
1333:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid memory block alignm
1334:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE        Invalid memory block size s
1335:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Error or segment data point
1336:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF                 Allocation would overflow m
1337:../Dave/Generated/UCPROBE/lib_mem.c **** *
1338:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -----------------------RETURNED BY Mem_PoolClr()---------------
1339:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR                Argument 'p_pool' passed a 
1340:../Dave/Generated/UCPROBE/lib_mem.c **** *
1341:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1342:../Dave/Generated/UCPROBE/lib_mem.c **** *
1343:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1344:../Dave/Generated/UCPROBE/lib_mem.c **** *
1345:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1346:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolCreate() or Mem_DynPoolCreateHW() should be used instead.
1347:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1348:../Dave/Generated/UCPROBE/lib_mem.c **** */
1349:../Dave/Generated/UCPROBE/lib_mem.c **** 
1350:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1351:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolCreate (MEM_POOL          *p_pool,
1352:../Dave/Generated/UCPROBE/lib_mem.c ****                       void              *p_mem_base,
1353:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         mem_size,
1354:../Dave/Generated/UCPROBE/lib_mem.c ****                       MEM_POOL_BLK_QTY   blk_nbr,
1355:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         blk_size,
1356:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T         blk_align,
1357:../Dave/Generated/UCPROBE/lib_mem.c ****                       CPU_SIZE_T        *p_bytes_reqd,
1358:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR           *p_err)
1359:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1531              	 .loc 1 1359 0
 1532              	 .cfi_startproc
 1533              	 
 1534              	 
 1535 0000 80B5     	 push {r7,lr}
 1536              	.LCFI73:
 1537              	 .cfi_def_cfa_offset 8
 1538              	 .cfi_offset 7,-8
 1539              	 .cfi_offset 14,-4
 1540 0002 90B0     	 sub sp,sp,#64
 1541              	.LCFI74:
 1542              	 .cfi_def_cfa_offset 72
 1543 0004 04AF     	 add r7,sp,#16
 1544              	.LCFI75:
 1545              	 .cfi_def_cfa 7,56
 1546 0006 F860     	 str r0,[r7,#12]
 1547 0008 B960     	 str r1,[r7,#8]
 1548 000a 7A60     	 str r2,[r7,#4]
 1549 000c 3B60     	 str r3,[r7]
1360:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG           *p_seg;
1361:../Dave/Generated/UCPROBE/lib_mem.c ****     void              *p_pool_mem;
1362:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T         pool_size;
1363:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T         blk_size_align;
1364:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR           pool_addr_end;
1365:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_POOL_BLK_QTY   blk_ix;
1366:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U        *p_blk;
1367:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1550              	 .loc 1 1367 0
 1551 000e 0023     	 movs r3,#0
 1552 0010 3B62     	 str r3,[r7,#32]
1368:../Dave/Generated/UCPROBE/lib_mem.c **** 
1369:../Dave/Generated/UCPROBE/lib_mem.c **** 
1370:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* --------------- VALIDATE RTN ERR
1371:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1372:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1373:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1374:../Dave/Generated/UCPROBE/lib_mem.c **** 
1375:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------- VALIDATE MEM POOL 
1376:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {
1377:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1378:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1379:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1380:../Dave/Generated/UCPROBE/lib_mem.c **** 
1381:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_mem_base != DEF_NULL) {
1382:../Dave/Generated/UCPROBE/lib_mem.c ****         if (mem_size < 1u) {
1383:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_SIZE;
1384:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
1385:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1386:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1387:../Dave/Generated/UCPROBE/lib_mem.c **** 
1388:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_nbr < 1u) {
1389:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_NBR;
1390:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1391:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1392:../Dave/Generated/UCPROBE/lib_mem.c **** 
1393:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < 1u) {
1394:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1395:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1396:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1397:../Dave/Generated/UCPROBE/lib_mem.c **** 
1398:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(blk_align) != DEF_YES) {                   /* Chk that req alignment is a pwr 
1399:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ALIGN;
1400:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1401:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1402:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1403:../Dave/Generated/UCPROBE/lib_mem.c **** 
1404:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_PoolClr(p_pool, p_err);                                 /* Init mem pool.                  
 1553              	 .loc 1 1404 0
 1554 0012 F868     	 ldr r0,[r7,#12]
 1555 0014 796C     	 ldr r1,[r7,#68]
 1556 0016 FFF7FEFF 	 bl Mem_PoolClr
1405:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 1557              	 .loc 1 1405 0
 1558 001a 7B6C     	 ldr r3,[r7,#68]
 1559 001c 1B88     	 ldrh r3,[r3]
 1560 001e 42F21072 	 movw r2,#10000
 1561 0022 9342     	 cmp r3,r2
 1562 0024 00D0     	 beq .L96
1406:../Dave/Generated/UCPROBE/lib_mem.c ****          return;
 1563              	 .loc 1 1406 0
 1564 0026 A9E0     	 b .L95
 1565              	.L96:
1407:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1408:../Dave/Generated/UCPROBE/lib_mem.c **** 
1409:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------- DETERMINE AND/OR ALLOC 
1410:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_mem_base == DEF_NULL) {                               /* Use heap seg.                   
 1566              	 .loc 1 1410 0
 1567 0028 BB68     	 ldr r3,[r7,#8]
 1568 002a 002B     	 cmp r3,#0
 1569 002c 02D1     	 bne .L98
1411:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 1570              	 .loc 1 1411 0
 1571 002e 554B     	 ldr r3,.L113
 1572 0030 FB62     	 str r3,[r7,#44]
 1573 0032 39E0     	 b .L99
 1574              	.L98:
1412:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {                                                    /* Use other seg.                  
1413:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 1575              	 .loc 1 1413 0
 1576 0034 FFF7FEFF 	 bl CPU_SR_Save
 1577 0038 3862     	 str r0,[r7,#32]
1414:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = Mem_SegOverlapChkCritical((CPU_ADDR)p_mem_base,
 1578              	 .loc 1 1414 0
 1579 003a BB68     	 ldr r3,[r7,#8]
 1580 003c 1846     	 mov r0,r3
 1581 003e 7968     	 ldr r1,[r7,#4]
 1582 0040 7A6C     	 ldr r2,[r7,#68]
 1583 0042 FFF7FEFF 	 bl Mem_SegOverlapChkCritical
 1584 0046 F862     	 str r0,[r7,#44]
1415:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     mem_size,
1416:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_err);
1417:../Dave/Generated/UCPROBE/lib_mem.c ****         switch (*p_err) {
 1585              	 .loc 1 1417 0
 1586 0048 7B6C     	 ldr r3,[r7,#68]
 1587 004a 1B88     	 ldrh r3,[r3]
 1588 004c 42F21072 	 movw r2,#10000
 1589 0050 9342     	 cmp r3,r2
 1590 0052 03D0     	 beq .L101
 1591 0054 B3F51E5F 	 cmp r3,#10112
 1592 0058 22D0     	 beq .L112
 1593 005a 1DE0     	 b .L111
 1594              	.L101:
1418:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_EXISTS:                /* Seg already exists.             
1419:../Dave/Generated/UCPROBE/lib_mem.c ****                  break;
1420:../Dave/Generated/UCPROBE/lib_mem.c **** 
1421:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_NONE:                              /* Seg must be created.            
1422:../Dave/Generated/UCPROBE/lib_mem.c ****                  p_seg = (MEM_SEG *)Mem_SegAllocExtCritical(&Mem_SegHeap,
 1595              	 .loc 1 1422 0
 1596 005c 3B6C     	 ldr r3,[r7,#64]
 1597 005e 0093     	 str r3,[sp]
 1598 0060 7B6C     	 ldr r3,[r7,#68]
 1599 0062 0193     	 str r3,[sp,#4]
 1600 0064 4748     	 ldr r0,.L113
 1601 0066 1421     	 movs r1,#20
 1602 0068 0422     	 movs r2,#4
 1603 006a 0123     	 movs r3,#1
 1604 006c FFF7FEFF 	 bl Mem_SegAllocExtCritical
 1605 0070 F862     	 str r0,[r7,#44]
1423:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              sizeof(MEM_SEG),
1424:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              sizeof(CPU_ALIGN),
1425:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              LIB_MEM_PADDING_ALIGN_NONE,
1426:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              p_bytes_reqd,
1427:../Dave/Generated/UCPROBE/lib_mem.c ****                                                              p_err);
1428:../Dave/Generated/UCPROBE/lib_mem.c ****                  if (*p_err != LIB_MEM_ERR_NONE) {
 1606              	 .loc 1 1428 0
 1607 0072 7B6C     	 ldr r3,[r7,#68]
 1608 0074 1B88     	 ldrh r3,[r3]
 1609 0076 42F21072 	 movw r2,#10000
 1610 007a 9342     	 cmp r3,r2
 1611 007c 03D0     	 beq .L104
1429:../Dave/Generated/UCPROBE/lib_mem.c ****                      CPU_CRITICAL_EXIT();
 1612              	 .loc 1 1429 0
 1613 007e 386A     	 ldr r0,[r7,#32]
 1614 0080 FFF7FEFF 	 bl CPU_SR_Restore
1430:../Dave/Generated/UCPROBE/lib_mem.c ****                      return;
 1615              	 .loc 1 1430 0
 1616 0084 7AE0     	 b .L95
 1617              	.L104:
1431:../Dave/Generated/UCPROBE/lib_mem.c ****                  }
1432:../Dave/Generated/UCPROBE/lib_mem.c **** 
1433:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)                    /* Track alloc if req'd.           
1434:../Dave/Generated/UCPROBE/lib_mem.c ****                  Mem_SegAllocTrackCritical("Unknown segment data",
1435:../Dave/Generated/UCPROBE/lib_mem.c ****                                            &Mem_SegHeap,
1436:../Dave/Generated/UCPROBE/lib_mem.c ****                                             sizeof(MEM_SEG),
1437:../Dave/Generated/UCPROBE/lib_mem.c ****                                             p_err);
1438:../Dave/Generated/UCPROBE/lib_mem.c ****                  if (*p_err != LIB_MEM_ERR_NONE) {
1439:../Dave/Generated/UCPROBE/lib_mem.c ****                      CPU_CRITICAL_EXIT();
1440:../Dave/Generated/UCPROBE/lib_mem.c ****                      return;
1441:../Dave/Generated/UCPROBE/lib_mem.c ****                  }
1442:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1443:../Dave/Generated/UCPROBE/lib_mem.c **** 
1444:../Dave/Generated/UCPROBE/lib_mem.c ****                  Mem_SegCreateCritical(          DEF_NULL,
 1618              	 .loc 1 1444 0
 1619 0086 BA68     	 ldr r2,[r7,#8]
 1620 0088 7B68     	 ldr r3,[r7,#4]
 1621 008a 0093     	 str r3,[sp]
 1622 008c 0020     	 movs r0,#0
 1623 008e F96A     	 ldr r1,[r7,#44]
 1624 0090 0123     	 movs r3,#1
 1625 0092 FFF7FEFF 	 bl Mem_SegCreateCritical
1445:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  p_seg,
1446:../Dave/Generated/UCPROBE/lib_mem.c ****                                        (CPU_ADDR)p_mem_base,
1447:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  LIB_MEM_PADDING_ALIGN_NONE,
1448:../Dave/Generated/UCPROBE/lib_mem.c ****                                                  mem_size);
1449:../Dave/Generated/UCPROBE/lib_mem.c ****                  break;
 1626              	 .loc 1 1449 0
 1627 0096 04E0     	 b .L103
 1628              	.L111:
1450:../Dave/Generated/UCPROBE/lib_mem.c **** 
1451:../Dave/Generated/UCPROBE/lib_mem.c **** 
1452:../Dave/Generated/UCPROBE/lib_mem.c ****             case LIB_MEM_ERR_INVALID_SEG_OVERLAP:
1453:../Dave/Generated/UCPROBE/lib_mem.c ****             default:
1454:../Dave/Generated/UCPROBE/lib_mem.c ****                  CPU_CRITICAL_EXIT();
 1629              	 .loc 1 1454 0
 1630 0098 386A     	 ldr r0,[r7,#32]
 1631 009a FFF7FEFF 	 bl CPU_SR_Restore
1455:../Dave/Generated/UCPROBE/lib_mem.c ****                  return;                                        /* Prevent 'break NOT reachable' co
 1632              	 .loc 1 1455 0
 1633 009e 6DE0     	 b .L95
 1634              	.L112:
1419:../Dave/Generated/UCPROBE/lib_mem.c **** 
 1635              	 .loc 1 1419 0
 1636 00a0 00BF     	 nop
 1637              	.L103:
1456:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1457:../Dave/Generated/UCPROBE/lib_mem.c **** 
1458:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 1638              	 .loc 1 1458 0
 1639 00a2 386A     	 ldr r0,[r7,#32]
 1640 00a4 FFF7FEFF 	 bl CPU_SR_Restore
 1641              	.L99:
1459:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1460:../Dave/Generated/UCPROBE/lib_mem.c **** 
1461:../Dave/Generated/UCPROBE/lib_mem.c **** 
1462:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ---------------- ALLOC MEM FOR P
1463:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Calc blk size with align.       
1464:../Dave/Generated/UCPROBE/lib_mem.c ****     blk_size_align =  MATH_ROUND_INC_UP_PWR2(blk_size, blk_align);
 1642              	 .loc 1 1464 0
 1643 00a8 FB6B     	 ldr r3,[r7,#60]
 1644 00aa 5A42     	 negs r2,r3
 1645 00ac BB6B     	 ldr r3,[r7,#56]
 1646 00ae 1A40     	 ands r2,r2,r3
 1647 00b0 FB6B     	 ldr r3,[r7,#60]
 1648 00b2 591E     	 subs r1,r3,#1
 1649 00b4 BB6B     	 ldr r3,[r7,#56]
 1650 00b6 0B40     	 ands r3,r3,r1
 1651 00b8 002B     	 cmp r3,#0
 1652 00ba 01D0     	 beq .L105
 1653              	 .loc 1 1464 0 is_stmt 0 discriminator 1
 1654 00bc FB6B     	 ldr r3,[r7,#60]
 1655 00be 00E0     	 b .L106
 1656              	.L105:
 1657              	 .loc 1 1464 0 discriminator 2
 1658 00c0 0023     	 movs r3,#0
 1659              	.L106:
 1660              	 .loc 1 1464 0 discriminator 4
 1661 00c2 1344     	 add r3,r3,r2
 1662 00c4 FB61     	 str r3,[r7,#28]
1465:../Dave/Generated/UCPROBE/lib_mem.c ****     pool_size      =  blk_size_align * blk_nbr;                 /* Calc required size for pool.    
 1663              	 .loc 1 1465 0 is_stmt 1 discriminator 4
 1664 00c6 FB69     	 ldr r3,[r7,#28]
 1665 00c8 3A68     	 ldr r2,[r7]
 1666 00ca 02FB03F3 	 mul r3,r2,r3
 1667 00ce BB61     	 str r3,[r7,#24]
1466:../Dave/Generated/UCPROBE/lib_mem.c **** 
1467:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Alloc mem for pool.             
1468:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_mem = (void *)Mem_SegAllocInternal("Unnamed static pool",
 1668              	 .loc 1 1468 0 discriminator 4
 1669 00d0 0123     	 movs r3,#1
 1670 00d2 0093     	 str r3,[sp]
 1671 00d4 3B6C     	 ldr r3,[r7,#64]
 1672 00d6 0193     	 str r3,[sp,#4]
 1673 00d8 7B6C     	 ldr r3,[r7,#68]
 1674 00da 0293     	 str r3,[sp,#8]
 1675 00dc 2A48     	 ldr r0,.L113+4
 1676 00de F96A     	 ldr r1,[r7,#44]
 1677 00e0 BA69     	 ldr r2,[r7,#24]
 1678 00e2 FB6B     	 ldr r3,[r7,#60]
 1679 00e4 FFF7FEFF 	 bl Mem_SegAllocInternal
 1680 00e8 7861     	 str r0,[r7,#20]
1469:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_seg,
1470:../Dave/Generated/UCPROBE/lib_mem.c ****                                                pool_size,
1471:../Dave/Generated/UCPROBE/lib_mem.c ****                                                blk_align,
1472:../Dave/Generated/UCPROBE/lib_mem.c ****                                                LIB_MEM_PADDING_ALIGN_NONE,
1473:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_bytes_reqd,
1474:../Dave/Generated/UCPROBE/lib_mem.c ****                                                p_err);
1475:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 1681              	 .loc 1 1475 0 discriminator 4
 1682 00ea 7B6C     	 ldr r3,[r7,#68]
 1683 00ec 1B88     	 ldrh r3,[r3]
 1684 00ee 42F21072 	 movw r2,#10000
 1685 00f2 9342     	 cmp r3,r2
 1686 00f4 00D0     	 beq .L107
1476:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 1687              	 .loc 1 1476 0 discriminator 2
 1688 00f6 41E0     	 b .L95
 1689              	.L107:
1477:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1478:../Dave/Generated/UCPROBE/lib_mem.c **** 
1479:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------ ALLOC MEM FOR FREE 
1480:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl = (void *)Mem_SegAllocInternal("Unnamed static pool free blk tbl",
 1690              	 .loc 1 1480 0
 1691 00f8 3B68     	 ldr r3,[r7]
 1692 00fa 9A00     	 lsls r2,r3,#2
 1693 00fc 0123     	 movs r3,#1
 1694 00fe 0093     	 str r3,[sp]
 1695 0100 3B6C     	 ldr r3,[r7,#64]
 1696 0102 0193     	 str r3,[sp,#4]
 1697 0104 7B6C     	 ldr r3,[r7,#68]
 1698 0106 0293     	 str r3,[sp,#8]
 1699 0108 2048     	 ldr r0,.L113+8
 1700 010a 1E49     	 ldr r1,.L113
 1701 010c 0423     	 movs r3,#4
 1702 010e FFF7FEFF 	 bl Mem_SegAllocInternal
 1703 0112 0246     	 mov r2,r0
 1704 0114 FB68     	 ldr r3,[r7,#12]
 1705 0116 1A61     	 str r2,[r3,#16]
1481:../Dave/Generated/UCPROBE/lib_mem.c ****                                                       &Mem_SegHeap,
1482:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        blk_nbr * sizeof(void *),
1483:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        sizeof(CPU_ALIGN),
1484:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        LIB_MEM_PADDING_ALIGN_NONE,
1485:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        p_bytes_reqd,
1486:../Dave/Generated/UCPROBE/lib_mem.c ****                                                        p_err);
1487:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 1706              	 .loc 1 1487 0
 1707 0118 7B6C     	 ldr r3,[r7,#68]
 1708 011a 1B88     	 ldrh r3,[r3]
 1709 011c 42F21072 	 movw r2,#10000
 1710 0120 9342     	 cmp r3,r2
 1711 0122 00D0     	 beq .L108
1488:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 1712              	 .loc 1 1488 0 discriminator 3
 1713 0124 2AE0     	 b .L95
 1714              	.L108:
1489:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1490:../Dave/Generated/UCPROBE/lib_mem.c **** 
1491:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT BLK LIST
1492:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = (CPU_INT08U *)p_pool_mem;
 1715              	 .loc 1 1492 0
 1716 0126 7B69     	 ldr r3,[r7,#20]
 1717 0128 7B62     	 str r3,[r7,#36]
1493:../Dave/Generated/UCPROBE/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
 1718              	 .loc 1 1493 0
 1719 012a 0023     	 movs r3,#0
 1720 012c BB62     	 str r3,[r7,#40]
 1721 012e 0DE0     	 b .L109
 1722              	.L110:
1494:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[blk_ix]  = p_blk;
 1723              	 .loc 1 1494 0 discriminator 3
 1724 0130 FB68     	 ldr r3,[r7,#12]
 1725 0132 1A69     	 ldr r2,[r3,#16]
 1726 0134 BB6A     	 ldr r3,[r7,#40]
 1727 0136 9B00     	 lsls r3,r3,#2
 1728 0138 1344     	 add r3,r3,r2
 1729 013a 7A6A     	 ldr r2,[r7,#36]
 1730 013c 1A60     	 str r2,[r3]
1495:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                      += blk_size_align;
 1731              	 .loc 1 1495 0 discriminator 3
 1732 013e 7A6A     	 ldr r2,[r7,#36]
 1733 0140 FB69     	 ldr r3,[r7,#28]
 1734 0142 1344     	 add r3,r3,r2
 1735 0144 7B62     	 str r3,[r7,#36]
1493:../Dave/Generated/UCPROBE/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
 1736              	 .loc 1 1493 0 discriminator 3
 1737 0146 BB6A     	 ldr r3,[r7,#40]
 1738 0148 0133     	 adds r3,r3,#1
 1739 014a BB62     	 str r3,[r7,#40]
 1740              	.L109:
1493:../Dave/Generated/UCPROBE/lib_mem.c ****     for (blk_ix = 0; blk_ix < blk_nbr; blk_ix++) {
 1741              	 .loc 1 1493 0 is_stmt 0 discriminator 1
 1742 014c BA6A     	 ldr r2,[r7,#40]
 1743 014e 3B68     	 ldr r3,[r7]
 1744 0150 9A42     	 cmp r2,r3
 1745 0152 EDD3     	 bcc .L110
1496:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1497:../Dave/Generated/UCPROBE/lib_mem.c **** 
1498:../Dave/Generated/UCPROBE/lib_mem.c **** 
1499:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ INIT POOL DAT
1500:../Dave/Generated/UCPROBE/lib_mem.c ****     pool_addr_end         = (CPU_ADDR)p_pool_mem + (pool_size - 1u);
 1746              	 .loc 1 1500 0 is_stmt 1
 1747 0154 7A69     	 ldr r2,[r7,#20]
 1748 0156 BB69     	 ldr r3,[r7,#24]
 1749 0158 1344     	 add r3,r3,r2
 1750 015a 013B     	 subs r3,r3,#1
 1751 015c 3B61     	 str r3,[r7,#16]
1501:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrStart =  p_pool_mem;
 1752              	 .loc 1 1501 0
 1753 015e FB68     	 ldr r3,[r7,#12]
 1754 0160 7A69     	 ldr r2,[r7,#20]
 1755 0162 1A60     	 str r2,[r3]
1502:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = (void *)pool_addr_end;
 1756              	 .loc 1 1502 0
 1757 0164 3A69     	 ldr r2,[r7,#16]
 1758 0166 FB68     	 ldr r3,[r7,#12]
 1759 0168 5A60     	 str r2,[r3,#4]
1503:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        =  blk_nbr;
 1760              	 .loc 1 1503 0
 1761 016a FB68     	 ldr r3,[r7,#12]
 1762 016c 3A68     	 ldr r2,[r7]
 1763 016e 9A60     	 str r2,[r3,#8]
1504:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       =  blk_size_align;
 1764              	 .loc 1 1504 0
 1765 0170 FB68     	 ldr r3,[r7,#12]
 1766 0172 FA69     	 ldr r2,[r7,#28]
 1767 0174 DA60     	 str r2,[r3,#12]
1505:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  =  blk_nbr;
 1768              	 .loc 1 1505 0
 1769 0176 FB68     	 ldr r3,[r7,#12]
 1770 0178 3A68     	 ldr r2,[r7]
 1771 017a 5A61     	 str r2,[r3,#20]
 1772              	.L95:
1506:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1773              	 .loc 1 1506 0
 1774 017c 3037     	 adds r7,r7,#48
 1775              	.LCFI76:
 1776              	 .cfi_def_cfa_offset 8
 1777 017e BD46     	 mov sp,r7
 1778              	.LCFI77:
 1779              	 .cfi_def_cfa_register 13
 1780              	 
 1781 0180 80BD     	 pop {r7,pc}
 1782              	.L114:
 1783 0182 00BF     	 .align 2
 1784              	.L113:
 1785 0184 00000000 	 .word Mem_SegHeap
 1786 0188 08000000 	 .word .LC1
 1787 018c 1C000000 	 .word .LC2
 1788              	 .cfi_endproc
 1789              	.LFE14:
 1791              	 .section .text.Mem_PoolClr,"ax",%progbits
 1792              	 .align 2
 1793              	 .global Mem_PoolClr
 1794              	 .thumb
 1795              	 .thumb_func
 1797              	Mem_PoolClr:
 1798              	.LFB15:
1507:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1508:../Dave/Generated/UCPROBE/lib_mem.c **** 
1509:../Dave/Generated/UCPROBE/lib_mem.c **** 
1510:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1511:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1512:../Dave/Generated/UCPROBE/lib_mem.c **** *                                            Mem_PoolClr()
1513:../Dave/Generated/UCPROBE/lib_mem.c **** *
1514:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Clears a memory pool (see Note #1).
1515:../Dave/Generated/UCPROBE/lib_mem.c **** *
1516:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool   Pointer to a memory pool structure to clear (see Note #2).
1517:../Dave/Generated/UCPROBE/lib_mem.c **** *
1518:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err        Pointer to variable that will receive the return error code from this 
1519:../Dave/Generated/UCPROBE/lib_mem.c **** *
1520:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
1521:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL poi
1522:../Dave/Generated/UCPROBE/lib_mem.c **** *
1523:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1524:../Dave/Generated/UCPROBE/lib_mem.c **** *
1525:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application,
1526:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_PoolCreate().
1527:../Dave/Generated/UCPROBE/lib_mem.c **** *
1528:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) (a) Mem_PoolClr() ONLY clears a memory pool structure's variables & should ONLY
1529:../Dave/Generated/UCPROBE/lib_mem.c **** *                       called to initialize a memory pool structure prior to calling Mem_PoolCreat
1530:../Dave/Generated/UCPROBE/lib_mem.c **** *
1531:../Dave/Generated/UCPROBE/lib_mem.c **** *                   (b) Mem_PoolClr() does NOT deallocate memory from the memory pool or deallocate
1532:../Dave/Generated/UCPROBE/lib_mem.c **** *                       memory pool itself & MUST NOT be called after calling Mem_PoolCreate() sinc
1533:../Dave/Generated/UCPROBE/lib_mem.c **** *                       this will likely corrupt the memory pool management.
1534:../Dave/Generated/UCPROBE/lib_mem.c **** *
1535:../Dave/Generated/UCPROBE/lib_mem.c **** *               (2) Assumes 'p_pool' points to a valid memory pool (if non-NULL).
1536:../Dave/Generated/UCPROBE/lib_mem.c **** *
1537:../Dave/Generated/UCPROBE/lib_mem.c **** *               (3) This function is DEPRECATED and will be removed in a future version of this pro
1538:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1539:../Dave/Generated/UCPROBE/lib_mem.c **** */
1540:../Dave/Generated/UCPROBE/lib_mem.c **** 
1541:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1542:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolClr (MEM_POOL  *p_pool,
1543:../Dave/Generated/UCPROBE/lib_mem.c ****                    LIB_ERR   *p_err)
1544:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1799              	 .loc 1 1544 0
 1800              	 .cfi_startproc
 1801              	 
 1802              	 
 1803              	 
 1804 0000 80B4     	 push {r7}
 1805              	.LCFI78:
 1806              	 .cfi_def_cfa_offset 4
 1807              	 .cfi_offset 7,-4
 1808 0002 83B0     	 sub sp,sp,#12
 1809              	.LCFI79:
 1810              	 .cfi_def_cfa_offset 16
 1811 0004 00AF     	 add r7,sp,#0
 1812              	.LCFI80:
 1813              	 .cfi_def_cfa_register 7
 1814 0006 7860     	 str r0,[r7,#4]
 1815 0008 3960     	 str r1,[r7]
1545:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE RTN ERR 
1546:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1547:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1548:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1549:../Dave/Generated/UCPROBE/lib_mem.c **** 
1550:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------------- VALIDATE MEM POOL
1551:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {
1552:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1553:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1554:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1555:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1556:../Dave/Generated/UCPROBE/lib_mem.c **** 
1557:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrStart = DEF_NULL;
 1816              	 .loc 1 1557 0
 1817 000a 7B68     	 ldr r3,[r7,#4]
 1818 000c 0022     	 movs r2,#0
 1819 000e 1A60     	 str r2,[r3]
1558:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolAddrEnd   = DEF_NULL;
 1820              	 .loc 1 1558 0
 1821 0010 7B68     	 ldr r3,[r7,#4]
 1822 0012 0022     	 movs r2,#0
 1823 0014 5A60     	 str r2,[r3,#4]
1559:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize       = 0u;
 1824              	 .loc 1 1559 0
 1825 0016 7B68     	 ldr r3,[r7,#4]
 1826 0018 0022     	 movs r2,#0
 1827 001a DA60     	 str r2,[r3,#12]
1560:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkNbr        = 0u;
 1828              	 .loc 1 1560 0
 1829 001c 7B68     	 ldr r3,[r7,#4]
 1830 001e 0022     	 movs r2,#0
 1831 0020 9A60     	 str r2,[r3,#8]
1561:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl    = DEF_NULL;
 1832              	 .loc 1 1561 0
 1833 0022 7B68     	 ldr r3,[r7,#4]
 1834 0024 0022     	 movs r2,#0
 1835 0026 1A61     	 str r2,[r3,#16]
1562:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx  = 0u;
 1836              	 .loc 1 1562 0
 1837 0028 7B68     	 ldr r3,[r7,#4]
 1838 002a 0022     	 movs r2,#0
 1839 002c 5A61     	 str r2,[r3,#20]
1563:../Dave/Generated/UCPROBE/lib_mem.c **** 
1564:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 1840              	 .loc 1 1564 0
 1841 002e 3B68     	 ldr r3,[r7]
 1842 0030 42F21072 	 movw r2,#10000
 1843 0034 1A80     	 strh r2,[r3]
1565:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1844              	 .loc 1 1565 0
 1845 0036 0C37     	 adds r7,r7,#12
 1846              	.LCFI81:
 1847              	 .cfi_def_cfa_offset 4
 1848 0038 BD46     	 mov sp,r7
 1849              	.LCFI82:
 1850              	 .cfi_def_cfa_register 13
 1851              	 
 1852 003a 5DF8047B 	 ldr r7,[sp],#4
 1853              	.LCFI83:
 1854              	 .cfi_restore 7
 1855              	 .cfi_def_cfa_offset 0
 1856 003e 7047     	 bx lr
 1857              	 .cfi_endproc
 1858              	.LFE15:
 1860              	 .section .text.Mem_PoolBlkGet,"ax",%progbits
 1861              	 .align 2
 1862              	 .global Mem_PoolBlkGet
 1863              	 .thumb
 1864              	 .thumb_func
 1866              	Mem_PoolBlkGet:
 1867              	.LFB16:
1566:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1567:../Dave/Generated/UCPROBE/lib_mem.c **** 
1568:../Dave/Generated/UCPROBE/lib_mem.c **** 
1569:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1570:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1571:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolBlkGet()
1572:../Dave/Generated/UCPROBE/lib_mem.c **** *
1573:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets a memory block from memory pool.
1574:../Dave/Generated/UCPROBE/lib_mem.c **** *
1575:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to  memory pool to get memory block from.
1576:../Dave/Generated/UCPROBE/lib_mem.c **** *
1577:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Size of requested memory (in bytes).
1578:../Dave/Generated/UCPROBE/lib_mem.c **** *
1579:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1580:../Dave/Generated/UCPROBE/lib_mem.c **** *
1581:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
1582:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid memory pool block size requeste
1583:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL pointer
1584:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_EMPTY          NO memory blocks available in memory po
1585:../Dave/Generated/UCPROBE/lib_mem.c **** *
1586:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
1587:../Dave/Generated/UCPROBE/lib_mem.c **** *
1588:../Dave/Generated/UCPROBE/lib_mem.c **** *               Pointer to NULL,         otherwise.
1589:../Dave/Generated/UCPROBE/lib_mem.c **** *
1590:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1591:../Dave/Generated/UCPROBE/lib_mem.c **** *
1592:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1593:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkGet() should be used instead.
1594:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1595:../Dave/Generated/UCPROBE/lib_mem.c **** */
1596:../Dave/Generated/UCPROBE/lib_mem.c **** 
1597:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1598:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_PoolBlkGet (MEM_POOL    *p_pool,
1599:../Dave/Generated/UCPROBE/lib_mem.c ****                        CPU_SIZE_T   size,
1600:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_ERR     *p_err)
1601:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1868              	 .loc 1 1601 0
 1869              	 .cfi_startproc
 1870              	 
 1871              	 
 1872 0000 80B5     	 push {r7,lr}
 1873              	.LCFI84:
 1874              	 .cfi_def_cfa_offset 8
 1875              	 .cfi_offset 7,-8
 1876              	 .cfi_offset 14,-4
 1877 0002 86B0     	 sub sp,sp,#24
 1878              	.LCFI85:
 1879              	 .cfi_def_cfa_offset 32
 1880 0004 00AF     	 add r7,sp,#0
 1881              	.LCFI86:
 1882              	 .cfi_def_cfa_register 7
 1883 0006 F860     	 str r0,[r7,#12]
 1884 0008 B960     	 str r1,[r7,#8]
 1885 000a 7A60     	 str r2,[r7,#4]
1602:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *p_blk;
1603:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1886              	 .loc 1 1603 0
 1887 000c 0023     	 movs r3,#0
 1888 000e 3B61     	 str r3,[r7,#16]
1604:../Dave/Generated/UCPROBE/lib_mem.c **** 
1605:../Dave/Generated/UCPROBE/lib_mem.c **** 
1606:../Dave/Generated/UCPROBE/lib_mem.c ****    (void)&size;                                                 /* Prevent possible 'variable unuse
1607:../Dave/Generated/UCPROBE/lib_mem.c **** 
1608:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE MEM POOL
1609:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Validate err ptr.               
1610:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
1611:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1612:../Dave/Generated/UCPROBE/lib_mem.c **** 
1613:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate pool ptr.              
1614:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1615:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1616:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1617:../Dave/Generated/UCPROBE/lib_mem.c **** 
1618:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Validate req'd size as non-NULL.
1619:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1620:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1621:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1622:../Dave/Generated/UCPROBE/lib_mem.c **** 
1623:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size > p_pool->BlkSize) {                               /* Validate req'd size <= mem pool 
1624:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
1625:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1626:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1627:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1628:../Dave/Generated/UCPROBE/lib_mem.c **** 
1629:../Dave/Generated/UCPROBE/lib_mem.c **** 
1630:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* -------------- GET MEM BLK FROM 
1631:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = DEF_NULL;
 1889              	 .loc 1 1631 0
 1890 0010 0023     	 movs r3,#0
 1891 0012 7B61     	 str r3,[r7,#20]
1632:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1892              	 .loc 1 1632 0
 1893 0014 FFF7FEFF 	 bl CPU_SR_Save
 1894 0018 3861     	 str r0,[r7,#16]
1633:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreeTblIx > 0u) {
 1895              	 .loc 1 1633 0
 1896 001a FB68     	 ldr r3,[r7,#12]
 1897 001c 5B69     	 ldr r3,[r3,#20]
 1898 001e 002B     	 cmp r3,#0
 1899 0020 14D0     	 beq .L117
1634:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTblIx                     -= 1u;
 1900              	 .loc 1 1634 0
 1901 0022 FB68     	 ldr r3,[r7,#12]
 1902 0024 5B69     	 ldr r3,[r3,#20]
 1903 0026 5A1E     	 subs r2,r3,#1
 1904 0028 FB68     	 ldr r3,[r7,#12]
 1905 002a 5A61     	 str r2,[r3,#20]
1635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk                                     = p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx];
 1906              	 .loc 1 1635 0
 1907 002c FB68     	 ldr r3,[r7,#12]
 1908 002e 1A69     	 ldr r2,[r3,#16]
 1909 0030 FB68     	 ldr r3,[r7,#12]
 1910 0032 5B69     	 ldr r3,[r3,#20]
 1911 0034 9B00     	 lsls r3,r3,#2
 1912 0036 1344     	 add r3,r3,r2
 1913 0038 1B68     	 ldr r3,[r3]
 1914 003a 7B61     	 str r3,[r7,#20]
1636:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = DEF_NULL;
 1915              	 .loc 1 1636 0
 1916 003c FB68     	 ldr r3,[r7,#12]
 1917 003e 1A69     	 ldr r2,[r3,#16]
 1918 0040 FB68     	 ldr r3,[r7,#12]
 1919 0042 5B69     	 ldr r3,[r3,#20]
 1920 0044 9B00     	 lsls r3,r3,#2
 1921 0046 1344     	 add r3,r3,r2
 1922 0048 0022     	 movs r2,#0
 1923 004a 1A60     	 str r2,[r3]
 1924              	.L117:
1637:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1638:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1925              	 .loc 1 1638 0
 1926 004c 3869     	 ldr r0,[r7,#16]
 1927 004e FFF7FEFF 	 bl CPU_SR_Restore
1639:../Dave/Generated/UCPROBE/lib_mem.c **** 
1640:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
 1928              	 .loc 1 1640 0
 1929 0052 7B69     	 ldr r3,[r7,#20]
 1930 0054 002B     	 cmp r3,#0
 1931 0056 04D1     	 bne .L118
1641:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_EMPTY;
 1932              	 .loc 1 1641 0
 1933 0058 7B68     	 ldr r3,[r7,#4]
 1934 005a 42F2DE72 	 movw r2,#10206
 1935 005e 1A80     	 strh r2,[r3]
 1936 0060 03E0     	 b .L119
 1937              	.L118:
1642:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
1643:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
 1938              	 .loc 1 1643 0
 1939 0062 7B68     	 ldr r3,[r7,#4]
 1940 0064 42F21072 	 movw r2,#10000
 1941 0068 1A80     	 strh r2,[r3]
 1942              	.L119:
1644:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1645:../Dave/Generated/UCPROBE/lib_mem.c **** 
1646:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 1943              	 .loc 1 1646 0
 1944 006a 7B69     	 ldr r3,[r7,#20]
1647:../Dave/Generated/UCPROBE/lib_mem.c **** }
 1945              	 .loc 1 1647 0
 1946 006c 1846     	 mov r0,r3
 1947 006e 1837     	 adds r7,r7,#24
 1948              	.LCFI87:
 1949              	 .cfi_def_cfa_offset 8
 1950 0070 BD46     	 mov sp,r7
 1951              	.LCFI88:
 1952              	 .cfi_def_cfa_register 13
 1953              	 
 1954 0072 80BD     	 pop {r7,pc}
 1955              	 .cfi_endproc
 1956              	.LFE16:
 1958              	 .section .text.Mem_PoolBlkFree,"ax",%progbits
 1959              	 .align 2
 1960              	 .global Mem_PoolBlkFree
 1961              	 .thumb
 1962              	 .thumb_func
 1964              	Mem_PoolBlkFree:
 1965              	.LFB17:
1648:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1649:../Dave/Generated/UCPROBE/lib_mem.c **** 
1650:../Dave/Generated/UCPROBE/lib_mem.c **** 
1651:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1652:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1653:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_PoolBlkFree()
1654:../Dave/Generated/UCPROBE/lib_mem.c **** *
1655:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Free a memory block to memory pool.
1656:../Dave/Generated/UCPROBE/lib_mem.c **** *
1657:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to memory pool to free memory block.
1658:../Dave/Generated/UCPROBE/lib_mem.c **** *
1659:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_blk   Pointer to memory block address to free.
1660:../Dave/Generated/UCPROBE/lib_mem.c **** *
1661:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1662:../Dave/Generated/UCPROBE/lib_mem.c **** *
1663:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                        Operation was successful.
1664:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                    Argument 'p_pool'/'p_blk' passe
1665:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                       a NULL pointer.
1666:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_ADDR            Invalid memory block address.
1667:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL            Memory block address al
1668:../Dave/Generated/UCPROBE/lib_mem.c **** *                                                                        in memory pool.
1669:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_FULL                   Pool is full.
1670:../Dave/Generated/UCPROBE/lib_mem.c **** *
1671:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
1672:../Dave/Generated/UCPROBE/lib_mem.c **** *
1673:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1674:../Dave/Generated/UCPROBE/lib_mem.c **** *
1675:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1676:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkFree() should be used instead.
1677:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1678:../Dave/Generated/UCPROBE/lib_mem.c **** */
1679:../Dave/Generated/UCPROBE/lib_mem.c **** 
1680:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1681:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_PoolBlkFree (MEM_POOL  *p_pool,
1682:../Dave/Generated/UCPROBE/lib_mem.c ****                        void      *p_blk,
1683:../Dave/Generated/UCPROBE/lib_mem.c ****                        LIB_ERR   *p_err)
1684:../Dave/Generated/UCPROBE/lib_mem.c **** {
 1966              	 .loc 1 1684 0
 1967              	 .cfi_startproc
 1968              	 
 1969              	 
 1970 0000 80B5     	 push {r7,lr}
 1971              	.LCFI89:
 1972              	 .cfi_def_cfa_offset 8
 1973              	 .cfi_offset 7,-8
 1974              	 .cfi_offset 14,-4
 1975 0002 86B0     	 sub sp,sp,#24
 1976              	.LCFI90:
 1977              	 .cfi_def_cfa_offset 32
 1978 0004 00AF     	 add r7,sp,#0
 1979              	.LCFI91:
 1980              	 .cfi_def_cfa_register 7
 1981 0006 F860     	 str r0,[r7,#12]
 1982 0008 B960     	 str r1,[r7,#8]
 1983 000a 7A60     	 str r2,[r7,#4]
1685:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1686:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   tbl_ix;
1687:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_BOOLEAN  addr_valid;
1688:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1689:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 1984              	 .loc 1 1689 0
 1985 000c 0023     	 movs r3,#0
 1986 000e 7B61     	 str r3,[r7,#20]
1690:../Dave/Generated/UCPROBE/lib_mem.c **** 
1691:../Dave/Generated/UCPROBE/lib_mem.c **** 
1692:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE MEM POOL
1693:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1694:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1695:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1696:../Dave/Generated/UCPROBE/lib_mem.c **** 
1697:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate mem ptrs.              
1698:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1699:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1700:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1701:../Dave/Generated/UCPROBE/lib_mem.c **** 
1702:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
1703:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1704:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1705:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1706:../Dave/Generated/UCPROBE/lib_mem.c **** 
1707:../Dave/Generated/UCPROBE/lib_mem.c ****     addr_valid = Mem_PoolBlkIsValidAddr(p_pool, p_blk);         /* Validate mem blk as valid pool b
1708:../Dave/Generated/UCPROBE/lib_mem.c ****     if (addr_valid != DEF_OK) {
1709:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ADDR;
1710:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
1711:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1712:../Dave/Generated/UCPROBE/lib_mem.c **** 
1713:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();                                       /* Make sure blk isn't already in f
1714:../Dave/Generated/UCPROBE/lib_mem.c ****     for (tbl_ix = 0u; tbl_ix < p_pool->BlkNbr; tbl_ix++) {
1715:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkFreeTbl[tbl_ix] == p_blk) {
1716:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
1717:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL;
1718:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
1719:../Dave/Generated/UCPROBE/lib_mem.c ****         }
1720:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1721:../Dave/Generated/UCPROBE/lib_mem.c **** #else                                                           /* Double-free possibility if not i
1722:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1987              	 .loc 1 1722 0
 1988 0010 FFF7FEFF 	 bl CPU_SR_Save
 1989 0014 7861     	 str r0,[r7,#20]
1723:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1724:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- FREE MEM BLK TO 
1725:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreeTblIx >= p_pool->BlkNbr) {
 1990              	 .loc 1 1725 0
 1991 0016 FB68     	 ldr r3,[r7,#12]
 1992 0018 5A69     	 ldr r2,[r3,#20]
 1993 001a FB68     	 ldr r3,[r7,#12]
 1994 001c 9B68     	 ldr r3,[r3,#8]
 1995 001e 9A42     	 cmp r2,r3
 1996 0020 07D3     	 bcc .L122
1726:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 1997              	 .loc 1 1726 0
 1998 0022 7869     	 ldr r0,[r7,#20]
 1999 0024 FFF7FEFF 	 bl CPU_SR_Restore
1727:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_POOL_FULL;
 2000              	 .loc 1 1727 0
 2001 0028 7B68     	 ldr r3,[r7,#4]
 2002 002a 42F2DD72 	 movw r2,#10205
 2003 002e 1A80     	 strh r2,[r3]
1728:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
 2004              	 .loc 1 1728 0
 2005 0030 13E0     	 b .L121
 2006              	.L122:
1729:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1730:../Dave/Generated/UCPROBE/lib_mem.c **** 
1731:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTbl[p_pool->BlkFreeTblIx]  = p_blk;
 2007              	 .loc 1 1731 0
 2008 0032 FB68     	 ldr r3,[r7,#12]
 2009 0034 1A69     	 ldr r2,[r3,#16]
 2010 0036 FB68     	 ldr r3,[r7,#12]
 2011 0038 5B69     	 ldr r3,[r3,#20]
 2012 003a 9B00     	 lsls r3,r3,#2
 2013 003c 1344     	 add r3,r3,r2
 2014 003e BA68     	 ldr r2,[r7,#8]
 2015 0040 1A60     	 str r2,[r3]
1732:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreeTblIx                     += 1u;
 2016              	 .loc 1 1732 0
 2017 0042 FB68     	 ldr r3,[r7,#12]
 2018 0044 5B69     	 ldr r3,[r3,#20]
 2019 0046 5A1C     	 adds r2,r3,#1
 2020 0048 FB68     	 ldr r3,[r7,#12]
 2021 004a 5A61     	 str r2,[r3,#20]
1733:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2022              	 .loc 1 1733 0
 2023 004c 7869     	 ldr r0,[r7,#20]
 2024 004e FFF7FEFF 	 bl CPU_SR_Restore
1734:../Dave/Generated/UCPROBE/lib_mem.c **** 
1735:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2025              	 .loc 1 1735 0
 2026 0052 7B68     	 ldr r3,[r7,#4]
 2027 0054 42F21072 	 movw r2,#10000
 2028 0058 1A80     	 strh r2,[r3]
 2029              	.L121:
1736:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2030              	 .loc 1 1736 0
 2031 005a 1837     	 adds r7,r7,#24
 2032              	.LCFI92:
 2033              	 .cfi_def_cfa_offset 8
 2034 005c BD46     	 mov sp,r7
 2035              	.LCFI93:
 2036              	 .cfi_def_cfa_register 13
 2037              	 
 2038 005e 80BD     	 pop {r7,pc}
 2039              	 .cfi_endproc
 2040              	.LFE17:
 2042              	 .section .text.Mem_PoolBlkGetNbrAvail,"ax",%progbits
 2043              	 .align 2
 2044              	 .global Mem_PoolBlkGetNbrAvail
 2045              	 .thumb
 2046              	 .thumb_func
 2048              	Mem_PoolBlkGetNbrAvail:
 2049              	.LFB18:
1737:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1738:../Dave/Generated/UCPROBE/lib_mem.c **** 
1739:../Dave/Generated/UCPROBE/lib_mem.c **** 
1740:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1741:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1742:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_PoolBlkGetNbrAvail()
1743:../Dave/Generated/UCPROBE/lib_mem.c **** *
1744:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Get memory pool's remaining number of blocks available to allocate.
1745:../Dave/Generated/UCPROBE/lib_mem.c **** *
1746:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool   Pointer to a memory pool structure.
1747:../Dave/Generated/UCPROBE/lib_mem.c **** *
1748:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err    Pointer to variable that will receive the return error code from this func
1749:../Dave/Generated/UCPROBE/lib_mem.c **** *
1750:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Operation was successful.
1751:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'p_pool' passed a NULL poi
1752:../Dave/Generated/UCPROBE/lib_mem.c **** *
1753:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Remaining memory pool blocks,   if NO error(s).
1754:../Dave/Generated/UCPROBE/lib_mem.c **** *
1755:../Dave/Generated/UCPROBE/lib_mem.c **** *               0,                              otherwise.
1756:../Dave/Generated/UCPROBE/lib_mem.c **** *
1757:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1758:../Dave/Generated/UCPROBE/lib_mem.c **** *
1759:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function is DEPRECATED and will be removed in a future version of this pro
1760:../Dave/Generated/UCPROBE/lib_mem.c **** *                   Mem_DynPoolBlkNbrAvailGet() should be used instead.
1761:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1762:../Dave/Generated/UCPROBE/lib_mem.c **** */
1763:../Dave/Generated/UCPROBE/lib_mem.c **** 
1764:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1765:../Dave/Generated/UCPROBE/lib_mem.c **** MEM_POOL_BLK_QTY  Mem_PoolBlkGetNbrAvail (MEM_POOL  *p_pool,
1766:../Dave/Generated/UCPROBE/lib_mem.c ****                                           LIB_ERR   *p_err)
1767:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2050              	 .loc 1 1767 0
 2051              	 .cfi_startproc
 2052              	 
 2053              	 
 2054 0000 80B5     	 push {r7,lr}
 2055              	.LCFI94:
 2056              	 .cfi_def_cfa_offset 8
 2057              	 .cfi_offset 7,-8
 2058              	 .cfi_offset 14,-4
 2059 0002 84B0     	 sub sp,sp,#16
 2060              	.LCFI95:
 2061              	 .cfi_def_cfa_offset 24
 2062 0004 00AF     	 add r7,sp,#0
 2063              	.LCFI96:
 2064              	 .cfi_def_cfa_register 7
 2065 0006 7860     	 str r0,[r7,#4]
 2066 0008 3960     	 str r1,[r7]
1768:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  nbr_avail;
1769:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2067              	 .loc 1 1769 0
 2068 000a 0023     	 movs r3,#0
 2069 000c FB60     	 str r3,[r7,#12]
1770:../Dave/Generated/UCPROBE/lib_mem.c **** 
1771:../Dave/Generated/UCPROBE/lib_mem.c **** 
1772:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1773:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- VALIDATE RTN ERR
1774:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {
1775:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(0u);
1776:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1777:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ---------------- VALIDATE MEM PO
1778:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Validate mem ptr.               
1779:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err =  LIB_MEM_ERR_NULL_PTR;
1780:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
1781:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1782:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1783:../Dave/Generated/UCPROBE/lib_mem.c **** 
1784:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2070              	 .loc 1 1784 0
 2071 000e FFF7FEFF 	 bl CPU_SR_Save
 2072 0012 F860     	 str r0,[r7,#12]
1785:../Dave/Generated/UCPROBE/lib_mem.c ****     nbr_avail = p_pool->BlkFreeTblIx;
 2073              	 .loc 1 1785 0
 2074 0014 7B68     	 ldr r3,[r7,#4]
 2075 0016 5B69     	 ldr r3,[r3,#20]
 2076 0018 BB60     	 str r3,[r7,#8]
1786:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2077              	 .loc 1 1786 0
 2078 001a F868     	 ldr r0,[r7,#12]
 2079 001c FFF7FEFF 	 bl CPU_SR_Restore
1787:../Dave/Generated/UCPROBE/lib_mem.c **** 
1788:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2080              	 .loc 1 1788 0
 2081 0020 3B68     	 ldr r3,[r7]
 2082 0022 42F21072 	 movw r2,#10000
 2083 0026 1A80     	 strh r2,[r3]
1789:../Dave/Generated/UCPROBE/lib_mem.c **** 
1790:../Dave/Generated/UCPROBE/lib_mem.c ****     return (nbr_avail);
 2084              	 .loc 1 1790 0
 2085 0028 BB68     	 ldr r3,[r7,#8]
1791:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2086              	 .loc 1 1791 0
 2087 002a 1846     	 mov r0,r3
 2088 002c 1037     	 adds r7,r7,#16
 2089              	.LCFI97:
 2090              	 .cfi_def_cfa_offset 8
 2091 002e BD46     	 mov sp,r7
 2092              	.LCFI98:
 2093              	 .cfi_def_cfa_register 13
 2094              	 
 2095 0030 80BD     	 pop {r7,pc}
 2096              	 .cfi_endproc
 2097              	.LFE18:
 2099 0032 00BF     	 .section .text.Mem_DynPoolCreate,"ax",%progbits
 2100              	 .align 2
 2101              	 .global Mem_DynPoolCreate
 2102              	 .thumb
 2103              	 .thumb_func
 2105              	Mem_DynPoolCreate:
 2106              	.LFB19:
1792:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1793:../Dave/Generated/UCPROBE/lib_mem.c **** 
1794:../Dave/Generated/UCPROBE/lib_mem.c **** 
1795:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1796:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1797:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_DynPoolCreate()
1798:../Dave/Generated/UCPROBE/lib_mem.c **** *
1799:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool.
1800:../Dave/Generated/UCPROBE/lib_mem.c **** *
1801:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to pool name.
1802:../Dave/Generated/UCPROBE/lib_mem.c **** *
1803:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool          Pointer to pool data.
1804:../Dave/Generated/UCPROBE/lib_mem.c **** *
1805:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will be allocated
1806:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1807:../Dave/Generated/UCPROBE/lib_mem.c **** *
1808:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size of memory block to allocate from pool, in bytes. See Note #1.
1809:../Dave/Generated/UCPROBE/lib_mem.c **** *
1810:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Required alignment of memory block, in bytes. MUST be a power of 2.
1811:../Dave/Generated/UCPROBE/lib_mem.c **** *
1812:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init    Initial number of elements to be allocated in pool.
1813:../Dave/Generated/UCPROBE/lib_mem.c **** *
1814:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max     Maximum number of elements that can be allocated from this pool. Se
1815:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_BLK_QTY_UNLIMITED if no limit.
1816:../Dave/Generated/UCPROBE/lib_mem.c **** *
1817:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1818:../Dave/Generated/UCPROBE/lib_mem.c **** *
1819:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1820:../Dave/Generated/UCPROBE/lib_mem.c **** *
1821:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   --------------------RETURNED BY Mem_DynPoolCreateInternal()----
1822:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN   Invalid requested block alignme
1823:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid requested block size.
1824:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR     Invalid requested block quantit
1825:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Pool data pointer NULL.
1826:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1827:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1828:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1829:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1830:../Dave/Generated/UCPROBE/lib_mem.c **** *
1831:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
1832:../Dave/Generated/UCPROBE/lib_mem.c **** *
1833:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1834:../Dave/Generated/UCPROBE/lib_mem.c **** *
1835:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
1836:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
1837:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1838:../Dave/Generated/UCPROBE/lib_mem.c **** */
1839:../Dave/Generated/UCPROBE/lib_mem.c **** 
1840:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolCreate (const  CPU_CHAR      *p_name,
1841:../Dave/Generated/UCPROBE/lib_mem.c ****                                 MEM_DYN_POOL  *p_pool,
1842:../Dave/Generated/UCPROBE/lib_mem.c ****                                 MEM_SEG       *p_seg,
1843:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_size,
1844:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_align,
1845:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_qty_init,
1846:../Dave/Generated/UCPROBE/lib_mem.c ****                                 CPU_SIZE_T     blk_qty_max,
1847:../Dave/Generated/UCPROBE/lib_mem.c ****                                 LIB_ERR       *p_err)
1848:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2107              	 .loc 1 1848 0
 2108              	 .cfi_startproc
 2109              	 
 2110              	 
 2111 0000 80B5     	 push {r7,lr}
 2112              	.LCFI99:
 2113              	 .cfi_def_cfa_offset 8
 2114              	 .cfi_offset 7,-8
 2115              	 .cfi_offset 14,-4
 2116 0002 8AB0     	 sub sp,sp,#40
 2117              	.LCFI100:
 2118              	 .cfi_def_cfa_offset 48
 2119 0004 06AF     	 add r7,sp,#24
 2120              	.LCFI101:
 2121              	 .cfi_def_cfa 7,24
 2122 0006 F860     	 str r0,[r7,#12]
 2123 0008 B960     	 str r1,[r7,#8]
 2124 000a 7A60     	 str r2,[r7,#4]
 2125 000c 3B60     	 str r3,[r7]
1849:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2126              	 .loc 1 1849 0
 2127 000e 7B68     	 ldr r3,[r7,#4]
 2128 0010 002B     	 cmp r3,#0
 2129 0012 01D1     	 bne .L127
1850:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1851:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 2130              	 .loc 1 1851 0
 2131 0014 0A4B     	 ldr r3,.L128
 2132 0016 7B60     	 str r3,[r7,#4]
 2133              	.L127:
1852:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1853:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1854:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1855:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1856:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1857:../Dave/Generated/UCPROBE/lib_mem.c **** 
1858:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_DynPoolCreateInternal(p_name,
 2134              	 .loc 1 1858 0
 2135 0018 BB69     	 ldr r3,[r7,#24]
 2136 001a 0093     	 str r3,[sp]
 2137 001c 0123     	 movs r3,#1
 2138 001e 0193     	 str r3,[sp,#4]
 2139 0020 FB69     	 ldr r3,[r7,#28]
 2140 0022 0293     	 str r3,[sp,#8]
 2141 0024 3B6A     	 ldr r3,[r7,#32]
 2142 0026 0393     	 str r3,[sp,#12]
 2143 0028 7B6A     	 ldr r3,[r7,#36]
 2144 002a 0493     	 str r3,[sp,#16]
 2145 002c F868     	 ldr r0,[r7,#12]
 2146 002e B968     	 ldr r1,[r7,#8]
 2147 0030 7A68     	 ldr r2,[r7,#4]
 2148 0032 3B68     	 ldr r3,[r7]
 2149 0034 FFF7FEFF 	 bl Mem_DynPoolCreateInternal
1859:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_pool,
1860:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
1861:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_size,
1862:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_align,
1863:../Dave/Generated/UCPROBE/lib_mem.c ****                               LIB_MEM_PADDING_ALIGN_NONE,
1864:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_init,
1865:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_max,
1866:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
1867:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2150              	 .loc 1 1867 0
 2151 0038 1037     	 adds r7,r7,#16
 2152              	.LCFI102:
 2153              	 .cfi_def_cfa_offset 8
 2154 003a BD46     	 mov sp,r7
 2155              	.LCFI103:
 2156              	 .cfi_def_cfa_register 13
 2157              	 
 2158 003c 80BD     	 pop {r7,pc}
 2159              	.L129:
 2160 003e 00BF     	 .align 2
 2161              	.L128:
 2162 0040 00000000 	 .word Mem_SegHeap
 2163              	 .cfi_endproc
 2164              	.LFE19:
 2166              	 .section .text.Mem_DynPoolCreateHW,"ax",%progbits
 2167              	 .align 2
 2168              	 .global Mem_DynPoolCreateHW
 2169              	 .thumb
 2170              	 .thumb_func
 2172              	Mem_DynPoolCreateHW:
 2173              	.LFB20:
1868:../Dave/Generated/UCPROBE/lib_mem.c **** 
1869:../Dave/Generated/UCPROBE/lib_mem.c **** 
1870:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1871:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1872:../Dave/Generated/UCPROBE/lib_mem.c **** *                                        Mem_DynPoolCreateHW()
1873:../Dave/Generated/UCPROBE/lib_mem.c **** *
1874:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool. Memory blocks will be padded according to memory seg
1875:../Dave/Generated/UCPROBE/lib_mem.c **** *               properties.
1876:../Dave/Generated/UCPROBE/lib_mem.c **** *
1877:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to pool name.
1878:../Dave/Generated/UCPROBE/lib_mem.c **** *
1879:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool          Pointer to pool data.
1880:../Dave/Generated/UCPROBE/lib_mem.c **** *
1881:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory. Will allocate fro
1882:../Dave/Generated/UCPROBE/lib_mem.c **** *                               general-purpose heap if null.
1883:../Dave/Generated/UCPROBE/lib_mem.c **** *
1884:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size        Size of memory block to allocate from pool, in bytes. See Note #1.
1885:../Dave/Generated/UCPROBE/lib_mem.c **** *
1886:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align       Required alignment of memory block, in bytes. MUST be a power of 2.
1887:../Dave/Generated/UCPROBE/lib_mem.c **** *
1888:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init    Initial number of elements to be allocated in pool.
1889:../Dave/Generated/UCPROBE/lib_mem.c **** *
1890:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max     Maximum number of elements that can be allocated from this pool. Se
1891:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_BLK_QTY_UNLIMITED if no limit.
1892:../Dave/Generated/UCPROBE/lib_mem.c **** *
1893:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
1894:../Dave/Generated/UCPROBE/lib_mem.c **** *
1895:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
1896:../Dave/Generated/UCPROBE/lib_mem.c **** *
1897:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   -------------------RETURNED BY Mem_DynPoolCreateInternal()-----
1898:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
1899:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
1900:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
1901:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
1902:../Dave/Generated/UCPROBE/lib_mem.c **** *
1903:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
1904:../Dave/Generated/UCPROBE/lib_mem.c **** *
1905:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1906:../Dave/Generated/UCPROBE/lib_mem.c **** *
1907:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
1908:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
1909:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1910:../Dave/Generated/UCPROBE/lib_mem.c **** */
1911:../Dave/Generated/UCPROBE/lib_mem.c **** 
1912:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolCreateHW (const  CPU_CHAR      *p_name,
1913:../Dave/Generated/UCPROBE/lib_mem.c ****                                   MEM_DYN_POOL  *p_pool,
1914:../Dave/Generated/UCPROBE/lib_mem.c ****                                   MEM_SEG       *p_seg,
1915:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_size,
1916:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_align,
1917:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_qty_init,
1918:../Dave/Generated/UCPROBE/lib_mem.c ****                                   CPU_SIZE_T     blk_qty_max,
1919:../Dave/Generated/UCPROBE/lib_mem.c ****                                   LIB_ERR       *p_err)
1920:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2174              	 .loc 1 1920 0
 2175              	 .cfi_startproc
 2176              	 
 2177              	 
 2178 0000 80B5     	 push {r7,lr}
 2179              	.LCFI104:
 2180              	 .cfi_def_cfa_offset 8
 2181              	 .cfi_offset 7,-8
 2182              	 .cfi_offset 14,-4
 2183 0002 8AB0     	 sub sp,sp,#40
 2184              	.LCFI105:
 2185              	 .cfi_def_cfa_offset 48
 2186 0004 06AF     	 add r7,sp,#24
 2187              	.LCFI106:
 2188              	 .cfi_def_cfa 7,24
 2189 0006 F860     	 str r0,[r7,#12]
 2190 0008 B960     	 str r1,[r7,#8]
 2191 000a 7A60     	 str r2,[r7,#4]
 2192 000c 3B60     	 str r3,[r7]
1921:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_seg == DEF_NULL) {                                    /* Alloc from heap if p_seg is null
 2193              	 .loc 1 1921 0
 2194 000e 7B68     	 ldr r3,[r7,#4]
 2195 0010 002B     	 cmp r3,#0
 2196 0012 01D1     	 bne .L131
1922:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_HEAP_SIZE > 0u)
1923:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = &Mem_SegHeap;
 2197              	 .loc 1 1923 0
 2198 0014 0A4B     	 ldr r3,.L132
 2199 0016 7B60     	 str r3,[r7,#4]
 2200              	.L131:
1924:../Dave/Generated/UCPROBE/lib_mem.c **** #else
1925:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1926:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1927:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1928:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1929:../Dave/Generated/UCPROBE/lib_mem.c **** 
1930:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_DynPoolCreateInternal(p_name,
 2201              	 .loc 1 1930 0
 2202 0018 7B68     	 ldr r3,[r7,#4]
 2203 001a 1B69     	 ldr r3,[r3,#16]
 2204 001c BA69     	 ldr r2,[r7,#24]
 2205 001e 0092     	 str r2,[sp]
 2206 0020 0193     	 str r3,[sp,#4]
 2207 0022 FB69     	 ldr r3,[r7,#28]
 2208 0024 0293     	 str r3,[sp,#8]
 2209 0026 3B6A     	 ldr r3,[r7,#32]
 2210 0028 0393     	 str r3,[sp,#12]
 2211 002a 7B6A     	 ldr r3,[r7,#36]
 2212 002c 0493     	 str r3,[sp,#16]
 2213 002e F868     	 ldr r0,[r7,#12]
 2214 0030 B968     	 ldr r1,[r7,#8]
 2215 0032 7A68     	 ldr r2,[r7,#4]
 2216 0034 3B68     	 ldr r3,[r7]
 2217 0036 FFF7FEFF 	 bl Mem_DynPoolCreateInternal
1931:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_pool,
1932:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
1933:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_size,
1934:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_align,
1935:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg->PaddingAlign,
1936:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_init,
1937:../Dave/Generated/UCPROBE/lib_mem.c ****                               blk_qty_max,
1938:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
1939:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2218              	 .loc 1 1939 0
 2219 003a 1037     	 adds r7,r7,#16
 2220              	.LCFI107:
 2221              	 .cfi_def_cfa_offset 8
 2222 003c BD46     	 mov sp,r7
 2223              	.LCFI108:
 2224              	 .cfi_def_cfa_register 13
 2225              	 
 2226 003e 80BD     	 pop {r7,pc}
 2227              	.L133:
 2228              	 .align 2
 2229              	.L132:
 2230 0040 00000000 	 .word Mem_SegHeap
 2231              	 .cfi_endproc
 2232              	.LFE20:
 2234              	 .section .text.Mem_DynPoolBlkGet,"ax",%progbits
 2235              	 .align 2
 2236              	 .global Mem_DynPoolBlkGet
 2237              	 .thumb
 2238              	 .thumb_func
 2240              	Mem_DynPoolBlkGet:
 2241              	.LFB21:
1940:../Dave/Generated/UCPROBE/lib_mem.c **** 
1941:../Dave/Generated/UCPROBE/lib_mem.c **** 
1942:../Dave/Generated/UCPROBE/lib_mem.c **** /*
1943:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1944:../Dave/Generated/UCPROBE/lib_mem.c **** *                                          Mem_DynPoolBlkGet()
1945:../Dave/Generated/UCPROBE/lib_mem.c **** *
1946:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets a memory block from specified pool, growing it if needed.
1947:../Dave/Generated/UCPROBE/lib_mem.c **** *
1948:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
1949:../Dave/Generated/UCPROBE/lib_mem.c **** *
1950:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
1951:../Dave/Generated/UCPROBE/lib_mem.c **** *
1952:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                    Operation was successful.
1953:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                Pool data pointer NULL.
1954:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_EMPTY              Pools is empty.
1955:../Dave/Generated/UCPROBE/lib_mem.c **** *
1956:../Dave/Generated/UCPROBE/lib_mem.c **** *                           ----------------------RETURNED BY Mem_SegAllocInternal()---------------
1957:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_ALIGN       Invalid memory block alignment requ
1958:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_INVALID_MEM_SIZE        Invalid memory block size specified
1959:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR                Error or segment data pointer NULL.
1960:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF                 Allocation would overflow memory se
1961:../Dave/Generated/UCPROBE/lib_mem.c **** *
1962:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory block, if successful.
1963:../Dave/Generated/UCPROBE/lib_mem.c **** *
1964:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
1965:../Dave/Generated/UCPROBE/lib_mem.c **** *
1966:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
1967:../Dave/Generated/UCPROBE/lib_mem.c **** *
1968:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
1969:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
1970:../Dave/Generated/UCPROBE/lib_mem.c **** */
1971:../Dave/Generated/UCPROBE/lib_mem.c **** 
1972:../Dave/Generated/UCPROBE/lib_mem.c **** void  *Mem_DynPoolBlkGet (MEM_DYN_POOL  *p_pool,
1973:../Dave/Generated/UCPROBE/lib_mem.c ****                           LIB_ERR       *p_err)
1974:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2242              	 .loc 1 1974 0
 2243              	 .cfi_startproc
 2244              	 
 2245              	 
 2246 0000 90B5     	 push {r4,r7,lr}
 2247              	.LCFI109:
 2248              	 .cfi_def_cfa_offset 12
 2249              	 .cfi_offset 4,-12
 2250              	 .cfi_offset 7,-8
 2251              	 .cfi_offset 14,-4
 2252 0002 8BB0     	 sub sp,sp,#44
 2253              	.LCFI110:
 2254              	 .cfi_def_cfa_offset 56
 2255 0004 04AF     	 add r7,sp,#16
 2256              	.LCFI111:
 2257              	 .cfi_def_cfa 7,40
 2258 0006 7860     	 str r0,[r7,#4]
 2259 0008 3960     	 str r1,[r7]
1975:../Dave/Generated/UCPROBE/lib_mem.c ****            void      *p_blk;
1976:../Dave/Generated/UCPROBE/lib_mem.c ****     const  CPU_CHAR  *p_pool_name;
1977:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2260              	 .loc 1 1977 0
 2261 000a 0023     	 movs r3,#0
 2262 000c 7B61     	 str r3,[r7,#20]
1978:../Dave/Generated/UCPROBE/lib_mem.c **** 
1979:../Dave/Generated/UCPROBE/lib_mem.c **** 
1980:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1981:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
1982:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
1983:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1984:../Dave/Generated/UCPROBE/lib_mem.c **** 
1985:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
1986:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
1987:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
1988:../Dave/Generated/UCPROBE/lib_mem.c ****     }
1989:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
1990:../Dave/Generated/UCPROBE/lib_mem.c **** 
1991:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Ensure pool is not empty if qty 
1992:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
 2263              	 .loc 1 1992 0
 2264 000e 7B68     	 ldr r3,[r7,#4]
 2265 0010 5B69     	 ldr r3,[r3,#20]
 2266 0012 002B     	 cmp r3,#0
 2267 0014 19D0     	 beq .L135
1993:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 2268              	 .loc 1 1993 0
 2269 0016 FFF7FEFF 	 bl CPU_SR_Save
 2270 001a 7861     	 str r0,[r7,#20]
1994:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkAllocCnt >= p_pool->BlkQtyMax) {
 2271              	 .loc 1 1994 0
 2272 001c 7B68     	 ldr r3,[r7,#4]
 2273 001e 9A69     	 ldr r2,[r3,#24]
 2274 0020 7B68     	 ldr r3,[r7,#4]
 2275 0022 5B69     	 ldr r3,[r3,#20]
 2276 0024 9A42     	 cmp r2,r3
 2277 0026 08D3     	 bcc .L136
1995:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
 2278              	 .loc 1 1995 0
 2279 0028 7869     	 ldr r0,[r7,#20]
 2280 002a FFF7FEFF 	 bl CPU_SR_Restore
1996:../Dave/Generated/UCPROBE/lib_mem.c **** 
1997:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_POOL_EMPTY;
 2281              	 .loc 1 1997 0
 2282 002e 3B68     	 ldr r3,[r7]
 2283 0030 42F2DE72 	 movw r2,#10206
 2284 0034 1A80     	 strh r2,[r3]
1998:../Dave/Generated/UCPROBE/lib_mem.c ****             return (DEF_NULL);
 2285              	 .loc 1 1998 0
 2286 0036 0023     	 movs r3,#0
 2287 0038 3EE0     	 b .L137
 2288              	.L136:
1999:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2000:../Dave/Generated/UCPROBE/lib_mem.c **** 
2001:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkAllocCnt++;
 2289              	 .loc 1 2001 0
 2290 003a 7B68     	 ldr r3,[r7,#4]
 2291 003c 9B69     	 ldr r3,[r3,#24]
 2292 003e 5A1C     	 adds r2,r3,#1
 2293 0040 7B68     	 ldr r3,[r7,#4]
 2294 0042 9A61     	 str r2,[r3,#24]
2002:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2295              	 .loc 1 2002 0
 2296 0044 7869     	 ldr r0,[r7,#20]
 2297 0046 FFF7FEFF 	 bl CPU_SR_Restore
 2298              	.L135:
2003:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2004:../Dave/Generated/UCPROBE/lib_mem.c **** 
2005:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------------- ALLOC FROM FREE 
2006:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2299              	 .loc 1 2006 0
 2300 004a FFF7FEFF 	 bl CPU_SR_Save
 2301 004e 7861     	 str r0,[r7,#20]
2007:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkFreePtr != DEF_NULL) {
 2302              	 .loc 1 2007 0
 2303 0050 7B68     	 ldr r3,[r7,#4]
 2304 0052 1B69     	 ldr r3,[r3,#16]
 2305 0054 002B     	 cmp r3,#0
 2306 0056 0FD0     	 beq .L138
2008:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blk              = p_pool->BlkFreePtr;
 2307              	 .loc 1 2008 0
 2308 0058 7B68     	 ldr r3,[r7,#4]
 2309 005a 1B69     	 ldr r3,[r3,#16]
 2310 005c 3B61     	 str r3,[r7,#16]
2009:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = *((void **)p_blk);
 2311              	 .loc 1 2009 0
 2312 005e 3B69     	 ldr r3,[r7,#16]
 2313 0060 1A68     	 ldr r2,[r3]
 2314 0062 7B68     	 ldr r3,[r7,#4]
 2315 0064 1A61     	 str r2,[r3,#16]
2010:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2316              	 .loc 1 2010 0
 2317 0066 7869     	 ldr r0,[r7,#20]
 2318 0068 FFF7FEFF 	 bl CPU_SR_Restore
2011:../Dave/Generated/UCPROBE/lib_mem.c **** 
2012:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
 2319              	 .loc 1 2012 0
 2320 006c 3B68     	 ldr r3,[r7]
 2321 006e 42F21072 	 movw r2,#10000
 2322 0072 1A80     	 strh r2,[r3]
2013:../Dave/Generated/UCPROBE/lib_mem.c **** 
2014:../Dave/Generated/UCPROBE/lib_mem.c ****         return (p_blk);
 2323              	 .loc 1 2014 0
 2324 0074 3B69     	 ldr r3,[r7,#16]
 2325 0076 1FE0     	 b .L137
 2326              	.L138:
2015:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2016:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2327              	 .loc 1 2016 0
 2328 0078 7869     	 ldr r0,[r7,#20]
 2329 007a FFF7FEFF 	 bl CPU_SR_Restore
2017:../Dave/Generated/UCPROBE/lib_mem.c **** 
2018:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------------------ ALLOC NEW BLK
2019:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2020:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_name = p_pool->NamePtr;
2021:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2022:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool_name = DEF_NULL;
 2330              	 .loc 1 2022 0
 2331 007e 0023     	 movs r3,#0
 2332 0080 FB60     	 str r3,[r7,#12]
2023:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2024:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocInternal(p_pool_name,
 2333              	 .loc 1 2024 0
 2334 0082 7B68     	 ldr r3,[r7,#4]
 2335 0084 1968     	 ldr r1,[r3]
 2336 0086 7B68     	 ldr r3,[r7,#4]
 2337 0088 5A68     	 ldr r2,[r3,#4]
 2338 008a 7B68     	 ldr r3,[r7,#4]
 2339 008c 9C68     	 ldr r4,[r3,#8]
 2340 008e 7B68     	 ldr r3,[r7,#4]
 2341 0090 DB68     	 ldr r3,[r3,#12]
 2342 0092 0093     	 str r3,[sp]
 2343 0094 0023     	 movs r3,#0
 2344 0096 0193     	 str r3,[sp,#4]
 2345 0098 3B68     	 ldr r3,[r7]
 2346 009a 0293     	 str r3,[sp,#8]
 2347 009c F868     	 ldr r0,[r7,#12]
 2348 009e 2346     	 mov r3,r4
 2349 00a0 FFF7FEFF 	 bl Mem_SegAllocInternal
 2350 00a4 3861     	 str r0,[r7,#16]
2025:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->PoolSegPtr,
2026:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkSize,
2027:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkAlign,
2028:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_pool->BlkPaddingAlign,
2029:../Dave/Generated/UCPROBE/lib_mem.c ****                                  DEF_NULL,
2030:../Dave/Generated/UCPROBE/lib_mem.c ****                                  p_err);
2031:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 2351              	 .loc 1 2031 0
 2352 00a6 3B68     	 ldr r3,[r7]
 2353 00a8 1B88     	 ldrh r3,[r3]
 2354 00aa 42F21072 	 movw r2,#10000
 2355 00ae 9342     	 cmp r3,r2
 2356 00b0 01D0     	 beq .L139
2032:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2357              	 .loc 1 2032 0
 2358 00b2 0023     	 movs r3,#0
 2359 00b4 00E0     	 b .L137
 2360              	.L139:
2033:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2034:../Dave/Generated/UCPROBE/lib_mem.c **** 
2035:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 2361              	 .loc 1 2035 0
 2362 00b6 3B69     	 ldr r3,[r7,#16]
 2363              	.L137:
2036:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2364              	 .loc 1 2036 0
 2365 00b8 1846     	 mov r0,r3
 2366 00ba 1C37     	 adds r7,r7,#28
 2367              	.LCFI112:
 2368              	 .cfi_def_cfa_offset 12
 2369 00bc BD46     	 mov sp,r7
 2370              	.LCFI113:
 2371              	 .cfi_def_cfa_register 13
 2372              	 
 2373 00be 90BD     	 pop {r4,r7,pc}
 2374              	 .cfi_endproc
 2375              	.LFE21:
 2377              	 .section .text.Mem_DynPoolBlkFree,"ax",%progbits
 2378              	 .align 2
 2379              	 .global Mem_DynPoolBlkFree
 2380              	 .thumb
 2381              	 .thumb_func
 2383              	Mem_DynPoolBlkFree:
 2384              	.LFB22:
2037:../Dave/Generated/UCPROBE/lib_mem.c **** 
2038:../Dave/Generated/UCPROBE/lib_mem.c **** 
2039:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2040:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2041:../Dave/Generated/UCPROBE/lib_mem.c **** *                                         Mem_DynPoolBlkFree()
2042:../Dave/Generated/UCPROBE/lib_mem.c **** *
2043:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Frees memory block, making it available for future use.
2044:../Dave/Generated/UCPROBE/lib_mem.c **** *
2045:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
2046:../Dave/Generated/UCPROBE/lib_mem.c **** *
2047:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_blk   Pointer to first byte of memory block.
2048:../Dave/Generated/UCPROBE/lib_mem.c **** *
2049:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2050:../Dave/Generated/UCPROBE/lib_mem.c **** *
2051:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE        Operation was successful.
2052:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR    'p_pool' or 'p_blk' pointer passed is NULL.
2053:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_FULL   Pool is full.
2054:../Dave/Generated/UCPROBE/lib_mem.c **** *
2055:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
2056:../Dave/Generated/UCPROBE/lib_mem.c **** *
2057:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2058:../Dave/Generated/UCPROBE/lib_mem.c **** *
2059:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2060:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2061:../Dave/Generated/UCPROBE/lib_mem.c **** */
2062:../Dave/Generated/UCPROBE/lib_mem.c **** 
2063:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_DynPoolBlkFree (MEM_DYN_POOL  *p_pool,
2064:../Dave/Generated/UCPROBE/lib_mem.c ****                           void          *p_blk,
2065:../Dave/Generated/UCPROBE/lib_mem.c ****                           LIB_ERR       *p_err)
2066:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2385              	 .loc 1 2066 0
 2386              	 .cfi_startproc
 2387              	 
 2388              	 
 2389 0000 80B5     	 push {r7,lr}
 2390              	.LCFI114:
 2391              	 .cfi_def_cfa_offset 8
 2392              	 .cfi_offset 7,-8
 2393              	 .cfi_offset 14,-4
 2394 0002 86B0     	 sub sp,sp,#24
 2395              	.LCFI115:
 2396              	 .cfi_def_cfa_offset 32
 2397 0004 00AF     	 add r7,sp,#0
 2398              	.LCFI116:
 2399              	 .cfi_def_cfa_register 7
 2400 0006 F860     	 str r0,[r7,#12]
 2401 0008 B960     	 str r1,[r7,#8]
 2402 000a 7A60     	 str r2,[r7,#4]
2067:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2403              	 .loc 1 2067 0
 2404 000c 0023     	 movs r3,#0
 2405 000e 7B61     	 str r3,[r7,#20]
2068:../Dave/Generated/UCPROBE/lib_mem.c **** 
2069:../Dave/Generated/UCPROBE/lib_mem.c **** 
2070:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2071:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2072:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2073:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2074:../Dave/Generated/UCPROBE/lib_mem.c **** 
2075:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2076:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2077:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2078:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2079:../Dave/Generated/UCPROBE/lib_mem.c **** 
2080:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_blk == DEF_NULL) {
2081:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2082:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2083:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2084:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2085:../Dave/Generated/UCPROBE/lib_mem.c **** 
2086:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {       /* Ensure pool is not full.        
 2406              	 .loc 1 2086 0
 2407 0010 FB68     	 ldr r3,[r7,#12]
 2408 0012 5B69     	 ldr r3,[r3,#20]
 2409 0014 002B     	 cmp r3,#0
 2410 0016 16D0     	 beq .L141
2087:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 2411              	 .loc 1 2087 0
 2412 0018 FFF7FEFF 	 bl CPU_SR_Save
 2413 001c 7861     	 str r0,[r7,#20]
2088:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_pool->BlkAllocCnt == 0u) {
 2414              	 .loc 1 2088 0
 2415 001e FB68     	 ldr r3,[r7,#12]
 2416 0020 9B69     	 ldr r3,[r3,#24]
 2417 0022 002B     	 cmp r3,#0
 2418 0024 07D1     	 bne .L142
2089:../Dave/Generated/UCPROBE/lib_mem.c ****             CPU_CRITICAL_EXIT();
 2419              	 .loc 1 2089 0
 2420 0026 7869     	 ldr r0,[r7,#20]
 2421 0028 FFF7FEFF 	 bl CPU_SR_Restore
2090:../Dave/Generated/UCPROBE/lib_mem.c **** 
2091:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_POOL_FULL;
 2422              	 .loc 1 2091 0
 2423 002c 7B68     	 ldr r3,[r7,#4]
 2424 002e 42F2DD72 	 movw r2,#10205
 2425 0032 1A80     	 strh r2,[r3]
2092:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
 2426              	 .loc 1 2092 0
 2427 0034 18E0     	 b .L140
 2428              	.L142:
2093:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2094:../Dave/Generated/UCPROBE/lib_mem.c **** 
2095:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkAllocCnt--;
 2429              	 .loc 1 2095 0
 2430 0036 FB68     	 ldr r3,[r7,#12]
 2431 0038 9B69     	 ldr r3,[r3,#24]
 2432 003a 5A1E     	 subs r2,r3,#1
 2433 003c FB68     	 ldr r3,[r7,#12]
 2434 003e 9A61     	 str r2,[r3,#24]
2096:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2435              	 .loc 1 2096 0
 2436 0040 7869     	 ldr r0,[r7,#20]
 2437 0042 FFF7FEFF 	 bl CPU_SR_Restore
 2438              	.L141:
2097:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2098:../Dave/Generated/UCPROBE/lib_mem.c **** 
2099:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2439              	 .loc 1 2099 0
 2440 0046 FFF7FEFF 	 bl CPU_SR_Save
 2441 004a 7861     	 str r0,[r7,#20]
2100:../Dave/Generated/UCPROBE/lib_mem.c ****    *((void **)p_blk)   = p_pool->BlkFreePtr;
 2442              	 .loc 1 2100 0
 2443 004c FB68     	 ldr r3,[r7,#12]
 2444 004e 1A69     	 ldr r2,[r3,#16]
 2445 0050 BB68     	 ldr r3,[r7,#8]
 2446 0052 1A60     	 str r2,[r3]
2101:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkFreePtr = p_blk;
 2447              	 .loc 1 2101 0
 2448 0054 FB68     	 ldr r3,[r7,#12]
 2449 0056 BA68     	 ldr r2,[r7,#8]
 2450 0058 1A61     	 str r2,[r3,#16]
2102:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2451              	 .loc 1 2102 0
 2452 005a 7869     	 ldr r0,[r7,#20]
 2453 005c FFF7FEFF 	 bl CPU_SR_Restore
2103:../Dave/Generated/UCPROBE/lib_mem.c **** 
2104:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2454              	 .loc 1 2104 0
 2455 0060 7B68     	 ldr r3,[r7,#4]
 2456 0062 42F21072 	 movw r2,#10000
 2457 0066 1A80     	 strh r2,[r3]
 2458              	.L140:
2105:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2459              	 .loc 1 2105 0
 2460 0068 1837     	 adds r7,r7,#24
 2461              	.LCFI117:
 2462              	 .cfi_def_cfa_offset 8
 2463 006a BD46     	 mov sp,r7
 2464              	.LCFI118:
 2465              	 .cfi_def_cfa_register 13
 2466              	 
 2467 006c 80BD     	 pop {r7,pc}
 2468              	 .cfi_endproc
 2469              	.LFE22:
 2471 006e 00BF     	 .section .text.Mem_DynPoolBlkNbrAvailGet,"ax",%progbits
 2472              	 .align 2
 2473              	 .global Mem_DynPoolBlkNbrAvailGet
 2474              	 .thumb
 2475              	 .thumb_func
 2477              	Mem_DynPoolBlkNbrAvailGet:
 2478              	.LFB23:
2106:../Dave/Generated/UCPROBE/lib_mem.c **** 
2107:../Dave/Generated/UCPROBE/lib_mem.c **** 
2108:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2109:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2110:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_DynPoolBlkNbrAvailGet()
2111:../Dave/Generated/UCPROBE/lib_mem.c **** *
2112:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Gets number of available blocks in dynamic memory pool. This call will fail with a
2113:../Dave/Generated/UCPROBE/lib_mem.c **** *               dynamic memory pool for which no limit was set at creation.
2114:../Dave/Generated/UCPROBE/lib_mem.c **** *
2115:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_pool  Pointer to pool data.
2116:../Dave/Generated/UCPROBE/lib_mem.c **** *
2117:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2118:../Dave/Generated/UCPROBE/lib_mem.c **** *
2119:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NONE                Operation was successful.
2120:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_NULL_PTR            'p_pool' pointer passed is NULL.
2121:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_POOL_UNLIMITED      Pool has no specified limit.
2122:../Dave/Generated/UCPROBE/lib_mem.c **** *
2123:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Number of blocks available in dynamic memory pool, if successful.
2124:../Dave/Generated/UCPROBE/lib_mem.c **** *
2125:../Dave/Generated/UCPROBE/lib_mem.c **** *               0, if pool is empty or if an error occurred.
2126:../Dave/Generated/UCPROBE/lib_mem.c **** *
2127:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2128:../Dave/Generated/UCPROBE/lib_mem.c **** *
2129:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : None.
2130:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2131:../Dave/Generated/UCPROBE/lib_mem.c **** */
2132:../Dave/Generated/UCPROBE/lib_mem.c **** 
2133:../Dave/Generated/UCPROBE/lib_mem.c **** CPU_SIZE_T  Mem_DynPoolBlkNbrAvailGet (MEM_DYN_POOL  *p_pool,
2134:../Dave/Generated/UCPROBE/lib_mem.c ****                                        LIB_ERR       *p_err)
2135:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2479              	 .loc 1 2135 0
 2480              	 .cfi_startproc
 2481              	 
 2482              	 
 2483 0000 80B5     	 push {r7,lr}
 2484              	.LCFI119:
 2485              	 .cfi_def_cfa_offset 8
 2486              	 .cfi_offset 7,-8
 2487              	 .cfi_offset 14,-4
 2488 0002 84B0     	 sub sp,sp,#16
 2489              	.LCFI120:
 2490              	 .cfi_def_cfa_offset 24
 2491 0004 00AF     	 add r7,sp,#0
 2492              	.LCFI121:
 2493              	 .cfi_def_cfa_register 7
 2494 0006 7860     	 str r0,[r7,#4]
 2495 0008 3960     	 str r1,[r7]
2136:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  blk_nbr_avail;
2137:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2496              	 .loc 1 2137 0
 2497 000a 0023     	 movs r3,#0
 2498 000c BB60     	 str r3,[r7,#8]
2138:../Dave/Generated/UCPROBE/lib_mem.c **** 
2139:../Dave/Generated/UCPROBE/lib_mem.c **** 
2140:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2141:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2142:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2143:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2144:../Dave/Generated/UCPROBE/lib_mem.c **** 
2145:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2146:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2147:../Dave/Generated/UCPROBE/lib_mem.c ****         return (0u);
2148:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2149:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2150:../Dave/Generated/UCPROBE/lib_mem.c **** 
2151:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool->BlkQtyMax != LIB_MEM_BLK_QTY_UNLIMITED) {
 2499              	 .loc 1 2151 0
 2500 000e 7B68     	 ldr r3,[r7,#4]
 2501 0010 5B69     	 ldr r3,[r3,#20]
 2502 0012 002B     	 cmp r3,#0
 2503 0014 10D0     	 beq .L145
2152:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_ENTER();
 2504              	 .loc 1 2152 0
 2505 0016 FFF7FEFF 	 bl CPU_SR_Save
 2506 001a B860     	 str r0,[r7,#8]
2153:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_nbr_avail = p_pool->BlkQtyMax - p_pool->BlkAllocCnt;
 2507              	 .loc 1 2153 0
 2508 001c 7B68     	 ldr r3,[r7,#4]
 2509 001e 5A69     	 ldr r2,[r3,#20]
 2510 0020 7B68     	 ldr r3,[r7,#4]
 2511 0022 9B69     	 ldr r3,[r3,#24]
 2512 0024 D31A     	 subs r3,r2,r3
 2513 0026 FB60     	 str r3,[r7,#12]
2154:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2514              	 .loc 1 2154 0
 2515 0028 B868     	 ldr r0,[r7,#8]
 2516 002a FFF7FEFF 	 bl CPU_SR_Restore
2155:../Dave/Generated/UCPROBE/lib_mem.c **** 
2156:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NONE;
 2517              	 .loc 1 2156 0
 2518 002e 3B68     	 ldr r3,[r7]
 2519 0030 42F21072 	 movw r2,#10000
 2520 0034 1A80     	 strh r2,[r3]
 2521 0036 05E0     	 b .L146
 2522              	.L145:
2157:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2158:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_nbr_avail = 0u;
 2523              	 .loc 1 2158 0
 2524 0038 0023     	 movs r3,#0
 2525 003a FB60     	 str r3,[r7,#12]
2159:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err         = LIB_MEM_ERR_POOL_UNLIMITED;
 2526              	 .loc 1 2159 0
 2527 003c 3B68     	 ldr r3,[r7]
 2528 003e 42F2DF72 	 movw r2,#10207
 2529 0042 1A80     	 strh r2,[r3]
 2530              	.L146:
2160:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2161:../Dave/Generated/UCPROBE/lib_mem.c **** 
2162:../Dave/Generated/UCPROBE/lib_mem.c ****     return (blk_nbr_avail);
 2531              	 .loc 1 2162 0
 2532 0044 FB68     	 ldr r3,[r7,#12]
2163:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2533              	 .loc 1 2163 0
 2534 0046 1846     	 mov r0,r3
 2535 0048 1037     	 adds r7,r7,#16
 2536              	.LCFI122:
 2537              	 .cfi_def_cfa_offset 8
 2538 004a BD46     	 mov sp,r7
 2539              	.LCFI123:
 2540              	 .cfi_def_cfa_register 13
 2541              	 
 2542 004c 80BD     	 pop {r7,pc}
 2543              	 .cfi_endproc
 2544              	.LFE23:
 2546 004e 00BF     	 .section .text.Mem_SegCreateCritical,"ax",%progbits
 2547              	 .align 2
 2548              	 .thumb
 2549              	 .thumb_func
 2551              	Mem_SegCreateCritical:
 2552              	.LFB24:
2164:../Dave/Generated/UCPROBE/lib_mem.c **** 
2165:../Dave/Generated/UCPROBE/lib_mem.c **** 
2166:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2167:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2168:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           Mem_OutputUsage()
2169:../Dave/Generated/UCPROBE/lib_mem.c **** *
2170:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Outputs memory usage report through 'out_fnct'.
2171:../Dave/Generated/UCPROBE/lib_mem.c **** *
2172:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : out_fnct        Pointer to output function.
2173:../Dave/Generated/UCPROBE/lib_mem.c **** *
2174:../Dave/Generated/UCPROBE/lib_mem.c **** *               print_details   DEF_YES, if the size of each allocation should be printed.
2175:../Dave/Generated/UCPROBE/lib_mem.c **** *                               DEF_NO,  otherwise.
2176:../Dave/Generated/UCPROBE/lib_mem.c **** *
2177:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2178:../Dave/Generated/UCPROBE/lib_mem.c **** *
2179:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NONE                Operation was successful.
2180:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            'out_fnct' pointer passed is NU
2181:../Dave/Generated/UCPROBE/lib_mem.c **** *
2182:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ---------------------RETURNED BY Mem_SegRemSizeGet()-----------
2183:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Segment data pointer NULL.
2184:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
2185:../Dave/Generated/UCPROBE/lib_mem.c **** *
2186:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
2187:../Dave/Generated/UCPROBE/lib_mem.c **** *
2188:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Application.
2189:../Dave/Generated/UCPROBE/lib_mem.c **** *
2190:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2191:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2192:../Dave/Generated/UCPROBE/lib_mem.c **** */
2193:../Dave/Generated/UCPROBE/lib_mem.c **** 
2194:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2195:../Dave/Generated/UCPROBE/lib_mem.c **** void  Mem_OutputUsage(void     (*out_fnct) (CPU_CHAR *),
2196:../Dave/Generated/UCPROBE/lib_mem.c ****                       LIB_ERR   *p_err)
2197:../Dave/Generated/UCPROBE/lib_mem.c **** {
2198:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CHAR   str[DEF_INT_32U_NBR_DIG_MAX];
2199:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG   *p_seg;
2200:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
2201:../Dave/Generated/UCPROBE/lib_mem.c **** 
2202:../Dave/Generated/UCPROBE/lib_mem.c **** 
2203:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2204:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2205:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(;);
2206:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2207:../Dave/Generated/UCPROBE/lib_mem.c **** 
2208:../Dave/Generated/UCPROBE/lib_mem.c ****     if (out_fnct == DEF_NULL) {                                 /* Chk for NULL out fnct ptr.      
2209:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2210:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2211:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2212:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2213:../Dave/Generated/UCPROBE/lib_mem.c **** 
2214:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("---------------- Memory allocation info ----------------\r\n");
2215:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("| Type    | Size       | Free size  | Name\r\n");
2216:../Dave/Generated/UCPROBE/lib_mem.c ****     out_fnct("|---------|------------|------------|-------------------\r\n");
2217:../Dave/Generated/UCPROBE/lib_mem.c **** 
2218:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
2219:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg = Mem_SegHeadPtr;
2220:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_seg != DEF_NULL) {
2221:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SIZE_T       rem_size;
2222:../Dave/Generated/UCPROBE/lib_mem.c ****         MEM_SEG_INFO     seg_info;
2223:../Dave/Generated/UCPROBE/lib_mem.c ****         MEM_ALLOC_INFO  *p_alloc;
2224:../Dave/Generated/UCPROBE/lib_mem.c **** 
2225:../Dave/Generated/UCPROBE/lib_mem.c **** 
2226:../Dave/Generated/UCPROBE/lib_mem.c ****         rem_size = Mem_SegRemSizeGet(p_seg, 1u, &seg_info, p_err);
2227:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p_err != LIB_MEM_ERR_NONE) {
2228:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
2229:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2230:../Dave/Generated/UCPROBE/lib_mem.c **** 
2231:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct("| Section | ");
2232:../Dave/Generated/UCPROBE/lib_mem.c **** 
2233:../Dave/Generated/UCPROBE/lib_mem.c ****         (void)Str_FmtNbr_Int32U(seg_info.TotalSize,
2234:../Dave/Generated/UCPROBE/lib_mem.c ****                                 10u,
2235:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NBR_BASE_DEC,
2236:../Dave/Generated/UCPROBE/lib_mem.c ****                                 ' ',
2237:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NO,
2238:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_YES,
2239:../Dave/Generated/UCPROBE/lib_mem.c ****                                &str[0u]);
2240:../Dave/Generated/UCPROBE/lib_mem.c **** 
2241:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(str);
2242:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(" | ");
2243:../Dave/Generated/UCPROBE/lib_mem.c **** 
2244:../Dave/Generated/UCPROBE/lib_mem.c ****         (void)Str_FmtNbr_Int32U(rem_size,
2245:../Dave/Generated/UCPROBE/lib_mem.c ****                                 10u,
2246:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NBR_BASE_DEC,
2247:../Dave/Generated/UCPROBE/lib_mem.c ****                                 ' ',
2248:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_NO,
2249:../Dave/Generated/UCPROBE/lib_mem.c ****                                 DEF_YES,
2250:../Dave/Generated/UCPROBE/lib_mem.c ****                                &str[0u]);
2251:../Dave/Generated/UCPROBE/lib_mem.c **** 
2252:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(str);
2253:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct(" | ");
2254:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct((p_seg->NamePtr != DEF_NULL) ? (CPU_CHAR *)p_seg->NamePtr : (CPU_CHAR *)"Unknown")
2255:../Dave/Generated/UCPROBE/lib_mem.c ****         out_fnct("\r\n");
2256:../Dave/Generated/UCPROBE/lib_mem.c **** 
2257:../Dave/Generated/UCPROBE/lib_mem.c ****         p_alloc = p_seg->AllocInfoHeadPtr;
2258:../Dave/Generated/UCPROBE/lib_mem.c ****         while (p_alloc != DEF_NULL) {
2259:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct("| -> Obj  | ");
2260:../Dave/Generated/UCPROBE/lib_mem.c **** 
2261:../Dave/Generated/UCPROBE/lib_mem.c ****             (void)Str_FmtNbr_Int32U(p_alloc->Size,
2262:../Dave/Generated/UCPROBE/lib_mem.c ****                                     10u,
2263:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_NBR_BASE_DEC,
2264:../Dave/Generated/UCPROBE/lib_mem.c ****                                     ' ',
2265:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_NO,
2266:../Dave/Generated/UCPROBE/lib_mem.c ****                                     DEF_YES,
2267:../Dave/Generated/UCPROBE/lib_mem.c ****                                    &str[0u]);
2268:../Dave/Generated/UCPROBE/lib_mem.c **** 
2269:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct(str);
2270:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct(" |            | ");
2271:../Dave/Generated/UCPROBE/lib_mem.c **** 
2272:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct((p_alloc->NamePtr != DEF_NULL) ? (CPU_CHAR *)p_alloc->NamePtr : (CPU_CHAR *)"U
2273:../Dave/Generated/UCPROBE/lib_mem.c ****             out_fnct("\r\n");
2274:../Dave/Generated/UCPROBE/lib_mem.c **** 
2275:../Dave/Generated/UCPROBE/lib_mem.c ****             p_alloc = p_alloc->NextPtr;
2276:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2277:../Dave/Generated/UCPROBE/lib_mem.c **** 
2278:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg = p_seg->NextPtr;
2279:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2280:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
2281:../Dave/Generated/UCPROBE/lib_mem.c **** 
2282:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
2283:../Dave/Generated/UCPROBE/lib_mem.c **** }
2284:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2285:../Dave/Generated/UCPROBE/lib_mem.c **** 
2286:../Dave/Generated/UCPROBE/lib_mem.c **** 
2287:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2288:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2289:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2290:../Dave/Generated/UCPROBE/lib_mem.c **** *                                           LOCAL FUNCTIONS
2291:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2292:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2293:../Dave/Generated/UCPROBE/lib_mem.c **** */
2294:../Dave/Generated/UCPROBE/lib_mem.c **** 
2295:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2296:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2297:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       Mem_SegCreateCritical()
2298:../Dave/Generated/UCPROBE/lib_mem.c **** *
2299:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a new memory segment to be used for runtime memory allocation or dynamic po
2300:../Dave/Generated/UCPROBE/lib_mem.c **** *
2301:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name          Pointer to segment name.
2302:../Dave/Generated/UCPROBE/lib_mem.c **** *
2303:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment data. Must be allocated by caller.
2304:../Dave/Generated/UCPROBE/lib_mem.c **** *               -----           Argument validated by caller.
2305:../Dave/Generated/UCPROBE/lib_mem.c **** *
2306:../Dave/Generated/UCPROBE/lib_mem.c **** *               seg_base_addr   Segment's first byte address.
2307:../Dave/Generated/UCPROBE/lib_mem.c **** *
2308:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2309:../Dave/Generated/UCPROBE/lib_mem.c **** *                               from this memory segment. MUST be a power of 2.
2310:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_PADDING_ALIGN_NONE means no padding.
2311:../Dave/Generated/UCPROBE/lib_mem.c **** *               -------------   Argument validated by caller.
2312:../Dave/Generated/UCPROBE/lib_mem.c **** *
2313:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Total size of segment, in bytes.
2314:../Dave/Generated/UCPROBE/lib_mem.c **** *               ----            Argument validated by caller.
2315:../Dave/Generated/UCPROBE/lib_mem.c **** *
2316:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to segment data, if successful.
2317:../Dave/Generated/UCPROBE/lib_mem.c **** *
2318:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2319:../Dave/Generated/UCPROBE/lib_mem.c **** *
2320:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2321:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegCreate().
2322:../Dave/Generated/UCPROBE/lib_mem.c **** *
2323:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2324:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2325:../Dave/Generated/UCPROBE/lib_mem.c **** */
2326:../Dave/Generated/UCPROBE/lib_mem.c **** 
2327:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_SegCreateCritical(const  CPU_CHAR    *p_name,
2328:../Dave/Generated/UCPROBE/lib_mem.c ****                                            MEM_SEG     *p_seg,
2329:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_ADDR     seg_base_addr,
2330:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_SIZE_T   padding_align,
2331:../Dave/Generated/UCPROBE/lib_mem.c ****                                            CPU_SIZE_T   size)
2332:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2553              	 .loc 1 2332 0
 2554              	 .cfi_startproc
 2555              	 
 2556              	 
 2557              	 
 2558 0000 80B4     	 push {r7}
 2559              	.LCFI124:
 2560              	 .cfi_def_cfa_offset 4
 2561              	 .cfi_offset 7,-4
 2562 0002 85B0     	 sub sp,sp,#20
 2563              	.LCFI125:
 2564              	 .cfi_def_cfa_offset 24
 2565 0004 00AF     	 add r7,sp,#0
 2566              	.LCFI126:
 2567              	 .cfi_def_cfa_register 7
 2568 0006 F860     	 str r0,[r7,#12]
 2569 0008 B960     	 str r1,[r7,#8]
 2570 000a 7A60     	 str r2,[r7,#4]
 2571 000c 3B60     	 str r3,[r7]
2333:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrBase         =  seg_base_addr;
 2572              	 .loc 1 2333 0
 2573 000e BB68     	 ldr r3,[r7,#8]
 2574 0010 7A68     	 ldr r2,[r7,#4]
 2575 0012 1A60     	 str r2,[r3]
2334:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrEnd          = (seg_base_addr + (size - 1u));
 2576              	 .loc 1 2334 0
 2577 0014 BA69     	 ldr r2,[r7,#24]
 2578 0016 7B68     	 ldr r3,[r7,#4]
 2579 0018 1344     	 add r3,r3,r2
 2580 001a 5A1E     	 subs r2,r3,#1
 2581 001c BB68     	 ldr r3,[r7,#8]
 2582 001e 5A60     	 str r2,[r3,#4]
2335:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext         =  seg_base_addr;
 2583              	 .loc 1 2335 0
 2584 0020 BB68     	 ldr r3,[r7,#8]
 2585 0022 7A68     	 ldr r2,[r7,#4]
 2586 0024 9A60     	 str r2,[r3,#8]
2336:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->NextPtr          =  Mem_SegHeadPtr;
 2587              	 .loc 1 2336 0
 2588 0026 074B     	 ldr r3,.L149
 2589 0028 1A68     	 ldr r2,[r3]
 2590 002a BB68     	 ldr r3,[r7,#8]
 2591 002c DA60     	 str r2,[r3,#12]
2337:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->PaddingAlign     =  padding_align;
 2592              	 .loc 1 2337 0
 2593 002e BB68     	 ldr r3,[r7,#8]
 2594 0030 3A68     	 ldr r2,[r7]
 2595 0032 1A61     	 str r2,[r3,#16]
2338:../Dave/Generated/UCPROBE/lib_mem.c **** 
2339:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2340:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->NamePtr          = p_name;
2341:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AllocInfoHeadPtr = DEF_NULL;
2342:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2343:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)&p_name;
2344:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2345:../Dave/Generated/UCPROBE/lib_mem.c **** 
2346:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegHeadPtr = p_seg;
 2596              	 .loc 1 2346 0
 2597 0034 034A     	 ldr r2,.L149
 2598 0036 BB68     	 ldr r3,[r7,#8]
 2599 0038 1360     	 str r3,[r2]
2347:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2600              	 .loc 1 2347 0
 2601 003a 1437     	 adds r7,r7,#20
 2602              	.LCFI127:
 2603              	 .cfi_def_cfa_offset 4
 2604 003c BD46     	 mov sp,r7
 2605              	.LCFI128:
 2606              	 .cfi_def_cfa_register 13
 2607              	 
 2608 003e 5DF8047B 	 ldr r7,[sp],#4
 2609              	.LCFI129:
 2610              	 .cfi_restore 7
 2611              	 .cfi_def_cfa_offset 0
 2612 0042 7047     	 bx lr
 2613              	.L150:
 2614              	 .align 2
 2615              	.L149:
 2616 0044 00000000 	 .word Mem_SegHeadPtr
 2617              	 .cfi_endproc
 2618              	.LFE24:
 2620              	 .section .text.Mem_SegOverlapChkCritical,"ax",%progbits
 2621              	 .align 2
 2622              	 .thumb
 2623              	 .thumb_func
 2625              	Mem_SegOverlapChkCritical:
 2626              	.LFB25:
2348:../Dave/Generated/UCPROBE/lib_mem.c **** 
2349:../Dave/Generated/UCPROBE/lib_mem.c **** 
2350:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2351:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2352:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_SegOverlapChkCritical()
2353:../Dave/Generated/UCPROBE/lib_mem.c **** *
2354:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Checks if existing memory segment exists or overlaps with specified memory area.
2355:../Dave/Generated/UCPROBE/lib_mem.c **** *
2356:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : seg_base_addr   Address of first byte of memory area.
2357:../Dave/Generated/UCPROBE/lib_mem.c **** *
2358:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory area, in bytes.
2359:../Dave/Generated/UCPROBE/lib_mem.c **** *
2360:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err       Pointer to variable that will receive the return error code from this f
2361:../Dave/Generated/UCPROBE/lib_mem.c **** *
2362:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_OVERLAP     Segment overlaps another existi
2363:../Dave/Generated/UCPROBE/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_EXISTS      Segment already exists.
2364:../Dave/Generated/UCPROBE/lib_mem.c **** *
2365:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to memory segment that overlaps.
2366:../Dave/Generated/UCPROBE/lib_mem.c **** *
2367:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2368:../Dave/Generated/UCPROBE/lib_mem.c **** *
2369:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2370:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegCreate().
2371:../Dave/Generated/UCPROBE/lib_mem.c **** *
2372:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2373:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2374:../Dave/Generated/UCPROBE/lib_mem.c **** */
2375:../Dave/Generated/UCPROBE/lib_mem.c **** 
2376:../Dave/Generated/UCPROBE/lib_mem.c **** static  MEM_SEG  *Mem_SegOverlapChkCritical (CPU_ADDR     seg_base_addr,
2377:../Dave/Generated/UCPROBE/lib_mem.c ****                                              CPU_SIZE_T   size,
2378:../Dave/Generated/UCPROBE/lib_mem.c ****                                              LIB_ERR     *p_err)
2379:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2627              	 .loc 1 2379 0
 2628              	 .cfi_startproc
 2629              	 
 2630              	 
 2631              	 
 2632 0000 80B4     	 push {r7}
 2633              	.LCFI130:
 2634              	 .cfi_def_cfa_offset 4
 2635              	 .cfi_offset 7,-4
 2636 0002 89B0     	 sub sp,sp,#36
 2637              	.LCFI131:
 2638              	 .cfi_def_cfa_offset 40
 2639 0004 00AF     	 add r7,sp,#0
 2640              	.LCFI132:
 2641              	 .cfi_def_cfa_register 7
 2642 0006 F860     	 str r0,[r7,#12]
 2643 0008 B960     	 str r1,[r7,#8]
 2644 000a 7A60     	 str r2,[r7,#4]
2380:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_SEG   *p_seg_chk;
2381:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_new_end;
2382:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_chk_start;
2383:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR   seg_chk_end;
2384:../Dave/Generated/UCPROBE/lib_mem.c **** 
2385:../Dave/Generated/UCPROBE/lib_mem.c **** 
2386:../Dave/Generated/UCPROBE/lib_mem.c ****     seg_new_end = seg_base_addr + (size - 1u);
 2645              	 .loc 1 2386 0
 2646 000c BA68     	 ldr r2,[r7,#8]
 2647 000e FB68     	 ldr r3,[r7,#12]
 2648 0010 1344     	 add r3,r3,r2
 2649 0012 013B     	 subs r3,r3,#1
 2650 0014 BB61     	 str r3,[r7,#24]
2387:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg_chk   = Mem_SegHeadPtr;
 2651              	 .loc 1 2387 0
 2652 0016 1F4B     	 ldr r3,.L159
 2653 0018 1B68     	 ldr r3,[r3]
 2654 001a FB61     	 str r3,[r7,#28]
2388:../Dave/Generated/UCPROBE/lib_mem.c **** 
2389:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_seg_chk != DEF_NULL) {
 2655              	 .loc 1 2389 0
 2656 001c 2CE0     	 b .L152
 2657              	.L158:
2390:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
 2658              	 .loc 1 2390 0
 2659 001e FB69     	 ldr r3,[r7,#28]
 2660 0020 1B68     	 ldr r3,[r3]
 2661 0022 7B61     	 str r3,[r7,#20]
2391:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_end   = (CPU_ADDR)p_seg_chk->AddrEnd;
 2662              	 .loc 1 2391 0
 2663 0024 FB69     	 ldr r3,[r7,#28]
 2664 0026 5B68     	 ldr r3,[r3,#4]
 2665 0028 3B61     	 str r3,[r7,#16]
2392:../Dave/Generated/UCPROBE/lib_mem.c **** 
2393:../Dave/Generated/UCPROBE/lib_mem.c ****         if ((seg_base_addr == seg_chk_start) && (seg_new_end == seg_chk_end)) {
 2666              	 .loc 1 2393 0
 2667 002a FA68     	 ldr r2,[r7,#12]
 2668 002c 7B69     	 ldr r3,[r7,#20]
 2669 002e 9A42     	 cmp r2,r3
 2670 0030 09D1     	 bne .L153
 2671              	 .loc 1 2393 0 is_stmt 0 discriminator 1
 2672 0032 BA69     	 ldr r2,[r7,#24]
 2673 0034 3B69     	 ldr r3,[r7,#16]
 2674 0036 9A42     	 cmp r2,r3
 2675 0038 05D1     	 bne .L153
2394:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_EXISTS;
 2676              	 .loc 1 2394 0 is_stmt 1
 2677 003a 7B68     	 ldr r3,[r7,#4]
 2678 003c 4FF41E52 	 mov r2,#10112
 2679 0040 1A80     	 strh r2,[r3]
2395:../Dave/Generated/UCPROBE/lib_mem.c ****             return (p_seg_chk);
 2680              	 .loc 1 2395 0
 2681 0042 FB69     	 ldr r3,[r7,#28]
 2682 0044 20E0     	 b .L154
 2683              	.L153:
2396:../Dave/Generated/UCPROBE/lib_mem.c ****         } else if (((seg_base_addr >= seg_chk_start) && (seg_base_addr <= seg_chk_end)) ||
 2684              	 .loc 1 2396 0
 2685 0046 FA68     	 ldr r2,[r7,#12]
 2686 0048 7B69     	 ldr r3,[r7,#20]
 2687 004a 9A42     	 cmp r2,r3
 2688 004c 03D3     	 bcc .L155
 2689              	 .loc 1 2396 0 is_stmt 0 discriminator 1
 2690 004e FA68     	 ldr r2,[r7,#12]
 2691 0050 3B69     	 ldr r3,[r7,#16]
 2692 0052 9A42     	 cmp r2,r3
 2693 0054 07D9     	 bls .L156
 2694              	.L155:
 2695              	 .loc 1 2396 0 discriminator 3
 2696 0056 FA68     	 ldr r2,[r7,#12]
 2697 0058 7B69     	 ldr r3,[r7,#20]
 2698 005a 9A42     	 cmp r2,r3
 2699 005c 09D8     	 bhi .L157
2397:../Dave/Generated/UCPROBE/lib_mem.c ****                    ((seg_base_addr <= seg_chk_start) && (seg_new_end   >= seg_chk_start))) {
 2700              	 .loc 1 2397 0 is_stmt 1
 2701 005e BA69     	 ldr r2,[r7,#24]
 2702 0060 7B69     	 ldr r3,[r7,#20]
 2703 0062 9A42     	 cmp r2,r3
 2704 0064 05D3     	 bcc .L157
 2705              	.L156:
2398:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_INVALID_SEG_OVERLAP;
 2706              	 .loc 1 2398 0
 2707 0066 7B68     	 ldr r3,[r7,#4]
 2708 0068 42F27F72 	 movw r2,#10111
 2709 006c 1A80     	 strh r2,[r3]
2399:../Dave/Generated/UCPROBE/lib_mem.c ****             return (p_seg_chk);
 2710              	 .loc 1 2399 0
 2711 006e FB69     	 ldr r3,[r7,#28]
 2712 0070 0AE0     	 b .L154
 2713              	.L157:
2400:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2401:../Dave/Generated/UCPROBE/lib_mem.c **** 
2402:../Dave/Generated/UCPROBE/lib_mem.c ****         p_seg_chk = p_seg_chk->NextPtr;
 2714              	 .loc 1 2402 0
 2715 0072 FB69     	 ldr r3,[r7,#28]
 2716 0074 DB68     	 ldr r3,[r3,#12]
 2717 0076 FB61     	 str r3,[r7,#28]
 2718              	.L152:
2389:../Dave/Generated/UCPROBE/lib_mem.c ****         seg_chk_start = (CPU_ADDR)p_seg_chk->AddrBase;
 2719              	 .loc 1 2389 0
 2720 0078 FB69     	 ldr r3,[r7,#28]
 2721 007a 002B     	 cmp r3,#0
 2722 007c CFD1     	 bne .L158
2403:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2404:../Dave/Generated/UCPROBE/lib_mem.c **** 
2405:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2723              	 .loc 1 2405 0
 2724 007e 7B68     	 ldr r3,[r7,#4]
 2725 0080 42F21072 	 movw r2,#10000
 2726 0084 1A80     	 strh r2,[r3]
2406:../Dave/Generated/UCPROBE/lib_mem.c **** 
2407:../Dave/Generated/UCPROBE/lib_mem.c ****     return (DEF_NULL);
 2727              	 .loc 1 2407 0
 2728 0086 0023     	 movs r3,#0
 2729              	.L154:
2408:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2730              	 .loc 1 2408 0
 2731 0088 1846     	 mov r0,r3
 2732 008a 2437     	 adds r7,r7,#36
 2733              	.LCFI133:
 2734              	 .cfi_def_cfa_offset 4
 2735 008c BD46     	 mov sp,r7
 2736              	.LCFI134:
 2737              	 .cfi_def_cfa_register 13
 2738              	 
 2739 008e 5DF8047B 	 ldr r7,[sp],#4
 2740              	.LCFI135:
 2741              	 .cfi_restore 7
 2742              	 .cfi_def_cfa_offset 0
 2743 0092 7047     	 bx lr
 2744              	.L160:
 2745              	 .align 2
 2746              	.L159:
 2747 0094 00000000 	 .word Mem_SegHeadPtr
 2748              	 .cfi_endproc
 2749              	.LFE25:
 2751              	 .section .text.Mem_SegAllocInternal,"ax",%progbits
 2752              	 .align 2
 2753              	 .thumb
 2754              	 .thumb_func
 2756              	Mem_SegAllocInternal:
 2757              	.LFB26:
2409:../Dave/Generated/UCPROBE/lib_mem.c **** 
2410:../Dave/Generated/UCPROBE/lib_mem.c **** 
2411:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2412:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2413:../Dave/Generated/UCPROBE/lib_mem.c **** *                                       Mem_SegAllocInternal()
2414:../Dave/Generated/UCPROBE/lib_mem.c **** *
2415:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment.
2416:../Dave/Generated/UCPROBE/lib_mem.c **** *
2417:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to allocated object name. Used for allocations tracking. May be DEF
2418:../Dave/Generated/UCPROBE/lib_mem.c **** *
2419:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg           Pointer to segment from which to allocate memory.
2420:../Dave/Generated/UCPROBE/lib_mem.c **** *               -----           Argument validated by caller.
2421:../Dave/Generated/UCPROBE/lib_mem.c **** *
2422:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
2423:../Dave/Generated/UCPROBE/lib_mem.c **** *
2424:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
2425:../Dave/Generated/UCPROBE/lib_mem.c **** *
2426:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2427:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
2428:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
2429:../Dave/Generated/UCPROBE/lib_mem.c **** *
2430:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
2431:../Dave/Generated/UCPROBE/lib_mem.c **** *                                the allocation to succeed. Set to DEF_NULL to skip calculation.
2432:../Dave/Generated/UCPROBE/lib_mem.c **** *
2433:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2434:../Dave/Generated/UCPROBE/lib_mem.c **** *
2435:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
2436:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
2437:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
2438:../Dave/Generated/UCPROBE/lib_mem.c **** *
2439:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocExtCritical()--------
2440:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
2441:../Dave/Generated/UCPROBE/lib_mem.c **** *
2442:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
2443:../Dave/Generated/UCPROBE/lib_mem.c **** *
2444:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2445:../Dave/Generated/UCPROBE/lib_mem.c **** *
2446:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_DynPoolBlkGet(),
2447:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_DynPoolCreateInternal(),
2448:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_HeapAlloc(),
2449:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_PoolCreate(),
2450:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAlloc(),
2451:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocExt(),
2452:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocHW().
2453:../Dave/Generated/UCPROBE/lib_mem.c **** *
2454:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2455:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2456:../Dave/Generated/UCPROBE/lib_mem.c **** */
2457:../Dave/Generated/UCPROBE/lib_mem.c **** 
2458:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  *Mem_SegAllocInternal (const  CPU_CHAR    *p_name,
2459:../Dave/Generated/UCPROBE/lib_mem.c ****                                             MEM_SEG     *p_seg,
2460:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   size,
2461:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   align,
2462:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T   padding_align,
2463:../Dave/Generated/UCPROBE/lib_mem.c ****                                             CPU_SIZE_T  *p_bytes_reqd,
2464:../Dave/Generated/UCPROBE/lib_mem.c ****                                             LIB_ERR     *p_err)
2465:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2758              	 .loc 1 2465 0
 2759              	 .cfi_startproc
 2760              	 
 2761              	 
 2762 0000 80B5     	 push {r7,lr}
 2763              	.LCFI136:
 2764              	 .cfi_def_cfa_offset 8
 2765              	 .cfi_offset 7,-8
 2766              	 .cfi_offset 14,-4
 2767 0002 88B0     	 sub sp,sp,#32
 2768              	.LCFI137:
 2769              	 .cfi_def_cfa_offset 40
 2770 0004 02AF     	 add r7,sp,#8
 2771              	.LCFI138:
 2772              	 .cfi_def_cfa 7,32
 2773 0006 F860     	 str r0,[r7,#12]
 2774 0008 B960     	 str r1,[r7,#8]
 2775 000a 7A60     	 str r2,[r7,#4]
 2776 000c 3B60     	 str r3,[r7]
2466:../Dave/Generated/UCPROBE/lib_mem.c ****     void  *p_blk;
2467:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SR_ALLOC();
 2777              	 .loc 1 2467 0
 2778 000e 0023     	 movs r3,#0
 2779 0010 7B61     	 str r3,[r7,#20]
2468:../Dave/Generated/UCPROBE/lib_mem.c **** 
2469:../Dave/Generated/UCPROBE/lib_mem.c **** 
2470:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2471:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for null err ptr.           
2472:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
2473:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2474:../Dave/Generated/UCPROBE/lib_mem.c **** 
2475:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size < 1u) {                                            /* Chk for invalid sized mem req.  
2476:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_SIZE;
2477:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2478:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2479:../Dave/Generated/UCPROBE/lib_mem.c **** 
2480:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(align) != DEF_YES) {                       /* Chk that align is a pwr of 2.   
2481:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_MEM_ALIGN;
2482:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2483:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2484:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2485:../Dave/Generated/UCPROBE/lib_mem.c **** 
2486:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_ENTER();
 2780              	 .loc 1 2486 0
 2781 0012 FFF7FEFF 	 bl CPU_SR_Save
 2782 0016 7861     	 str r0,[r7,#20]
2487:../Dave/Generated/UCPROBE/lib_mem.c ****     p_blk = Mem_SegAllocExtCritical(p_seg,
 2783              	 .loc 1 2487 0
 2784 0018 7B6A     	 ldr r3,[r7,#36]
 2785 001a 0093     	 str r3,[sp]
 2786 001c BB6A     	 ldr r3,[r7,#40]
 2787 001e 0193     	 str r3,[sp,#4]
 2788 0020 B868     	 ldr r0,[r7,#8]
 2789 0022 7968     	 ldr r1,[r7,#4]
 2790 0024 3A68     	 ldr r2,[r7]
 2791 0026 3B6A     	 ldr r3,[r7,#32]
 2792 0028 FFF7FEFF 	 bl Mem_SegAllocExtCritical
 2793 002c 3861     	 str r0,[r7,#16]
2488:../Dave/Generated/UCPROBE/lib_mem.c ****                                     size,
2489:../Dave/Generated/UCPROBE/lib_mem.c ****                                     align,
2490:../Dave/Generated/UCPROBE/lib_mem.c ****                                     padding_align,
2491:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_bytes_reqd,
2492:../Dave/Generated/UCPROBE/lib_mem.c ****                                     p_err);
2493:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
 2794              	 .loc 1 2493 0
 2795 002e BB6A     	 ldr r3,[r7,#40]
 2796 0030 1B88     	 ldrh r3,[r3]
 2797 0032 42F21072 	 movw r2,#10000
 2798 0036 9342     	 cmp r3,r2
 2799 0038 04D0     	 beq .L162
2494:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
 2800              	 .loc 1 2494 0
 2801 003a 7869     	 ldr r0,[r7,#20]
 2802 003c FFF7FEFF 	 bl CPU_SR_Restore
2495:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2803              	 .loc 1 2495 0
 2804 0040 0023     	 movs r3,#0
 2805 0042 03E0     	 b .L163
 2806              	.L162:
2496:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2497:../Dave/Generated/UCPROBE/lib_mem.c **** 
2498:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)                    /* Track alloc if req'd.           
2499:../Dave/Generated/UCPROBE/lib_mem.c ****     Mem_SegAllocTrackCritical(p_name,
2500:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_seg,
2501:../Dave/Generated/UCPROBE/lib_mem.c ****                               size,
2502:../Dave/Generated/UCPROBE/lib_mem.c ****                               p_err);
2503:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2504:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_CRITICAL_EXIT();
2505:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
2506:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2507:../Dave/Generated/UCPROBE/lib_mem.c **** #else
2508:../Dave/Generated/UCPROBE/lib_mem.c ****     (void)&p_name;
2509:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2510:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_CRITICAL_EXIT();
 2807              	 .loc 1 2510 0
 2808 0044 7869     	 ldr r0,[r7,#20]
 2809 0046 FFF7FEFF 	 bl CPU_SR_Restore
2511:../Dave/Generated/UCPROBE/lib_mem.c **** 
2512:../Dave/Generated/UCPROBE/lib_mem.c ****     return (p_blk);
 2810              	 .loc 1 2512 0
 2811 004a 3B69     	 ldr r3,[r7,#16]
 2812              	.L163:
2513:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2813              	 .loc 1 2513 0
 2814 004c 1846     	 mov r0,r3
 2815 004e 1837     	 adds r7,r7,#24
 2816              	.LCFI139:
 2817              	 .cfi_def_cfa_offset 8
 2818 0050 BD46     	 mov sp,r7
 2819              	.LCFI140:
 2820              	 .cfi_def_cfa_register 13
 2821              	 
 2822 0052 80BD     	 pop {r7,pc}
 2823              	 .cfi_endproc
 2824              	.LFE26:
 2826              	 .section .text.Mem_SegAllocExtCritical,"ax",%progbits
 2827              	 .align 2
 2828              	 .thumb
 2829              	 .thumb_func
 2831              	Mem_SegAllocExtCritical:
 2832              	.LFB27:
2514:../Dave/Generated/UCPROBE/lib_mem.c **** 
2515:../Dave/Generated/UCPROBE/lib_mem.c **** 
2516:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2517:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2518:../Dave/Generated/UCPROBE/lib_mem.c **** *                                      Mem_SegAllocExtCritical()
2519:../Dave/Generated/UCPROBE/lib_mem.c **** *
2520:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Allocates memory from specified segment.
2521:../Dave/Generated/UCPROBE/lib_mem.c **** *
2522:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_seg           Pointer to segment from which to allocate memory.
2523:../Dave/Generated/UCPROBE/lib_mem.c **** *
2524:../Dave/Generated/UCPROBE/lib_mem.c **** *               size            Size of memory block to allocate, in bytes.
2525:../Dave/Generated/UCPROBE/lib_mem.c **** *
2526:../Dave/Generated/UCPROBE/lib_mem.c **** *               align           Required alignment of memory block, in bytes. MUST be a power of 2.
2527:../Dave/Generated/UCPROBE/lib_mem.c **** *
2528:../Dave/Generated/UCPROBE/lib_mem.c **** *               padding_align   Padding alignment, in bytes, that will be added to any allocated bu
2529:../Dave/Generated/UCPROBE/lib_mem.c **** *                               this memory segment. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_NO
2530:../Dave/Generated/UCPROBE/lib_mem.c **** *                               means no padding.
2531:../Dave/Generated/UCPROBE/lib_mem.c **** *
2532:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_bytes_reqd    Pointer to variable that will receive the number of free bytes miss
2533:../Dave/Generated/UCPROBE/lib_mem.c **** *                               the allocation to succeed. Set to DEF_NULL to skip calculation.
2534:../Dave/Generated/UCPROBE/lib_mem.c **** *
2535:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2536:../Dave/Generated/UCPROBE/lib_mem.c **** *
2537:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF     Allocation would overflow memory segmen
2538:../Dave/Generated/UCPROBE/lib_mem.c **** *
2539:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : Pointer to allocated memory block, if successful.
2540:../Dave/Generated/UCPROBE/lib_mem.c **** *
2541:../Dave/Generated/UCPROBE/lib_mem.c **** *               DEF_NULL, otherwise.
2542:../Dave/Generated/UCPROBE/lib_mem.c **** *
2543:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2544:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocInternal(),
2545:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocTrackCritical().
2546:../Dave/Generated/UCPROBE/lib_mem.c **** *
2547:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) This function MUST be called within a CRITICAL_SECTION.
2548:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2549:../Dave/Generated/UCPROBE/lib_mem.c **** */
2550:../Dave/Generated/UCPROBE/lib_mem.c **** 
2551:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  *Mem_SegAllocExtCritical (MEM_SEG     *p_seg,
2552:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   size,
2553:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   align,
2554:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T   padding_align,
2555:../Dave/Generated/UCPROBE/lib_mem.c ****                                         CPU_SIZE_T  *p_bytes_reqd,
2556:../Dave/Generated/UCPROBE/lib_mem.c ****                                         LIB_ERR     *p_err)
2557:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2833              	 .loc 1 2557 0
 2834              	 .cfi_startproc
 2835              	 
 2836              	 
 2837              	 
 2838 0000 80B4     	 push {r7}
 2839              	.LCFI141:
 2840              	 .cfi_def_cfa_offset 4
 2841              	 .cfi_offset 7,-4
 2842 0002 8BB0     	 sub sp,sp,#44
 2843              	.LCFI142:
 2844              	 .cfi_def_cfa_offset 48
 2845 0004 00AF     	 add r7,sp,#0
 2846              	.LCFI143:
 2847              	 .cfi_def_cfa_register 7
 2848 0006 F860     	 str r0,[r7,#12]
 2849 0008 B960     	 str r1,[r7,#8]
 2850 000a 7A60     	 str r2,[r7,#4]
 2851 000c 3B60     	 str r3,[r7]
2558:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    blk_addr;
2559:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_ADDR    addr_next;
2560:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  size_rem_seg;
2561:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  size_tot_blk;
2562:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T  blk_align = DEF_MAX(align, padding_align);
 2852              	 .loc 1 2562 0
 2853 000e 3A68     	 ldr r2,[r7]
 2854 0010 7B68     	 ldr r3,[r7,#4]
 2855 0012 9342     	 cmp r3,r2
 2856 0014 38BF     	 it cc
 2857 0016 1346     	 movcc r3,r2
 2858 0018 7B62     	 str r3,[r7,#36]
2563:../Dave/Generated/UCPROBE/lib_mem.c **** 
2564:../Dave/Generated/UCPROBE/lib_mem.c **** 
2565:../Dave/Generated/UCPROBE/lib_mem.c ****     blk_addr     = MATH_ROUND_INC_UP_PWR2(p_seg->AddrNext,      /* Compute align'ed blk addr.      
 2859              	 .loc 1 2565 0
 2860 001a FB68     	 ldr r3,[r7,#12]
 2861 001c 9A68     	 ldr r2,[r3,#8]
 2862 001e 7B6A     	 ldr r3,[r7,#36]
 2863 0020 5B42     	 negs r3,r3
 2864 0022 1A40     	 ands r2,r2,r3
 2865 0024 FB68     	 ldr r3,[r7,#12]
 2866 0026 9968     	 ldr r1,[r3,#8]
 2867 0028 7B6A     	 ldr r3,[r7,#36]
 2868 002a 013B     	 subs r3,r3,#1
 2869 002c 0B40     	 ands r3,r3,r1
 2870 002e 002B     	 cmp r3,#0
 2871 0030 01D0     	 beq .L165
 2872              	 .loc 1 2565 0 is_stmt 0 discriminator 1
 2873 0032 7B6A     	 ldr r3,[r7,#36]
 2874 0034 00E0     	 b .L166
 2875              	.L165:
 2876              	 .loc 1 2565 0 discriminator 2
 2877 0036 0023     	 movs r3,#0
 2878              	.L166:
 2879              	 .loc 1 2565 0 discriminator 4
 2880 0038 1344     	 add r3,r3,r2
 2881 003a 3B62     	 str r3,[r7,#32]
2566:../Dave/Generated/UCPROBE/lib_mem.c ****                                           blk_align);
2567:../Dave/Generated/UCPROBE/lib_mem.c ****     addr_next    = MATH_ROUND_INC_UP_PWR2(blk_addr + size,      /* Compute addr of next alloc.     
 2882              	 .loc 1 2567 0 is_stmt 1 discriminator 4
 2883 003c 3A6A     	 ldr r2,[r7,#32]
 2884 003e BB68     	 ldr r3,[r7,#8]
 2885 0040 1A44     	 add r2,r2,r3
 2886 0042 3B68     	 ldr r3,[r7]
 2887 0044 5B42     	 negs r3,r3
 2888 0046 1A40     	 ands r2,r2,r3
 2889 0048 396A     	 ldr r1,[r7,#32]
 2890 004a BB68     	 ldr r3,[r7,#8]
 2891 004c 1944     	 add r1,r1,r3
 2892 004e 3B68     	 ldr r3,[r7]
 2893 0050 013B     	 subs r3,r3,#1
 2894 0052 0B40     	 ands r3,r3,r1
 2895 0054 002B     	 cmp r3,#0
 2896 0056 01D0     	 beq .L167
 2897              	 .loc 1 2567 0 is_stmt 0 discriminator 1
 2898 0058 3B68     	 ldr r3,[r7]
 2899 005a 00E0     	 b .L168
 2900              	.L167:
 2901              	 .loc 1 2567 0 discriminator 2
 2902 005c 0023     	 movs r3,#0
 2903              	.L168:
 2904              	 .loc 1 2567 0 discriminator 4
 2905 005e 1344     	 add r3,r3,r2
 2906 0060 FB61     	 str r3,[r7,#28]
2568:../Dave/Generated/UCPROBE/lib_mem.c ****                                           padding_align);
2569:../Dave/Generated/UCPROBE/lib_mem.c ****     size_rem_seg = p_seg->AddrEnd - p_seg->AddrNext + 1u;
 2907              	 .loc 1 2569 0 is_stmt 1 discriminator 4
 2908 0062 FB68     	 ldr r3,[r7,#12]
 2909 0064 5A68     	 ldr r2,[r3,#4]
 2910 0066 FB68     	 ldr r3,[r7,#12]
 2911 0068 9B68     	 ldr r3,[r3,#8]
 2912 006a D31A     	 subs r3,r2,r3
 2913 006c 0133     	 adds r3,r3,#1
 2914 006e BB61     	 str r3,[r7,#24]
2570:../Dave/Generated/UCPROBE/lib_mem.c ****     size_tot_blk = addr_next - p_seg->AddrNext;                 /* Compute tot blk size including a
 2915              	 .loc 1 2570 0 discriminator 4
 2916 0070 FB68     	 ldr r3,[r7,#12]
 2917 0072 9B68     	 ldr r3,[r3,#8]
 2918 0074 FA69     	 ldr r2,[r7,#28]
 2919 0076 D31A     	 subs r3,r2,r3
 2920 0078 7B61     	 str r3,[r7,#20]
2571:../Dave/Generated/UCPROBE/lib_mem.c ****     if (size_rem_seg < size_tot_blk) {                          /* If seg doesn't have enough space
 2921              	 .loc 1 2571 0 discriminator 4
 2922 007a BA69     	 ldr r2,[r7,#24]
 2923 007c 7B69     	 ldr r3,[r7,#20]
 2924 007e 9A42     	 cmp r2,r3
 2925 0080 0DD2     	 bcs .L169
2572:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_bytes_reqd != DEF_NULL) {                         /* ... calc nbr of req'd bytes.    
 2926              	 .loc 1 2572 0
 2927 0082 3B6B     	 ldr r3,[r7,#48]
 2928 0084 002B     	 cmp r3,#0
 2929 0086 04D0     	 beq .L170
2573:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_bytes_reqd = size_tot_blk - size_rem_seg;
 2930              	 .loc 1 2573 0
 2931 0088 7A69     	 ldr r2,[r7,#20]
 2932 008a BB69     	 ldr r3,[r7,#24]
 2933 008c D21A     	 subs r2,r2,r3
 2934 008e 3B6B     	 ldr r3,[r7,#48]
 2935 0090 1A60     	 str r2,[r3]
 2936              	.L170:
2574:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2575:../Dave/Generated/UCPROBE/lib_mem.c **** 
2576:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_SEG_OVF;
 2937              	 .loc 1 2576 0
 2938 0092 7B6B     	 ldr r3,[r7,#52]
 2939 0094 42F2D972 	 movw r2,#10201
 2940 0098 1A80     	 strh r2,[r3]
2577:../Dave/Generated/UCPROBE/lib_mem.c ****         return (DEF_NULL);
 2941              	 .loc 1 2577 0
 2942 009a 0023     	 movs r3,#0
 2943 009c 07E0     	 b .L171
 2944              	.L169:
2578:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2579:../Dave/Generated/UCPROBE/lib_mem.c **** 
2580:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AddrNext = addr_next;
 2945              	 .loc 1 2580 0
 2946 009e FB68     	 ldr r3,[r7,#12]
 2947 00a0 FA69     	 ldr r2,[r7,#28]
 2948 00a2 9A60     	 str r2,[r3,#8]
2581:../Dave/Generated/UCPROBE/lib_mem.c **** 
2582:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 2949              	 .loc 1 2582 0
 2950 00a4 7B6B     	 ldr r3,[r7,#52]
 2951 00a6 42F21072 	 movw r2,#10000
 2952 00aa 1A80     	 strh r2,[r3]
2583:../Dave/Generated/UCPROBE/lib_mem.c **** 
2584:../Dave/Generated/UCPROBE/lib_mem.c ****     return ((void *)blk_addr);
 2953              	 .loc 1 2584 0
 2954 00ac 3B6A     	 ldr r3,[r7,#32]
 2955              	.L171:
2585:../Dave/Generated/UCPROBE/lib_mem.c **** }
 2956              	 .loc 1 2585 0
 2957 00ae 1846     	 mov r0,r3
 2958 00b0 2C37     	 adds r7,r7,#44
 2959              	.LCFI144:
 2960              	 .cfi_def_cfa_offset 4
 2961 00b2 BD46     	 mov sp,r7
 2962              	.LCFI145:
 2963              	 .cfi_def_cfa_register 13
 2964              	 
 2965 00b4 5DF8047B 	 ldr r7,[sp],#4
 2966              	.LCFI146:
 2967              	 .cfi_restore 7
 2968              	 .cfi_def_cfa_offset 0
 2969 00b8 7047     	 bx lr
 2970              	 .cfi_endproc
 2971              	.LFE27:
 2973 00ba 00BF     	 .section .text.Mem_DynPoolCreateInternal,"ax",%progbits
 2974              	 .align 2
 2975              	 .thumb
 2976              	 .thumb_func
 2978              	Mem_DynPoolCreateInternal:
 2979              	.LFB28:
2586:../Dave/Generated/UCPROBE/lib_mem.c **** 
2587:../Dave/Generated/UCPROBE/lib_mem.c **** 
2588:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2589:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2590:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_SegAllocTrackCritical()
2591:../Dave/Generated/UCPROBE/lib_mem.c **** *
2592:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Tracks segment allocation, adding the 'size' of the allocation under the 'p_name' e
2593:../Dave/Generated/UCPROBE/lib_mem.c **** *
2594:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name  Pointer to the name of the object. This string is not copied and its memory
2595:../Dave/Generated/UCPROBE/lib_mem.c **** *                       remain accessible at all times.
2596:../Dave/Generated/UCPROBE/lib_mem.c **** *
2597:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg   Pointer to segment data.
2598:../Dave/Generated/UCPROBE/lib_mem.c **** *
2599:../Dave/Generated/UCPROBE/lib_mem.c **** *               size    Allocation size, in bytes.
2600:../Dave/Generated/UCPROBE/lib_mem.c **** *
2601:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err   Pointer to variable that will receive the return error code from this funct
2602:../Dave/Generated/UCPROBE/lib_mem.c **** *
2603:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_HEAP_EMPTY      No more memory available on heap
2604:../Dave/Generated/UCPROBE/lib_mem.c **** *
2605:../Dave/Generated/UCPROBE/lib_mem.c **** *                           --------------RETURNED BY Mem_SegAllocExtCritical()---------------
2606:../Dave/Generated/UCPROBE/lib_mem.c **** *                           LIB_MEM_ERR_SEG_OVF         Allocation would overflow memory segment.
2607:../Dave/Generated/UCPROBE/lib_mem.c **** *
2608:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : none.
2609:../Dave/Generated/UCPROBE/lib_mem.c **** *
2610:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_PoolCreate(),
2611:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_SegAllocInternal().
2612:../Dave/Generated/UCPROBE/lib_mem.c **** *
2613:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : none.
2614:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2615:../Dave/Generated/UCPROBE/lib_mem.c **** */
2616:../Dave/Generated/UCPROBE/lib_mem.c **** 
2617:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2618:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_SegAllocTrackCritical (const  CPU_CHAR    *p_name,
2619:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_SEG     *p_seg,
2620:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T   size,
2621:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 LIB_ERR     *p_err)
2622:../Dave/Generated/UCPROBE/lib_mem.c **** {
2623:../Dave/Generated/UCPROBE/lib_mem.c ****     MEM_ALLOC_INFO  *p_alloc;
2624:../Dave/Generated/UCPROBE/lib_mem.c **** 
2625:../Dave/Generated/UCPROBE/lib_mem.c **** 
2626:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ------- UPDATE ALLOC INFO LIST, 
2627:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc = p_seg->AllocInfoHeadPtr;
2628:../Dave/Generated/UCPROBE/lib_mem.c ****     while (p_alloc != DEF_NULL) {
2629:../Dave/Generated/UCPROBE/lib_mem.c ****         if (p_alloc->NamePtr == p_name) {
2630:../Dave/Generated/UCPROBE/lib_mem.c ****             p_alloc->Size += size;
2631:../Dave/Generated/UCPROBE/lib_mem.c ****            *p_err = LIB_MEM_ERR_NONE;
2632:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
2633:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2634:../Dave/Generated/UCPROBE/lib_mem.c **** 
2635:../Dave/Generated/UCPROBE/lib_mem.c ****         p_alloc = p_alloc->NextPtr;
2636:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2637:../Dave/Generated/UCPROBE/lib_mem.c **** 
2638:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* --------- ADD NEW ALLOC INFO ENT
2639:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc = Mem_SegAllocExtCritical(&Mem_SegHeap,             /* Alloc new alloc info struct on h
2640:../Dave/Generated/UCPROBE/lib_mem.c ****                                        sizeof(MEM_ALLOC_INFO),
2641:../Dave/Generated/UCPROBE/lib_mem.c ****                                        sizeof(CPU_ALIGN),
2642:../Dave/Generated/UCPROBE/lib_mem.c ****                                        LIB_MEM_PADDING_ALIGN_NONE,
2643:../Dave/Generated/UCPROBE/lib_mem.c ****                                        DEF_NULL,
2644:../Dave/Generated/UCPROBE/lib_mem.c ****                                        p_err);
2645:../Dave/Generated/UCPROBE/lib_mem.c ****     if (*p_err != LIB_MEM_ERR_NONE) {
2646:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2647:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2648:../Dave/Generated/UCPROBE/lib_mem.c **** 
2649:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->NamePtr = p_name;                                  /* Populate alloc info.            
2650:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->Size    = size;
2651:../Dave/Generated/UCPROBE/lib_mem.c **** 
2652:../Dave/Generated/UCPROBE/lib_mem.c ****     p_alloc->NextPtr        = p_seg->AllocInfoHeadPtr;          /* Prepend new item in list.       
2653:../Dave/Generated/UCPROBE/lib_mem.c ****     p_seg->AllocInfoHeadPtr = p_alloc;
2654:../Dave/Generated/UCPROBE/lib_mem.c **** }
2655:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2656:../Dave/Generated/UCPROBE/lib_mem.c **** 
2657:../Dave/Generated/UCPROBE/lib_mem.c **** 
2658:../Dave/Generated/UCPROBE/lib_mem.c **** /*
2659:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2660:../Dave/Generated/UCPROBE/lib_mem.c **** *                                     Mem_DynPoolCreateInternal()
2661:../Dave/Generated/UCPROBE/lib_mem.c **** *
2662:../Dave/Generated/UCPROBE/lib_mem.c **** * Description : Creates a dynamic memory pool.
2663:../Dave/Generated/UCPROBE/lib_mem.c **** *
2664:../Dave/Generated/UCPROBE/lib_mem.c **** * Argument(s) : p_name              Pointer to pool name.
2665:../Dave/Generated/UCPROBE/lib_mem.c **** *
2666:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_pool              Pointer to pool data.
2667:../Dave/Generated/UCPROBE/lib_mem.c **** *
2668:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_seg               Pointer to segment from which to allocate memory.
2669:../Dave/Generated/UCPROBE/lib_mem.c **** *
2670:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_size            Size of memory block to allocate from pool, in bytes. See Note 
2671:../Dave/Generated/UCPROBE/lib_mem.c **** *
2672:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_align           Required alignment of memory block, in bytes. MUST be a power o
2673:../Dave/Generated/UCPROBE/lib_mem.c **** *
2674:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_padding_align   Block's padding alignment, in bytes, that will be added at the 
2675:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   of block's buffer. MUST be a power of 2. LIB_MEM_PADDING_ALIGN_
2676:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   means no padding.
2677:../Dave/Generated/UCPROBE/lib_mem.c **** *
2678:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_init        Initial number of elements to be allocated in pool.
2679:../Dave/Generated/UCPROBE/lib_mem.c **** *
2680:../Dave/Generated/UCPROBE/lib_mem.c **** *               blk_qty_max         Maximum number of elements that can be allocated from this pool
2681:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_BLK_QTY_UNLIMITED if no limit.
2682:../Dave/Generated/UCPROBE/lib_mem.c **** *
2683:../Dave/Generated/UCPROBE/lib_mem.c **** *               p_err           Pointer to variable that will receive the return error code from th
2684:../Dave/Generated/UCPROBE/lib_mem.c **** *
2685:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_ALIGN   Invalid requested block alignme
2686:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid requested block size.
2687:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_BLK_NBR     Invalid requested block quantit
2688:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Pool data pointer NULL.
2689:../Dave/Generated/UCPROBE/lib_mem.c **** *
2690:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   ------------------RETURNED BY Mem_SegAllocInternal()-----------
2691:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory block alignment 
2692:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory block size speci
2693:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_NULL_PTR            Error or segment data pointer N
2694:../Dave/Generated/UCPROBE/lib_mem.c **** *                                   LIB_MEM_ERR_SEG_OVF             Allocation would overflow memor
2695:../Dave/Generated/UCPROBE/lib_mem.c **** *
2696:../Dave/Generated/UCPROBE/lib_mem.c **** * Return(s)   : None.
2697:../Dave/Generated/UCPROBE/lib_mem.c **** *
2698:../Dave/Generated/UCPROBE/lib_mem.c **** * Caller(s)   : Mem_DynPoolCreate(),
2699:../Dave/Generated/UCPROBE/lib_mem.c **** *               Mem_DynPoolCreateHW().
2700:../Dave/Generated/UCPROBE/lib_mem.c **** *
2701:../Dave/Generated/UCPROBE/lib_mem.c **** * Note(s)     : (1) 'blk_size' must be big enough to fit a pointer since the pointer to the next fr
2702:../Dave/Generated/UCPROBE/lib_mem.c **** *                   block is stored in the block itself (only when free/unused).
2703:../Dave/Generated/UCPROBE/lib_mem.c **** ***************************************************************************************************
2704:../Dave/Generated/UCPROBE/lib_mem.c **** */
2705:../Dave/Generated/UCPROBE/lib_mem.c **** 
2706:../Dave/Generated/UCPROBE/lib_mem.c **** static  void  Mem_DynPoolCreateInternal (const  CPU_CHAR      *p_name,
2707:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_DYN_POOL  *p_pool,
2708:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 MEM_SEG       *p_seg,
2709:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_size,
2710:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_align,
2711:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_padding_align,
2712:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_qty_init,
2713:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 CPU_SIZE_T     blk_qty_max,
2714:../Dave/Generated/UCPROBE/lib_mem.c ****                                                 LIB_ERR       *p_err)
2715:../Dave/Generated/UCPROBE/lib_mem.c **** {
 2980              	 .loc 1 2715 0
 2981              	 .cfi_startproc
 2982              	 
 2983              	 
 2984 0000 80B5     	 push {r7,lr}
 2985              	.LCFI147:
 2986              	 .cfi_def_cfa_offset 8
 2987              	 .cfi_offset 7,-8
 2988              	 .cfi_offset 14,-4
 2989 0002 8CB0     	 sub sp,sp,#48
 2990              	.LCFI148:
 2991              	 .cfi_def_cfa_offset 56
 2992 0004 04AF     	 add r7,sp,#16
 2993              	.LCFI149:
 2994              	 .cfi_def_cfa 7,40
 2995 0006 F860     	 str r0,[r7,#12]
 2996 0008 B960     	 str r1,[r7,#8]
 2997 000a 7A60     	 str r2,[r7,#4]
 2998 000c 3B60     	 str r3,[r7]
2716:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_INT08U  *p_blks;
2717:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   blk_size_align;
2718:../Dave/Generated/UCPROBE/lib_mem.c ****     CPU_SIZE_T   blk_align_worst = DEF_MAX(blk_align, blk_padding_align);
 2999              	 .loc 1 2718 0
 3000 000e FA6A     	 ldr r2,[r7,#44]
 3001 0010 BB6A     	 ldr r3,[r7,#40]
 3002 0012 9342     	 cmp r3,r2
 3003 0014 38BF     	 it cc
 3004 0016 1346     	 movcc r3,r2
 3005 0018 3B61     	 str r3,[r7,#16]
2719:../Dave/Generated/UCPROBE/lib_mem.c **** 
2720:../Dave/Generated/UCPROBE/lib_mem.c **** 
2721:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
2722:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_err == DEF_NULL) {                                    /* Chk for NULL err ptr.           
2723:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SW_EXCEPTION(DEF_NULL);
2724:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2725:../Dave/Generated/UCPROBE/lib_mem.c **** 
2726:../Dave/Generated/UCPROBE/lib_mem.c ****     if (p_pool == DEF_NULL) {                                   /* Chk for NULL pool data ptr.     
2727:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_NULL_PTR;
2728:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2729:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2730:../Dave/Generated/UCPROBE/lib_mem.c **** 
2731:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < 1u) {                                        /* Chk for inv blk size.           
2732:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_SIZE;
2733:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2734:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2735:../Dave/Generated/UCPROBE/lib_mem.c **** 
2736:../Dave/Generated/UCPROBE/lib_mem.c ****     if ((blk_qty_max  != LIB_MEM_BLK_QTY_UNLIMITED) &&          /* Chk for invalid blk qty.        
2737:../Dave/Generated/UCPROBE/lib_mem.c ****         (blk_qty_init >  blk_qty_max)) {
2738:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_NBR;
2739:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2740:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2741:../Dave/Generated/UCPROBE/lib_mem.c **** 
2742:../Dave/Generated/UCPROBE/lib_mem.c ****     if (MATH_IS_PWR2(blk_align) != DEF_YES) {                   /* Chk for illegal align spec.     
2743:../Dave/Generated/UCPROBE/lib_mem.c ****        *p_err = LIB_MEM_ERR_INVALID_BLK_ALIGN;
2744:../Dave/Generated/UCPROBE/lib_mem.c ****         return;
2745:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2746:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2747:../Dave/Generated/UCPROBE/lib_mem.c **** 
2748:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* Calc blk size with align.       
2749:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_size < sizeof(void *)) {                            /* If size if smaller than ptr ... 
 3006              	 .loc 1 2749 0
 3007 001a 3B68     	 ldr r3,[r7]
 3008 001c 032B     	 cmp r3,#3
 3009 001e 0FD8     	 bhi .L173
2750:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ... inc size to ptr size.       
2751:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_size_align = MATH_ROUND_INC_UP_PWR2(sizeof(void *), blk_align_worst);
 3010              	 .loc 1 2751 0
 3011 0020 3B69     	 ldr r3,[r7,#16]
 3012 0022 5B42     	 negs r3,r3
 3013 0024 03F00402 	 and r2,r3,#4
 3014 0028 3B69     	 ldr r3,[r7,#16]
 3015 002a 013B     	 subs r3,r3,#1
 3016 002c 03F00403 	 and r3,r3,#4
 3017 0030 002B     	 cmp r3,#0
 3018 0032 01D0     	 beq .L174
 3019              	 .loc 1 2751 0 is_stmt 0 discriminator 1
 3020 0034 3B69     	 ldr r3,[r7,#16]
 3021 0036 00E0     	 b .L175
 3022              	.L174:
 3023              	 .loc 1 2751 0 discriminator 2
 3024 0038 0023     	 movs r3,#0
 3025              	.L175:
 3026              	 .loc 1 2751 0 discriminator 4
 3027 003a 1344     	 add r3,r3,r2
 3028 003c BB61     	 str r3,[r7,#24]
 3029 003e 0EE0     	 b .L176
 3030              	.L173:
2752:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2753:../Dave/Generated/UCPROBE/lib_mem.c ****         blk_size_align = MATH_ROUND_INC_UP_PWR2(blk_size, blk_align_worst);
 3031              	 .loc 1 2753 0 is_stmt 1
 3032 0040 3B69     	 ldr r3,[r7,#16]
 3033 0042 5A42     	 negs r2,r3
 3034 0044 3B68     	 ldr r3,[r7]
 3035 0046 1A40     	 ands r2,r2,r3
 3036 0048 3B69     	 ldr r3,[r7,#16]
 3037 004a 591E     	 subs r1,r3,#1
 3038 004c 3B68     	 ldr r3,[r7]
 3039 004e 0B40     	 ands r3,r3,r1
 3040 0050 002B     	 cmp r3,#0
 3041 0052 01D0     	 beq .L177
 3042              	 .loc 1 2753 0 is_stmt 0 discriminator 1
 3043 0054 3B69     	 ldr r3,[r7,#16]
 3044 0056 00E0     	 b .L178
 3045              	.L177:
 3046              	 .loc 1 2753 0 discriminator 2
 3047 0058 0023     	 movs r3,#0
 3048              	.L178:
 3049              	 .loc 1 2753 0 discriminator 4
 3050 005a 1344     	 add r3,r3,r2
 3051 005c BB61     	 str r3,[r7,#24]
 3052              	.L176:
2754:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2755:../Dave/Generated/UCPROBE/lib_mem.c **** 
2756:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_qty_init != 0u) {                                   /* Alloc init blks.                
 3053              	 .loc 1 2756 0 is_stmt 1
 3054 005e 3B6B     	 ldr r3,[r7,#48]
 3055 0060 002B     	 cmp r3,#0
 3056 0062 16D0     	 beq .L179
2757:../Dave/Generated/UCPROBE/lib_mem.c ****         p_blks = (CPU_INT08U *)Mem_SegAllocInternal(p_name,
 3057              	 .loc 1 2757 0
 3058 0064 BB69     	 ldr r3,[r7,#24]
 3059 0066 3A6B     	 ldr r2,[r7,#48]
 3060 0068 02FB03F2 	 mul r2,r2,r3
 3061 006c 0123     	 movs r3,#1
 3062 006e 0093     	 str r3,[sp]
 3063 0070 0023     	 movs r3,#0
 3064 0072 0193     	 str r3,[sp,#4]
 3065 0074 BB6B     	 ldr r3,[r7,#56]
 3066 0076 0293     	 str r3,[sp,#8]
 3067 0078 F868     	 ldr r0,[r7,#12]
 3068 007a 7968     	 ldr r1,[r7,#4]
 3069 007c 3B69     	 ldr r3,[r7,#16]
 3070 007e FFF7FEFF 	 bl Mem_SegAllocInternal
 3071 0082 F861     	 str r0,[r7,#28]
2758:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_seg,
2759:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     blk_size_align * blk_qty_init,
2760:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     blk_align_worst,
2761:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     LIB_MEM_PADDING_ALIGN_NONE,
2762:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     DEF_NULL,
2763:../Dave/Generated/UCPROBE/lib_mem.c ****                                                     p_err);
2764:../Dave/Generated/UCPROBE/lib_mem.c ****         if (*p_err != LIB_MEM_ERR_NONE) {
 3072              	 .loc 1 2764 0
 3073 0084 BB6B     	 ldr r3,[r7,#56]
 3074 0086 1B88     	 ldrh r3,[r3]
 3075 0088 42F21072 	 movw r2,#10000
 3076 008c 9342     	 cmp r3,r2
 3077 008e 00D0     	 beq .L179
2765:../Dave/Generated/UCPROBE/lib_mem.c ****             return;
 3078              	 .loc 1 2765 0
 3079 0090 36E0     	 b .L172
 3080              	.L179:
2766:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2767:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2768:../Dave/Generated/UCPROBE/lib_mem.c **** 
2769:../Dave/Generated/UCPROBE/lib_mem.c **** 
2770:../Dave/Generated/UCPROBE/lib_mem.c ****                                                                 /* ----------------- CREATE POOL DA
2771:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->PoolSegPtr      = p_seg;
 3081              	 .loc 1 2771 0
 3082 0092 BB68     	 ldr r3,[r7,#8]
 3083 0094 7A68     	 ldr r2,[r7,#4]
 3084 0096 1A60     	 str r2,[r3]
2772:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkSize         = blk_size;
 3085              	 .loc 1 2772 0
 3086 0098 BB68     	 ldr r3,[r7,#8]
 3087 009a 3A68     	 ldr r2,[r7]
 3088 009c 5A60     	 str r2,[r3,#4]
2773:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAlign        = blk_align_worst;
 3089              	 .loc 1 2773 0
 3090 009e BB68     	 ldr r3,[r7,#8]
 3091 00a0 3A69     	 ldr r2,[r7,#16]
 3092 00a2 9A60     	 str r2,[r3,#8]
2774:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkPaddingAlign = blk_padding_align;
 3093              	 .loc 1 2774 0
 3094 00a4 BB68     	 ldr r3,[r7,#8]
 3095 00a6 FA6A     	 ldr r2,[r7,#44]
 3096 00a8 DA60     	 str r2,[r3,#12]
2775:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkQtyMax       = blk_qty_max;
 3097              	 .loc 1 2775 0
 3098 00aa BB68     	 ldr r3,[r7,#8]
 3099 00ac 7A6B     	 ldr r2,[r7,#52]
 3100 00ae 5A61     	 str r2,[r3,#20]
2776:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->BlkAllocCnt     = 0u;
 3101              	 .loc 1 2776 0
 3102 00b0 BB68     	 ldr r3,[r7,#8]
 3103 00b2 0022     	 movs r2,#0
 3104 00b4 9A61     	 str r2,[r3,#24]
2777:../Dave/Generated/UCPROBE/lib_mem.c **** 
2778:../Dave/Generated/UCPROBE/lib_mem.c ****     if (blk_qty_init != 0u) {                                   /* Init free list.                 
 3105              	 .loc 1 2778 0
 3106 00b6 3B6B     	 ldr r3,[r7,#48]
 3107 00b8 002B     	 cmp r3,#0
 3108 00ba 1AD0     	 beq .L181
 3109              	.LBB3:
2779:../Dave/Generated/UCPROBE/lib_mem.c ****         CPU_SIZE_T  i;
2780:../Dave/Generated/UCPROBE/lib_mem.c **** 
2781:../Dave/Generated/UCPROBE/lib_mem.c **** 
2782:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = (void *)p_blks;
 3110              	 .loc 1 2782 0
 3111 00bc BB68     	 ldr r3,[r7,#8]
 3112 00be FA69     	 ldr r2,[r7,#28]
 3113 00c0 1A61     	 str r2,[r3,#16]
2783:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 3114              	 .loc 1 2783 0
 3115 00c2 0023     	 movs r3,#0
 3116 00c4 7B61     	 str r3,[r7,#20]
 3117 00c6 0BE0     	 b .L182
 3118              	.L183:
2784:../Dave/Generated/UCPROBE/lib_mem.c ****            *((void **)p_blks)  = p_blks + blk_size_align;
 3119              	 .loc 1 2784 0 discriminator 3
 3120 00c8 FA69     	 ldr r2,[r7,#28]
 3121 00ca BB69     	 ldr r3,[r7,#24]
 3122 00cc 1A44     	 add r2,r2,r3
 3123 00ce FB69     	 ldr r3,[r7,#28]
 3124 00d0 1A60     	 str r2,[r3]
2785:../Dave/Generated/UCPROBE/lib_mem.c ****             p_blks            += blk_size_align;
 3125              	 .loc 1 2785 0 discriminator 3
 3126 00d2 FA69     	 ldr r2,[r7,#28]
 3127 00d4 BB69     	 ldr r3,[r7,#24]
 3128 00d6 1344     	 add r3,r3,r2
 3129 00d8 FB61     	 str r3,[r7,#28]
2783:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 3130              	 .loc 1 2783 0 discriminator 3
 3131 00da 7B69     	 ldr r3,[r7,#20]
 3132 00dc 0133     	 adds r3,r3,#1
 3133 00de 7B61     	 str r3,[r7,#20]
 3134              	.L182:
2783:../Dave/Generated/UCPROBE/lib_mem.c ****         for (i = 0u; i < blk_qty_init - 1u; i++) {
 3135              	 .loc 1 2783 0 is_stmt 0 discriminator 1
 3136 00e0 3B6B     	 ldr r3,[r7,#48]
 3137 00e2 5A1E     	 subs r2,r3,#1
 3138 00e4 7B69     	 ldr r3,[r7,#20]
 3139 00e6 9A42     	 cmp r2,r3
 3140 00e8 EED8     	 bhi .L183
2786:../Dave/Generated/UCPROBE/lib_mem.c ****         }
2787:../Dave/Generated/UCPROBE/lib_mem.c ****        *((void **)p_blks) = DEF_NULL;
 3141              	 .loc 1 2787 0 is_stmt 1
 3142 00ea FB69     	 ldr r3,[r7,#28]
 3143 00ec 0022     	 movs r2,#0
 3144 00ee 1A60     	 str r2,[r3]
 3145              	.LBE3:
 3146 00f0 02E0     	 b .L184
 3147              	.L181:
2788:../Dave/Generated/UCPROBE/lib_mem.c ****     } else {
2789:../Dave/Generated/UCPROBE/lib_mem.c ****         p_pool->BlkFreePtr = DEF_NULL;
 3148              	 .loc 1 2789 0
 3149 00f2 BB68     	 ldr r3,[r7,#8]
 3150 00f4 0022     	 movs r2,#0
 3151 00f6 1A61     	 str r2,[r3,#16]
 3152              	.L184:
2790:../Dave/Generated/UCPROBE/lib_mem.c ****     }
2791:../Dave/Generated/UCPROBE/lib_mem.c **** 
2792:../Dave/Generated/UCPROBE/lib_mem.c **** #if (LIB_MEM_CFG_DBG_INFO_EN == DEF_ENABLED)
2793:../Dave/Generated/UCPROBE/lib_mem.c ****     p_pool->NamePtr = p_name;
2794:../Dave/Generated/UCPROBE/lib_mem.c **** #endif
2795:../Dave/Generated/UCPROBE/lib_mem.c **** 
2796:../Dave/Generated/UCPROBE/lib_mem.c ****    *p_err = LIB_MEM_ERR_NONE;
 3153              	 .loc 1 2796 0
 3154 00f8 BB6B     	 ldr r3,[r7,#56]
 3155 00fa 42F21072 	 movw r2,#10000
 3156 00fe 1A80     	 strh r2,[r3]
 3157              	.L172:
2797:../Dave/Generated/UCPROBE/lib_mem.c **** }
 3158              	 .loc 1 2797 0
 3159 0100 2037     	 adds r7,r7,#32
 3160              	.LCFI150:
 3161              	 .cfi_def_cfa_offset 8
 3162 0102 BD46     	 mov sp,r7
 3163              	.LCFI151:
 3164              	 .cfi_def_cfa_register 13
 3165              	 
 3166 0104 80BD     	 pop {r7,pc}
 3167              	 .cfi_endproc
 3168              	.LFE28:
 3170 0106 00BF     	 .text
 3171              	.Letext0:
 3172              	 .file 2 "../Dave/Generated/UCPROBE/cpu.h"
 3173              	 .file 3 "../Dave/Generated/UCPROBE/lib_def.h"
 3174              	 .file 4 "../Dave/Generated/UCPROBE/lib_mem.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lib_mem.c
                            *COM*:00000400 Mem_Heap
                            *COM*:00000014 Mem_SegHeap
                            *COM*:00000004 Mem_SegHeadPtr
    {standard input}:23     .rodata:00000000 $d
    {standard input}:27     .text.Mem_Init:00000000 $t
    {standard input}:32     .text.Mem_Init:00000000 Mem_Init
    {standard input}:1074   .text.Mem_SegCreate:00000000 Mem_SegCreate
    {standard input}:89     .text.Mem_Init:0000003c $d
    {standard input}:97     .text.Mem_Clr:00000000 $t
    {standard input}:102    .text.Mem_Clr:00000000 Mem_Clr
    {standard input}:144    .text.Mem_Set:00000000 Mem_Set
    {standard input}:139    .text.Mem_Set:00000000 $t
    {standard input}:295    .text.Mem_Copy:00000000 $t
    {standard input}:300    .text.Mem_Copy:00000000 Mem_Copy
    {standard input}:475    .text.Mem_Move:00000000 $t
    {standard input}:480    .text.Mem_Move:00000000 Mem_Move
    {standard input}:683    .text.Mem_Cmp:00000000 $t
    {standard input}:688    .text.Mem_Cmp:00000000 Mem_Cmp
    {standard input}:937    .text.Mem_HeapAlloc:00000000 $t
    {standard input}:942    .text.Mem_HeapAlloc:00000000 Mem_HeapAlloc
    {standard input}:2756   .text.Mem_SegAllocInternal:00000000 Mem_SegAllocInternal
    {standard input}:1002   .text.Mem_HeapAlloc:00000048 $d
    {standard input}:1007   .text.Mem_HeapGetSizeRem:00000000 $t
    {standard input}:1012   .text.Mem_HeapGetSizeRem:00000000 Mem_HeapGetSizeRem
    {standard input}:1189   .text.Mem_SegRemSizeGet:00000000 Mem_SegRemSizeGet
    {standard input}:1064   .text.Mem_HeapGetSizeRem:00000034 $d
    {standard input}:1069   .text.Mem_SegCreate:00000000 $t
    {standard input}:2551   .text.Mem_SegCreateCritical:00000000 Mem_SegCreateCritical
    {standard input}:1129   .text.Mem_SegClr:00000000 $t
    {standard input}:1134   .text.Mem_SegClr:00000000 Mem_SegClr
    {standard input}:1184   .text.Mem_SegRemSizeGet:00000000 $t
    {standard input}:1310   .text.Mem_SegRemSizeGet:0000009c $d
    {standard input}:1315   .text.Mem_SegAlloc:00000000 $t
    {standard input}:1320   .text.Mem_SegAlloc:00000000 Mem_SegAlloc
    {standard input}:1377   .text.Mem_SegAlloc:0000003c $d
    {standard input}:1382   .text.Mem_SegAllocExt:00000000 $t
    {standard input}:1387   .text.Mem_SegAllocExt:00000000 Mem_SegAllocExt
    {standard input}:1444   .text.Mem_SegAllocExt:0000003c $d
    {standard input}:1449   .text.Mem_SegAllocHW:00000000 $t
    {standard input}:1454   .text.Mem_SegAllocHW:00000000 Mem_SegAllocHW
    {standard input}:1512   .text.Mem_SegAllocHW:00000040 $d
    {standard input}:1524   .text.Mem_PoolCreate:00000000 $t
    {standard input}:1529   .text.Mem_PoolCreate:00000000 Mem_PoolCreate
    {standard input}:1797   .text.Mem_PoolClr:00000000 Mem_PoolClr
    {standard input}:2625   .text.Mem_SegOverlapChkCritical:00000000 Mem_SegOverlapChkCritical
    {standard input}:2831   .text.Mem_SegAllocExtCritical:00000000 Mem_SegAllocExtCritical
    {standard input}:1785   .text.Mem_PoolCreate:00000184 $d
    {standard input}:1792   .text.Mem_PoolClr:00000000 $t
    {standard input}:1861   .text.Mem_PoolBlkGet:00000000 $t
    {standard input}:1866   .text.Mem_PoolBlkGet:00000000 Mem_PoolBlkGet
    {standard input}:1959   .text.Mem_PoolBlkFree:00000000 $t
    {standard input}:1964   .text.Mem_PoolBlkFree:00000000 Mem_PoolBlkFree
    {standard input}:2043   .text.Mem_PoolBlkGetNbrAvail:00000000 $t
    {standard input}:2048   .text.Mem_PoolBlkGetNbrAvail:00000000 Mem_PoolBlkGetNbrAvail
    {standard input}:2100   .text.Mem_DynPoolCreate:00000000 $t
    {standard input}:2105   .text.Mem_DynPoolCreate:00000000 Mem_DynPoolCreate
    {standard input}:2978   .text.Mem_DynPoolCreateInternal:00000000 Mem_DynPoolCreateInternal
    {standard input}:2162   .text.Mem_DynPoolCreate:00000040 $d
    {standard input}:2167   .text.Mem_DynPoolCreateHW:00000000 $t
    {standard input}:2172   .text.Mem_DynPoolCreateHW:00000000 Mem_DynPoolCreateHW
    {standard input}:2230   .text.Mem_DynPoolCreateHW:00000040 $d
    {standard input}:2235   .text.Mem_DynPoolBlkGet:00000000 $t
    {standard input}:2240   .text.Mem_DynPoolBlkGet:00000000 Mem_DynPoolBlkGet
    {standard input}:2378   .text.Mem_DynPoolBlkFree:00000000 $t
    {standard input}:2383   .text.Mem_DynPoolBlkFree:00000000 Mem_DynPoolBlkFree
    {standard input}:2472   .text.Mem_DynPoolBlkNbrAvailGet:00000000 $t
    {standard input}:2477   .text.Mem_DynPoolBlkNbrAvailGet:00000000 Mem_DynPoolBlkNbrAvailGet
    {standard input}:2547   .text.Mem_SegCreateCritical:00000000 $t
    {standard input}:2616   .text.Mem_SegCreateCritical:00000044 $d
    {standard input}:2621   .text.Mem_SegOverlapChkCritical:00000000 $t
    {standard input}:2747   .text.Mem_SegOverlapChkCritical:00000094 $d
    {standard input}:2752   .text.Mem_SegAllocInternal:00000000 $t
    {standard input}:2827   .text.Mem_SegAllocExtCritical:00000000 $t
    {standard input}:2974   .text.Mem_DynPoolCreateInternal:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CPU_SW_Exception
CPU_SR_Save
CPU_SR_Restore
