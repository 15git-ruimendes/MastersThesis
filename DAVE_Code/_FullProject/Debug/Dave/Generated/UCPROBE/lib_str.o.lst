   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "lib_str.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .rodata.Str_MultOvfThTbl_Int32U,"a",%progbits
  20              	 .align 2
  23              	Str_MultOvfThTbl_Int32U:
  24 0000 FFFFFFFF 	 .word -1
  25 0004 FFFFFFFF 	 .word -1
  26 0008 FFFFFF7F 	 .word 2147483647
  27 000c 55555555 	 .word 1431655765
  28 0010 FFFFFF3F 	 .word 1073741823
  29 0014 33333333 	 .word 858993459
  30 0018 AAAAAA2A 	 .word 715827882
  31 001c 24499224 	 .word 613566756
  32 0020 FFFFFF1F 	 .word 536870911
  33 0024 1CC7711C 	 .word 477218588
  34 0028 99999919 	 .word 429496729
  35 002c 74D14517 	 .word 390451572
  36 0030 55555515 	 .word 357913941
  37 0034 133BB113 	 .word 330382099
  38 0038 92244912 	 .word 306783378
  39 003c 11111111 	 .word 286331153
  40 0040 FFFFFF0F 	 .word 268435455
  41 0044 0F0F0F0F 	 .word 252645135
  42 0048 8EE3380E 	 .word 238609294
  43 004c 5E43790D 	 .word 226050910
  44 0050 CCCCCC0C 	 .word 214748364
  45 0054 0CC3300C 	 .word 204522252
  46 0058 BAE8A20B 	 .word 195225786
  47 005c 2C64210B 	 .word 186737708
  48 0060 AAAAAA0A 	 .word 178956970
  49 0064 A3703D0A 	 .word 171798691
  50 0068 899DD809 	 .word 165191049
  51 006c 5E427B09 	 .word 159072862
  52 0070 49922409 	 .word 153391689
  53 0074 B0DCD308 	 .word 148102320
  54 0078 88888808 	 .word 143165576
  55 007c 84104208 	 .word 138547332
  56 0080 FFFFFF07 	 .word 134217727
  57 0084 7CF0C107 	 .word 130150524
  58 0088 87878707 	 .word 126322567
  59 008c 07755007 	 .word 122713351
  60 0090 C7711C07 	 .word 119304647
  61              	 .section .text.Str_Len,"ax",%progbits
  62              	 .align 2
  63              	 .global Str_Len
  64              	 .thumb
  65              	 .thumb_func
  67              	Str_Len:
  68              	.LFB0:
  69              	 .file 1 "../Dave/Generated/UCPROBE/lib_str.c"
   1:../Dave/Generated/UCPROBE/lib_str.c **** /*
   2:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
   3:../Dave/Generated/UCPROBE/lib_str.c **** *                                                uC/LIB
   4:../Dave/Generated/UCPROBE/lib_str.c **** *                                        CUSTOM LIBRARY MODULES
   5:../Dave/Generated/UCPROBE/lib_str.c **** *
   6:../Dave/Generated/UCPROBE/lib_str.c **** *                         (c) Copyright 2004-2014; Micrium, Inc.; Weston, FL
   7:../Dave/Generated/UCPROBE/lib_str.c **** *
   8:../Dave/Generated/UCPROBE/lib_str.c **** *                  All rights reserved.  Protected by international copyright laws.
   9:../Dave/Generated/UCPROBE/lib_str.c **** *
  10:../Dave/Generated/UCPROBE/lib_str.c **** *                  uC/LIB is provided in source form to registered licensees ONLY.  It is
  11:../Dave/Generated/UCPROBE/lib_str.c **** *                  illegal to distribute this source code to any third party unless you receive
  12:../Dave/Generated/UCPROBE/lib_str.c **** *                  written permission by an authorized Micrium representative.  Knowledge of
  13:../Dave/Generated/UCPROBE/lib_str.c **** *                  the source code may NOT be used to develop a similar product.
  14:../Dave/Generated/UCPROBE/lib_str.c **** *
  15:../Dave/Generated/UCPROBE/lib_str.c **** *                  Please help us continue to provide the Embedded community with the finest
  16:../Dave/Generated/UCPROBE/lib_str.c **** *                  software available.  Your honesty is greatly appreciated.
  17:../Dave/Generated/UCPROBE/lib_str.c **** *
  18:../Dave/Generated/UCPROBE/lib_str.c **** *                  You can find our product's user manual, API reference, release notes and
  19:../Dave/Generated/UCPROBE/lib_str.c **** *                  more information at: https://doc.micrium.com
  20:../Dave/Generated/UCPROBE/lib_str.c **** *
  21:../Dave/Generated/UCPROBE/lib_str.c **** *                  You can contact us at: http://www.micrium.com
  22:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  23:../Dave/Generated/UCPROBE/lib_str.c **** */
  24:../Dave/Generated/UCPROBE/lib_str.c **** 
  25:../Dave/Generated/UCPROBE/lib_str.c **** /*
  26:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  27:../Dave/Generated/UCPROBE/lib_str.c **** *
  28:../Dave/Generated/UCPROBE/lib_str.c **** *                                       ASCII STRING MANAGEMENT
  29:../Dave/Generated/UCPROBE/lib_str.c **** *
  30:../Dave/Generated/UCPROBE/lib_str.c **** * Filename      : lib_str.c
  31:../Dave/Generated/UCPROBE/lib_str.c **** * Version       : V1.38.01
  32:../Dave/Generated/UCPROBE/lib_str.c **** * Programmer(s) : ITJ
  33:../Dave/Generated/UCPROBE/lib_str.c **** *                 BAN
  34:../Dave/Generated/UCPROBE/lib_str.c **** *                 JDH
  35:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  36:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  37:../Dave/Generated/UCPROBE/lib_str.c **** *
  38:../Dave/Generated/UCPROBE/lib_str.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  39:../Dave/Generated/UCPROBE/lib_str.c **** *
  40:../Dave/Generated/UCPROBE/lib_str.c **** *                         (1) \<Custom Library Directory>\lib_*.*
  41:../Dave/Generated/UCPROBE/lib_str.c **** *
  42:../Dave/Generated/UCPROBE/lib_str.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  43:../Dave/Generated/UCPROBE/lib_str.c **** *
  44:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
  45:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <Custom Library Directory>      directory path for custom l
  46:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <cpu>                           directory name for specific
  47:../Dave/Generated/UCPROBE/lib_str.c **** *                                       <compiler>                      directory name for specific
  48:../Dave/Generated/UCPROBE/lib_str.c **** *
  49:../Dave/Generated/UCPROBE/lib_str.c **** *                     (b) Product-specific library functions are implemented in individual products
  50:../Dave/Generated/UCPROBE/lib_str.c **** *
  51:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  52:../Dave/Generated/UCPROBE/lib_str.c **** * Notice(s)     : (1) The Institute of Electrical and Electronics Engineers and The Open Group, hav
  53:../Dave/Generated/UCPROBE/lib_str.c **** *                     us permission to reprint portions of their documentation.  Portions of this t
  54:../Dave/Generated/UCPROBE/lib_str.c **** *                     reprinted and reproduced in electronic form from the IEEE Std 1003.1, 2004 Ed
  55:../Dave/Generated/UCPROBE/lib_str.c **** *                     Standard for Information Technology -- Portable Operating System Interface (P
  56:../Dave/Generated/UCPROBE/lib_str.c **** *                     The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the In
  57:../Dave/Generated/UCPROBE/lib_str.c **** *                     of Electrical and Electronics Engineers, Inc and The Open Group.  In the even
  58:../Dave/Generated/UCPROBE/lib_str.c **** *                     discrepancy between these versions and the original IEEE and The Open Group S
  59:../Dave/Generated/UCPROBE/lib_str.c **** *                     the original IEEE and The Open Group Standard is the referee document.  The o
  60:../Dave/Generated/UCPROBE/lib_str.c **** *                     Standard can be obtained online at http://www.opengroup.org/unix/online.html.
  61:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  62:../Dave/Generated/UCPROBE/lib_str.c **** */
  63:../Dave/Generated/UCPROBE/lib_str.c **** 
  64:../Dave/Generated/UCPROBE/lib_str.c **** 
  65:../Dave/Generated/UCPROBE/lib_str.c **** /*
  66:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  67:../Dave/Generated/UCPROBE/lib_str.c **** *                                            INCLUDE FILES
  68:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  69:../Dave/Generated/UCPROBE/lib_str.c **** */
  70:../Dave/Generated/UCPROBE/lib_str.c **** 
  71:../Dave/Generated/UCPROBE/lib_str.c **** #define    MICRIUM_SOURCE
  72:../Dave/Generated/UCPROBE/lib_str.c **** #define    LIB_STR_MODULE
  73:../Dave/Generated/UCPROBE/lib_str.c **** #include  "lib_str.h"
  74:../Dave/Generated/UCPROBE/lib_str.c **** 
  75:../Dave/Generated/UCPROBE/lib_str.c **** 
  76:../Dave/Generated/UCPROBE/lib_str.c **** /*
  77:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  78:../Dave/Generated/UCPROBE/lib_str.c **** *                                            LOCAL DEFINES
  79:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  80:../Dave/Generated/UCPROBE/lib_str.c **** */
  81:../Dave/Generated/UCPROBE/lib_str.c **** 
  82:../Dave/Generated/UCPROBE/lib_str.c **** 
  83:../Dave/Generated/UCPROBE/lib_str.c **** /*
  84:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  85:../Dave/Generated/UCPROBE/lib_str.c **** *                                           LOCAL CONSTANTS
  86:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  87:../Dave/Generated/UCPROBE/lib_str.c **** */
  88:../Dave/Generated/UCPROBE/lib_str.c **** 
  89:../Dave/Generated/UCPROBE/lib_str.c **** 
  90:../Dave/Generated/UCPROBE/lib_str.c **** /*
  91:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  92:../Dave/Generated/UCPROBE/lib_str.c **** *                                          LOCAL DATA TYPES
  93:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  94:../Dave/Generated/UCPROBE/lib_str.c **** */
  95:../Dave/Generated/UCPROBE/lib_str.c **** 
  96:../Dave/Generated/UCPROBE/lib_str.c **** 
  97:../Dave/Generated/UCPROBE/lib_str.c **** /*
  98:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
  99:../Dave/Generated/UCPROBE/lib_str.c **** *                                            LOCAL TABLES
 100:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 101:../Dave/Generated/UCPROBE/lib_str.c **** */
 102:../Dave/Generated/UCPROBE/lib_str.c **** 
 103:../Dave/Generated/UCPROBE/lib_str.c **** static  const  CPU_INT32U  Str_MultOvfThTbl_Int32U[] = {
 104:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U) DEF_INT_32U_MAX_VAL,                /*                Invalid base  0.  */
 105:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  1u),         /*                Invalid base  1.  */
 106:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  2u),         /* 32-bit mult ovf th for base  2.  */
 107:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  3u),         /* 32-bit mult ovf th for base  3.  */
 108:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  4u),         /* 32-bit mult ovf th for base  4.  */
 109:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  5u),         /* 32-bit mult ovf th for base  5.  */
 110:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  6u),         /* 32-bit mult ovf th for base  6.  */
 111:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  7u),         /* 32-bit mult ovf th for base  7.  */
 112:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  8u),         /* 32-bit mult ovf th for base  8.  */
 113:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  9u),         /* 32-bit mult ovf th for base  9.  */
 114:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 10u),         /* 32-bit mult ovf th for base 10.  */
 115:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 11u),         /* 32-bit mult ovf th for base 11.  */
 116:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 12u),         /* 32-bit mult ovf th for base 12.  */
 117:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 13u),         /* 32-bit mult ovf th for base 13.  */
 118:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 14u),         /* 32-bit mult ovf th for base 14.  */
 119:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 15u),         /* 32-bit mult ovf th for base 15.  */
 120:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 16u),         /* 32-bit mult ovf th for base 16.  */
 121:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 17u),         /* 32-bit mult ovf th for base 17.  */
 122:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 18u),         /* 32-bit mult ovf th for base 18.  */
 123:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 19u),         /* 32-bit mult ovf th for base 19.  */
 124:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 20u),         /* 32-bit mult ovf th for base 20.  */
 125:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 21u),         /* 32-bit mult ovf th for base 21.  */
 126:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 22u),         /* 32-bit mult ovf th for base 22.  */
 127:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 23u),         /* 32-bit mult ovf th for base 23.  */
 128:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 24u),         /* 32-bit mult ovf th for base 24.  */
 129:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 25u),         /* 32-bit mult ovf th for base 25.  */
 130:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 26u),         /* 32-bit mult ovf th for base 26.  */
 131:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 27u),         /* 32-bit mult ovf th for base 27.  */
 132:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 28u),         /* 32-bit mult ovf th for base 28.  */
 133:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 29u),         /* 32-bit mult ovf th for base 29.  */
 134:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 30u),         /* 32-bit mult ovf th for base 30.  */
 135:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 31u),         /* 32-bit mult ovf th for base 31.  */
 136:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 32u),         /* 32-bit mult ovf th for base 32.  */
 137:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 33u),         /* 32-bit mult ovf th for base 33.  */
 138:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 34u),         /* 32-bit mult ovf th for base 34.  */
 139:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 35u),         /* 32-bit mult ovf th for base 35.  */
 140:../Dave/Generated/UCPROBE/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 36u)          /* 32-bit mult ovf th for base 36.  */
 141:../Dave/Generated/UCPROBE/lib_str.c **** };
 142:../Dave/Generated/UCPROBE/lib_str.c **** 
 143:../Dave/Generated/UCPROBE/lib_str.c **** 
 144:../Dave/Generated/UCPROBE/lib_str.c **** /*
 145:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 146:../Dave/Generated/UCPROBE/lib_str.c **** *                                       LOCAL GLOBAL VARIABLES
 147:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 148:../Dave/Generated/UCPROBE/lib_str.c **** */
 149:../Dave/Generated/UCPROBE/lib_str.c **** 
 150:../Dave/Generated/UCPROBE/lib_str.c **** 
 151:../Dave/Generated/UCPROBE/lib_str.c **** /*
 152:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 153:../Dave/Generated/UCPROBE/lib_str.c **** *                                      LOCAL FUNCTION PROTOTYPES
 154:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 155:../Dave/Generated/UCPROBE/lib_str.c **** */
 156:../Dave/Generated/UCPROBE/lib_str.c **** 
 157:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_CHAR    *Str_FmtNbr_Int32  (       CPU_INT32U     nbr,
 158:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_dig,
 159:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
 160:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_neg,
 161:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR       lead_char,
 162:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    lower_case,
 163:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nul,
 164:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR      *pstr);
 165:../Dave/Generated/UCPROBE/lib_str.c **** 
 166:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_INT32U   Str_ParseNbr_Int32(const  CPU_CHAR      *pstr,
 167:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR     **pstr_next,
 168:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
 169:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
 170:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg);
 171:../Dave/Generated/UCPROBE/lib_str.c **** 
 172:../Dave/Generated/UCPROBE/lib_str.c **** 
 173:../Dave/Generated/UCPROBE/lib_str.c **** /*
 174:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 175:../Dave/Generated/UCPROBE/lib_str.c **** *                                     LOCAL CONFIGURATION ERRORS
 176:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 177:../Dave/Generated/UCPROBE/lib_str.c **** */
 178:../Dave/Generated/UCPROBE/lib_str.c **** 
 179:../Dave/Generated/UCPROBE/lib_str.c **** 
 180:../Dave/Generated/UCPROBE/lib_str.c **** /*
 181:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 182:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Len()
 183:../Dave/Generated/UCPROBE/lib_str.c **** *
 184:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Calculate length of a string.
 185:../Dave/Generated/UCPROBE/lib_str.c **** *
 186:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 187:../Dave/Generated/UCPROBE/lib_str.c **** *
 188:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character
 189:../Dave/Generated/UCPROBE/lib_str.c **** *                   (see Note #2b1).
 190:../Dave/Generated/UCPROBE/lib_str.c **** *
 191:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 192:../Dave/Generated/UCPROBE/lib_str.c **** *
 193:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 194:../Dave/Generated/UCPROBE/lib_str.c **** *
 195:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 196:../Dave/Generated/UCPROBE/lib_str.c **** *
 197:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 198:../Dave/Generated/UCPROBE/lib_str.c **** *                            which 's' ('pstr') points," ...
 199:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "not including the terminating null byte."
 200:../Dave/Generated/UCPROBE/lib_str.c **** *
 201:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 202:../Dave/Generated/UCPROBE/lib_str.c **** *
 203:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 204:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 205:../Dave/Generated/UCPROBE/lib_str.c **** *
 206:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String length calculation terminates when :
 207:../Dave/Generated/UCPROBE/lib_str.c **** *
 208:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer points to NULL.
 209:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 210:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 211:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL address.
 212:../Dave/Generated/UCPROBE/lib_str.c **** *
 213:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found.
 214:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 215:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL character (see Note #2a2).
 216:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 217:../Dave/Generated/UCPROBE/lib_str.c **** */
 218:../Dave/Generated/UCPROBE/lib_str.c **** 
 219:../Dave/Generated/UCPROBE/lib_str.c **** CPU_SIZE_T  Str_Len (const  CPU_CHAR  *pstr)
 220:../Dave/Generated/UCPROBE/lib_str.c **** {
  70              	 .loc 1 220 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74 0000 80B5     	 push {r7,lr}
  75              	.LCFI0:
  76              	 .cfi_def_cfa_offset 8
  77              	 .cfi_offset 7,-8
  78              	 .cfi_offset 14,-4
  79 0002 84B0     	 sub sp,sp,#16
  80              	.LCFI1:
  81              	 .cfi_def_cfa_offset 24
  82 0004 00AF     	 add r7,sp,#0
  83              	.LCFI2:
  84              	 .cfi_def_cfa_register 7
  85 0006 7860     	 str r0,[r7,#4]
 221:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_SIZE_T  len;
 222:../Dave/Generated/UCPROBE/lib_str.c **** 
 223:../Dave/Generated/UCPROBE/lib_str.c **** 
 224:../Dave/Generated/UCPROBE/lib_str.c ****     len = Str_Len_N(pstr,
  86              	 .loc 1 224 0
  87 0008 7868     	 ldr r0,[r7,#4]
  88 000a 4FF0FF31 	 mov r1,#-1
  89 000e FFF7FEFF 	 bl Str_Len_N
  90 0012 F860     	 str r0,[r7,#12]
 225:../Dave/Generated/UCPROBE/lib_str.c ****                     DEF_INT_CPU_U_MAX_VAL);
 226:../Dave/Generated/UCPROBE/lib_str.c **** 
 227:../Dave/Generated/UCPROBE/lib_str.c ****     return (len);
  91              	 .loc 1 227 0
  92 0014 FB68     	 ldr r3,[r7,#12]
 228:../Dave/Generated/UCPROBE/lib_str.c **** }
  93              	 .loc 1 228 0
  94 0016 1846     	 mov r0,r3
  95 0018 1037     	 adds r7,r7,#16
  96              	.LCFI3:
  97              	 .cfi_def_cfa_offset 8
  98 001a BD46     	 mov sp,r7
  99              	.LCFI4:
 100              	 .cfi_def_cfa_register 13
 101              	 
 102 001c 80BD     	 pop {r7,pc}
 103              	 .cfi_endproc
 104              	.LFE0:
 106 001e 00BF     	 .section .text.Str_Len_N,"ax",%progbits
 107              	 .align 2
 108              	 .global Str_Len_N
 109              	 .thumb
 110              	 .thumb_func
 112              	Str_Len_N:
 113              	.LFB1:
 229:../Dave/Generated/UCPROBE/lib_str.c **** 
 230:../Dave/Generated/UCPROBE/lib_str.c **** 
 231:../Dave/Generated/UCPROBE/lib_str.c **** /*
 232:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 233:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Len_N()
 234:../Dave/Generated/UCPROBE/lib_str.c **** *
 235:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Calculate length of a string, up to a maximum number of characters.
 236:../Dave/Generated/UCPROBE/lib_str.c **** *
 237:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 238:../Dave/Generated/UCPROBE/lib_str.c **** *
 239:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to search (see Note #3c).
 240:../Dave/Generated/UCPROBE/lib_str.c **** *
 241:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character,
 242:../Dave/Generated/UCPROBE/lib_str.c **** *                   if terminating NULL character     found (see Note #2b1).
 243:../Dave/Generated/UCPROBE/lib_str.c **** *
 244:../Dave/Generated/UCPROBE/lib_str.c **** *               Requested maximum number of characters to search,
 245:../Dave/Generated/UCPROBE/lib_str.c **** *                   if terminating NULL character NOT found (see Note #3c).
 246:../Dave/Generated/UCPROBE/lib_str.c **** *
 247:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 248:../Dave/Generated/UCPROBE/lib_str.c **** *
 249:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 250:../Dave/Generated/UCPROBE/lib_str.c **** *
 251:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 252:../Dave/Generated/UCPROBE/lib_str.c **** *
 253:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 254:../Dave/Generated/UCPROBE/lib_str.c **** *                            which 's' ('pstr') points," ...
 255:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "not including the terminating null byte."
 256:../Dave/Generated/UCPROBE/lib_str.c **** *
 257:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 258:../Dave/Generated/UCPROBE/lib_str.c **** *
 259:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 260:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 261:../Dave/Generated/UCPROBE/lib_str.c **** *
 262:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String length calculation terminates when :
 263:../Dave/Generated/UCPROBE/lib_str.c **** *
 264:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer points to NULL.
 265:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 266:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 267:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL address.
 268:../Dave/Generated/UCPROBE/lib_str.c **** *
 269:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found.
 270:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 271:../Dave/Generated/UCPROBE/lib_str.c **** *                           the NULL character (see Note #2a2).
 272:../Dave/Generated/UCPROBE/lib_str.c **** *
 273:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) 'len_max' number of characters searched.
 274:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 275:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 276:../Dave/Generated/UCPROBE/lib_str.c **** */
 277:../Dave/Generated/UCPROBE/lib_str.c **** 
 278:../Dave/Generated/UCPROBE/lib_str.c **** CPU_SIZE_T  Str_Len_N (const  CPU_CHAR    *pstr,
 279:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 280:../Dave/Generated/UCPROBE/lib_str.c **** {
 114              	 .loc 1 280 0
 115              	 .cfi_startproc
 116              	 
 117              	 
 118              	 
 119 0000 80B4     	 push {r7}
 120              	.LCFI5:
 121              	 .cfi_def_cfa_offset 4
 122              	 .cfi_offset 7,-4
 123 0002 85B0     	 sub sp,sp,#20
 124              	.LCFI6:
 125              	 .cfi_def_cfa_offset 24
 126 0004 00AF     	 add r7,sp,#0
 127              	.LCFI7:
 128              	 .cfi_def_cfa_register 7
 129 0006 7860     	 str r0,[r7,#4]
 130 0008 3960     	 str r1,[r7]
 281:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_len;
 282:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len;
 283:../Dave/Generated/UCPROBE/lib_str.c **** 
 284:../Dave/Generated/UCPROBE/lib_str.c **** 
 285:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_len = pstr;
 131              	 .loc 1 285 0
 132 000a 7B68     	 ldr r3,[r7,#4]
 133 000c FB60     	 str r3,[r7,#12]
 286:../Dave/Generated/UCPROBE/lib_str.c ****     len      = 0u;
 134              	 .loc 1 286 0
 135 000e 0023     	 movs r3,#0
 136 0010 BB60     	 str r3,[r7,#8]
 287:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 137              	 .loc 1 287 0
 138 0012 05E0     	 b .L4
 139              	.L6:
 288:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 289:../Dave/Generated/UCPROBE/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 290:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_len++;
 140              	 .loc 1 290 0
 141 0014 FB68     	 ldr r3,[r7,#12]
 142 0016 0133     	 adds r3,r3,#1
 143 0018 FB60     	 str r3,[r7,#12]
 291:../Dave/Generated/UCPROBE/lib_str.c ****         len++;
 144              	 .loc 1 291 0
 145 001a BB68     	 ldr r3,[r7,#8]
 146 001c 0133     	 adds r3,r3,#1
 147 001e BB60     	 str r3,[r7,#8]
 148              	.L4:
 287:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 149              	 .loc 1 287 0
 150 0020 FB68     	 ldr r3,[r7,#12]
 151 0022 002B     	 cmp r3,#0
 152 0024 07D0     	 beq .L5
 288:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 153              	 .loc 1 288 0 discriminator 1
 154 0026 FB68     	 ldr r3,[r7,#12]
 155 0028 1B78     	 ldrb r3,[r3]
 287:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 156              	 .loc 1 287 0 discriminator 1
 157 002a 002B     	 cmp r3,#0
 158 002c 03D0     	 beq .L5
 288:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 159              	 .loc 1 288 0
 160 002e BA68     	 ldr r2,[r7,#8]
 161 0030 3B68     	 ldr r3,[r7]
 162 0032 9A42     	 cmp r2,r3
 163 0034 EED3     	 bcc .L6
 164              	.L5:
 292:../Dave/Generated/UCPROBE/lib_str.c ****     }
 293:../Dave/Generated/UCPROBE/lib_str.c **** 
 294:../Dave/Generated/UCPROBE/lib_str.c ****     return (len);                                               /* Rtn str len (see Note #3b1).    
 165              	 .loc 1 294 0
 166 0036 BB68     	 ldr r3,[r7,#8]
 295:../Dave/Generated/UCPROBE/lib_str.c **** }
 167              	 .loc 1 295 0
 168 0038 1846     	 mov r0,r3
 169 003a 1437     	 adds r7,r7,#20
 170              	.LCFI8:
 171              	 .cfi_def_cfa_offset 4
 172 003c BD46     	 mov sp,r7
 173              	.LCFI9:
 174              	 .cfi_def_cfa_register 13
 175              	 
 176 003e 5DF8047B 	 ldr r7,[sp],#4
 177              	.LCFI10:
 178              	 .cfi_restore 7
 179              	 .cfi_def_cfa_offset 0
 180 0042 7047     	 bx lr
 181              	 .cfi_endproc
 182              	.LFE1:
 184              	 .section .text.Str_Copy,"ax",%progbits
 185              	 .align 2
 186              	 .global Str_Copy
 187              	 .thumb
 188              	 .thumb_func
 190              	Str_Copy:
 191              	.LFB2:
 296:../Dave/Generated/UCPROBE/lib_str.c **** 
 297:../Dave/Generated/UCPROBE/lib_str.c **** 
 298:../Dave/Generated/UCPROBE/lib_str.c **** /*
 299:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 300:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Copy()
 301:../Dave/Generated/UCPROBE/lib_str.c **** *
 302:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Copy source string to destination string buffer.
 303:../Dave/Generated/UCPROBE/lib_str.c **** *
 304:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 305:../Dave/Generated/UCPROBE/lib_str.c **** *
 306:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 307:../Dave/Generated/UCPROBE/lib_str.c **** *
 308:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 309:../Dave/Generated/UCPROBE/lib_str.c **** *
 310:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 311:../Dave/Generated/UCPROBE/lib_str.c **** *
 312:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 313:../Dave/Generated/UCPROBE/lib_str.c **** *
 314:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 315:../Dave/Generated/UCPROBE/lib_str.c **** *
 316:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 317:../Dave/Generated/UCPROBE/lib_str.c **** *                           string size including the terminating NULL character.
 318:../Dave/Generated/UCPROBE/lib_str.c **** *
 319:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Source buffer NOT modified.
 320:../Dave/Generated/UCPROBE/lib_str.c **** *
 321:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 322:../Dave/Generated/UCPROBE/lib_str.c **** *
 323:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcpy() function shall copy the string pointed to by 's2' ('pstr_
 324:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... into the array pointed to by 's1' ('pstr_dest')" ...
 325:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(including the terminating null byte)."
 326:../Dave/Generated/UCPROBE/lib_str.c **** *
 327:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : RETURN VALUE' states tha
 328:../Dave/Generated/UCPROBE/lib_str.c **** *
 329:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcpy() function shall return 's1' ('pstr_dest');" ...
 330:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 331:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 332:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 333:../Dave/Generated/UCPROBE/lib_str.c **** *
 334:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 335:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 336:../Dave/Generated/UCPROBE/lib_str.c **** *
 337:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String copy terminates when :
 338:../Dave/Generated/UCPROBE/lib_str.c **** *
 339:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 340:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 341:../Dave/Generated/UCPROBE/lib_str.c **** *
 342:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 343:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 344:../Dave/Generated/UCPROBE/lib_str.c **** *
 345:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Source string's terminating NULL character found.
 346:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 347:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 348:../Dave/Generated/UCPROBE/lib_str.c **** */
 349:../Dave/Generated/UCPROBE/lib_str.c **** 
 350:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Copy (       CPU_CHAR  *pstr_dest,
 351:../Dave/Generated/UCPROBE/lib_str.c ****                      const  CPU_CHAR  *pstr_src)
 352:../Dave/Generated/UCPROBE/lib_str.c **** {
 192              	 .loc 1 352 0
 193              	 .cfi_startproc
 194              	 
 195              	 
 196 0000 80B5     	 push {r7,lr}
 197              	.LCFI11:
 198              	 .cfi_def_cfa_offset 8
 199              	 .cfi_offset 7,-8
 200              	 .cfi_offset 14,-4
 201 0002 84B0     	 sub sp,sp,#16
 202              	.LCFI12:
 203              	 .cfi_def_cfa_offset 24
 204 0004 00AF     	 add r7,sp,#0
 205              	.LCFI13:
 206              	 .cfi_def_cfa_register 7
 207 0006 7860     	 str r0,[r7,#4]
 208 0008 3960     	 str r1,[r7]
 353:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 354:../Dave/Generated/UCPROBE/lib_str.c **** 
 355:../Dave/Generated/UCPROBE/lib_str.c **** 
 356:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Copy_N(pstr_dest,
 209              	 .loc 1 356 0
 210 000a 7868     	 ldr r0,[r7,#4]
 211 000c 3968     	 ldr r1,[r7]
 212 000e 4FF0FF32 	 mov r2,#-1
 213 0012 FFF7FEFF 	 bl Str_Copy_N
 214 0016 F860     	 str r0,[r7,#12]
 357:../Dave/Generated/UCPROBE/lib_str.c ****                           pstr_src,
 358:../Dave/Generated/UCPROBE/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL);
 359:../Dave/Generated/UCPROBE/lib_str.c **** 
 360:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 215              	 .loc 1 360 0
 216 0018 FB68     	 ldr r3,[r7,#12]
 361:../Dave/Generated/UCPROBE/lib_str.c **** }
 217              	 .loc 1 361 0
 218 001a 1846     	 mov r0,r3
 219 001c 1037     	 adds r7,r7,#16
 220              	.LCFI14:
 221              	 .cfi_def_cfa_offset 8
 222 001e BD46     	 mov sp,r7
 223              	.LCFI15:
 224              	 .cfi_def_cfa_register 13
 225              	 
 226 0020 80BD     	 pop {r7,pc}
 227              	 .cfi_endproc
 228              	.LFE2:
 230 0022 00BF     	 .section .text.Str_Copy_N,"ax",%progbits
 231              	 .align 2
 232              	 .global Str_Copy_N
 233              	 .thumb
 234              	 .thumb_func
 236              	Str_Copy_N:
 237              	.LFB3:
 362:../Dave/Generated/UCPROBE/lib_str.c **** 
 363:../Dave/Generated/UCPROBE/lib_str.c **** 
 364:../Dave/Generated/UCPROBE/lib_str.c **** /*
 365:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 366:../Dave/Generated/UCPROBE/lib_str.c **** *                                            Str_Copy_N()
 367:../Dave/Generated/UCPROBE/lib_str.c **** *
 368:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Copy source string to destination string buffer, up to a maximum number of characte
 369:../Dave/Generated/UCPROBE/lib_str.c **** *
 370:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 371:../Dave/Generated/UCPROBE/lib_str.c **** *
 372:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 373:../Dave/Generated/UCPROBE/lib_str.c **** *
 374:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters  to copy (see Notes #2a2 & #3d).
 375:../Dave/Generated/UCPROBE/lib_str.c **** *
 376:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 377:../Dave/Generated/UCPROBE/lib_str.c **** *
 378:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 379:../Dave/Generated/UCPROBE/lib_str.c **** *
 380:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 381:../Dave/Generated/UCPROBE/lib_str.c **** *
 382:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 383:../Dave/Generated/UCPROBE/lib_str.c **** *
 384:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 385:../Dave/Generated/UCPROBE/lib_str.c **** *                           string size including the terminating NULL character.
 386:../Dave/Generated/UCPROBE/lib_str.c **** *
 387:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Source string buffer NOT modified.
 388:../Dave/Generated/UCPROBE/lib_str.c **** *
 389:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states
 390:../Dave/Generated/UCPROBE/lib_str.c **** *
 391:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "The strncpy() function shall copy ... the array pointed to by 's2'
 392:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('pstr_src') to the array pointed to by 's1' ('pstr_dest')"; ...
 393:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes"                   ...
 394:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C)  &   "(bytes that follow a null byte are not copied)".
 395:../Dave/Generated/UCPROBE/lib_str.c **** *
 396:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' ad
 397:../Dave/Generated/UCPROBE/lib_str.c **** *                              "if the array pointed to by 's2' ('pstr_src') is a string that is sh
 398:../Dave/Generated/UCPROBE/lib_str.c **** *                               than 'n' ('len_max') bytes, null bytes shall be appended to the cop
 399:../Dave/Generated/UCPROBE/lib_str.c **** *                               the array pointed to by 's1' ('pstr_dest'), until 'n' ('len_max') b
 400:../Dave/Generated/UCPROBE/lib_str.c **** *                               in all are written."
 401:../Dave/Generated/UCPROBE/lib_str.c **** *
 402:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Since Str_Copy() limits the maximum number of characters t
 403:../Dave/Generated/UCPROBE/lib_str.c **** *                                   via Str_Copy_N() by the CPU's maximum number of addressable cha
 404:../Dave/Generated/UCPROBE/lib_str.c **** *                                   this requirement is intentionally NOT implemented to avoid appe
 405:../Dave/Generated/UCPROBE/lib_str.c **** *                                   a potentially large number of unnecessary terminating NULL char
 406:../Dave/Generated/UCPROBE/lib_str.c **** *
 407:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : APPLICATION USA
 408:../Dave/Generated/UCPROBE/lib_str.c **** *                               states that "if there is no null byte in the first 'n' ('len_max') 
 409:../Dave/Generated/UCPROBE/lib_str.c **** *                               the array pointed to by 's2' ('pstr_src'), the result is not null-t
 410:../Dave/Generated/UCPROBE/lib_str.c **** *
 411:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : RETURN VALUE' states th
 412:../Dave/Generated/UCPROBE/lib_str.c **** *
 413:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncpy() function shall return 's1' ('pstr_dest');" ...
 414:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 415:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally ignored in order to return N
 416:../Dave/Generated/UCPROBE/lib_str.c **** *                               for any error(s).
 417:../Dave/Generated/UCPROBE/lib_str.c **** *
 418:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states tha
 419:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 420:../Dave/Generated/UCPROBE/lib_str.c **** *
 421:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String copy terminates when :
 422:../Dave/Generated/UCPROBE/lib_str.c **** *
 423:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 424:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 425:../Dave/Generated/UCPROBE/lib_str.c **** *
 426:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 427:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 428:../Dave/Generated/UCPROBE/lib_str.c **** *
 429:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Source string's terminating NULL character found.
 430:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 431:../Dave/Generated/UCPROBE/lib_str.c **** *
 432:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) 'len_max' number of characters copied.
 433:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters MAY include the terminating NULL charact
 434:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1C).
 435:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Null copies allowed (i.e. zero-length copies).
 436:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No string copy performed; destination string returned  (see Note #2
 437:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 438:../Dave/Generated/UCPROBE/lib_str.c **** */
 439:../Dave/Generated/UCPROBE/lib_str.c **** 
 440:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Copy_N (       CPU_CHAR    *pstr_dest,
 441:../Dave/Generated/UCPROBE/lib_str.c ****                        const  CPU_CHAR    *pstr_src,
 442:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 443:../Dave/Generated/UCPROBE/lib_str.c **** {
 238              	 .loc 1 443 0
 239              	 .cfi_startproc
 240              	 
 241              	 
 242              	 
 243 0000 80B4     	 push {r7}
 244              	.LCFI16:
 245              	 .cfi_def_cfa_offset 4
 246              	 .cfi_offset 7,-4
 247 0002 89B0     	 sub sp,sp,#36
 248              	.LCFI17:
 249              	 .cfi_def_cfa_offset 40
 250 0004 00AF     	 add r7,sp,#0
 251              	.LCFI18:
 252              	 .cfi_def_cfa_register 7
 253 0006 F860     	 str r0,[r7,#12]
 254 0008 B960     	 str r1,[r7,#8]
 255 000a 7A60     	 str r2,[r7,#4]
 444:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR    *pstr_copy_dest;
 445:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_copy_src;
 446:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_copy;
 447:../Dave/Generated/UCPROBE/lib_str.c **** 
 448:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 449:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 256              	 .loc 1 449 0
 257 000c FB68     	 ldr r3,[r7,#12]
 258 000e 002B     	 cmp r3,#0
 259 0010 01D1     	 bne .L11
 450:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 260              	 .loc 1 450 0
 261 0012 0023     	 movs r3,#0
 262 0014 36E0     	 b .L12
 263              	.L11:
 451:../Dave/Generated/UCPROBE/lib_str.c ****     }
 452:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_src  == (const CPU_CHAR *)0) {
 264              	 .loc 1 452 0
 265 0016 BB68     	 ldr r3,[r7,#8]
 266 0018 002B     	 cmp r3,#0
 267 001a 01D1     	 bne .L13
 453:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 268              	 .loc 1 453 0
 269 001c 0023     	 movs r3,#0
 270 001e 31E0     	 b .L12
 271              	.L13:
 454:../Dave/Generated/UCPROBE/lib_str.c ****     }
 455:../Dave/Generated/UCPROBE/lib_str.c **** 
 456:../Dave/Generated/UCPROBE/lib_str.c **** 
 457:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_copy_dest = pstr_dest;
 272              	 .loc 1 457 0
 273 0020 FB68     	 ldr r3,[r7,#12]
 274 0022 FB61     	 str r3,[r7,#28]
 458:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_copy_src  = pstr_src;
 275              	 .loc 1 458 0
 276 0024 BB68     	 ldr r3,[r7,#8]
 277 0026 BB61     	 str r3,[r7,#24]
 459:../Dave/Generated/UCPROBE/lib_str.c ****     len_copy       = 0u;
 278              	 .loc 1 459 0
 279 0028 0023     	 movs r3,#0
 280 002a 7B61     	 str r3,[r7,#20]
 460:../Dave/Generated/UCPROBE/lib_str.c **** 
 461:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_copy_dest != (      CPU_CHAR *)  0 ) &&       /* Copy str until NULL ptr(s)  [see
 281              	 .loc 1 461 0
 282 002c 0CE0     	 b .L14
 283              	.L16:
 462:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 463:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 464:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 465:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_copy_dest = *pstr_copy_src;
 284              	 .loc 1 465 0
 285 002e BB69     	 ldr r3,[r7,#24]
 286 0030 1A78     	 ldrb r2,[r3]
 287 0032 FB69     	 ldr r3,[r7,#28]
 288 0034 1A70     	 strb r2,[r3]
 466:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_dest++;
 289              	 .loc 1 466 0
 290 0036 FB69     	 ldr r3,[r7,#28]
 291 0038 0133     	 adds r3,r3,#1
 292 003a FB61     	 str r3,[r7,#28]
 467:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_copy_src++;
 293              	 .loc 1 467 0
 294 003c BB69     	 ldr r3,[r7,#24]
 295 003e 0133     	 adds r3,r3,#1
 296 0040 BB61     	 str r3,[r7,#24]
 468:../Dave/Generated/UCPROBE/lib_str.c ****         len_copy++;
 297              	 .loc 1 468 0
 298 0042 7B69     	 ldr r3,[r7,#20]
 299 0044 0133     	 adds r3,r3,#1
 300 0046 7B61     	 str r3,[r7,#20]
 301              	.L14:
 461:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 302              	 .loc 1 461 0
 303 0048 FB69     	 ldr r3,[r7,#28]
 304 004a 002B     	 cmp r3,#0
 305 004c 0AD0     	 beq .L15
 461:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 306              	 .loc 1 461 0 is_stmt 0 discriminator 1
 307 004e BB69     	 ldr r3,[r7,#24]
 308 0050 002B     	 cmp r3,#0
 309 0052 07D0     	 beq .L15
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 310              	 .loc 1 463 0 is_stmt 1
 311 0054 BB69     	 ldr r3,[r7,#24]
 312 0056 1B78     	 ldrb r3,[r3]
 462:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 313              	 .loc 1 462 0
 314 0058 002B     	 cmp r3,#0
 315 005a 03D0     	 beq .L15
 463:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 316              	 .loc 1 463 0
 317 005c 7A69     	 ldr r2,[r7,#20]
 318 005e 7B68     	 ldr r3,[r7,#4]
 319 0060 9A42     	 cmp r2,r3
 320 0062 E4D3     	 bcc .L16
 321              	.L15:
 469:../Dave/Generated/UCPROBE/lib_str.c ****     }
 470:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found  (
 471:../Dave/Generated/UCPROBE/lib_str.c ****     if ((pstr_copy_dest == (      CPU_CHAR *)0) ||
 322              	 .loc 1 471 0
 323 0064 FB69     	 ldr r3,[r7,#28]
 324 0066 002B     	 cmp r3,#0
 325 0068 02D0     	 beq .L17
 326              	 .loc 1 471 0 is_stmt 0 discriminator 1
 327 006a BB69     	 ldr r3,[r7,#24]
 328 006c 002B     	 cmp r3,#0
 329 006e 01D1     	 bne .L18
 330              	.L17:
 472:../Dave/Generated/UCPROBE/lib_str.c ****         (pstr_copy_src  == (const CPU_CHAR *)0)) {
 473:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 331              	 .loc 1 473 0 is_stmt 1
 332 0070 0023     	 movs r3,#0
 333 0072 07E0     	 b .L12
 334              	.L18:
 474:../Dave/Generated/UCPROBE/lib_str.c ****     }
 475:../Dave/Generated/UCPROBE/lib_str.c **** 
 476:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_copy < len_max) {                                   /* If  copy str len < max buf len (
 335              	 .loc 1 476 0
 336 0074 7A69     	 ldr r2,[r7,#20]
 337 0076 7B68     	 ldr r3,[r7,#4]
 338 0078 9A42     	 cmp r2,r3
 339 007a 02D2     	 bcs .L19
 477:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_copy_dest = (CPU_CHAR)'\0';                        /* ... copy NULL char  (see Note #3
 340              	 .loc 1 477 0
 341 007c FB69     	 ldr r3,[r7,#28]
 342 007e 0022     	 movs r2,#0
 343 0080 1A70     	 strb r2,[r3]
 344              	.L19:
 478:../Dave/Generated/UCPROBE/lib_str.c ****     }
 479:../Dave/Generated/UCPROBE/lib_str.c **** 
 480:../Dave/Generated/UCPROBE/lib_str.c **** 
 481:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 345              	 .loc 1 481 0
 346 0082 FB68     	 ldr r3,[r7,#12]
 347              	.L12:
 482:../Dave/Generated/UCPROBE/lib_str.c **** }
 348              	 .loc 1 482 0
 349 0084 1846     	 mov r0,r3
 350 0086 2437     	 adds r7,r7,#36
 351              	.LCFI19:
 352              	 .cfi_def_cfa_offset 4
 353 0088 BD46     	 mov sp,r7
 354              	.LCFI20:
 355              	 .cfi_def_cfa_register 13
 356              	 
 357 008a 5DF8047B 	 ldr r7,[sp],#4
 358              	.LCFI21:
 359              	 .cfi_restore 7
 360              	 .cfi_def_cfa_offset 0
 361 008e 7047     	 bx lr
 362              	 .cfi_endproc
 363              	.LFE3:
 365              	 .section .text.Str_Cat,"ax",%progbits
 366              	 .align 2
 367              	 .global Str_Cat
 368              	 .thumb
 369              	 .thumb_func
 371              	Str_Cat:
 372              	.LFB4:
 483:../Dave/Generated/UCPROBE/lib_str.c **** 
 484:../Dave/Generated/UCPROBE/lib_str.c **** 
 485:../Dave/Generated/UCPROBE/lib_str.c **** /*
 486:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 487:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Cat()
 488:../Dave/Generated/UCPROBE/lib_str.c **** *
 489:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Append concatenation string to destination string.
 490:../Dave/Generated/UCPROBE/lib_str.c **** *
 491:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 492:../Dave/Generated/UCPROBE/lib_str.c **** *
 493:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 494:../Dave/Generated/UCPROBE/lib_str.c **** *
 495:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 496:../Dave/Generated/UCPROBE/lib_str.c **** *
 497:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 498:../Dave/Generated/UCPROBE/lib_str.c **** *
 499:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 500:../Dave/Generated/UCPROBE/lib_str.c **** *
 501:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 502:../Dave/Generated/UCPROBE/lib_str.c **** *
 503:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire
 504:../Dave/Generated/UCPROBE/lib_str.c **** *                           concatenated string size including the terminating NULL character.
 505:../Dave/Generated/UCPROBE/lib_str.c **** *
 506:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 507:../Dave/Generated/UCPROBE/lib_str.c **** *
 508:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 509:../Dave/Generated/UCPROBE/lib_str.c **** *
 510:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcat() function shall append a copy of the string pointed to by 
 511:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('pstr_cat') ... to the end of the string pointed to by 's1' ('pstr_des
 512:../Dave/Generated/UCPROBE/lib_str.c **** *
 513:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 514:../Dave/Generated/UCPROBE/lib_str.c **** *                                end of 's1' ('pstr_dest')."
 515:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  A "terminating null byte" is appended at the end of the concatenat
 516:../Dave/Generated/UCPROBE/lib_str.c **** *                                destination strings.
 517:../Dave/Generated/UCPROBE/lib_str.c **** *
 518:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : RETURN VALUE' states tha
 519:../Dave/Generated/UCPROBE/lib_str.c **** *
 520:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strcat() function shall return 's1' ('pstr_dest');" ...
 521:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 522:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 523:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 524:../Dave/Generated/UCPROBE/lib_str.c **** *
 525:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 526:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 527:../Dave/Generated/UCPROBE/lib_str.c **** *
 528:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String concatenation terminates when :
 529:../Dave/Generated/UCPROBE/lib_str.c **** *
 530:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 531:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 532:../Dave/Generated/UCPROBE/lib_str.c **** *
 533:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 534:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 535:../Dave/Generated/UCPROBE/lib_str.c **** *
 536:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 537:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 538:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 539:../Dave/Generated/UCPROBE/lib_str.c **** */
 540:../Dave/Generated/UCPROBE/lib_str.c **** 
 541:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Cat (       CPU_CHAR  *pstr_dest,
 542:../Dave/Generated/UCPROBE/lib_str.c ****                     const  CPU_CHAR  *pstr_cat)
 543:../Dave/Generated/UCPROBE/lib_str.c **** {
 373              	 .loc 1 543 0
 374              	 .cfi_startproc
 375              	 
 376              	 
 377 0000 80B5     	 push {r7,lr}
 378              	.LCFI22:
 379              	 .cfi_def_cfa_offset 8
 380              	 .cfi_offset 7,-8
 381              	 .cfi_offset 14,-4
 382 0002 84B0     	 sub sp,sp,#16
 383              	.LCFI23:
 384              	 .cfi_def_cfa_offset 24
 385 0004 00AF     	 add r7,sp,#0
 386              	.LCFI24:
 387              	 .cfi_def_cfa_register 7
 388 0006 7860     	 str r0,[r7,#4]
 389 0008 3960     	 str r1,[r7]
 544:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 545:../Dave/Generated/UCPROBE/lib_str.c **** 
 546:../Dave/Generated/UCPROBE/lib_str.c **** 
 547:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Cat_N(pstr_dest,
 390              	 .loc 1 547 0
 391 000a 7868     	 ldr r0,[r7,#4]
 392 000c 3968     	 ldr r1,[r7]
 393 000e 4FF0FF32 	 mov r2,#-1
 394 0012 FFF7FEFF 	 bl Str_Cat_N
 395 0016 F860     	 str r0,[r7,#12]
 548:../Dave/Generated/UCPROBE/lib_str.c ****                          pstr_cat,
 549:../Dave/Generated/UCPROBE/lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
 550:../Dave/Generated/UCPROBE/lib_str.c **** 
 551:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 396              	 .loc 1 551 0
 397 0018 FB68     	 ldr r3,[r7,#12]
 552:../Dave/Generated/UCPROBE/lib_str.c **** }
 398              	 .loc 1 552 0
 399 001a 1846     	 mov r0,r3
 400 001c 1037     	 adds r7,r7,#16
 401              	.LCFI25:
 402              	 .cfi_def_cfa_offset 8
 403 001e BD46     	 mov sp,r7
 404              	.LCFI26:
 405              	 .cfi_def_cfa_register 13
 406              	 
 407 0020 80BD     	 pop {r7,pc}
 408              	 .cfi_endproc
 409              	.LFE4:
 411 0022 00BF     	 .section .text.Str_Cat_N,"ax",%progbits
 412              	 .align 2
 413              	 .global Str_Cat_N
 414              	 .thumb
 415              	 .thumb_func
 417              	Str_Cat_N:
 418              	.LFB5:
 553:../Dave/Generated/UCPROBE/lib_str.c **** 
 554:../Dave/Generated/UCPROBE/lib_str.c **** 
 555:../Dave/Generated/UCPROBE/lib_str.c **** /*
 556:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 557:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Cat_N()
 558:../Dave/Generated/UCPROBE/lib_str.c **** *
 559:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Append concatenation string to destination string, up to a maximum number of charac
 560:../Dave/Generated/UCPROBE/lib_str.c **** *
 561:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 562:../Dave/Generated/UCPROBE/lib_str.c **** *
 563:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 564:../Dave/Generated/UCPROBE/lib_str.c **** *
 565:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to concatenate (see Notes #2a1B & #3d).
 566:../Dave/Generated/UCPROBE/lib_str.c **** *
 567:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 568:../Dave/Generated/UCPROBE/lib_str.c **** *
 569:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 570:../Dave/Generated/UCPROBE/lib_str.c **** *
 571:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 572:../Dave/Generated/UCPROBE/lib_str.c **** *
 573:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 574:../Dave/Generated/UCPROBE/lib_str.c **** *
 575:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire
 576:../Dave/Generated/UCPROBE/lib_str.c **** *                           concatenated string size including the terminating NULL character.
 577:../Dave/Generated/UCPROBE/lib_str.c **** *
 578:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 579:../Dave/Generated/UCPROBE/lib_str.c **** *
 580:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 581:../Dave/Generated/UCPROBE/lib_str.c **** *
 582:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strncat() function shall append ... the array pointed to by 's
 583:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('pstr_cat') to the end of the string pointed to by 's1' ('pstr_des
 584:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes".
 585:../Dave/Generated/UCPROBE/lib_str.c **** *
 586:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 587:../Dave/Generated/UCPROBE/lib_str.c **** *                                end of 's1' ('pstr_dest')."
 588:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "(a null byte and bytes that follow it are not appended)."
 589:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) "A terminating null byte is always appended to the result."
 590:../Dave/Generated/UCPROBE/lib_str.c **** *
 591:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : RETURN VALUE' states th
 592:../Dave/Generated/UCPROBE/lib_str.c **** *
 593:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncat() function shall return 's1' ('pstr_dest');" ...
 594:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 595:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 596:../Dave/Generated/UCPROBE/lib_str.c **** *                               NULL for any error(s).
 597:../Dave/Generated/UCPROBE/lib_str.c **** *
 598:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 599:../Dave/Generated/UCPROBE/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 600:../Dave/Generated/UCPROBE/lib_str.c **** *
 601:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String concatenation terminates when :
 602:../Dave/Generated/UCPROBE/lib_str.c **** *
 603:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 604:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 605:../Dave/Generated/UCPROBE/lib_str.c **** *
 606:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 607:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 608:../Dave/Generated/UCPROBE/lib_str.c **** *
 609:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 610:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 611:../Dave/Generated/UCPROBE/lib_str.c **** *
 612:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) 'len_max' number of characters concatenated.
 613:../Dave/Generated/UCPROBE/lib_str.c **** *
 614:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 615:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
 616:../Dave/Generated/UCPROBE/lib_str.c **** *
 617:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Null concatenations allowed (i.e. zero-length concatenations).
 618:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No string concatenation performed; destination string returned
 619:../Dave/Generated/UCPROBE/lib_str.c **** *                               (see Note #2b1).
 620:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 621:../Dave/Generated/UCPROBE/lib_str.c **** */
 622:../Dave/Generated/UCPROBE/lib_str.c **** 
 623:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Cat_N (       CPU_CHAR    *pstr_dest,
 624:../Dave/Generated/UCPROBE/lib_str.c ****                       const  CPU_CHAR    *pstr_cat,
 625:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_SIZE_T   len_max)
 626:../Dave/Generated/UCPROBE/lib_str.c **** {
 419              	 .loc 1 626 0
 420              	 .cfi_startproc
 421              	 
 422              	 
 423              	 
 424 0000 80B4     	 push {r7}
 425              	.LCFI27:
 426              	 .cfi_def_cfa_offset 4
 427              	 .cfi_offset 7,-4
 428 0002 89B0     	 sub sp,sp,#36
 429              	.LCFI28:
 430              	 .cfi_def_cfa_offset 40
 431 0004 00AF     	 add r7,sp,#0
 432              	.LCFI29:
 433              	 .cfi_def_cfa_register 7
 434 0006 F860     	 str r0,[r7,#12]
 435 0008 B960     	 str r1,[r7,#8]
 436 000a 7A60     	 str r2,[r7,#4]
 627:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR    *pstr_cat_dest;
 628:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_cat_src;
 629:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_cat;
 630:../Dave/Generated/UCPROBE/lib_str.c **** 
 631:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 632:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 437              	 .loc 1 632 0
 438 000c FB68     	 ldr r3,[r7,#12]
 439 000e 002B     	 cmp r3,#0
 440 0010 01D1     	 bne .L23
 633:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 441              	 .loc 1 633 0
 442 0012 0023     	 movs r3,#0
 443 0014 47E0     	 b .L24
 444              	.L23:
 634:../Dave/Generated/UCPROBE/lib_str.c ****     }
 635:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_cat  == (const CPU_CHAR *)0) {
 445              	 .loc 1 635 0
 446 0016 BB68     	 ldr r3,[r7,#8]
 447 0018 002B     	 cmp r3,#0
 448 001a 01D1     	 bne .L25
 636:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 449              	 .loc 1 636 0
 450 001c 0023     	 movs r3,#0
 451 001e 42E0     	 b .L24
 452              	.L25:
 637:../Dave/Generated/UCPROBE/lib_str.c ****     }
 638:../Dave/Generated/UCPROBE/lib_str.c **** 
 639:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn dest str if cat len = 0 (see
 453              	 .loc 1 639 0
 454 0020 7B68     	 ldr r3,[r7,#4]
 455 0022 002B     	 cmp r3,#0
 456 0024 01D1     	 bne .L26
 640:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr_dest);
 457              	 .loc 1 640 0
 458 0026 FB68     	 ldr r3,[r7,#12]
 459 0028 3DE0     	 b .L24
 460              	.L26:
 641:../Dave/Generated/UCPROBE/lib_str.c ****     }
 642:../Dave/Generated/UCPROBE/lib_str.c **** 
 643:../Dave/Generated/UCPROBE/lib_str.c **** 
 644:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_cat_dest = pstr_dest;
 461              	 .loc 1 644 0
 462 002a FB68     	 ldr r3,[r7,#12]
 463 002c FB61     	 str r3,[r7,#28]
 645:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 464              	 .loc 1 645 0
 465 002e 02E0     	 b .L27
 466              	.L29:
 646:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 647:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_dest++;
 467              	 .loc 1 647 0
 468 0030 FB69     	 ldr r3,[r7,#28]
 469 0032 0133     	 adds r3,r3,#1
 470 0034 FB61     	 str r3,[r7,#28]
 471              	.L27:
 645:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 472              	 .loc 1 645 0
 473 0036 FB69     	 ldr r3,[r7,#28]
 474 0038 002B     	 cmp r3,#0
 475 003a 03D0     	 beq .L28
 646:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 476              	 .loc 1 646 0 discriminator 1
 477 003c FB69     	 ldr r3,[r7,#28]
 478 003e 1B78     	 ldrb r3,[r3]
 645:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 479              	 .loc 1 645 0 discriminator 1
 480 0040 002B     	 cmp r3,#0
 481 0042 F5D1     	 bne .L29
 482              	.L28:
 648:../Dave/Generated/UCPROBE/lib_str.c ****     }
 649:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_cat_dest == (CPU_CHAR *)0) {                       /* Rtn NULL if NULL ptr found (see 
 483              	 .loc 1 649 0
 484 0044 FB69     	 ldr r3,[r7,#28]
 485 0046 002B     	 cmp r3,#0
 486 0048 01D1     	 bne .L30
 650:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 487              	 .loc 1 650 0
 488 004a 0023     	 movs r3,#0
 489 004c 2BE0     	 b .L24
 490              	.L30:
 651:../Dave/Generated/UCPROBE/lib_str.c ****     }
 652:../Dave/Generated/UCPROBE/lib_str.c **** 
 653:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_cat_src = pstr_cat;
 491              	 .loc 1 653 0
 492 004e BB68     	 ldr r3,[r7,#8]
 493 0050 BB61     	 str r3,[r7,#24]
 654:../Dave/Generated/UCPROBE/lib_str.c ****     len_cat      = 0u;
 494              	 .loc 1 654 0
 495 0052 0023     	 movs r3,#0
 496 0054 7B61     	 str r3,[r7,#20]
 655:../Dave/Generated/UCPROBE/lib_str.c **** 
 656:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_cat_dest != (      CPU_CHAR *)  0 ) &&        /* Cat str until NULL ptr(s)  [see 
 497              	 .loc 1 656 0
 498 0056 0CE0     	 b .L31
 499              	.L33:
 657:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 658:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 659:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 660:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_cat_dest = *pstr_cat_src;
 500              	 .loc 1 660 0
 501 0058 BB69     	 ldr r3,[r7,#24]
 502 005a 1A78     	 ldrb r2,[r3]
 503 005c FB69     	 ldr r3,[r7,#28]
 504 005e 1A70     	 strb r2,[r3]
 661:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_dest++;
 505              	 .loc 1 661 0
 506 0060 FB69     	 ldr r3,[r7,#28]
 507 0062 0133     	 adds r3,r3,#1
 508 0064 FB61     	 str r3,[r7,#28]
 662:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_cat_src++;
 509              	 .loc 1 662 0
 510 0066 BB69     	 ldr r3,[r7,#24]
 511 0068 0133     	 adds r3,r3,#1
 512 006a BB61     	 str r3,[r7,#24]
 663:../Dave/Generated/UCPROBE/lib_str.c ****         len_cat++;
 513              	 .loc 1 663 0
 514 006c 7B69     	 ldr r3,[r7,#20]
 515 006e 0133     	 adds r3,r3,#1
 516 0070 7B61     	 str r3,[r7,#20]
 517              	.L31:
 656:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 518              	 .loc 1 656 0
 519 0072 FB69     	 ldr r3,[r7,#28]
 520 0074 002B     	 cmp r3,#0
 521 0076 0AD0     	 beq .L32
 656:../Dave/Generated/UCPROBE/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 522              	 .loc 1 656 0 is_stmt 0 discriminator 1
 523 0078 BB69     	 ldr r3,[r7,#24]
 524 007a 002B     	 cmp r3,#0
 525 007c 07D0     	 beq .L32
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 526              	 .loc 1 658 0 is_stmt 1
 527 007e BB69     	 ldr r3,[r7,#24]
 528 0080 1B78     	 ldrb r3,[r3]
 657:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 529              	 .loc 1 657 0
 530 0082 002B     	 cmp r3,#0
 531 0084 03D0     	 beq .L32
 658:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 532              	 .loc 1 658 0
 533 0086 7A69     	 ldr r2,[r7,#20]
 534 0088 7B68     	 ldr r3,[r7,#4]
 535 008a 9A42     	 cmp r2,r3
 536 008c E4D3     	 bcc .L33
 537              	.L32:
 664:../Dave/Generated/UCPROBE/lib_str.c ****     }
 665:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found (s
 666:../Dave/Generated/UCPROBE/lib_str.c ****     if ((pstr_cat_dest == (      CPU_CHAR *)0) ||
 538              	 .loc 1 666 0
 539 008e FB69     	 ldr r3,[r7,#28]
 540 0090 002B     	 cmp r3,#0
 541 0092 02D0     	 beq .L34
 542              	 .loc 1 666 0 is_stmt 0 discriminator 1
 543 0094 BB69     	 ldr r3,[r7,#24]
 544 0096 002B     	 cmp r3,#0
 545 0098 01D1     	 bne .L35
 546              	.L34:
 667:../Dave/Generated/UCPROBE/lib_str.c ****         (pstr_cat_src  == (const CPU_CHAR *)0)) {
 668:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 547              	 .loc 1 668 0 is_stmt 1
 548 009a 0023     	 movs r3,#0
 549 009c 03E0     	 b .L24
 550              	.L35:
 669:../Dave/Generated/UCPROBE/lib_str.c ****     }
 670:../Dave/Generated/UCPROBE/lib_str.c **** 
 671:../Dave/Generated/UCPROBE/lib_str.c ****    *pstr_cat_dest = (CPU_CHAR)'\0';                             /* Append NULL char    (see Note #2
 551              	 .loc 1 671 0
 552 009e FB69     	 ldr r3,[r7,#28]
 553 00a0 0022     	 movs r2,#0
 554 00a2 1A70     	 strb r2,[r3]
 672:../Dave/Generated/UCPROBE/lib_str.c **** 
 673:../Dave/Generated/UCPROBE/lib_str.c **** 
 674:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 555              	 .loc 1 674 0
 556 00a4 FB68     	 ldr r3,[r7,#12]
 557              	.L24:
 675:../Dave/Generated/UCPROBE/lib_str.c **** }
 558              	 .loc 1 675 0
 559 00a6 1846     	 mov r0,r3
 560 00a8 2437     	 adds r7,r7,#36
 561              	.LCFI30:
 562              	 .cfi_def_cfa_offset 4
 563 00aa BD46     	 mov sp,r7
 564              	.LCFI31:
 565              	 .cfi_def_cfa_register 13
 566              	 
 567 00ac 5DF8047B 	 ldr r7,[sp],#4
 568              	.LCFI32:
 569              	 .cfi_restore 7
 570              	 .cfi_def_cfa_offset 0
 571 00b0 7047     	 bx lr
 572              	 .cfi_endproc
 573              	.LFE5:
 575 00b2 00BF     	 .section .text.Str_Cmp,"ax",%progbits
 576              	 .align 2
 577              	 .global Str_Cmp
 578              	 .thumb
 579              	 .thumb_func
 581              	Str_Cmp:
 582              	.LFB6:
 676:../Dave/Generated/UCPROBE/lib_str.c **** 
 677:../Dave/Generated/UCPROBE/lib_str.c **** 
 678:../Dave/Generated/UCPROBE/lib_str.c **** /*
 679:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 680:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Cmp()
 681:../Dave/Generated/UCPROBE/lib_str.c **** *
 682:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical.
 683:../Dave/Generated/UCPROBE/lib_str.c **** *
 684:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 685:../Dave/Generated/UCPROBE/lib_str.c **** *
 686:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 687:../Dave/Generated/UCPROBE/lib_str.c **** *
 688:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 689:../Dave/Generated/UCPROBE/lib_str.c **** *
 690:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 691:../Dave/Generated/UCPROBE/lib_str.c **** *
 692:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 693:../Dave/Generated/UCPROBE/lib_str.c **** *
 694:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 695:../Dave/Generated/UCPROBE/lib_str.c **** *
 696:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 697:../Dave/Generated/UCPROBE/lib_str.c **** *
 698:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 699:../Dave/Generated/UCPROBE/lib_str.c **** *
 700:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' states that
 701:../Dave/Generated/UCPROBE/lib_str.c **** *                       strcmp() function shall compare the string pointed to by 's1' ('p1_str') to
 702:../Dave/Generated/UCPROBE/lib_str.c **** *                       string pointed to by 's2' ('p2_str)".
 703:../Dave/Generated/UCPROBE/lib_str.c **** *
 704:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : RETURN VALUE' states
 705:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strcmp() shall return an integer greater th
 706:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 707:../Dave/Generated/UCPROBE/lib_str.c **** *
 708:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 709:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 710:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 711:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 712:../Dave/Generated/UCPROBE/lib_str.c **** *
 713:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 714:../Dave/Generated/UCPROBE/lib_str.c **** *
 715:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 716:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 717:../Dave/Generated/UCPROBE/lib_str.c **** *
 718:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 719:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 720:../Dave/Generated/UCPROBE/lib_str.c **** *
 721:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 722:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 723:../Dave/Generated/UCPROBE/lib_str.c **** *
 724:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 725:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 726:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 727:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 728:../Dave/Generated/UCPROBE/lib_str.c **** *
 729:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 730:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 731:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 732:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 733:../Dave/Generated/UCPROBE/lib_str.c **** *
 734:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 735:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 736:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 737:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 738:../Dave/Generated/UCPROBE/lib_str.c **** *
 739:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 740:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
 741:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 742:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
 743:../Dave/Generated/UCPROBE/lib_str.c **** *
 744:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
 745:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 746:../Dave/Generated/UCPROBE/lib_str.c **** *                           from the character pointed to by 'p1_str'.
 747:../Dave/Generated/UCPROBE/lib_str.c **** *
 748:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 749:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 750:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 751:../Dave/Generated/UCPROBE/lib_str.c **** */
 752:../Dave/Generated/UCPROBE/lib_str.c **** 
 753:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_Cmp (const  CPU_CHAR  *p1_str,
 754:../Dave/Generated/UCPROBE/lib_str.c ****                      const  CPU_CHAR  *p2_str)
 755:../Dave/Generated/UCPROBE/lib_str.c **** {
 583              	 .loc 1 755 0
 584              	 .cfi_startproc
 585              	 
 586              	 
 587 0000 80B5     	 push {r7,lr}
 588              	.LCFI33:
 589              	 .cfi_def_cfa_offset 8
 590              	 .cfi_offset 7,-8
 591              	 .cfi_offset 14,-4
 592 0002 84B0     	 sub sp,sp,#16
 593              	.LCFI34:
 594              	 .cfi_def_cfa_offset 24
 595 0004 00AF     	 add r7,sp,#0
 596              	.LCFI35:
 597              	 .cfi_def_cfa_register 7
 598 0006 7860     	 str r0,[r7,#4]
 599 0008 3960     	 str r1,[r7]
 756:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
 757:../Dave/Generated/UCPROBE/lib_str.c **** 
 758:../Dave/Generated/UCPROBE/lib_str.c **** 
 759:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_val = Str_Cmp_N(p1_str,
 600              	 .loc 1 759 0
 601 000a 7868     	 ldr r0,[r7,#4]
 602 000c 3968     	 ldr r1,[r7]
 603 000e 4FF0FF32 	 mov r2,#-1
 604 0012 FFF7FEFF 	 bl Str_Cmp_N
 605 0016 0346     	 mov r3,r0
 606 0018 FB81     	 strh r3,[r7,#14]
 760:../Dave/Generated/UCPROBE/lib_str.c ****                         p2_str,
 761:../Dave/Generated/UCPROBE/lib_str.c ****                         DEF_INT_CPU_U_MAX_VAL);
 762:../Dave/Generated/UCPROBE/lib_str.c **** 
 763:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 607              	 .loc 1 763 0
 608 001a FB89     	 ldrh r3,[r7,#14]
 609 001c 1BB2     	 sxth r3,r3
 764:../Dave/Generated/UCPROBE/lib_str.c **** }
 610              	 .loc 1 764 0
 611 001e 1846     	 mov r0,r3
 612 0020 1037     	 adds r7,r7,#16
 613              	.LCFI36:
 614              	 .cfi_def_cfa_offset 8
 615 0022 BD46     	 mov sp,r7
 616              	.LCFI37:
 617              	 .cfi_def_cfa_register 13
 618              	 
 619 0024 80BD     	 pop {r7,pc}
 620              	 .cfi_endproc
 621              	.LFE6:
 623 0026 00BF     	 .section .text.Str_Cmp_N,"ax",%progbits
 624              	 .align 2
 625              	 .global Str_Cmp_N
 626              	 .thumb
 627              	 .thumb_func
 629              	Str_Cmp_N:
 630              	.LFB7:
 765:../Dave/Generated/UCPROBE/lib_str.c **** 
 766:../Dave/Generated/UCPROBE/lib_str.c **** 
 767:../Dave/Generated/UCPROBE/lib_str.c **** /*
 768:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 769:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Cmp_N()
 770:../Dave/Generated/UCPROBE/lib_str.c **** *
 771:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters.
 772:../Dave/Generated/UCPROBE/lib_str.c **** *
 773:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 774:../Dave/Generated/UCPROBE/lib_str.c **** *
 775:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 776:../Dave/Generated/UCPROBE/lib_str.c **** *
 777:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
 778:../Dave/Generated/UCPROBE/lib_str.c **** *
 779:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
 780:../Dave/Generated/UCPROBE/lib_str.c **** *
 781:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 782:../Dave/Generated/UCPROBE/lib_str.c **** *
 783:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 784:../Dave/Generated/UCPROBE/lib_str.c **** *
 785:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 786:../Dave/Generated/UCPROBE/lib_str.c **** *
 787:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 788:../Dave/Generated/UCPROBE/lib_str.c **** *
 789:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 790:../Dave/Generated/UCPROBE/lib_str.c **** *
 791:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' states tha
 792:../Dave/Generated/UCPROBE/lib_str.c **** *
 793:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strncmp() function shall compare ... the array pointed to by 's1' 
 794:../Dave/Generated/UCPROBE/lib_str.c **** *                            to the array pointed to by 's2' ('p2_str)" ...
 795:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2)  but "not more than 'n' ('len_max') bytes" of either array.
 796:../Dave/Generated/UCPROBE/lib_str.c **** *
 797:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : RETURN VALUE' state
 798:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strncmp() shall return an integer greater t
 799:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 800:../Dave/Generated/UCPROBE/lib_str.c **** *
 801:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' adds t
 802:../Dave/Generated/UCPROBE/lib_str.c **** *                          "the sign of a non-zero return value is determined by the sign of the di
 803:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 804:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 805:../Dave/Generated/UCPROBE/lib_str.c **** *
 806:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 807:../Dave/Generated/UCPROBE/lib_str.c **** *
 808:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 809:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 810:../Dave/Generated/UCPROBE/lib_str.c **** *
 811:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 812:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 813:../Dave/Generated/UCPROBE/lib_str.c **** *
 814:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 815:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 816:../Dave/Generated/UCPROBE/lib_str.c **** *
 817:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 818:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 819:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 820:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 821:../Dave/Generated/UCPROBE/lib_str.c **** *
 822:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 823:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 824:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 825:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 826:../Dave/Generated/UCPROBE/lib_str.c **** *
 827:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 828:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 829:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 830:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 831:../Dave/Generated/UCPROBE/lib_str.c **** *
 832:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 833:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
 834:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 835:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
 836:../Dave/Generated/UCPROBE/lib_str.c **** *
 837:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
 838:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 839:../Dave/Generated/UCPROBE/lib_str.c **** *                           from the character pointed to by 'p1_str'.
 840:../Dave/Generated/UCPROBE/lib_str.c **** *
 841:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
 842:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
 843:../Dave/Generated/UCPROBE/lib_str.c **** *
 844:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) First 'len_max' number of characters identical.
 845:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Strings identical; 0 returned.
 846:../Dave/Generated/UCPROBE/lib_str.c **** *
 847:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2a2.
 848:../Dave/Generated/UCPROBE/lib_str.c **** *
 849:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 850:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 851:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 852:../Dave/Generated/UCPROBE/lib_str.c **** */
 853:../Dave/Generated/UCPROBE/lib_str.c **** 
 854:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_Cmp_N (const  CPU_CHAR    *p1_str,
 855:../Dave/Generated/UCPROBE/lib_str.c ****                        const  CPU_CHAR    *p2_str,
 856:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max)
 857:../Dave/Generated/UCPROBE/lib_str.c **** {
 631              	 .loc 1 857 0
 632              	 .cfi_startproc
 633              	 
 634              	 
 635              	 
 636 0000 80B4     	 push {r7}
 637              	.LCFI38:
 638              	 .cfi_def_cfa_offset 4
 639              	 .cfi_offset 7,-4
 640 0002 8BB0     	 sub sp,sp,#44
 641              	.LCFI39:
 642              	 .cfi_def_cfa_offset 48
 643 0004 00AF     	 add r7,sp,#0
 644              	.LCFI40:
 645              	 .cfi_def_cfa_register 7
 646 0006 F860     	 str r0,[r7,#12]
 647 0008 B960     	 str r1,[r7,#8]
 648 000a 7A60     	 str r2,[r7,#4]
 858:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 859:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
 860:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
 861:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
 862:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S   cmp_val;
 863:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   cmp_len;
 864:../Dave/Generated/UCPROBE/lib_str.c **** 
 865:../Dave/Generated/UCPROBE/lib_str.c **** 
 866:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
 649              	 .loc 1 866 0
 650 000c 7B68     	 ldr r3,[r7,#4]
 651 000e 002B     	 cmp r3,#0
 652 0010 01D1     	 bne .L39
 867:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);
 653              	 .loc 1 867 0
 654 0012 0023     	 movs r3,#0
 655 0014 7CE0     	 b .L40
 656              	.L39:
 868:../Dave/Generated/UCPROBE/lib_str.c ****     }
 869:../Dave/Generated/UCPROBE/lib_str.c **** 
 870:../Dave/Generated/UCPROBE/lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
 657              	 .loc 1 870 0
 658 0016 FB68     	 ldr r3,[r7,#12]
 659 0018 002B     	 cmp r3,#0
 660 001a 0CD1     	 bne .L41
 871:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 661              	 .loc 1 871 0
 662 001c BB68     	 ldr r3,[r7,#8]
 663 001e 002B     	 cmp r3,#0
 664 0020 01D1     	 bne .L42
 872:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 665              	 .loc 1 872 0
 666 0022 0023     	 movs r3,#0
 667 0024 74E0     	 b .L40
 668              	.L42:
 873:../Dave/Generated/UCPROBE/lib_str.c ****         }
 874:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)(*p2_str));
 669              	 .loc 1 874 0
 670 0026 BB68     	 ldr r3,[r7,#8]
 671 0028 1B78     	 ldrb r3,[r3]
 672 002a 9BB2     	 uxth r3,r3
 673 002c 5B42     	 negs r3,r3
 674 002e 9BB2     	 uxth r3,r3
 675 0030 FB82     	 strh r3,[r7,#22]
 875:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 676              	 .loc 1 875 0
 677 0032 FB8A     	 ldrh r3,[r7,#22]
 678 0034 6CE0     	 b .L40
 679              	.L41:
 876:../Dave/Generated/UCPROBE/lib_str.c ****     }
 877:../Dave/Generated/UCPROBE/lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
 680              	 .loc 1 877 0
 681 0036 BB68     	 ldr r3,[r7,#8]
 682 0038 002B     	 cmp r3,#0
 683 003a 04D1     	 bne .L43
 878:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)(*p1_str);
 684              	 .loc 1 878 0
 685 003c FB68     	 ldr r3,[r7,#12]
 686 003e 1B78     	 ldrb r3,[r3]
 687 0040 FB82     	 strh r3,[r7,#22]
 879:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 688              	 .loc 1 879 0
 689 0042 FB8A     	 ldrh r3,[r7,#22]
 690 0044 64E0     	 b .L40
 691              	.L43:
 880:../Dave/Generated/UCPROBE/lib_str.c ****     }
 881:../Dave/Generated/UCPROBE/lib_str.c **** 
 882:../Dave/Generated/UCPROBE/lib_str.c **** 
 883:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp      = p1_str;
 692              	 .loc 1 883 0
 693 0046 FB68     	 ldr r3,[r7,#12]
 694 0048 7B62     	 str r3,[r7,#36]
 884:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp      = p2_str;
 695              	 .loc 1 884 0
 696 004a BB68     	 ldr r3,[r7,#8]
 697 004c 3B62     	 str r3,[r7,#32]
 885:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
 698              	 .loc 1 885 0
 699 004e 7B6A     	 ldr r3,[r7,#36]
 700 0050 FB61     	 str r3,[r7,#28]
 886:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
 701              	 .loc 1 886 0
 702 0052 3B6A     	 ldr r3,[r7,#32]
 703 0054 BB61     	 str r3,[r7,#24]
 887:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next++;
 704              	 .loc 1 887 0
 705 0056 FB69     	 ldr r3,[r7,#28]
 706 0058 0133     	 adds r3,r3,#1
 707 005a FB61     	 str r3,[r7,#28]
 888:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 708              	 .loc 1 888 0
 709 005c BB69     	 ldr r3,[r7,#24]
 710 005e 0133     	 adds r3,r3,#1
 711 0060 BB61     	 str r3,[r7,#24]
 889:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 712              	 .loc 1 889 0
 713 0062 0023     	 movs r3,#0
 714 0064 3B61     	 str r3,[r7,#16]
 890:../Dave/Generated/UCPROBE/lib_str.c **** 
 891:../Dave/Generated/UCPROBE/lib_str.c ****     while ((*p1_str_cmp      == *p2_str_cmp)            &&      /* Cmp strs until non-matching char
 715              	 .loc 1 891 0
 716 0066 0EE0     	 b .L44
 717              	.L46:
 892:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 895:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 896:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp++;
 718              	 .loc 1 896 0
 719 0068 7B6A     	 ldr r3,[r7,#36]
 720 006a 0133     	 adds r3,r3,#1
 721 006c 7B62     	 str r3,[r7,#36]
 897:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp++;
 722              	 .loc 1 897 0
 723 006e 3B6A     	 ldr r3,[r7,#32]
 724 0070 0133     	 adds r3,r3,#1
 725 0072 3B62     	 str r3,[r7,#32]
 898:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp_next++;
 726              	 .loc 1 898 0
 727 0074 FB69     	 ldr r3,[r7,#28]
 728 0076 0133     	 adds r3,r3,#1
 729 0078 FB61     	 str r3,[r7,#28]
 899:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 730              	 .loc 1 899 0
 731 007a BB69     	 ldr r3,[r7,#24]
 732 007c 0133     	 adds r3,r3,#1
 733 007e BB61     	 str r3,[r7,#24]
 900:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 734              	 .loc 1 900 0
 735 0080 3B69     	 ldr r3,[r7,#16]
 736 0082 0133     	 adds r3,r3,#1
 737 0084 3B61     	 str r3,[r7,#16]
 738              	.L44:
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 739              	 .loc 1 891 0
 740 0086 7B6A     	 ldr r3,[r7,#36]
 741 0088 1A78     	 ldrb r2,[r3]
 742 008a 3B6A     	 ldr r3,[r7,#32]
 743 008c 1B78     	 ldrb r3,[r3]
 744 008e 9A42     	 cmp r2,r3
 745 0090 0DD1     	 bne .L45
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 746              	 .loc 1 892 0 discriminator 1
 747 0092 7B6A     	 ldr r3,[r7,#36]
 748 0094 1B78     	 ldrb r3,[r3]
 891:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 749              	 .loc 1 891 0 discriminator 1
 750 0096 002B     	 cmp r3,#0
 751 0098 09D0     	 beq .L45
 892:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 752              	 .loc 1 892 0
 753 009a FB69     	 ldr r3,[r7,#28]
 754 009c 002B     	 cmp r3,#0
 755 009e 06D0     	 beq .L45
 893:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 756              	 .loc 1 893 0
 757 00a0 BB69     	 ldr r3,[r7,#24]
 758 00a2 002B     	 cmp r3,#0
 759 00a4 03D0     	 beq .L45
 894:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 760              	 .loc 1 894 0
 761 00a6 3A69     	 ldr r2,[r7,#16]
 762 00a8 7B68     	 ldr r3,[r7,#4]
 763 00aa 9A42     	 cmp r2,r3
 764 00ac DCD3     	 bcc .L46
 765              	.L45:
 901:../Dave/Generated/UCPROBE/lib_str.c ****     }
 902:../Dave/Generated/UCPROBE/lib_str.c **** 
 903:../Dave/Generated/UCPROBE/lib_str.c **** 
 904:../Dave/Generated/UCPROBE/lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
 766              	 .loc 1 904 0
 767 00ae 3A69     	 ldr r2,[r7,#16]
 768 00b0 7B68     	 ldr r3,[r7,#4]
 769 00b2 9A42     	 cmp r2,r3
 770 00b4 01D1     	 bne .L47
 905:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 771              	 .loc 1 905 0
 772 00b6 0023     	 movs r3,#0
 773 00b8 2AE0     	 b .L40
 774              	.L47:
 906:../Dave/Generated/UCPROBE/lib_str.c ****     }
 907:../Dave/Generated/UCPROBE/lib_str.c **** 
 908:../Dave/Generated/UCPROBE/lib_str.c ****     if (*p1_str_cmp != *p2_str_cmp) {                           /* If strs NOT identical, ...      
 775              	 .loc 1 908 0
 776 00ba 7B6A     	 ldr r3,[r7,#36]
 777 00bc 1A78     	 ldrb r2,[r3]
 778 00be 3B6A     	 ldr r3,[r7,#32]
 779 00c0 1B78     	 ldrb r3,[r3]
 780 00c2 9A42     	 cmp r2,r3
 781 00c4 09D0     	 beq .L48
 909:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
 910:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)((CPU_INT16S)(*p1_str_cmp) - (CPU_INT16S)(*p2_str_cmp));
 782              	 .loc 1 910 0
 783 00c6 7B6A     	 ldr r3,[r7,#36]
 784 00c8 1B78     	 ldrb r3,[r3]
 785 00ca 9AB2     	 uxth r2,r3
 786 00cc 3B6A     	 ldr r3,[r7,#32]
 787 00ce 1B78     	 ldrb r3,[r3]
 788 00d0 9BB2     	 uxth r3,r3
 789 00d2 D31A     	 subs r3,r2,r3
 790 00d4 9BB2     	 uxth r3,r3
 791 00d6 FB82     	 strh r3,[r7,#22]
 792 00d8 19E0     	 b .L49
 793              	.L48:
 911:../Dave/Generated/UCPROBE/lib_str.c **** 
 912:../Dave/Generated/UCPROBE/lib_str.c ****     } else if (*p1_str_cmp  == (CPU_CHAR)'\0') {                /* If NULL char(s) found, ...      
 794              	 .loc 1 912 0
 795 00da 7B6A     	 ldr r3,[r7,#36]
 796 00dc 1B78     	 ldrb r3,[r3]
 797 00de 002B     	 cmp r3,#0
 798 00e0 02D1     	 bne .L50
 913:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 799              	 .loc 1 913 0
 800 00e2 0023     	 movs r3,#0
 801 00e4 FB82     	 strh r3,[r7,#22]
 802 00e6 12E0     	 b .L49
 803              	.L50:
 914:../Dave/Generated/UCPROBE/lib_str.c **** 
 915:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
 916:../Dave/Generated/UCPROBE/lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
 804              	 .loc 1 916 0
 805 00e8 FB69     	 ldr r3,[r7,#28]
 806 00ea 002B     	 cmp r3,#0
 807 00ec 0CD1     	 bne .L51
 917:../Dave/Generated/UCPROBE/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 808              	 .loc 1 917 0
 809 00ee BB69     	 ldr r3,[r7,#24]
 810 00f0 002B     	 cmp r3,#0
 811 00f2 02D1     	 bne .L52
 918:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 812              	 .loc 1 918 0
 813 00f4 0023     	 movs r3,#0
 814 00f6 FB82     	 strh r3,[r7,#22]
 815 00f8 09E0     	 b .L49
 816              	.L52:
 919:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
 920:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
 921:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)(*p2_str_cmp_next));
 817              	 .loc 1 921 0
 818 00fa BB69     	 ldr r3,[r7,#24]
 819 00fc 1B78     	 ldrb r3,[r3]
 820 00fe 9BB2     	 uxth r3,r3
 821 0100 5B42     	 negs r3,r3
 822 0102 9BB2     	 uxth r3,r3
 823 0104 FB82     	 strh r3,[r7,#22]
 824 0106 02E0     	 b .L49
 825              	.L51:
 922:../Dave/Generated/UCPROBE/lib_str.c ****             }
 923:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
 924:../Dave/Generated/UCPROBE/lib_str.c ****             cmp_val = (CPU_INT16S)(*p1_str_cmp_next);           /* ... rtn pos p1_str_cmp_next val 
 826              	 .loc 1 924 0
 827 0108 FB69     	 ldr r3,[r7,#28]
 828 010a 1B78     	 ldrb r3,[r3]
 829 010c FB82     	 strh r3,[r7,#22]
 830              	.L49:
 925:../Dave/Generated/UCPROBE/lib_str.c ****         }
 926:../Dave/Generated/UCPROBE/lib_str.c ****     }
 927:../Dave/Generated/UCPROBE/lib_str.c **** 
 928:../Dave/Generated/UCPROBE/lib_str.c **** 
 929:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 831              	 .loc 1 929 0
 832 010e FB8A     	 ldrh r3,[r7,#22]
 833              	.L40:
 834 0110 1BB2     	 sxth r3,r3
 930:../Dave/Generated/UCPROBE/lib_str.c **** }
 835              	 .loc 1 930 0
 836 0112 1846     	 mov r0,r3
 837 0114 2C37     	 adds r7,r7,#44
 838              	.LCFI41:
 839              	 .cfi_def_cfa_offset 4
 840 0116 BD46     	 mov sp,r7
 841              	.LCFI42:
 842              	 .cfi_def_cfa_register 13
 843              	 
 844 0118 5DF8047B 	 ldr r7,[sp],#4
 845              	.LCFI43:
 846              	 .cfi_restore 7
 847              	 .cfi_def_cfa_offset 0
 848 011c 7047     	 bx lr
 849              	 .cfi_endproc
 850              	.LFE7:
 852 011e 00BF     	 .section .text.Str_CmpIgnoreCase,"ax",%progbits
 853              	 .align 2
 854              	 .global Str_CmpIgnoreCase
 855              	 .thumb
 856              	 .thumb_func
 858              	Str_CmpIgnoreCase:
 859              	.LFB8:
 931:../Dave/Generated/UCPROBE/lib_str.c **** 
 932:../Dave/Generated/UCPROBE/lib_str.c **** 
 933:../Dave/Generated/UCPROBE/lib_str.c **** /*
 934:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
 935:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_CmpIgnoreCase()
 936:../Dave/Generated/UCPROBE/lib_str.c **** *
 937:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical, ignoring case.
 938:../Dave/Generated/UCPROBE/lib_str.c **** *
 939:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 940:../Dave/Generated/UCPROBE/lib_str.c **** *
 941:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 942:../Dave/Generated/UCPROBE/lib_str.c **** *
 943:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 944:../Dave/Generated/UCPROBE/lib_str.c **** *
 945:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 946:../Dave/Generated/UCPROBE/lib_str.c **** *
 947:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 948:../Dave/Generated/UCPROBE/lib_str.c **** *
 949:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
 950:../Dave/Generated/UCPROBE/lib_str.c **** *
 951:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
 952:../Dave/Generated/UCPROBE/lib_str.c **** *
 953:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 954:../Dave/Generated/UCPROBE/lib_str.c **** *
 955:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : DESCRIPTION' states 
 956:../Dave/Generated/UCPROBE/lib_str.c **** *
 957:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strcasecmp() function shall compare ... the string pointed to 
 958:../Dave/Generated/UCPROBE/lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
 959:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "ignoring differences in case".
 960:../Dave/Generated/UCPROBE/lib_str.c **** *
 961:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "strcasecmp() ... shall behave as if the strings had been converted to 
 962:../Dave/Generated/UCPROBE/lib_str.c **** *                            and then a byte comparison performed."
 963:../Dave/Generated/UCPROBE/lib_str.c **** *
 964:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : RETURN VALUE' st
 965:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strcasecmp() shall return an integer greate
 966:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
 967:../Dave/Generated/UCPROBE/lib_str.c **** *
 968:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 969:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 970:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 971:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
 972:../Dave/Generated/UCPROBE/lib_str.c **** *
 973:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
 974:../Dave/Generated/UCPROBE/lib_str.c **** *
 975:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 976:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 977:../Dave/Generated/UCPROBE/lib_str.c **** *
 978:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 979:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
 980:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
 981:../Dave/Generated/UCPROBE/lib_str.c **** *
 982:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 983:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
 984:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
 985:../Dave/Generated/UCPROBE/lib_str.c **** *
 986:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 987:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
 988:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 989:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
 990:../Dave/Generated/UCPROBE/lib_str.c **** *
 991:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 992:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 993:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 994:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 995:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
 996:../Dave/Generated/UCPROBE/lib_str.c **** *
 997:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 998:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 999:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1000:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1001:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1002:../Dave/Generated/UCPROBE/lib_str.c **** *
1003:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1004:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
1005:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1006:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
1007:../Dave/Generated/UCPROBE/lib_str.c **** *
1008:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
1009:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1010:../Dave/Generated/UCPROBE/lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1011:../Dave/Generated/UCPROBE/lib_str.c **** *                           to lower case.
1012:../Dave/Generated/UCPROBE/lib_str.c **** *
1013:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1014:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1015:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1016:../Dave/Generated/UCPROBE/lib_str.c **** */
1017:../Dave/Generated/UCPROBE/lib_str.c **** 
1018:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase (const  CPU_CHAR  *p1_str,
1019:../Dave/Generated/UCPROBE/lib_str.c ****                                const  CPU_CHAR  *p2_str)
1020:../Dave/Generated/UCPROBE/lib_str.c **** {
 860              	 .loc 1 1020 0
 861              	 .cfi_startproc
 862              	 
 863              	 
 864 0000 80B5     	 push {r7,lr}
 865              	.LCFI44:
 866              	 .cfi_def_cfa_offset 8
 867              	 .cfi_offset 7,-8
 868              	 .cfi_offset 14,-4
 869 0002 84B0     	 sub sp,sp,#16
 870              	.LCFI45:
 871              	 .cfi_def_cfa_offset 24
 872 0004 00AF     	 add r7,sp,#0
 873              	.LCFI46:
 874              	 .cfi_def_cfa_register 7
 875 0006 7860     	 str r0,[r7,#4]
 876 0008 3960     	 str r1,[r7]
1021:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16S  cmp_val;
1022:../Dave/Generated/UCPROBE/lib_str.c **** 
1023:../Dave/Generated/UCPROBE/lib_str.c **** 
1024:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_val = Str_CmpIgnoreCase_N(p1_str,
 877              	 .loc 1 1024 0
 878 000a 7868     	 ldr r0,[r7,#4]
 879 000c 3968     	 ldr r1,[r7]
 880 000e 4FF0FF32 	 mov r2,#-1
 881 0012 FFF7FEFF 	 bl Str_CmpIgnoreCase_N
 882 0016 0346     	 mov r3,r0
 883 0018 FB81     	 strh r3,[r7,#14]
1025:../Dave/Generated/UCPROBE/lib_str.c ****                                   p2_str,
1026:../Dave/Generated/UCPROBE/lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1027:../Dave/Generated/UCPROBE/lib_str.c **** 
1028:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 884              	 .loc 1 1028 0
 885 001a FB89     	 ldrh r3,[r7,#14]
 886 001c 1BB2     	 sxth r3,r3
1029:../Dave/Generated/UCPROBE/lib_str.c **** }
 887              	 .loc 1 1029 0
 888 001e 1846     	 mov r0,r3
 889 0020 1037     	 adds r7,r7,#16
 890              	.LCFI47:
 891              	 .cfi_def_cfa_offset 8
 892 0022 BD46     	 mov sp,r7
 893              	.LCFI48:
 894              	 .cfi_def_cfa_register 13
 895              	 
 896 0024 80BD     	 pop {r7,pc}
 897              	 .cfi_endproc
 898              	.LFE8:
 900 0026 00BF     	 .section .text.Str_CmpIgnoreCase_N,"ax",%progbits
 901              	 .align 2
 902              	 .global Str_CmpIgnoreCase_N
 903              	 .thumb
 904              	 .thumb_func
 906              	Str_CmpIgnoreCase_N:
 907              	.LFB9:
1030:../Dave/Generated/UCPROBE/lib_str.c **** 
1031:../Dave/Generated/UCPROBE/lib_str.c **** 
1032:../Dave/Generated/UCPROBE/lib_str.c **** /*
1033:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1034:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_CmpIgnoreCase_N()
1035:../Dave/Generated/UCPROBE/lib_str.c **** *
1036:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters,
1037:../Dave/Generated/UCPROBE/lib_str.c **** *                   ignoring case.
1038:../Dave/Generated/UCPROBE/lib_str.c **** *
1039:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
1040:../Dave/Generated/UCPROBE/lib_str.c **** *
1041:../Dave/Generated/UCPROBE/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
1042:../Dave/Generated/UCPROBE/lib_str.c **** *
1043:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
1044:../Dave/Generated/UCPROBE/lib_str.c **** *
1045:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
1046:../Dave/Generated/UCPROBE/lib_str.c **** *
1047:../Dave/Generated/UCPROBE/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
1048:../Dave/Generated/UCPROBE/lib_str.c **** *
1049:../Dave/Generated/UCPROBE/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
1050:../Dave/Generated/UCPROBE/lib_str.c **** *
1051:../Dave/Generated/UCPROBE/lib_str.c **** *               See also Note #2b.
1052:../Dave/Generated/UCPROBE/lib_str.c **** *
1053:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1054:../Dave/Generated/UCPROBE/lib_str.c **** *
1055:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1056:../Dave/Generated/UCPROBE/lib_str.c **** *
1057:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : DESCRIPTION' states
1058:../Dave/Generated/UCPROBE/lib_str.c **** *
1059:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) (A) "The strncasecmp() function shall compare ... the string pointed to
1060:../Dave/Generated/UCPROBE/lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
1061:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "ignoring differences in case"                           ...
1062:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C)  but "not more than 'n' ('len_max') bytes" of either string.
1063:../Dave/Generated/UCPROBE/lib_str.c **** *
1064:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "strncasecmp() shall behave as if the strings had been converted to low
1065:../Dave/Generated/UCPROBE/lib_str.c **** *                            and then a byte comparison performed."
1066:../Dave/Generated/UCPROBE/lib_str.c **** *
1067:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : RETURN VALUE' s
1068:../Dave/Generated/UCPROBE/lib_str.c **** *                          "upon successful completion, strncasecmp() shall return an integer great
1069:../Dave/Generated/UCPROBE/lib_str.c **** *                           equal to, or less than 0".
1070:../Dave/Generated/UCPROBE/lib_str.c **** *
1071:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
1072:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
1073:../Dave/Generated/UCPROBE/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
1074:../Dave/Generated/UCPROBE/lib_str.c **** *                           being compared".
1075:../Dave/Generated/UCPROBE/lib_str.c **** *
1076:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String comparison terminates when :
1077:../Dave/Generated/UCPROBE/lib_str.c **** *
1078:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
1079:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
1080:../Dave/Generated/UCPROBE/lib_str.c **** *
1081:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
1082:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
1083:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
1084:../Dave/Generated/UCPROBE/lib_str.c **** *
1085:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
1086:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
1087:../Dave/Generated/UCPROBE/lib_str.c **** *                                       to lower case (see Note #2a2).
1088:../Dave/Generated/UCPROBE/lib_str.c **** *
1089:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
1090:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) Strings overlap with NULL address.
1091:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
1092:../Dave/Generated/UCPROBE/lib_str.c **** *                                   0 returned.
1093:../Dave/Generated/UCPROBE/lib_str.c **** *
1094:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
1095:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
1096:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1097:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
1098:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1099:../Dave/Generated/UCPROBE/lib_str.c **** *
1100:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
1101:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
1102:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1103:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1104:../Dave/Generated/UCPROBE/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1105:../Dave/Generated/UCPROBE/lib_str.c **** *
1106:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1107:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Strings identical; 0 returned.
1108:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1109:../Dave/Generated/UCPROBE/lib_str.c **** *                           tested character equality.
1110:../Dave/Generated/UCPROBE/lib_str.c **** *
1111:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Non-matching characters found.
1112:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1113:../Dave/Generated/UCPROBE/lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1114:../Dave/Generated/UCPROBE/lib_str.c **** *                           to lower case.
1115:../Dave/Generated/UCPROBE/lib_str.c **** *
1116:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
1117:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
1118:../Dave/Generated/UCPROBE/lib_str.c **** *
1119:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) First 'len_max' number of characters identical.
1120:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Strings identical; 0 returned.
1121:../Dave/Generated/UCPROBE/lib_str.c **** *
1122:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2a1C.
1123:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
1124:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1125:../Dave/Generated/UCPROBE/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1126:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1127:../Dave/Generated/UCPROBE/lib_str.c **** */
1128:../Dave/Generated/UCPROBE/lib_str.c **** 
1129:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase_N (const  CPU_CHAR    *p1_str,
1130:../Dave/Generated/UCPROBE/lib_str.c ****                                  const  CPU_CHAR    *p2_str,
1131:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_SIZE_T   len_max)
1132:../Dave/Generated/UCPROBE/lib_str.c **** {
 908              	 .loc 1 1132 0
 909              	 .cfi_startproc
 910              	 
 911              	 
 912 0000 80B5     	 push {r7,lr}
 913              	.LCFI49:
 914              	 .cfi_def_cfa_offset 8
 915              	 .cfi_offset 7,-8
 916              	 .cfi_offset 14,-4
 917 0002 8AB0     	 sub sp,sp,#40
 918              	.LCFI50:
 919              	 .cfi_def_cfa_offset 48
 920 0004 00AF     	 add r7,sp,#0
 921              	.LCFI51:
 922              	 .cfi_def_cfa_register 7
 923 0006 F860     	 str r0,[r7,#12]
 924 0008 B960     	 str r1,[r7,#8]
 925 000a 7A60     	 str r2,[r7,#4]
1133:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
1134:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
1135:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
1136:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
1137:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     char_1;
1138:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     char_2;
1139:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S   cmp_val;
1140:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   cmp_len;
1141:../Dave/Generated/UCPROBE/lib_str.c **** 
1142:../Dave/Generated/UCPROBE/lib_str.c **** 
1143:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
 926              	 .loc 1 1143 0
 927 000c 7B68     	 ldr r3,[r7,#4]
 928 000e 002B     	 cmp r3,#0
 929 0010 01D1     	 bne .L57
1144:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);
 930              	 .loc 1 1144 0
 931 0012 0023     	 movs r3,#0
 932 0014 A9E0     	 b .L58
 933              	.L57:
1145:../Dave/Generated/UCPROBE/lib_str.c ****     }
1146:../Dave/Generated/UCPROBE/lib_str.c **** 
1147:../Dave/Generated/UCPROBE/lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
 934              	 .loc 1 1147 0
 935 0016 FB68     	 ldr r3,[r7,#12]
 936 0018 002B     	 cmp r3,#0
 937 001a 12D1     	 bne .L59
1148:../Dave/Generated/UCPROBE/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 938              	 .loc 1 1148 0
 939 001c BB68     	 ldr r3,[r7,#8]
 940 001e 002B     	 cmp r3,#0
 941 0020 01D1     	 bne .L60
1149:../Dave/Generated/UCPROBE/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 942              	 .loc 1 1149 0
 943 0022 0023     	 movs r3,#0
 944 0024 A1E0     	 b .L58
 945              	.L60:
1150:../Dave/Generated/UCPROBE/lib_str.c ****         }
1151:../Dave/Generated/UCPROBE/lib_str.c ****         char_2  =  ASCII_ToLower(*p2_str);
 946              	 .loc 1 1151 0
 947 0026 BB68     	 ldr r3,[r7,#8]
 948 0028 1B78     	 ldrb r3,[r3]
 949 002a 1846     	 mov r0,r3
 950 002c FFF7FEFF 	 bl ASCII_ToLower
 951 0030 0346     	 mov r3,r0
 952 0032 BB75     	 strb r3,[r7,#22]
1152:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)char_2);
 953              	 .loc 1 1152 0
 954 0034 BB7D     	 ldrb r3,[r7,#22]
 955 0036 9BB2     	 uxth r3,r3
 956 0038 5B42     	 negs r3,r3
 957 003a 9BB2     	 uxth r3,r3
 958 003c BB82     	 strh r3,[r7,#20]
1153:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 959              	 .loc 1 1153 0
 960 003e BB8A     	 ldrh r3,[r7,#20]
 961 0040 93E0     	 b .L58
 962              	.L59:
1154:../Dave/Generated/UCPROBE/lib_str.c ****     }
1155:../Dave/Generated/UCPROBE/lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
 963              	 .loc 1 1155 0
 964 0042 BB68     	 ldr r3,[r7,#8]
 965 0044 002B     	 cmp r3,#0
 966 0046 0AD1     	 bne .L61
1156:../Dave/Generated/UCPROBE/lib_str.c ****         char_1  =  ASCII_ToLower(*p1_str);
 967              	 .loc 1 1156 0
 968 0048 FB68     	 ldr r3,[r7,#12]
 969 004a 1B78     	 ldrb r3,[r3]
 970 004c 1846     	 mov r0,r3
 971 004e FFF7FEFF 	 bl ASCII_ToLower
 972 0052 0346     	 mov r3,r0
 973 0054 FB75     	 strb r3,[r7,#23]
1157:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_val = (CPU_INT16S)char_1;
 974              	 .loc 1 1157 0
 975 0056 FB7D     	 ldrb r3,[r7,#23]
 976 0058 BB82     	 strh r3,[r7,#20]
1158:../Dave/Generated/UCPROBE/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 977              	 .loc 1 1158 0
 978 005a BB8A     	 ldrh r3,[r7,#20]
 979 005c 85E0     	 b .L58
 980              	.L61:
1159:../Dave/Generated/UCPROBE/lib_str.c ****     }
1160:../Dave/Generated/UCPROBE/lib_str.c **** 
1161:../Dave/Generated/UCPROBE/lib_str.c **** 
1162:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp      = p1_str;
 981              	 .loc 1 1162 0
 982 005e FB68     	 ldr r3,[r7,#12]
 983 0060 7B62     	 str r3,[r7,#36]
1163:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp      = p2_str;
 984              	 .loc 1 1163 0
 985 0062 BB68     	 ldr r3,[r7,#8]
 986 0064 3B62     	 str r3,[r7,#32]
1164:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
 987              	 .loc 1 1164 0
 988 0066 7B6A     	 ldr r3,[r7,#36]
 989 0068 FB61     	 str r3,[r7,#28]
1165:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
 990              	 .loc 1 1165 0
 991 006a 3B6A     	 ldr r3,[r7,#32]
 992 006c BB61     	 str r3,[r7,#24]
1166:../Dave/Generated/UCPROBE/lib_str.c ****     p1_str_cmp_next++;
 993              	 .loc 1 1166 0
 994 006e FB69     	 ldr r3,[r7,#28]
 995 0070 0133     	 adds r3,r3,#1
 996 0072 FB61     	 str r3,[r7,#28]
1167:../Dave/Generated/UCPROBE/lib_str.c ****     p2_str_cmp_next++;
 997              	 .loc 1 1167 0
 998 0074 BB69     	 ldr r3,[r7,#24]
 999 0076 0133     	 adds r3,r3,#1
 1000 0078 BB61     	 str r3,[r7,#24]
1168:../Dave/Generated/UCPROBE/lib_str.c ****     char_1          = ASCII_ToLower(*p1_str_cmp);
 1001              	 .loc 1 1168 0
 1002 007a 7B6A     	 ldr r3,[r7,#36]
 1003 007c 1B78     	 ldrb r3,[r3]
 1004 007e 1846     	 mov r0,r3
 1005 0080 FFF7FEFF 	 bl ASCII_ToLower
 1006 0084 0346     	 mov r3,r0
 1007 0086 FB75     	 strb r3,[r7,#23]
1169:../Dave/Generated/UCPROBE/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 1008              	 .loc 1 1169 0
 1009 0088 3B6A     	 ldr r3,[r7,#32]
 1010 008a 1B78     	 ldrb r3,[r3]
 1011 008c 1846     	 mov r0,r3
 1012 008e FFF7FEFF 	 bl ASCII_ToLower
 1013 0092 0346     	 mov r3,r0
 1014 0094 BB75     	 strb r3,[r7,#22]
1170:../Dave/Generated/UCPROBE/lib_str.c ****     cmp_len         = 0u;
 1015              	 .loc 1 1170 0
 1016 0096 0023     	 movs r3,#0
 1017 0098 3B61     	 str r3,[r7,#16]
1171:../Dave/Generated/UCPROBE/lib_str.c **** 
1172:../Dave/Generated/UCPROBE/lib_str.c ****     while (( char_1          ==  char_2)                &&      /* Cmp strs until non-matching char
 1018              	 .loc 1 1172 0
 1019 009a 1CE0     	 b .L62
 1020              	.L64:
1173:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
1175:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
1176:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
1177:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp++;
 1021              	 .loc 1 1177 0
 1022 009c 7B6A     	 ldr r3,[r7,#36]
 1023 009e 0133     	 adds r3,r3,#1
 1024 00a0 7B62     	 str r3,[r7,#36]
1178:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp++;
 1025              	 .loc 1 1178 0
 1026 00a2 3B6A     	 ldr r3,[r7,#32]
 1027 00a4 0133     	 adds r3,r3,#1
 1028 00a6 3B62     	 str r3,[r7,#32]
1179:../Dave/Generated/UCPROBE/lib_str.c ****         p1_str_cmp_next++;
 1029              	 .loc 1 1179 0
 1030 00a8 FB69     	 ldr r3,[r7,#28]
 1031 00aa 0133     	 adds r3,r3,#1
 1032 00ac FB61     	 str r3,[r7,#28]
1180:../Dave/Generated/UCPROBE/lib_str.c ****         p2_str_cmp_next++;
 1033              	 .loc 1 1180 0
 1034 00ae BB69     	 ldr r3,[r7,#24]
 1035 00b0 0133     	 adds r3,r3,#1
 1036 00b2 BB61     	 str r3,[r7,#24]
1181:../Dave/Generated/UCPROBE/lib_str.c ****         cmp_len++;
 1037              	 .loc 1 1181 0
 1038 00b4 3B69     	 ldr r3,[r7,#16]
 1039 00b6 0133     	 adds r3,r3,#1
 1040 00b8 3B61     	 str r3,[r7,#16]
1182:../Dave/Generated/UCPROBE/lib_str.c ****         char_1 = ASCII_ToLower(*p1_str_cmp);
 1041              	 .loc 1 1182 0
 1042 00ba 7B6A     	 ldr r3,[r7,#36]
 1043 00bc 1B78     	 ldrb r3,[r3]
 1044 00be 1846     	 mov r0,r3
 1045 00c0 FFF7FEFF 	 bl ASCII_ToLower
 1046 00c4 0346     	 mov r3,r0
 1047 00c6 FB75     	 strb r3,[r7,#23]
1183:../Dave/Generated/UCPROBE/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
 1048              	 .loc 1 1183 0
 1049 00c8 3B6A     	 ldr r3,[r7,#32]
 1050 00ca 1B78     	 ldrb r3,[r3]
 1051 00cc 1846     	 mov r0,r3
 1052 00ce FFF7FEFF 	 bl ASCII_ToLower
 1053 00d2 0346     	 mov r3,r0
 1054 00d4 BB75     	 strb r3,[r7,#22]
 1055              	.L62:
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1056              	 .loc 1 1172 0
 1057 00d6 FA7D     	 ldrb r2,[r7,#23]
 1058 00d8 BB7D     	 ldrb r3,[r7,#22]
 1059 00da 9A42     	 cmp r2,r3
 1060 00dc 0DD1     	 bne .L63
1173:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1061              	 .loc 1 1173 0 discriminator 1
 1062 00de 7B6A     	 ldr r3,[r7,#36]
 1063 00e0 1B78     	 ldrb r3,[r3]
1172:../Dave/Generated/UCPROBE/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1064              	 .loc 1 1172 0 discriminator 1
 1065 00e2 002B     	 cmp r3,#0
 1066 00e4 09D0     	 beq .L63
1173:../Dave/Generated/UCPROBE/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1067              	 .loc 1 1173 0
 1068 00e6 FB69     	 ldr r3,[r7,#28]
 1069 00e8 002B     	 cmp r3,#0
 1070 00ea 06D0     	 beq .L63
1174:../Dave/Generated/UCPROBE/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1071              	 .loc 1 1174 0
 1072 00ec BB69     	 ldr r3,[r7,#24]
 1073 00ee 002B     	 cmp r3,#0
 1074 00f0 03D0     	 beq .L63
1175:../Dave/Generated/UCPROBE/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 1075              	 .loc 1 1175 0
 1076 00f2 3A69     	 ldr r2,[r7,#16]
 1077 00f4 7B68     	 ldr r3,[r7,#4]
 1078 00f6 9A42     	 cmp r2,r3
 1079 00f8 D0D3     	 bcc .L64
 1080              	.L63:
1184:../Dave/Generated/UCPROBE/lib_str.c ****     }
1185:../Dave/Generated/UCPROBE/lib_str.c **** 
1186:../Dave/Generated/UCPROBE/lib_str.c **** 
1187:../Dave/Generated/UCPROBE/lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
 1081              	 .loc 1 1187 0
 1082 00fa 3A69     	 ldr r2,[r7,#16]
 1083 00fc 7B68     	 ldr r3,[r7,#4]
 1084 00fe 9A42     	 cmp r2,r3
 1085 0100 01D1     	 bne .L65
1188:../Dave/Generated/UCPROBE/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1086              	 .loc 1 1188 0
 1087 0102 0023     	 movs r3,#0
 1088 0104 31E0     	 b .L58
 1089              	.L65:
1189:../Dave/Generated/UCPROBE/lib_str.c ****     }
1190:../Dave/Generated/UCPROBE/lib_str.c **** 
1191:../Dave/Generated/UCPROBE/lib_str.c ****     if (char_1 != char_2) {                                     /* If strs NOT identical, ...      
 1090              	 .loc 1 1191 0
 1091 0106 FA7D     	 ldrb r2,[r7,#23]
 1092 0108 BB7D     	 ldrb r3,[r7,#22]
 1093 010a 9A42     	 cmp r2,r3
 1094 010c 07D0     	 beq .L66
1192:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
1193:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)((CPU_INT16S)char_1 - (CPU_INT16S)char_2);
 1095              	 .loc 1 1193 0
 1096 010e FB7D     	 ldrb r3,[r7,#23]
 1097 0110 9AB2     	 uxth r2,r3
 1098 0112 BB7D     	 ldrb r3,[r7,#22]
 1099 0114 9BB2     	 uxth r3,r3
 1100 0116 D31A     	 subs r3,r2,r3
 1101 0118 9BB2     	 uxth r3,r3
 1102 011a BB82     	 strh r3,[r7,#20]
 1103 011c 24E0     	 b .L67
 1104              	.L66:
1194:../Dave/Generated/UCPROBE/lib_str.c **** 
1195:../Dave/Generated/UCPROBE/lib_str.c ****     } else if (char_1 == (CPU_CHAR)'\0') {                      /* If NULL char(s) found, ...      
 1105              	 .loc 1 1195 0
 1106 011e FB7D     	 ldrb r3,[r7,#23]
 1107 0120 002B     	 cmp r3,#0
 1108 0122 02D1     	 bne .L68
1196:../Dave/Generated/UCPROBE/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 1109              	 .loc 1 1196 0
 1110 0124 0023     	 movs r3,#0
 1111 0126 BB82     	 strh r3,[r7,#20]
 1112 0128 1EE0     	 b .L67
 1113              	.L68:
1197:../Dave/Generated/UCPROBE/lib_str.c **** 
1198:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
1199:../Dave/Generated/UCPROBE/lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
 1114              	 .loc 1 1199 0
 1115 012a FB69     	 ldr r3,[r7,#28]
 1116 012c 002B     	 cmp r3,#0
 1117 012e 12D1     	 bne .L69
1200:../Dave/Generated/UCPROBE/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 1118              	 .loc 1 1200 0
 1119 0130 BB69     	 ldr r3,[r7,#24]
 1120 0132 002B     	 cmp r3,#0
 1121 0134 02D1     	 bne .L70
1201:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1122              	 .loc 1 1201 0
 1123 0136 0023     	 movs r3,#0
 1124 0138 BB82     	 strh r3,[r7,#20]
 1125 013a 15E0     	 b .L67
 1126              	.L70:
1202:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
1203:../Dave/Generated/UCPROBE/lib_str.c ****                 char_2  =  ASCII_ToLower(*p2_str_cmp_next);
 1127              	 .loc 1 1203 0
 1128 013c BB69     	 ldr r3,[r7,#24]
 1129 013e 1B78     	 ldrb r3,[r3]
 1130 0140 1846     	 mov r0,r3
 1131 0142 FFF7FEFF 	 bl ASCII_ToLower
 1132 0146 0346     	 mov r3,r0
 1133 0148 BB75     	 strb r3,[r7,#22]
1204:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
1205:../Dave/Generated/UCPROBE/lib_str.c ****                 cmp_val = (CPU_INT16S)((CPU_INT16S)0 - (CPU_INT16S)char_2);
 1134              	 .loc 1 1205 0
 1135 014a BB7D     	 ldrb r3,[r7,#22]
 1136 014c 9BB2     	 uxth r3,r3
 1137 014e 5B42     	 negs r3,r3
 1138 0150 9BB2     	 uxth r3,r3
 1139 0152 BB82     	 strh r3,[r7,#20]
 1140 0154 08E0     	 b .L67
 1141              	.L69:
1206:../Dave/Generated/UCPROBE/lib_str.c ****             }
1207:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
1208:../Dave/Generated/UCPROBE/lib_str.c ****             char_1  =  ASCII_ToLower(*p1_str_cmp_next);
 1142              	 .loc 1 1208 0
 1143 0156 FB69     	 ldr r3,[r7,#28]
 1144 0158 1B78     	 ldrb r3,[r3]
 1145 015a 1846     	 mov r0,r3
 1146 015c FFF7FEFF 	 bl ASCII_ToLower
 1147 0160 0346     	 mov r3,r0
 1148 0162 FB75     	 strb r3,[r7,#23]
1209:../Dave/Generated/UCPROBE/lib_str.c ****             cmp_val = (CPU_INT16S)char_1;                       /* ... rtn pos p1_str_cmp_next val 
 1149              	 .loc 1 1209 0
 1150 0164 FB7D     	 ldrb r3,[r7,#23]
 1151 0166 BB82     	 strh r3,[r7,#20]
 1152              	.L67:
1210:../Dave/Generated/UCPROBE/lib_str.c ****         }
1211:../Dave/Generated/UCPROBE/lib_str.c ****     }
1212:../Dave/Generated/UCPROBE/lib_str.c **** 
1213:../Dave/Generated/UCPROBE/lib_str.c **** 
1214:../Dave/Generated/UCPROBE/lib_str.c ****     return (cmp_val);
 1153              	 .loc 1 1214 0
 1154 0168 BB8A     	 ldrh r3,[r7,#20]
 1155              	.L58:
 1156 016a 1BB2     	 sxth r3,r3
1215:../Dave/Generated/UCPROBE/lib_str.c **** }
 1157              	 .loc 1 1215 0
 1158 016c 1846     	 mov r0,r3
 1159 016e 2837     	 adds r7,r7,#40
 1160              	.LCFI52:
 1161              	 .cfi_def_cfa_offset 8
 1162 0170 BD46     	 mov sp,r7
 1163              	.LCFI53:
 1164              	 .cfi_def_cfa_register 13
 1165              	 
 1166 0172 80BD     	 pop {r7,pc}
 1167              	 .cfi_endproc
 1168              	.LFE9:
 1170              	 .section .text.Str_Char,"ax",%progbits
 1171              	 .align 2
 1172              	 .global Str_Char
 1173              	 .thumb
 1174              	 .thumb_func
 1176              	Str_Char:
 1177              	.LFB10:
1216:../Dave/Generated/UCPROBE/lib_str.c **** 
1217:../Dave/Generated/UCPROBE/lib_str.c **** 
1218:../Dave/Generated/UCPROBE/lib_str.c **** /*
1219:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1220:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Char()
1221:../Dave/Generated/UCPROBE/lib_str.c **** *
1222:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurrence of specific character.
1223:../Dave/Generated/UCPROBE/lib_str.c **** *
1224:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1225:../Dave/Generated/UCPROBE/lib_str.c **** *
1226:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1227:../Dave/Generated/UCPROBE/lib_str.c **** *
1228:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1229:../Dave/Generated/UCPROBE/lib_str.c **** *
1230:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1231:../Dave/Generated/UCPROBE/lib_str.c **** *
1232:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1233:../Dave/Generated/UCPROBE/lib_str.c **** *
1234:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1235:../Dave/Generated/UCPROBE/lib_str.c **** *
1236:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1237:../Dave/Generated/UCPROBE/lib_str.c **** *
1238:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1239:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1240:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1241:../Dave/Generated/UCPROBE/lib_str.c **** *
1242:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1243:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon completion, strchr() shall return" :
1244:../Dave/Generated/UCPROBE/lib_str.c **** *
1245:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte," ...
1246:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1247:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for
1248:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1249:../Dave/Generated/UCPROBE/lib_str.c **** *
1250:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1251:../Dave/Generated/UCPROBE/lib_str.c **** *
1252:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1253:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1254:../Dave/Generated/UCPROBE/lib_str.c **** *
1255:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1256:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1257:../Dave/Generated/UCPROBE/lib_str.c **** *
1258:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1259:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1260:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1261:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1262:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1263:../Dave/Generated/UCPROBE/lib_str.c **** *
1264:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1265:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1266:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1267:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1268:../Dave/Generated/UCPROBE/lib_str.c **** */
1269:../Dave/Generated/UCPROBE/lib_str.c **** 
1270:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char (const  CPU_CHAR  *pstr,
1271:../Dave/Generated/UCPROBE/lib_str.c ****                             CPU_CHAR   srch_char)
1272:../Dave/Generated/UCPROBE/lib_str.c **** {
 1178              	 .loc 1 1272 0
 1179              	 .cfi_startproc
 1180              	 
 1181              	 
 1182 0000 80B5     	 push {r7,lr}
 1183              	.LCFI54:
 1184              	 .cfi_def_cfa_offset 8
 1185              	 .cfi_offset 7,-8
 1186              	 .cfi_offset 14,-4
 1187 0002 84B0     	 sub sp,sp,#16
 1188              	.LCFI55:
 1189              	 .cfi_def_cfa_offset 24
 1190 0004 00AF     	 add r7,sp,#0
 1191              	.LCFI56:
 1192              	 .cfi_def_cfa_register 7
 1193 0006 7860     	 str r0,[r7,#4]
 1194 0008 0B46     	 mov r3,r1
 1195 000a FB70     	 strb r3,[r7,#3]
1273:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1274:../Dave/Generated/UCPROBE/lib_str.c **** 
1275:../Dave/Generated/UCPROBE/lib_str.c **** 
1276:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_N(pstr,
 1196              	 .loc 1 1276 0
 1197 000c FB78     	 ldrb r3,[r7,#3]
 1198 000e 7868     	 ldr r0,[r7,#4]
 1199 0010 4FF0FF31 	 mov r1,#-1
 1200 0014 1A46     	 mov r2,r3
 1201 0016 FFF7FEFF 	 bl Str_Char_N
 1202 001a F860     	 str r0,[r7,#12]
1277:../Dave/Generated/UCPROBE/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL,
1278:../Dave/Generated/UCPROBE/lib_str.c ****                           srch_char);
1279:../Dave/Generated/UCPROBE/lib_str.c **** 
1280:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 1203              	 .loc 1 1280 0
 1204 001c FB68     	 ldr r3,[r7,#12]
1281:../Dave/Generated/UCPROBE/lib_str.c **** }
 1205              	 .loc 1 1281 0
 1206 001e 1846     	 mov r0,r3
 1207 0020 1037     	 adds r7,r7,#16
 1208              	.LCFI57:
 1209              	 .cfi_def_cfa_offset 8
 1210 0022 BD46     	 mov sp,r7
 1211              	.LCFI58:
 1212              	 .cfi_def_cfa_register 13
 1213              	 
 1214 0024 80BD     	 pop {r7,pc}
 1215              	 .cfi_endproc
 1216              	.LFE10:
 1218 0026 00BF     	 .section .text.Str_Char_N,"ax",%progbits
 1219              	 .align 2
 1220              	 .global Str_Char_N
 1221              	 .thumb
 1222              	 .thumb_func
 1224              	Str_Char_N:
 1225              	.LFB11:
1282:../Dave/Generated/UCPROBE/lib_str.c **** 
1283:../Dave/Generated/UCPROBE/lib_str.c **** 
1284:../Dave/Generated/UCPROBE/lib_str.c **** /*
1285:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1286:../Dave/Generated/UCPROBE/lib_str.c **** *                                            Str_Char_N()
1287:../Dave/Generated/UCPROBE/lib_str.c **** *
1288:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurrence of specific character, up to a maximum number
1289:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1290:../Dave/Generated/UCPROBE/lib_str.c **** *
1291:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1292:../Dave/Generated/UCPROBE/lib_str.c **** *
1293:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1294:../Dave/Generated/UCPROBE/lib_str.c **** *
1295:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1296:../Dave/Generated/UCPROBE/lib_str.c **** *
1297:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1298:../Dave/Generated/UCPROBE/lib_str.c **** *
1299:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1300:../Dave/Generated/UCPROBE/lib_str.c **** *
1301:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1302:../Dave/Generated/UCPROBE/lib_str.c **** *
1303:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1304:../Dave/Generated/UCPROBE/lib_str.c **** *
1305:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1306:../Dave/Generated/UCPROBE/lib_str.c **** *
1307:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1308:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1309:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1310:../Dave/Generated/UCPROBE/lib_str.c **** *
1311:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1312:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon completion, strchr() shall return" :
1313:../Dave/Generated/UCPROBE/lib_str.c **** *
1314:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte," ...
1315:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1316:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for
1317:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1318:../Dave/Generated/UCPROBE/lib_str.c **** *
1319:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1320:../Dave/Generated/UCPROBE/lib_str.c **** *                       argument list for consistency with all other custom string library function
1321:../Dave/Generated/UCPROBE/lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1322:../Dave/Generated/UCPROBE/lib_str.c **** *                       to comply with most standard library's strnchr() argument list.
1323:../Dave/Generated/UCPROBE/lib_str.c **** *
1324:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1325:../Dave/Generated/UCPROBE/lib_str.c **** *
1326:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1327:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1328:../Dave/Generated/UCPROBE/lib_str.c **** *
1329:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1330:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1331:../Dave/Generated/UCPROBE/lib_str.c **** *
1332:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1333:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1334:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1335:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1336:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1337:../Dave/Generated/UCPROBE/lib_str.c **** *
1338:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1339:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1340:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1341:../Dave/Generated/UCPROBE/lib_str.c **** *
1342:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1343:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1344:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1345:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1346:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1347:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1348:../Dave/Generated/UCPROBE/lib_str.c **** */
1349:../Dave/Generated/UCPROBE/lib_str.c **** 
1350:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_N (const  CPU_CHAR    *pstr,
1351:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_SIZE_T   len_max,
1352:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     srch_char)
1353:../Dave/Generated/UCPROBE/lib_str.c **** {
 1226              	 .loc 1 1353 0
 1227              	 .cfi_startproc
 1228              	 
 1229              	 
 1230              	 
 1231 0000 80B4     	 push {r7}
 1232              	.LCFI59:
 1233              	 .cfi_def_cfa_offset 4
 1234              	 .cfi_offset 7,-4
 1235 0002 87B0     	 sub sp,sp,#28
 1236              	.LCFI60:
 1237              	 .cfi_def_cfa_offset 32
 1238 0004 00AF     	 add r7,sp,#0
 1239              	.LCFI61:
 1240              	 .cfi_def_cfa_register 7
 1241 0006 F860     	 str r0,[r7,#12]
 1242 0008 B960     	 str r1,[r7,#8]
 1243 000a 1346     	 mov r3,r2
 1244 000c FB71     	 strb r3,[r7,#7]
1354:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_char;
1355:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   len_srch;
1356:../Dave/Generated/UCPROBE/lib_str.c **** 
1357:../Dave/Generated/UCPROBE/lib_str.c **** 
1358:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1245              	 .loc 1 1358 0
 1246 000e FB68     	 ldr r3,[r7,#12]
 1247 0010 002B     	 cmp r3,#0
 1248 0012 01D1     	 bne .L75
1359:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1249              	 .loc 1 1359 0
 1250 0014 0023     	 movs r3,#0
 1251 0016 32E0     	 b .L76
 1252              	.L75:
1360:../Dave/Generated/UCPROBE/lib_str.c ****     }
1361:../Dave/Generated/UCPROBE/lib_str.c **** 
1362:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1253              	 .loc 1 1362 0
 1254 0018 BB68     	 ldr r3,[r7,#8]
 1255 001a 002B     	 cmp r3,#0
 1256 001c 01D1     	 bne .L77
1363:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1257              	 .loc 1 1363 0
 1258 001e 0023     	 movs r3,#0
 1259 0020 2DE0     	 b .L76
 1260              	.L77:
1364:../Dave/Generated/UCPROBE/lib_str.c ****     }
1365:../Dave/Generated/UCPROBE/lib_str.c **** 
1366:../Dave/Generated/UCPROBE/lib_str.c **** 
1367:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char = pstr;
 1261              	 .loc 1 1367 0
 1262 0022 FB68     	 ldr r3,[r7,#12]
 1263 0024 7B61     	 str r3,[r7,#20]
1368:../Dave/Generated/UCPROBE/lib_str.c ****     len_srch  = 0u;
 1264              	 .loc 1 1368 0
 1265 0026 0023     	 movs r3,#0
 1266 0028 3B61     	 str r3,[r7,#16]
1369:../Dave/Generated/UCPROBE/lib_str.c **** 
1370:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)  0 )      &&       /* Srch str until NULL ptr     [see
 1267              	 .loc 1 1370 0
 1268 002a 05E0     	 b .L78
 1269              	.L80:
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
1372:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
1373:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
1374:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char++;
 1270              	 .loc 1 1374 0
 1271 002c 7B69     	 ldr r3,[r7,#20]
 1272 002e 0133     	 adds r3,r3,#1
 1273 0030 7B61     	 str r3,[r7,#20]
1375:../Dave/Generated/UCPROBE/lib_str.c ****         len_srch++;
 1274              	 .loc 1 1375 0
 1275 0032 3B69     	 ldr r3,[r7,#16]
 1276 0034 0133     	 adds r3,r3,#1
 1277 0036 3B61     	 str r3,[r7,#16]
 1278              	.L78:
1370:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1279              	 .loc 1 1370 0
 1280 0038 7B69     	 ldr r3,[r7,#20]
 1281 003a 002B     	 cmp r3,#0
 1282 003c 0CD0     	 beq .L79
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1283              	 .loc 1 1371 0 discriminator 1
 1284 003e 7B69     	 ldr r3,[r7,#20]
 1285 0040 1B78     	 ldrb r3,[r3]
1370:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1286              	 .loc 1 1370 0 discriminator 1
 1287 0042 002B     	 cmp r3,#0
 1288 0044 08D0     	 beq .L79
1372:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
 1289              	 .loc 1 1372 0
 1290 0046 7B69     	 ldr r3,[r7,#20]
 1291 0048 1B78     	 ldrb r3,[r3]
1371:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
 1292              	 .loc 1 1371 0
 1293 004a FA79     	 ldrb r2,[r7,#7]
 1294 004c 9A42     	 cmp r2,r3
 1295 004e 03D0     	 beq .L79
1372:../Dave/Generated/UCPROBE/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
 1296              	 .loc 1 1372 0
 1297 0050 3A69     	 ldr r2,[r7,#16]
 1298 0052 BB68     	 ldr r3,[r7,#8]
 1299 0054 9A42     	 cmp r2,r3
 1300 0056 E9D3     	 bcc .L80
 1301              	.L79:
1376:../Dave/Generated/UCPROBE/lib_str.c ****     }
1377:../Dave/Generated/UCPROBE/lib_str.c **** 
1378:../Dave/Generated/UCPROBE/lib_str.c **** 
1379:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
 1302              	 .loc 1 1379 0
 1303 0058 7B69     	 ldr r3,[r7,#20]
 1304 005a 002B     	 cmp r3,#0
 1305 005c 01D1     	 bne .L81
1380:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1306              	 .loc 1 1380 0
 1307 005e 0023     	 movs r3,#0
 1308 0060 0DE0     	 b .L76
 1309              	.L81:
1381:../Dave/Generated/UCPROBE/lib_str.c ****     }
1382:../Dave/Generated/UCPROBE/lib_str.c **** 
1383:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_srch >= len_max) {                                  /* Rtn NULL if srch char NOT found 
 1310              	 .loc 1 1383 0
 1311 0062 3A69     	 ldr r2,[r7,#16]
 1312 0064 BB68     	 ldr r3,[r7,#8]
 1313 0066 9A42     	 cmp r2,r3
 1314 0068 01D3     	 bcc .L82
1384:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
 1315              	 .loc 1 1384 0
 1316 006a 0023     	 movs r3,#0
 1317 006c 07E0     	 b .L76
 1318              	.L82:
1385:../Dave/Generated/UCPROBE/lib_str.c ****     }
1386:../Dave/Generated/UCPROBE/lib_str.c **** 
1387:../Dave/Generated/UCPROBE/lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
 1319              	 .loc 1 1387 0
 1320 006e 7B69     	 ldr r3,[r7,#20]
 1321 0070 1B78     	 ldrb r3,[r3]
 1322 0072 FA79     	 ldrb r2,[r7,#7]
 1323 0074 9A42     	 cmp r2,r3
 1324 0076 01D0     	 beq .L83
1388:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 1325              	 .loc 1 1388 0
 1326 0078 0023     	 movs r3,#0
 1327 007a 00E0     	 b .L76
 1328              	.L83:
1389:../Dave/Generated/UCPROBE/lib_str.c ****     }
1390:../Dave/Generated/UCPROBE/lib_str.c **** 
1391:../Dave/Generated/UCPROBE/lib_str.c **** 
1392:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
 1329              	 .loc 1 1392 0
 1330 007c 7B69     	 ldr r3,[r7,#20]
 1331              	.L76:
1393:../Dave/Generated/UCPROBE/lib_str.c **** }
 1332              	 .loc 1 1393 0
 1333 007e 1846     	 mov r0,r3
 1334 0080 1C37     	 adds r7,r7,#28
 1335              	.LCFI62:
 1336              	 .cfi_def_cfa_offset 4
 1337 0082 BD46     	 mov sp,r7
 1338              	.LCFI63:
 1339              	 .cfi_def_cfa_register 13
 1340              	 
 1341 0084 5DF8047B 	 ldr r7,[sp],#4
 1342              	.LCFI64:
 1343              	 .cfi_restore 7
 1344              	 .cfi_def_cfa_offset 0
 1345 0088 7047     	 bx lr
 1346              	 .cfi_endproc
 1347              	.LFE11:
 1349 008a 00BF     	 .section .text.Str_Char_Last,"ax",%progbits
 1350              	 .align 2
 1351              	 .global Str_Char_Last
 1352              	 .thumb
 1353              	 .thumb_func
 1355              	Str_Char_Last:
 1356              	.LFB12:
1394:../Dave/Generated/UCPROBE/lib_str.c **** 
1395:../Dave/Generated/UCPROBE/lib_str.c **** 
1396:../Dave/Generated/UCPROBE/lib_str.c **** /*
1397:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1398:../Dave/Generated/UCPROBE/lib_str.c **** *                                           Str_Char_Last()
1399:../Dave/Generated/UCPROBE/lib_str.c **** *
1400:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for last occurrence of specific character.
1401:../Dave/Generated/UCPROBE/lib_str.c **** *
1402:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1403:../Dave/Generated/UCPROBE/lib_str.c **** *
1404:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1405:../Dave/Generated/UCPROBE/lib_str.c **** *
1406:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1407:../Dave/Generated/UCPROBE/lib_str.c **** *
1408:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1409:../Dave/Generated/UCPROBE/lib_str.c **** *
1410:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1411:../Dave/Generated/UCPROBE/lib_str.c **** *
1412:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1413:../Dave/Generated/UCPROBE/lib_str.c **** *
1414:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1415:../Dave/Generated/UCPROBE/lib_str.c **** *
1416:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1417:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1418:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1419:../Dave/Generated/UCPROBE/lib_str.c **** *
1420:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1421:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1422:../Dave/Generated/UCPROBE/lib_str.c **** *
1423:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte" ...
1424:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1425:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for
1426:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1427:../Dave/Generated/UCPROBE/lib_str.c **** *
1428:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1429:../Dave/Generated/UCPROBE/lib_str.c **** *
1430:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1431:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1432:../Dave/Generated/UCPROBE/lib_str.c **** *
1433:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1434:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1435:../Dave/Generated/UCPROBE/lib_str.c **** *
1436:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String searched from end to beginning.
1437:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1438:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1439:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1440:../Dave/Generated/UCPROBE/lib_str.c **** *
1441:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1442:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string
1443:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1444:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1445:../Dave/Generated/UCPROBE/lib_str.c **** */
1446:../Dave/Generated/UCPROBE/lib_str.c **** 
1447:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Last (const  CPU_CHAR  *pstr,
1448:../Dave/Generated/UCPROBE/lib_str.c ****                                  CPU_CHAR   srch_char)
1449:../Dave/Generated/UCPROBE/lib_str.c **** {
 1357              	 .loc 1 1449 0
 1358              	 .cfi_startproc
 1359              	 
 1360              	 
 1361 0000 80B5     	 push {r7,lr}
 1362              	.LCFI65:
 1363              	 .cfi_def_cfa_offset 8
 1364              	 .cfi_offset 7,-8
 1365              	 .cfi_offset 14,-4
 1366 0002 84B0     	 sub sp,sp,#16
 1367              	.LCFI66:
 1368              	 .cfi_def_cfa_offset 24
 1369 0004 00AF     	 add r7,sp,#0
 1370              	.LCFI67:
 1371              	 .cfi_def_cfa_register 7
 1372 0006 7860     	 str r0,[r7,#4]
 1373 0008 0B46     	 mov r3,r1
 1374 000a FB70     	 strb r3,[r7,#3]
1450:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1451:../Dave/Generated/UCPROBE/lib_str.c **** 
1452:../Dave/Generated/UCPROBE/lib_str.c **** 
1453:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_Last_N(pstr,
 1375              	 .loc 1 1453 0
 1376 000c FB78     	 ldrb r3,[r7,#3]
 1377 000e 7868     	 ldr r0,[r7,#4]
 1378 0010 4FF0FF31 	 mov r1,#-1
 1379 0014 1A46     	 mov r2,r3
 1380 0016 FFF7FEFF 	 bl Str_Char_Last_N
 1381 001a F860     	 str r0,[r7,#12]
1454:../Dave/Generated/UCPROBE/lib_str.c ****                                DEF_INT_CPU_U_MAX_VAL,
1455:../Dave/Generated/UCPROBE/lib_str.c ****                                srch_char);
1456:../Dave/Generated/UCPROBE/lib_str.c **** 
1457:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 1382              	 .loc 1 1457 0
 1383 001c FB68     	 ldr r3,[r7,#12]
1458:../Dave/Generated/UCPROBE/lib_str.c **** }
 1384              	 .loc 1 1458 0
 1385 001e 1846     	 mov r0,r3
 1386 0020 1037     	 adds r7,r7,#16
 1387              	.LCFI68:
 1388              	 .cfi_def_cfa_offset 8
 1389 0022 BD46     	 mov sp,r7
 1390              	.LCFI69:
 1391              	 .cfi_def_cfa_register 13
 1392              	 
 1393 0024 80BD     	 pop {r7,pc}
 1394              	 .cfi_endproc
 1395              	.LFE12:
 1397 0026 00BF     	 .section .text.Str_Char_Last_N,"ax",%progbits
 1398              	 .align 2
 1399              	 .global Str_Char_Last_N
 1400              	 .thumb
 1401              	 .thumb_func
 1403              	Str_Char_Last_N:
 1404              	.LFB13:
1459:../Dave/Generated/UCPROBE/lib_str.c **** 
1460:../Dave/Generated/UCPROBE/lib_str.c **** 
1461:../Dave/Generated/UCPROBE/lib_str.c **** /*
1462:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1463:../Dave/Generated/UCPROBE/lib_str.c **** *                                          Str_Char_Last_N()
1464:../Dave/Generated/UCPROBE/lib_str.c **** *
1465:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for last occurrence of specific character, up to a maximum number
1466:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1467:../Dave/Generated/UCPROBE/lib_str.c **** *
1468:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1469:../Dave/Generated/UCPROBE/lib_str.c **** *
1470:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1471:../Dave/Generated/UCPROBE/lib_str.c **** *
1472:../Dave/Generated/UCPROBE/lib_str.c **** *               srch_char       Search character.
1473:../Dave/Generated/UCPROBE/lib_str.c **** *
1474:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1475:../Dave/Generated/UCPROBE/lib_str.c **** *
1476:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1477:../Dave/Generated/UCPROBE/lib_str.c **** *
1478:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1479:../Dave/Generated/UCPROBE/lib_str.c **** *
1480:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1481:../Dave/Generated/UCPROBE/lib_str.c **** *
1482:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1483:../Dave/Generated/UCPROBE/lib_str.c **** *
1484:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1485:../Dave/Generated/UCPROBE/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1486:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1487:../Dave/Generated/UCPROBE/lib_str.c **** *
1488:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1489:../Dave/Generated/UCPROBE/lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1490:../Dave/Generated/UCPROBE/lib_str.c **** *
1491:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "a pointer to the byte" ...
1492:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1493:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for
1494:../Dave/Generated/UCPROBE/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1495:../Dave/Generated/UCPROBE/lib_str.c **** *
1496:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1497:../Dave/Generated/UCPROBE/lib_str.c **** *                       argument list for consistency with all other custom string library function
1498:../Dave/Generated/UCPROBE/lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1499:../Dave/Generated/UCPROBE/lib_str.c **** *                       to comply with most standard library's strnrchr() argument list.
1500:../Dave/Generated/UCPROBE/lib_str.c **** *
1501:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also 'Str_Char_N()  Note #2c'.
1502:../Dave/Generated/UCPROBE/lib_str.c **** *
1503:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1504:../Dave/Generated/UCPROBE/lib_str.c **** *
1505:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1506:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1507:../Dave/Generated/UCPROBE/lib_str.c **** *
1508:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1509:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1510:../Dave/Generated/UCPROBE/lib_str.c **** *
1511:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String searched from end to beginning.
1512:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1513:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2b2).
1514:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1515:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1516:../Dave/Generated/UCPROBE/lib_str.c **** *
1517:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1518:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string
1519:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a1).
1520:../Dave/Generated/UCPROBE/lib_str.c **** *
1521:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1522:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within last 'len_max' numbe
1523:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1524:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1525:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1526:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1527:../Dave/Generated/UCPROBE/lib_str.c **** */
1528:../Dave/Generated/UCPROBE/lib_str.c **** 
1529:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Last_N (const  CPU_CHAR    *pstr,
1530:../Dave/Generated/UCPROBE/lib_str.c ****                                    CPU_SIZE_T   len_max,
1531:../Dave/Generated/UCPROBE/lib_str.c ****                                    CPU_CHAR     srch_char)
1532:../Dave/Generated/UCPROBE/lib_str.c **** {
 1405              	 .loc 1 1532 0
 1406              	 .cfi_startproc
 1407              	 
 1408              	 
 1409 0000 80B5     	 push {r7,lr}
 1410              	.LCFI70:
 1411              	 .cfi_def_cfa_offset 8
 1412              	 .cfi_offset 7,-8
 1413              	 .cfi_offset 14,-4
 1414 0002 88B0     	 sub sp,sp,#32
 1415              	.LCFI71:
 1416              	 .cfi_def_cfa_offset 40
 1417 0004 00AF     	 add r7,sp,#0
 1418              	.LCFI72:
 1419              	 .cfi_def_cfa_register 7
 1420 0006 F860     	 str r0,[r7,#12]
 1421 0008 B960     	 str r1,[r7,#8]
 1422 000a 1346     	 mov r3,r2
 1423 000c FB71     	 strb r3,[r7,#7]
1533:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR    *pstr_char;
1534:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   str_len_max;
1535:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T   str_len;
1536:../Dave/Generated/UCPROBE/lib_str.c **** 
1537:../Dave/Generated/UCPROBE/lib_str.c **** 
1538:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1424              	 .loc 1 1538 0
 1425 000e FB68     	 ldr r3,[r7,#12]
 1426 0010 002B     	 cmp r3,#0
 1427 0012 01D1     	 bne .L87
1539:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1428              	 .loc 1 1539 0
 1429 0014 0023     	 movs r3,#0
 1430 0016 2CE0     	 b .L88
 1431              	.L87:
1540:../Dave/Generated/UCPROBE/lib_str.c ****     }
1541:../Dave/Generated/UCPROBE/lib_str.c **** 
1542:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1432              	 .loc 1 1542 0
 1433 0018 BB68     	 ldr r3,[r7,#8]
 1434 001a 002B     	 cmp r3,#0
 1435 001c 01D1     	 bne .L89
1543:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1436              	 .loc 1 1543 0
 1437 001e 0023     	 movs r3,#0
 1438 0020 27E0     	 b .L88
 1439              	.L89:
1544:../Dave/Generated/UCPROBE/lib_str.c ****     }
1545:../Dave/Generated/UCPROBE/lib_str.c **** 
1546:../Dave/Generated/UCPROBE/lib_str.c **** 
1547:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char    = pstr;
 1440              	 .loc 1 1547 0
 1441 0022 FB68     	 ldr r3,[r7,#12]
 1442 0024 FB61     	 str r3,[r7,#28]
1548:../Dave/Generated/UCPROBE/lib_str.c ****      str_len_max = len_max - sizeof((CPU_CHAR)'\0');            /* Str len adj'd for NULL char len.
 1443              	 .loc 1 1548 0
 1444 0026 BB68     	 ldr r3,[r7,#8]
 1445 0028 013B     	 subs r3,r3,#1
 1446 002a BB61     	 str r3,[r7,#24]
1549:../Dave/Generated/UCPROBE/lib_str.c ****      str_len     = Str_Len_N(pstr_char, str_len_max);
 1447              	 .loc 1 1549 0
 1448 002c F869     	 ldr r0,[r7,#28]
 1449 002e B969     	 ldr r1,[r7,#24]
 1450 0030 FFF7FEFF 	 bl Str_Len_N
 1451 0034 7861     	 str r0,[r7,#20]
1550:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char   += str_len;
 1452              	 .loc 1 1550 0
 1453 0036 FA69     	 ldr r2,[r7,#28]
 1454 0038 7B69     	 ldr r3,[r7,#20]
 1455 003a 1344     	 add r3,r3,r2
 1456 003c FB61     	 str r3,[r7,#28]
1551:../Dave/Generated/UCPROBE/lib_str.c **** 
1552:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
 1457              	 .loc 1 1552 0
 1458 003e FB69     	 ldr r3,[r7,#28]
 1459 0040 002B     	 cmp r3,#0
 1460 0042 01D1     	 bne .L90
1553:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1461              	 .loc 1 1553 0
 1462 0044 0023     	 movs r3,#0
 1463 0046 14E0     	 b .L88
 1464              	.L90:
1554:../Dave/Generated/UCPROBE/lib_str.c ****     }
1555:../Dave/Generated/UCPROBE/lib_str.c **** 
1556:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != pstr) &&                              /* Srch str from end until beginnin
 1465              	 .loc 1 1556 0
 1466 0048 02E0     	 b .L91
 1467              	.L93:
1557:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
1558:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char--;
 1468              	 .loc 1 1558 0
 1469 004a FB69     	 ldr r3,[r7,#28]
 1470 004c 013B     	 subs r3,r3,#1
 1471 004e FB61     	 str r3,[r7,#28]
 1472              	.L91:
1556:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1473              	 .loc 1 1556 0
 1474 0050 FA69     	 ldr r2,[r7,#28]
 1475 0052 FB68     	 ldr r3,[r7,#12]
 1476 0054 9A42     	 cmp r2,r3
 1477 0056 04D0     	 beq .L92
1557:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1478              	 .loc 1 1557 0 discriminator 1
 1479 0058 FB69     	 ldr r3,[r7,#28]
 1480 005a 1B78     	 ldrb r3,[r3]
1556:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1481              	 .loc 1 1556 0 discriminator 1
 1482 005c FA79     	 ldrb r2,[r7,#7]
 1483 005e 9A42     	 cmp r2,r3
 1484 0060 F3D1     	 bne .L93
 1485              	.L92:
1559:../Dave/Generated/UCPROBE/lib_str.c ****     }
1560:../Dave/Generated/UCPROBE/lib_str.c **** 
1561:../Dave/Generated/UCPROBE/lib_str.c **** 
1562:../Dave/Generated/UCPROBE/lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
 1486              	 .loc 1 1562 0
 1487 0062 FB69     	 ldr r3,[r7,#28]
 1488 0064 1B78     	 ldrb r3,[r3]
 1489 0066 FA79     	 ldrb r2,[r7,#7]
 1490 0068 9A42     	 cmp r2,r3
 1491 006a 01D0     	 beq .L94
1563:../Dave/Generated/UCPROBE/lib_str.c ****          return ((CPU_CHAR *)0);
 1492              	 .loc 1 1563 0
 1493 006c 0023     	 movs r3,#0
 1494 006e 00E0     	 b .L88
 1495              	.L94:
1564:../Dave/Generated/UCPROBE/lib_str.c ****     }
1565:../Dave/Generated/UCPROBE/lib_str.c **** 
1566:../Dave/Generated/UCPROBE/lib_str.c **** 
1567:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
 1496              	 .loc 1 1567 0
 1497 0070 FB69     	 ldr r3,[r7,#28]
 1498              	.L88:
1568:../Dave/Generated/UCPROBE/lib_str.c **** }
 1499              	 .loc 1 1568 0
 1500 0072 1846     	 mov r0,r3
 1501 0074 2037     	 adds r7,r7,#32
 1502              	.LCFI73:
 1503              	 .cfi_def_cfa_offset 8
 1504 0076 BD46     	 mov sp,r7
 1505              	.LCFI74:
 1506              	 .cfi_def_cfa_register 13
 1507              	 
 1508 0078 80BD     	 pop {r7,pc}
 1509              	 .cfi_endproc
 1510              	.LFE13:
 1512 007a 00BF     	 .section .text.Str_Char_Replace,"ax",%progbits
 1513              	 .align 2
 1514              	 .global Str_Char_Replace
 1515              	 .thumb
 1516              	 .thumb_func
 1518              	Str_Char_Replace:
 1519              	.LFB14:
1569:../Dave/Generated/UCPROBE/lib_str.c **** 
1570:../Dave/Generated/UCPROBE/lib_str.c **** 
1571:../Dave/Generated/UCPROBE/lib_str.c **** /*
1572:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1573:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_Char_Replace()
1574:../Dave/Generated/UCPROBE/lib_str.c **** *
1575:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for specific character and replace it by another specific character.
1576:../Dave/Generated/UCPROBE/lib_str.c **** *
1577:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1578:../Dave/Generated/UCPROBE/lib_str.c **** *
1579:../Dave/Generated/UCPROBE/lib_str.c **** *               char_srch       Search character.
1580:../Dave/Generated/UCPROBE/lib_str.c **** *
1581:../Dave/Generated/UCPROBE/lib_str.c **** *               char_replace    Replace character.
1582:../Dave/Generated/UCPROBE/lib_str.c **** *
1583:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1584:../Dave/Generated/UCPROBE/lib_str.c **** *
1585:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,   otherwise.
1586:../Dave/Generated/UCPROBE/lib_str.c **** *
1587:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1588:../Dave/Generated/UCPROBE/lib_str.c **** *
1589:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer modified.
1590:../Dave/Generated/UCPROBE/lib_str.c **** *
1591:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) String search terminates when :
1592:../Dave/Generated/UCPROBE/lib_str.c **** *
1593:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1594:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1595:../Dave/Generated/UCPROBE/lib_str.c **** *
1596:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1597:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1598:../Dave/Generated/UCPROBE/lib_str.c **** *
1599:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1600:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1601:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1602:../Dave/Generated/UCPROBE/lib_str.c **** *
1603:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1604:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Replace character found by the specified character.
1605:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1606:../Dave/Generated/UCPROBE/lib_str.c **** */
1607:../Dave/Generated/UCPROBE/lib_str.c **** 
1608:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Replace (CPU_CHAR  *pstr,
1609:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_CHAR   char_srch,
1610:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_CHAR   char_replace)
1611:../Dave/Generated/UCPROBE/lib_str.c **** {
 1520              	 .loc 1 1611 0
 1521              	 .cfi_startproc
 1522              	 
 1523              	 
 1524 0000 80B5     	 push {r7,lr}
 1525              	.LCFI75:
 1526              	 .cfi_def_cfa_offset 8
 1527              	 .cfi_offset 7,-8
 1528              	 .cfi_offset 14,-4
 1529 0002 84B0     	 sub sp,sp,#16
 1530              	.LCFI76:
 1531              	 .cfi_def_cfa_offset 24
 1532 0004 00AF     	 add r7,sp,#0
 1533              	.LCFI77:
 1534              	 .cfi_def_cfa_register 7
 1535 0006 7860     	 str r0,[r7,#4]
 1536 0008 0B46     	 mov r3,r1
 1537 000a FB70     	 strb r3,[r7,#3]
 1538 000c 1346     	 mov r3,r2
 1539 000e BB70     	 strb r3,[r7,#2]
1612:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1613:../Dave/Generated/UCPROBE/lib_str.c **** 
1614:../Dave/Generated/UCPROBE/lib_str.c **** 
1615:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Char_Replace_N(pstr,
 1540              	 .loc 1 1615 0
 1541 0010 FA78     	 ldrb r2,[r7,#3]
 1542 0012 BB78     	 ldrb r3,[r7,#2]
 1543 0014 7868     	 ldr r0,[r7,#4]
 1544 0016 1146     	 mov r1,r2
 1545 0018 1A46     	 mov r2,r3
 1546 001a 4FF0FF33 	 mov r3,#-1
 1547 001e FFF7FEFF 	 bl Str_Char_Replace_N
 1548 0022 F860     	 str r0,[r7,#12]
1616:../Dave/Generated/UCPROBE/lib_str.c ****                                   char_srch,
1617:../Dave/Generated/UCPROBE/lib_str.c ****                                   char_replace,
1618:../Dave/Generated/UCPROBE/lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1619:../Dave/Generated/UCPROBE/lib_str.c **** 
1620:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 1549              	 .loc 1 1620 0
 1550 0024 FB68     	 ldr r3,[r7,#12]
1621:../Dave/Generated/UCPROBE/lib_str.c **** }
 1551              	 .loc 1 1621 0
 1552 0026 1846     	 mov r0,r3
 1553 0028 1037     	 adds r7,r7,#16
 1554              	.LCFI78:
 1555              	 .cfi_def_cfa_offset 8
 1556 002a BD46     	 mov sp,r7
 1557              	.LCFI79:
 1558              	 .cfi_def_cfa_register 13
 1559              	 
 1560 002c 80BD     	 pop {r7,pc}
 1561              	 .cfi_endproc
 1562              	.LFE14:
 1564 002e 00BF     	 .section .text.Str_Char_Replace_N,"ax",%progbits
 1565              	 .align 2
 1566              	 .global Str_Char_Replace_N
 1567              	 .thumb
 1568              	 .thumb_func
 1570              	Str_Char_Replace_N:
 1571              	.LFB15:
1622:../Dave/Generated/UCPROBE/lib_str.c **** 
1623:../Dave/Generated/UCPROBE/lib_str.c **** 
1624:../Dave/Generated/UCPROBE/lib_str.c **** /*
1625:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1626:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_Char_Replace_N()
1627:../Dave/Generated/UCPROBE/lib_str.c **** *
1628:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for specific character and replace it by another specific character, 
1629:../Dave/Generated/UCPROBE/lib_str.c **** *               a maximum number of characters.
1630:../Dave/Generated/UCPROBE/lib_str.c **** *
1631:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1632:../Dave/Generated/UCPROBE/lib_str.c **** *
1633:../Dave/Generated/UCPROBE/lib_str.c **** *               char_srch       Search character.
1634:../Dave/Generated/UCPROBE/lib_str.c **** *
1635:../Dave/Generated/UCPROBE/lib_str.c **** *               char_replace    Replace character.
1636:../Dave/Generated/UCPROBE/lib_str.c **** *
1637:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1638:../Dave/Generated/UCPROBE/lib_str.c **** *
1639:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1640:../Dave/Generated/UCPROBE/lib_str.c **** *
1641:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,   otherwise.
1642:../Dave/Generated/UCPROBE/lib_str.c **** *
1643:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1644:../Dave/Generated/UCPROBE/lib_str.c **** *
1645:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer modified.
1646:../Dave/Generated/UCPROBE/lib_str.c **** *
1647:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) String search terminates when :
1648:../Dave/Generated/UCPROBE/lib_str.c **** *
1649:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1650:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1651:../Dave/Generated/UCPROBE/lib_str.c **** *
1652:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer points to NULL.
1653:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1654:../Dave/Generated/UCPROBE/lib_str.c **** *
1655:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) String's terminating NULL character found.
1656:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1657:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1658:../Dave/Generated/UCPROBE/lib_str.c **** *
1659:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search character found.
1660:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Replace character found by the specified character.
1661:../Dave/Generated/UCPROBE/lib_str.c **** *
1662:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1663:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1664:../Dave/Generated/UCPROBE/lib_str.c **** *                           of characters; NULL pointer returned.
1665:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1666:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1667:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1668:../Dave/Generated/UCPROBE/lib_str.c **** */
1669:../Dave/Generated/UCPROBE/lib_str.c **** 
1670:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Char_Replace_N (CPU_CHAR    *pstr,
1671:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_CHAR     char_srch,
1672:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_CHAR     char_replace,
1673:../Dave/Generated/UCPROBE/lib_str.c ****                                CPU_SIZE_T   len_max)
1674:../Dave/Generated/UCPROBE/lib_str.c **** {
 1572              	 .loc 1 1674 0
 1573              	 .cfi_startproc
 1574              	 
 1575              	 
 1576              	 
 1577 0000 80B4     	 push {r7}
 1578              	.LCFI80:
 1579              	 .cfi_def_cfa_offset 4
 1580              	 .cfi_offset 7,-4
 1581 0002 87B0     	 sub sp,sp,#28
 1582              	.LCFI81:
 1583              	 .cfi_def_cfa_offset 32
 1584 0004 00AF     	 add r7,sp,#0
 1585              	.LCFI82:
 1586              	 .cfi_def_cfa_register 7
 1587 0006 F860     	 str r0,[r7,#12]
 1588 0008 7B60     	 str r3,[r7,#4]
 1589 000a 0B46     	 mov r3,r1
 1590 000c FB72     	 strb r3,[r7,#11]
 1591 000e 1346     	 mov r3,r2
 1592 0010 BB72     	 strb r3,[r7,#10]
1675:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR    *pstr_char;
1676:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_SIZE_T   len;
1677:../Dave/Generated/UCPROBE/lib_str.c **** 
1678:../Dave/Generated/UCPROBE/lib_str.c **** 
1679:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1593              	 .loc 1 1679 0
 1594 0012 FB68     	 ldr r3,[r7,#12]
 1595 0014 002B     	 cmp r3,#0
 1596 0016 01D1     	 bne .L98
1680:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1597              	 .loc 1 1680 0
 1598 0018 0023     	 movs r3,#0
 1599 001a 22E0     	 b .L99
 1600              	.L98:
1681:../Dave/Generated/UCPROBE/lib_str.c ****     }
1682:../Dave/Generated/UCPROBE/lib_str.c **** 
1683:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1601              	 .loc 1 1683 0
 1602 001c 7B68     	 ldr r3,[r7,#4]
 1603 001e 002B     	 cmp r3,#0
 1604 0020 01D1     	 bne .L100
1684:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1605              	 .loc 1 1684 0
 1606 0022 0023     	 movs r3,#0
 1607 0024 1DE0     	 b .L99
 1608              	.L100:
1685:../Dave/Generated/UCPROBE/lib_str.c ****     }
1686:../Dave/Generated/UCPROBE/lib_str.c **** 
1687:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_char = pstr;
 1609              	 .loc 1 1687 0
 1610 0026 FB68     	 ldr r3,[r7,#12]
 1611 0028 7B61     	 str r3,[r7,#20]
1688:../Dave/Generated/UCPROBE/lib_str.c ****     len       = len_max;
 1612              	 .loc 1 1688 0
 1613 002a 7B68     	 ldr r3,[r7,#4]
 1614 002c 3B61     	 str r3,[r7,#16]
1689:../Dave/Generated/UCPROBE/lib_str.c **** 
1690:../Dave/Generated/UCPROBE/lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)0) &&               /* Srch str until NULL ptr     [see
 1615              	 .loc 1 1690 0
 1616 002e 0DE0     	 b .L101
 1617              	.L104:
1691:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
1692:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
1693:../Dave/Generated/UCPROBE/lib_str.c **** 
1694:../Dave/Generated/UCPROBE/lib_str.c ****         if (*pstr_char == char_srch) {
 1618              	 .loc 1 1694 0
 1619 0030 7B69     	 ldr r3,[r7,#20]
 1620 0032 1B78     	 ldrb r3,[r3]
 1621 0034 FA7A     	 ldrb r2,[r7,#11]
 1622 0036 9A42     	 cmp r2,r3
 1623 0038 02D1     	 bne .L102
1695:../Dave/Generated/UCPROBE/lib_str.c ****             *pstr_char  = char_replace;                         /* Replace char if srch char is fou
 1624              	 .loc 1 1695 0
 1625 003a 7B69     	 ldr r3,[r7,#20]
 1626 003c BA7A     	 ldrb r2,[r7,#10]
 1627 003e 1A70     	 strb r2,[r3]
 1628              	.L102:
1696:../Dave/Generated/UCPROBE/lib_str.c ****         }
1697:../Dave/Generated/UCPROBE/lib_str.c **** 
1698:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_char++;
 1629              	 .loc 1 1698 0
 1630 0040 7B69     	 ldr r3,[r7,#20]
 1631 0042 0133     	 adds r3,r3,#1
 1632 0044 7B61     	 str r3,[r7,#20]
1699:../Dave/Generated/UCPROBE/lib_str.c ****         len--;
 1633              	 .loc 1 1699 0
 1634 0046 3B69     	 ldr r3,[r7,#16]
 1635 0048 013B     	 subs r3,r3,#1
 1636 004a 3B61     	 str r3,[r7,#16]
 1637              	.L101:
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 1638              	 .loc 1 1690 0
 1639 004c 7B69     	 ldr r3,[r7,#20]
 1640 004e 002B     	 cmp r3,#0
 1641 0050 06D0     	 beq .L103
1691:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 1642              	 .loc 1 1691 0 discriminator 1
 1643 0052 7B69     	 ldr r3,[r7,#20]
 1644 0054 1B78     	 ldrb r3,[r3]
1690:../Dave/Generated/UCPROBE/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 1645              	 .loc 1 1690 0 discriminator 1
 1646 0056 002B     	 cmp r3,#0
 1647 0058 02D0     	 beq .L103
1691:../Dave/Generated/UCPROBE/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 1648              	 .loc 1 1691 0
 1649 005a 3B69     	 ldr r3,[r7,#16]
 1650 005c 002B     	 cmp r3,#0
 1651 005e E7D1     	 bne .L104
 1652              	.L103:
1700:../Dave/Generated/UCPROBE/lib_str.c ****     }
1701:../Dave/Generated/UCPROBE/lib_str.c **** 
1702:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);
 1653              	 .loc 1 1702 0
 1654 0060 FB68     	 ldr r3,[r7,#12]
 1655              	.L99:
1703:../Dave/Generated/UCPROBE/lib_str.c **** }
 1656              	 .loc 1 1703 0
 1657 0062 1846     	 mov r0,r3
 1658 0064 1C37     	 adds r7,r7,#28
 1659              	.LCFI83:
 1660              	 .cfi_def_cfa_offset 4
 1661 0066 BD46     	 mov sp,r7
 1662              	.LCFI84:
 1663              	 .cfi_def_cfa_register 13
 1664              	 
 1665 0068 5DF8047B 	 ldr r7,[sp],#4
 1666              	.LCFI85:
 1667              	 .cfi_restore 7
 1668              	 .cfi_def_cfa_offset 0
 1669 006c 7047     	 bx lr
 1670              	 .cfi_endproc
 1671              	.LFE15:
 1673 006e 00BF     	 .section .text.Str_Str,"ax",%progbits
 1674              	 .align 2
 1675              	 .global Str_Str
 1676              	 .thumb
 1677              	 .thumb_func
 1679              	Str_Str:
 1680              	.LFB16:
1704:../Dave/Generated/UCPROBE/lib_str.c **** 
1705:../Dave/Generated/UCPROBE/lib_str.c **** 
1706:../Dave/Generated/UCPROBE/lib_str.c **** /*
1707:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1708:../Dave/Generated/UCPROBE/lib_str.c **** *                                              Str_Str()
1709:../Dave/Generated/UCPROBE/lib_str.c **** *
1710:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurence of a specific search string.
1711:../Dave/Generated/UCPROBE/lib_str.c **** *
1712:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1713:../Dave/Generated/UCPROBE/lib_str.c **** *
1714:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1715:../Dave/Generated/UCPROBE/lib_str.c **** *
1716:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1717:../Dave/Generated/UCPROBE/lib_str.c **** *
1718:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1719:../Dave/Generated/UCPROBE/lib_str.c **** *
1720:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1721:../Dave/Generated/UCPROBE/lib_str.c **** *
1722:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1723:../Dave/Generated/UCPROBE/lib_str.c **** *
1724:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1725:../Dave/Generated/UCPROBE/lib_str.c **** *
1726:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1727:../Dave/Generated/UCPROBE/lib_str.c **** *
1728:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1729:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1730:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1731:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1732:../Dave/Generated/UCPROBE/lib_str.c **** *
1733:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1734:../Dave/Generated/UCPROBE/lib_str.c **** *
1735:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1736:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "a pointer to the located string" ...
1737:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1738:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1739:../Dave/Generated/UCPROBE/lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1740:../Dave/Generated/UCPROBE/lib_str.c **** *
1741:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1742:../Dave/Generated/UCPROBE/lib_str.c **** *                            shall return 's1' ('pstr')."
1743:../Dave/Generated/UCPROBE/lib_str.c **** *
1744:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1745:../Dave/Generated/UCPROBE/lib_str.c **** *
1746:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1747:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1748:../Dave/Generated/UCPROBE/lib_str.c **** *
1749:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer(s) point to NULL.
1750:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1751:../Dave/Generated/UCPROBE/lib_str.c **** *
1752:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Search string length equal to zero.
1753:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1754:../Dave/Generated/UCPROBE/lib_str.c **** *
1755:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search string length greater than string length.
1756:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1757:../Dave/Generated/UCPROBE/lib_str.c **** *
1758:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Entire string has been searched.
1759:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1760:../Dave/Generated/UCPROBE/lib_str.c **** *
1761:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Search string found.
1762:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1763:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1764:../Dave/Generated/UCPROBE/lib_str.c **** */
1765:../Dave/Generated/UCPROBE/lib_str.c **** 
1766:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Str (const  CPU_CHAR  *pstr,
1767:../Dave/Generated/UCPROBE/lib_str.c ****                     const  CPU_CHAR  *pstr_srch)
1768:../Dave/Generated/UCPROBE/lib_str.c **** {
 1681              	 .loc 1 1768 0
 1682              	 .cfi_startproc
 1683              	 
 1684              	 
 1685 0000 80B5     	 push {r7,lr}
 1686              	.LCFI86:
 1687              	 .cfi_def_cfa_offset 8
 1688              	 .cfi_offset 7,-8
 1689              	 .cfi_offset 14,-4
 1690 0002 84B0     	 sub sp,sp,#16
 1691              	.LCFI87:
 1692              	 .cfi_def_cfa_offset 24
 1693 0004 00AF     	 add r7,sp,#0
 1694              	.LCFI88:
 1695              	 .cfi_def_cfa_register 7
 1696 0006 7860     	 str r0,[r7,#4]
 1697 0008 3960     	 str r1,[r7]
1769:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1770:../Dave/Generated/UCPROBE/lib_str.c **** 
1771:../Dave/Generated/UCPROBE/lib_str.c **** 
1772:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_rtn = Str_Str_N(pstr,
 1698              	 .loc 1 1772 0
 1699 000a 7868     	 ldr r0,[r7,#4]
 1700 000c 3968     	 ldr r1,[r7]
 1701 000e 4FF0FF32 	 mov r2,#-1
 1702 0012 FFF7FEFF 	 bl Str_Str_N
 1703 0016 F860     	 str r0,[r7,#12]
1773:../Dave/Generated/UCPROBE/lib_str.c ****                          pstr_srch,
1774:../Dave/Generated/UCPROBE/lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
1775:../Dave/Generated/UCPROBE/lib_str.c **** 
1776:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_rtn);
 1704              	 .loc 1 1776 0
 1705 0018 FB68     	 ldr r3,[r7,#12]
1777:../Dave/Generated/UCPROBE/lib_str.c **** }
 1706              	 .loc 1 1777 0
 1707 001a 1846     	 mov r0,r3
 1708 001c 1037     	 adds r7,r7,#16
 1709              	.LCFI89:
 1710              	 .cfi_def_cfa_offset 8
 1711 001e BD46     	 mov sp,r7
 1712              	.LCFI90:
 1713              	 .cfi_def_cfa_register 13
 1714              	 
 1715 0020 80BD     	 pop {r7,pc}
 1716              	 .cfi_endproc
 1717              	.LFE16:
 1719 0022 00BF     	 .section .text.Str_Str_N,"ax",%progbits
 1720              	 .align 2
 1721              	 .global Str_Str_N
 1722              	 .thumb
 1723              	 .thumb_func
 1725              	Str_Str_N:
 1726              	.LFB17:
1778:../Dave/Generated/UCPROBE/lib_str.c **** 
1779:../Dave/Generated/UCPROBE/lib_str.c **** 
1780:../Dave/Generated/UCPROBE/lib_str.c **** /*
1781:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1782:../Dave/Generated/UCPROBE/lib_str.c **** *                                             Str_Str_N()
1783:../Dave/Generated/UCPROBE/lib_str.c **** *
1784:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Search string for first occurence of a specific search string, up to a maximum numb
1785:../Dave/Generated/UCPROBE/lib_str.c **** *                   of characters.
1786:../Dave/Generated/UCPROBE/lib_str.c **** *
1787:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1788:../Dave/Generated/UCPROBE/lib_str.c **** *
1789:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1790:../Dave/Generated/UCPROBE/lib_str.c **** *
1791:../Dave/Generated/UCPROBE/lib_str.c **** *               len_max         Maximum number of characters to search (see Note #3g).
1792:../Dave/Generated/UCPROBE/lib_str.c **** *
1793:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1794:../Dave/Generated/UCPROBE/lib_str.c **** *
1795:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1796:../Dave/Generated/UCPROBE/lib_str.c **** *
1797:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1798:../Dave/Generated/UCPROBE/lib_str.c **** *
1799:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1800:../Dave/Generated/UCPROBE/lib_str.c **** *
1801:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1802:../Dave/Generated/UCPROBE/lib_str.c **** *
1803:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1804:../Dave/Generated/UCPROBE/lib_str.c **** *
1805:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1806:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1807:../Dave/Generated/UCPROBE/lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1808:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1809:../Dave/Generated/UCPROBE/lib_str.c **** *
1810:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1811:../Dave/Generated/UCPROBE/lib_str.c **** *
1812:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1813:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "a pointer to the located string" ...
1814:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1815:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1816:../Dave/Generated/UCPROBE/lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1817:../Dave/Generated/UCPROBE/lib_str.c **** *
1818:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1819:../Dave/Generated/UCPROBE/lib_str.c **** *                            shall return 's1' ('pstr')."
1820:../Dave/Generated/UCPROBE/lib_str.c **** *
1821:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) String search terminates when :
1822:../Dave/Generated/UCPROBE/lib_str.c **** *
1823:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1824:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1825:../Dave/Generated/UCPROBE/lib_str.c **** *
1826:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) String pointer(s) point to NULL.
1827:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1828:../Dave/Generated/UCPROBE/lib_str.c **** *
1829:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Search string length equal to zero.
1830:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1831:../Dave/Generated/UCPROBE/lib_str.c **** *
1832:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Search string length greater than string length.
1833:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1834:../Dave/Generated/UCPROBE/lib_str.c **** *
1835:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Entire string has been searched.
1836:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1837:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Maximum size of the search is defined as the subtraction of the
1838:../Dave/Generated/UCPROBE/lib_str.c **** *                           search string length from the string length.
1839:../Dave/Generated/UCPROBE/lib_str.c **** *
1840:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Search string found.
1841:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1842:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Search string found via Str_Cmp_N().
1843:../Dave/Generated/UCPROBE/lib_str.c **** *
1844:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) 'len_max' number of characters searched.
1845:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include terminating NULL charac
1846:../Dave/Generated/UCPROBE/lib_str.c **** *                           (see Note #2a2).
1847:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1848:../Dave/Generated/UCPROBE/lib_str.c **** */
1849:../Dave/Generated/UCPROBE/lib_str.c **** 
1850:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_Str_N (const  CPU_CHAR    *pstr,
1851:../Dave/Generated/UCPROBE/lib_str.c ****                       const  CPU_CHAR    *pstr_srch,
1852:../Dave/Generated/UCPROBE/lib_str.c ****                              CPU_SIZE_T   len_max)
1853:../Dave/Generated/UCPROBE/lib_str.c **** {
 1727              	 .loc 1 1853 0
 1728              	 .cfi_startproc
 1729              	 
 1730              	 
 1731 0000 80B5     	 push {r7,lr}
 1732              	.LCFI91:
 1733              	 .cfi_def_cfa_offset 8
 1734              	 .cfi_offset 7,-8
 1735              	 .cfi_offset 14,-4
 1736 0002 8EB0     	 sub sp,sp,#56
 1737              	.LCFI92:
 1738              	 .cfi_def_cfa_offset 64
 1739 0004 00AF     	 add r7,sp,#0
 1740              	.LCFI93:
 1741              	 .cfi_def_cfa_register 7
 1742 0006 F860     	 str r0,[r7,#12]
 1743 0008 B960     	 str r1,[r7,#8]
 1744 000a 7A60     	 str r2,[r7,#4]
1854:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    str_len;
1855:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    str_len_srch;
1856:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    len_max_srch;
1857:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    srch_len;
1858:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_SIZE_T    srch_ix;
1859:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   srch_done;
1860:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT16S    srch_cmp;
1861:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_str;
1862:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_srch_ix;
1863:../Dave/Generated/UCPROBE/lib_str.c **** 
1864:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
1865:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {
 1745              	 .loc 1 1865 0
 1746 000c FB68     	 ldr r3,[r7,#12]
 1747 000e 002B     	 cmp r3,#0
 1748 0010 01D1     	 bne .L108
1866:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1749              	 .loc 1 1866 0
 1750 0012 0023     	 movs r3,#0
 1751 0014 66E0     	 b .L109
 1752              	.L108:
1867:../Dave/Generated/UCPROBE/lib_str.c ****     }
1868:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_srch == (const CPU_CHAR *)0) {
 1753              	 .loc 1 1868 0
 1754 0016 BB68     	 ldr r3,[r7,#8]
 1755 0018 002B     	 cmp r3,#0
 1756 001a 01D1     	 bne .L110
1869:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1757              	 .loc 1 1869 0
 1758 001c 0023     	 movs r3,#0
 1759 001e 61E0     	 b .L109
 1760              	.L110:
1870:../Dave/Generated/UCPROBE/lib_str.c ****     }
1871:../Dave/Generated/UCPROBE/lib_str.c **** 
1872:../Dave/Generated/UCPROBE/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0    (see
 1761              	 .loc 1 1872 0
 1762 0020 7B68     	 ldr r3,[r7,#4]
 1763 0022 002B     	 cmp r3,#0
 1764 0024 01D1     	 bne .L111
1873:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1765              	 .loc 1 1873 0
 1766 0026 0023     	 movs r3,#0
 1767 0028 5CE0     	 b .L109
 1768              	.L111:
1874:../Dave/Generated/UCPROBE/lib_str.c ****     }
1875:../Dave/Generated/UCPROBE/lib_str.c **** 
1876:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Lim max srch str len (to chk > s
1877:../Dave/Generated/UCPROBE/lib_str.c ****     len_max_srch = (len_max <       DEF_INT_CPU_U_MAX_VAL)
1878:../Dave/Generated/UCPROBE/lib_str.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
 1769              	 .loc 1 1878 0
 1770 002a 7B68     	 ldr r3,[r7,#4]
 1771 002c B3F1FF3F 	 cmp r3,#-1
 1772 0030 02D0     	 beq .L112
 1773              	 .loc 1 1878 0 is_stmt 0 discriminator 1
 1774 0032 7B68     	 ldr r3,[r7,#4]
 1775 0034 0133     	 adds r3,r3,#1
 1776 0036 01E0     	 b .L113
 1777              	.L112:
 1778              	 .loc 1 1878 0 discriminator 2
 1779 0038 4FF0FF33 	 mov r3,#-1
 1780              	.L113:
1877:../Dave/Generated/UCPROBE/lib_str.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
 1781              	 .loc 1 1877 0 is_stmt 1
 1782 003c 3B63     	 str r3,[r7,#48]
1879:../Dave/Generated/UCPROBE/lib_str.c **** 
1880:../Dave/Generated/UCPROBE/lib_str.c ****     str_len      = Str_Len_N(pstr,      len_max);
 1783              	 .loc 1 1880 0
 1784 003e F868     	 ldr r0,[r7,#12]
 1785 0040 7968     	 ldr r1,[r7,#4]
 1786 0042 FFF7FEFF 	 bl Str_Len_N
 1787 0046 F862     	 str r0,[r7,#44]
1881:../Dave/Generated/UCPROBE/lib_str.c ****     str_len_srch = Str_Len_N(pstr_srch, len_max_srch);
 1788              	 .loc 1 1881 0
 1789 0048 B868     	 ldr r0,[r7,#8]
 1790 004a 396B     	 ldr r1,[r7,#48]
 1791 004c FFF7FEFF 	 bl Str_Len_N
 1792 0050 B862     	 str r0,[r7,#40]
1882:../Dave/Generated/UCPROBE/lib_str.c ****     if (str_len_srch < 1) {                                     /* Rtn ptr to str if srch str len =
 1793              	 .loc 1 1882 0
 1794 0052 BB6A     	 ldr r3,[r7,#40]
 1795 0054 002B     	 cmp r3,#0
 1796 0056 01D1     	 bne .L114
1883:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)pstr);
 1797              	 .loc 1 1883 0
 1798 0058 FB68     	 ldr r3,[r7,#12]
 1799 005a 43E0     	 b .L109
 1800              	.L114:
1884:../Dave/Generated/UCPROBE/lib_str.c ****     }
1885:../Dave/Generated/UCPROBE/lib_str.c ****     if (str_len_srch > str_len) {                               /* Rtn NULL if srch str len > str l
 1801              	 .loc 1 1885 0
 1802 005c BA6A     	 ldr r2,[r7,#40]
 1803 005e FB6A     	 ldr r3,[r7,#44]
 1804 0060 9A42     	 cmp r2,r3
 1805 0062 01D9     	 bls .L115
1886:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1806              	 .loc 1 1886 0
 1807 0064 0023     	 movs r3,#0
 1808 0066 3DE0     	 b .L109
 1809              	.L115:
1887:../Dave/Generated/UCPROBE/lib_str.c ****     }
1888:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr found      
1889:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_str = pstr      + str_len;
 1810              	 .loc 1 1889 0
 1811 0068 FA68     	 ldr r2,[r7,#12]
 1812 006a FB6A     	 ldr r3,[r7,#44]
 1813 006c 1344     	 add r3,r3,r2
 1814 006e 7B62     	 str r3,[r7,#36]
1890:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 1815              	 .loc 1 1890 0
 1816 0070 7B6A     	 ldr r3,[r7,#36]
 1817 0072 002B     	 cmp r3,#0
 1818 0074 01D1     	 bne .L116
1891:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1819              	 .loc 1 1891 0
 1820 0076 0023     	 movs r3,#0
 1821 0078 34E0     	 b .L109
 1822              	.L116:
1892:../Dave/Generated/UCPROBE/lib_str.c ****     }
1893:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_str = pstr_srch + str_len_srch;
 1823              	 .loc 1 1893 0
 1824 007a BA68     	 ldr r2,[r7,#8]
 1825 007c BB6A     	 ldr r3,[r7,#40]
 1826 007e 1344     	 add r3,r3,r2
 1827 0080 7B62     	 str r3,[r7,#36]
1894:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 1828              	 .loc 1 1894 0
 1829 0082 7B6A     	 ldr r3,[r7,#36]
 1830 0084 002B     	 cmp r3,#0
 1831 0086 01D1     	 bne .L117
1895:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1832              	 .loc 1 1895 0
 1833 0088 0023     	 movs r3,#0
 1834 008a 2BE0     	 b .L109
 1835              	.L117:
1896:../Dave/Generated/UCPROBE/lib_str.c ****     }
1897:../Dave/Generated/UCPROBE/lib_str.c **** 
1898:../Dave/Generated/UCPROBE/lib_str.c **** 
1899:../Dave/Generated/UCPROBE/lib_str.c ****     srch_len  = str_len - str_len_srch;                         /* Calc srch len (see Note #3e2).  
 1836              	 .loc 1 1899 0
 1837 008c FA6A     	 ldr r2,[r7,#44]
 1838 008e BB6A     	 ldr r3,[r7,#40]
 1839 0090 D31A     	 subs r3,r2,r3
 1840 0092 3B62     	 str r3,[r7,#32]
1900:../Dave/Generated/UCPROBE/lib_str.c ****     srch_ix   = 0u;
 1841              	 .loc 1 1900 0
 1842 0094 0023     	 movs r3,#0
 1843 0096 7B63     	 str r3,[r7,#52]
1901:../Dave/Generated/UCPROBE/lib_str.c ****     srch_done = DEF_NO;
 1844              	 .loc 1 1901 0
 1845 0098 0023     	 movs r3,#0
 1846 009a FB77     	 strb r3,[r7,#31]
 1847              	.L121:
1902:../Dave/Generated/UCPROBE/lib_str.c **** 
1903:../Dave/Generated/UCPROBE/lib_str.c ****     do {
1904:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_srch_ix = (const CPU_CHAR *)(pstr + srch_ix);
 1848              	 .loc 1 1904 0
 1849 009c FA68     	 ldr r2,[r7,#12]
 1850 009e 7B6B     	 ldr r3,[r7,#52]
 1851 00a0 1344     	 add r3,r3,r2
 1852 00a2 BB61     	 str r3,[r7,#24]
1905:../Dave/Generated/UCPROBE/lib_str.c ****         srch_cmp     =  Str_Cmp_N(pstr_srch_ix, pstr_srch, str_len_srch);
 1853              	 .loc 1 1905 0
 1854 00a4 B869     	 ldr r0,[r7,#24]
 1855 00a6 B968     	 ldr r1,[r7,#8]
 1856 00a8 BA6A     	 ldr r2,[r7,#40]
 1857 00aa FFF7FEFF 	 bl Str_Cmp_N
 1858 00ae 0346     	 mov r3,r0
 1859 00b0 FB82     	 strh r3,[r7,#22]
1906:../Dave/Generated/UCPROBE/lib_str.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
 1860              	 .loc 1 1906 0
 1861 00b2 B7F91630 	 ldrsh r3,[r7,#22]
 1862 00b6 002B     	 cmp r3,#0
 1863 00b8 01D1     	 bne .L118
 1864              	 .loc 1 1906 0 is_stmt 0 discriminator 1
 1865 00ba 0123     	 movs r3,#1
 1866 00bc 00E0     	 b .L119
 1867              	.L118:
 1868              	 .loc 1 1906 0 discriminator 2
 1869 00be 0023     	 movs r3,#0
 1870              	.L119:
 1871              	 .loc 1 1906 0 discriminator 4
 1872 00c0 FB77     	 strb r3,[r7,#31]
1907:../Dave/Generated/UCPROBE/lib_str.c ****         srch_ix++;
 1873              	 .loc 1 1907 0 is_stmt 1 discriminator 4
 1874 00c2 7B6B     	 ldr r3,[r7,#52]
 1875 00c4 0133     	 adds r3,r3,#1
 1876 00c6 7B63     	 str r3,[r7,#52]
1908:../Dave/Generated/UCPROBE/lib_str.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
 1877              	 .loc 1 1908 0 discriminator 4
 1878 00c8 FB7F     	 ldrb r3,[r7,#31]
 1879 00ca 002B     	 cmp r3,#0
 1880 00cc 03D1     	 bne .L120
 1881              	 .loc 1 1908 0 is_stmt 0 discriminator 1
 1882 00ce 7A6B     	 ldr r2,[r7,#52]
 1883 00d0 3B6A     	 ldr r3,[r7,#32]
 1884 00d2 9A42     	 cmp r2,r3
 1885 00d4 E2D9     	 bls .L121
 1886              	.L120:
1909:../Dave/Generated/UCPROBE/lib_str.c **** 
1910:../Dave/Generated/UCPROBE/lib_str.c **** 
1911:../Dave/Generated/UCPROBE/lib_str.c ****     if (srch_cmp != 0) {                                        /* Rtn NULL if srch str NOT found (
 1887              	 .loc 1 1911 0 is_stmt 1
 1888 00d6 B7F91630 	 ldrsh r3,[r7,#22]
 1889 00da 002B     	 cmp r3,#0
 1890 00dc 01D0     	 beq .L122
1912:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 1891              	 .loc 1 1912 0
 1892 00de 0023     	 movs r3,#0
 1893 00e0 00E0     	 b .L109
 1894              	.L122:
1913:../Dave/Generated/UCPROBE/lib_str.c ****     }
1914:../Dave/Generated/UCPROBE/lib_str.c **** 
1915:../Dave/Generated/UCPROBE/lib_str.c ****     return ((CPU_CHAR *)pstr_srch_ix);                          /* Else rtn ptr to found srch str (
 1895              	 .loc 1 1915 0
 1896 00e2 BB69     	 ldr r3,[r7,#24]
 1897              	.L109:
1916:../Dave/Generated/UCPROBE/lib_str.c **** }
 1898              	 .loc 1 1916 0
 1899 00e4 1846     	 mov r0,r3
 1900 00e6 3837     	 adds r7,r7,#56
 1901              	.LCFI94:
 1902              	 .cfi_def_cfa_offset 8
 1903 00e8 BD46     	 mov sp,r7
 1904              	.LCFI95:
 1905              	 .cfi_def_cfa_register 13
 1906              	 
 1907 00ea 80BD     	 pop {r7,pc}
 1908              	 .cfi_endproc
 1909              	.LFE17:
 1911              	 .section .text.Str_FmtNbr_Int32U,"ax",%progbits
 1912              	 .align 2
 1913              	 .global Str_FmtNbr_Int32U
 1914              	 .thumb
 1915              	 .thumb_func
 1917              	Str_FmtNbr_Int32U:
 1918              	.LFB18:
1917:../Dave/Generated/UCPROBE/lib_str.c **** 
1918:../Dave/Generated/UCPROBE/lib_str.c **** 
1919:../Dave/Generated/UCPROBE/lib_str.c **** /*
1920:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
1921:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32U()
1922:../Dave/Generated/UCPROBE/lib_str.c **** *
1923:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit unsigned integer into a multi-digit character string.
1924:../Dave/Generated/UCPROBE/lib_str.c **** *
1925:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
1926:../Dave/Generated/UCPROBE/lib_str.c **** *
1927:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
1928:../Dave/Generated/UCPROBE/lib_str.c **** *
1929:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number of digits to format
1930:../Dave/Generated/UCPROBE/lib_str.c **** *
1931:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MIN     Minimum number of 32-bit unsigned d
1932:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MAX     Maximum number of 32-bit unsigned d
1933:../Dave/Generated/UCPROBE/lib_str.c **** *
1934:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
1935:../Dave/Generated/UCPROBE/lib_str.c **** *
1936:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number base :
1937:../Dave/Generated/UCPROBE/lib_str.c **** *
1938:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
1939:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
1940:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
1941:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
1942:../Dave/Generated/UCPROBE/lib_str.c **** *
1943:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
1944:../Dave/Generated/UCPROBE/lib_str.c **** *
1945:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
1946:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
1947:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
1948:../Dave/Generated/UCPROBE/lib_str.c **** *
1949:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
1950:../Dave/Generated/UCPROBE/lib_str.c **** *
1951:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
1952:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
1953:../Dave/Generated/UCPROBE/lib_str.c **** *
1954:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
1955:../Dave/Generated/UCPROBE/lib_str.c **** *
1956:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
1957:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
1958:../Dave/Generated/UCPROBE/lib_str.c **** *
1959:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
1960:../Dave/Generated/UCPROBE/lib_str.c **** *
1961:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
1962:../Dave/Generated/UCPROBE/lib_str.c **** *
1963:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
1964:../Dave/Generated/UCPROBE/lib_str.c **** *
1965:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
1966:../Dave/Generated/UCPROBE/lib_str.c **** *
1967:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting
1968:../Dave/Generated/UCPROBE/lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
1969:../Dave/Generated/UCPROBE/lib_str.c **** *
1970:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
1971:../Dave/Generated/UCPROBE/lib_str.c **** *
1972:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
1973:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 0
1974:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
1975:../Dave/Generated/UCPROBE/lib_str.c **** *
1976:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = ""                   See Note #6a
1977:../Dave/Generated/UCPROBE/lib_str.c **** *
1978:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of
1979:../Dave/Generated/UCPROBE/lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
1980:../Dave/Generated/UCPROBE/lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
1981:../Dave/Generated/UCPROBE/lib_str.c **** *
1982:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
1983:../Dave/Generated/UCPROBE/lib_str.c **** *
1984:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
1985:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 3
1986:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
1987:../Dave/Generated/UCPROBE/lib_str.c **** *
1988:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "???"                See Note #6b
1989:../Dave/Generated/UCPROBE/lib_str.c **** *
1990:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
1991:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
1992:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
1993:../Dave/Generated/UCPROBE/lib_str.c **** *
1994:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
1995:../Dave/Generated/UCPROBE/lib_str.c **** *
1996:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
1997:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
1998:../Dave/Generated/UCPROBE/lib_str.c **** *
1999:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) The number of leading characters is such that the total number of significa
2000:../Dave/Generated/UCPROBE/lib_str.c **** *                       integer digits plus the number of leading characters is equal to the reques
2001:../Dave/Generated/UCPROBE/lib_str.c **** *                       number of integer digits to format ('nbr_dig').
2002:../Dave/Generated/UCPROBE/lib_str.c **** *
2003:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2004:../Dave/Generated/UCPROBE/lib_str.c **** *
2005:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr       = 23456
2006:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig   = 7
2007:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base  = 10
2008:../Dave/Generated/UCPROBE/lib_str.c **** *                               lead_char = ' '
2009:../Dave/Generated/UCPROBE/lib_str.c **** *
2010:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr      = "  23456"
2011:../Dave/Generated/UCPROBE/lib_str.c **** *
2012:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2013:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2014:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
2015:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2016:../Dave/Generated/UCPROBE/lib_str.c **** *
2017:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2018:../Dave/Generated/UCPROBE/lib_str.c **** *
2019:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2020:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2021:../Dave/Generated/UCPROBE/lib_str.c **** *
2022:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2023:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2024:../Dave/Generated/UCPROBE/lib_str.c **** *
2025:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2026:../Dave/Generated/UCPROBE/lib_str.c **** *
2027:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2028:../Dave/Generated/UCPROBE/lib_str.c **** *
2029:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2030:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2031:../Dave/Generated/UCPROBE/lib_str.c **** *
2032:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2033:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2034:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
2035:../Dave/Generated/UCPROBE/lib_str.c **** *
2036:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2037:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
2038:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2039:../Dave/Generated/UCPROBE/lib_str.c **** *
2040:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2041:../Dave/Generated/UCPROBE/lib_str.c **** */
2042:../Dave/Generated/UCPROBE/lib_str.c **** 
2043:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32U (CPU_INT32U    nbr,
2044:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_dig,
2045:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_base,
2046:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR      lead_char,
2047:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   lower_case,
2048:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   nul,
2049:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     *pstr)
2050:../Dave/Generated/UCPROBE/lib_str.c **** {
 1919              	 .loc 1 2050 0
 1920              	 .cfi_startproc
 1921              	 
 1922              	 
 1923 0000 80B5     	 push {r7,lr}
 1924              	.LCFI96:
 1925              	 .cfi_def_cfa_offset 8
 1926              	 .cfi_offset 7,-8
 1927              	 .cfi_offset 14,-4
 1928 0002 88B0     	 sub sp,sp,#32
 1929              	.LCFI97:
 1930              	 .cfi_def_cfa_offset 40
 1931 0004 04AF     	 add r7,sp,#16
 1932              	.LCFI98:
 1933              	 .cfi_def_cfa 7,24
 1934 0006 7860     	 str r0,[r7,#4]
 1935 0008 0846     	 mov r0,r1
 1936 000a 1146     	 mov r1,r2
 1937 000c 1A46     	 mov r2,r3
 1938 000e 0346     	 mov r3,r0
 1939 0010 FB70     	 strb r3,[r7,#3]
 1940 0012 0B46     	 mov r3,r1
 1941 0014 BB70     	 strb r3,[r7,#2]
 1942 0016 1346     	 mov r3,r2
 1943 0018 7B70     	 strb r3,[r7,#1]
2051:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR  *pstr_fmt;
2052:../Dave/Generated/UCPROBE/lib_str.c **** 
2053:../Dave/Generated/UCPROBE/lib_str.c **** 
2054:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32(nbr,                            /* Fmt unsigned int into str.      
 1944              	 .loc 1 2054 0
 1945 001a F978     	 ldrb r1,[r7,#3]
 1946 001c BA78     	 ldrb r2,[r7,#2]
 1947 001e 7B78     	 ldrb r3,[r7,#1]
 1948 0020 0093     	 str r3,[sp]
 1949 0022 3B7E     	 ldrb r3,[r7,#24]
 1950 0024 0193     	 str r3,[sp,#4]
 1951 0026 3B7F     	 ldrb r3,[r7,#28]
 1952 0028 0293     	 str r3,[sp,#8]
 1953 002a 3B6A     	 ldr r3,[r7,#32]
 1954 002c 0393     	 str r3,[sp,#12]
 1955 002e 7868     	 ldr r0,[r7,#4]
 1956 0030 0023     	 movs r3,#0
 1957 0032 FFF7FEFF 	 bl Str_FmtNbr_Int32
 1958 0036 F860     	 str r0,[r7,#12]
2055:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_dig,
2056:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_base,
2057:../Dave/Generated/UCPROBE/lib_str.c ****                                 DEF_NO,
2058:../Dave/Generated/UCPROBE/lib_str.c ****                                 lead_char,
2059:../Dave/Generated/UCPROBE/lib_str.c ****                                 lower_case,
2060:../Dave/Generated/UCPROBE/lib_str.c ****                                 nul,
2061:../Dave/Generated/UCPROBE/lib_str.c ****                                 pstr);
2062:../Dave/Generated/UCPROBE/lib_str.c **** 
2063:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_fmt);
 1959              	 .loc 1 2063 0
 1960 0038 FB68     	 ldr r3,[r7,#12]
2064:../Dave/Generated/UCPROBE/lib_str.c **** }
 1961              	 .loc 1 2064 0
 1962 003a 1846     	 mov r0,r3
 1963 003c 1037     	 adds r7,r7,#16
 1964              	.LCFI99:
 1965              	 .cfi_def_cfa_offset 8
 1966 003e BD46     	 mov sp,r7
 1967              	.LCFI100:
 1968              	 .cfi_def_cfa_register 13
 1969              	 
 1970 0040 80BD     	 pop {r7,pc}
 1971              	 .cfi_endproc
 1972              	.LFE18:
 1974 0042 00BF     	 .section .text.Str_FmtNbr_Int32S,"ax",%progbits
 1975              	 .align 2
 1976              	 .global Str_FmtNbr_Int32S
 1977              	 .thumb
 1978              	 .thumb_func
 1980              	Str_FmtNbr_Int32S:
 1981              	.LFB19:
2065:../Dave/Generated/UCPROBE/lib_str.c **** 
2066:../Dave/Generated/UCPROBE/lib_str.c **** 
2067:../Dave/Generated/UCPROBE/lib_str.c **** /*
2068:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2069:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32S()
2070:../Dave/Generated/UCPROBE/lib_str.c **** *
2071:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit signed integer into a multi-digit character string.
2072:../Dave/Generated/UCPROBE/lib_str.c **** *
2073:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
2074:../Dave/Generated/UCPROBE/lib_str.c **** *
2075:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
2076:../Dave/Generated/UCPROBE/lib_str.c **** *
2077:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number of digits to format
2078:../Dave/Generated/UCPROBE/lib_str.c **** *
2079:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MIN + 1     Minimum number of 32-bit signed
2080:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MAX + 1     Maximum number of 32-bit signed
2081:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                   (plus 1 digit for possible nega
2082:../Dave/Generated/UCPROBE/lib_str.c **** *
2083:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
2084:../Dave/Generated/UCPROBE/lib_str.c **** *
2085:../Dave/Generated/UCPROBE/lib_str.c **** *                               The following may be used to specify the number base :
2086:../Dave/Generated/UCPROBE/lib_str.c **** *
2087:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
2088:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
2089:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
2090:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
2091:../Dave/Generated/UCPROBE/lib_str.c **** *
2092:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
2093:../Dave/Generated/UCPROBE/lib_str.c **** *
2094:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2095:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
2096:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
2097:../Dave/Generated/UCPROBE/lib_str.c **** *
2098:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
2099:../Dave/Generated/UCPROBE/lib_str.c **** *
2100:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
2101:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
2102:../Dave/Generated/UCPROBE/lib_str.c **** *
2103:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2104:../Dave/Generated/UCPROBE/lib_str.c **** *
2105:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2106:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2107:../Dave/Generated/UCPROBE/lib_str.c **** *
2108:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2109:../Dave/Generated/UCPROBE/lib_str.c **** *
2110:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
2111:../Dave/Generated/UCPROBE/lib_str.c **** *
2112:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
2113:../Dave/Generated/UCPROBE/lib_str.c **** *
2114:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2115:../Dave/Generated/UCPROBE/lib_str.c **** *
2116:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting
2117:../Dave/Generated/UCPROBE/lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
2118:../Dave/Generated/UCPROBE/lib_str.c **** *
2119:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2120:../Dave/Generated/UCPROBE/lib_str.c **** *
2121:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = -23456
2122:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  =  0
2123:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2124:../Dave/Generated/UCPROBE/lib_str.c **** *
2125:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = ""                   See Note #6a
2126:../Dave/Generated/UCPROBE/lib_str.c **** *
2127:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of
2128:../Dave/Generated/UCPROBE/lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
2129:../Dave/Generated/UCPROBE/lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
2130:../Dave/Generated/UCPROBE/lib_str.c **** *
2131:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2132:../Dave/Generated/UCPROBE/lib_str.c **** *
2133:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = 23456
2134:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  = 3
2135:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2136:../Dave/Generated/UCPROBE/lib_str.c **** *
2137:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "???"                See Note #6b
2138:../Dave/Generated/UCPROBE/lib_str.c **** *
2139:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) If the number to format ('nbr') is negative but the number of digits to for
2140:../Dave/Generated/UCPROBE/lib_str.c **** *                       ('nbr_dig') is equal to the number of significant integer digits of the num
2141:../Dave/Generated/UCPROBE/lib_str.c **** *                       to format ('nbr'); then an invalid string is formatted instead of truncatin
2142:../Dave/Generated/UCPROBE/lib_str.c **** *                       the negative sign.
2143:../Dave/Generated/UCPROBE/lib_str.c **** *
2144:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2145:../Dave/Generated/UCPROBE/lib_str.c **** *
2146:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr      = -23456
2147:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig  =  5
2148:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_base = 10
2149:../Dave/Generated/UCPROBE/lib_str.c **** *
2150:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr     = "?????"              See Note #6b
2151:../Dave/Generated/UCPROBE/lib_str.c **** *
2152:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
2153:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2154:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2155:../Dave/Generated/UCPROBE/lib_str.c **** *
2156:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2157:../Dave/Generated/UCPROBE/lib_str.c **** *
2158:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
2159:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
2160:../Dave/Generated/UCPROBE/lib_str.c **** *
2161:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2162:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2163:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2164:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
2165:../Dave/Generated/UCPROBE/lib_str.c **** *
2166:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
2167:../Dave/Generated/UCPROBE/lib_str.c **** *
2168:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456
2169:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
2170:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
2171:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2172:../Dave/Generated/UCPROBE/lib_str.c **** *
2173:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456"
2174:../Dave/Generated/UCPROBE/lib_str.c **** *
2175:../Dave/Generated/UCPROBE/lib_str.c **** *
2176:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456
2177:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   =  7
2178:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
2179:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2180:../Dave/Generated/UCPROBE/lib_str.c **** *
2181:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456"
2182:../Dave/Generated/UCPROBE/lib_str.c **** *
2183:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2184:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
2185:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2186:../Dave/Generated/UCPROBE/lib_str.c **** *
2187:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2188:../Dave/Generated/UCPROBE/lib_str.c **** *
2189:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
2190:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2191:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
2192:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
2193:../Dave/Generated/UCPROBE/lib_str.c **** *
2194:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-0023456"
2195:../Dave/Generated/UCPROBE/lib_str.c **** *
2196:../Dave/Generated/UCPROBE/lib_str.c **** *
2197:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
2198:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2199:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
2200:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
2201:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_NO
2202:../Dave/Generated/UCPROBE/lib_str.c **** *
2203:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-000ABCD"
2204:../Dave/Generated/UCPROBE/lib_str.c **** *
2205:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2206:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
2207:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2208:../Dave/Generated/UCPROBE/lib_str.c **** *
2209:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2210:../Dave/Generated/UCPROBE/lib_str.c **** *
2211:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
2212:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2213:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
2214:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
2215:../Dave/Generated/UCPROBE/lib_str.c **** *
2216:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "##-23456"
2217:../Dave/Generated/UCPROBE/lib_str.c **** *
2218:../Dave/Generated/UCPROBE/lib_str.c **** *
2219:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
2220:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
2221:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
2222:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
2223:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_YES
2224:../Dave/Generated/UCPROBE/lib_str.c **** *
2225:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "###-abcd"
2226:../Dave/Generated/UCPROBE/lib_str.c **** *
2227:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2228:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2229:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
2230:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2231:../Dave/Generated/UCPROBE/lib_str.c **** *
2232:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2233:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2234:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2235:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2236:../Dave/Generated/UCPROBE/lib_str.c **** *
2237:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2238:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2239:../Dave/Generated/UCPROBE/lib_str.c **** *
2240:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2241:../Dave/Generated/UCPROBE/lib_str.c **** *
2242:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2243:../Dave/Generated/UCPROBE/lib_str.c **** *
2244:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2245:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
2246:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2247:../Dave/Generated/UCPROBE/lib_str.c **** *
2248:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2249:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2250:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
2251:../Dave/Generated/UCPROBE/lib_str.c **** *
2252:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2253:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
2254:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2255:../Dave/Generated/UCPROBE/lib_str.c **** *
2256:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2257:../Dave/Generated/UCPROBE/lib_str.c **** */
2258:../Dave/Generated/UCPROBE/lib_str.c **** 
2259:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32S (CPU_INT32S    nbr,
2260:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_dig,
2261:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_INT08U    nbr_base,
2262:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR      lead_char,
2263:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   lower_case,
2264:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_BOOLEAN   nul,
2265:../Dave/Generated/UCPROBE/lib_str.c ****                               CPU_CHAR     *pstr)
2266:../Dave/Generated/UCPROBE/lib_str.c **** {
 1982              	 .loc 1 2266 0
 1983              	 .cfi_startproc
 1984              	 
 1985              	 
 1986 0000 90B5     	 push {r4,r7,lr}
 1987              	.LCFI101:
 1988              	 .cfi_def_cfa_offset 12
 1989              	 .cfi_offset 4,-12
 1990              	 .cfi_offset 7,-8
 1991              	 .cfi_offset 14,-4
 1992 0002 8BB0     	 sub sp,sp,#44
 1993              	.LCFI102:
 1994              	 .cfi_def_cfa_offset 56
 1995 0004 04AF     	 add r7,sp,#16
 1996              	.LCFI103:
 1997              	 .cfi_def_cfa 7,40
 1998 0006 7860     	 str r0,[r7,#4]
 1999 0008 0846     	 mov r0,r1
 2000 000a 1146     	 mov r1,r2
 2001 000c 1A46     	 mov r2,r3
 2002 000e 0346     	 mov r3,r0
 2003 0010 FB70     	 strb r3,[r7,#3]
 2004 0012 0B46     	 mov r3,r1
 2005 0014 BB70     	 strb r3,[r7,#2]
 2006 0016 1346     	 mov r3,r2
 2007 0018 7B70     	 strb r3,[r7,#1]
2267:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
2268:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32S    nbr_fmt;
2269:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2270:../Dave/Generated/UCPROBE/lib_str.c **** 
2271:../Dave/Generated/UCPROBE/lib_str.c **** 
2272:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr < 0) {                                              /* If nbr neg, ...                 
 2008              	 .loc 1 2272 0
 2009 001a 7B68     	 ldr r3,[r7,#4]
 2010 001c 002B     	 cmp r3,#0
 2011 001e 05DA     	 bge .L126
2273:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt = -nbr;                                         /* ... negate nbr.                 
 2012              	 .loc 1 2273 0
 2013 0020 7B68     	 ldr r3,[r7,#4]
 2014 0022 5B42     	 negs r3,r3
 2015 0024 7B61     	 str r3,[r7,#20]
2274:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg =  DEF_YES;
 2016              	 .loc 1 2274 0
 2017 0026 0123     	 movs r3,#1
 2018 0028 FB74     	 strb r3,[r7,#19]
 2019 002a 03E0     	 b .L127
 2020              	.L126:
2275:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
2276:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt =  nbr;
 2021              	 .loc 1 2276 0
 2022 002c 7B68     	 ldr r3,[r7,#4]
 2023 002e 7B61     	 str r3,[r7,#20]
2277:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg =  DEF_NO;
 2024              	 .loc 1 2277 0
 2025 0030 0023     	 movs r3,#0
 2026 0032 FB74     	 strb r3,[r7,#19]
 2027              	.L127:
2278:../Dave/Generated/UCPROBE/lib_str.c ****     }
2279:../Dave/Generated/UCPROBE/lib_str.c **** 
2280:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32((CPU_INT32U)nbr_fmt,            /* Fmt signed int into str.        
 2028              	 .loc 1 2280 0
 2029 0034 7869     	 ldr r0,[r7,#20]
 2030 0036 F978     	 ldrb r1,[r7,#3]
 2031 0038 BA78     	 ldrb r2,[r7,#2]
 2032 003a FC7C     	 ldrb r4,[r7,#19]
 2033 003c 7B78     	 ldrb r3,[r7,#1]
 2034 003e 0093     	 str r3,[sp]
 2035 0040 97F82830 	 ldrb r3,[r7,#40]
 2036 0044 0193     	 str r3,[sp,#4]
 2037 0046 97F82C30 	 ldrb r3,[r7,#44]
 2038 004a 0293     	 str r3,[sp,#8]
 2039 004c 3B6B     	 ldr r3,[r7,#48]
 2040 004e 0393     	 str r3,[sp,#12]
 2041 0050 2346     	 mov r3,r4
 2042 0052 FFF7FEFF 	 bl Str_FmtNbr_Int32
 2043 0056 F860     	 str r0,[r7,#12]
2281:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_dig,
2282:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_base,
2283:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_neg,
2284:../Dave/Generated/UCPROBE/lib_str.c ****                                             lead_char,
2285:../Dave/Generated/UCPROBE/lib_str.c ****                                             lower_case,
2286:../Dave/Generated/UCPROBE/lib_str.c ****                                             nul,
2287:../Dave/Generated/UCPROBE/lib_str.c ****                                             pstr);
2288:../Dave/Generated/UCPROBE/lib_str.c **** 
2289:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr_fmt);
 2044              	 .loc 1 2289 0
 2045 0058 FB68     	 ldr r3,[r7,#12]
2290:../Dave/Generated/UCPROBE/lib_str.c **** }
 2046              	 .loc 1 2290 0
 2047 005a 1846     	 mov r0,r3
 2048 005c 1C37     	 adds r7,r7,#28
 2049              	.LCFI104:
 2050              	 .cfi_def_cfa_offset 12
 2051 005e BD46     	 mov sp,r7
 2052              	.LCFI105:
 2053              	 .cfi_def_cfa_register 13
 2054              	 
 2055 0060 90BD     	 pop {r4,r7,pc}
 2056              	 .cfi_endproc
 2057              	.LFE19:
 2059 0062 00BF     	 .section .text.Str_ParseNbr_Int32U,"ax",%progbits
 2060              	 .align 2
 2061              	 .global Str_ParseNbr_Int32U
 2062              	 .thumb
 2063              	 .thumb_func
 2065              	Str_ParseNbr_Int32U:
 2066              	.LFB20:
2291:../Dave/Generated/UCPROBE/lib_str.c **** 
2292:../Dave/Generated/UCPROBE/lib_str.c **** 
2293:../Dave/Generated/UCPROBE/lib_str.c **** /*
2294:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2295:../Dave/Generated/UCPROBE/lib_str.c **** *                                           Str_FmtNbr_32()
2296:../Dave/Generated/UCPROBE/lib_str.c **** *
2297:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format number into a multi-digit character string.
2298:../Dave/Generated/UCPROBE/lib_str.c **** *
2299:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number                         to format (see Note #1).
2300:../Dave/Generated/UCPROBE/lib_str.c **** *
2301:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of decimal       digits to format (see Note #2).
2302:../Dave/Generated/UCPROBE/lib_str.c **** *
2303:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dp          Number of decimal point digits to format.
2304:../Dave/Generated/UCPROBE/lib_str.c **** *
2305:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character (see Note #3) :
2306:../Dave/Generated/UCPROBE/lib_str.c **** *
2307:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2308:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
2309:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6d).
2310:../Dave/Generated/UCPROBE/lib_str.c **** *
2311:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2312:../Dave/Generated/UCPROBE/lib_str.c **** *
2313:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2314:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2315:../Dave/Generated/UCPROBE/lib_str.c **** *
2316:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2317:../Dave/Generated/UCPROBE/lib_str.c **** *
2318:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6c].
2319:../Dave/Generated/UCPROBE/lib_str.c **** *
2320:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
2321:../Dave/Generated/UCPROBE/lib_str.c **** *
2322:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2323:../Dave/Generated/UCPROBE/lib_str.c **** *
2324:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) The maximum accuracy for 32-bit floating-point numbers :
2325:../Dave/Generated/UCPROBE/lib_str.c **** *
2326:../Dave/Generated/UCPROBE/lib_str.c **** *
2327:../Dave/Generated/UCPROBE/lib_str.c **** *                                 Maximum Accuracy            log [Internal-Base ^ (Number-Internal
2328:../Dave/Generated/UCPROBE/lib_str.c **** *                           32-bit Floating-point Number  =  --------------------------------------
2329:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                             log [External-Base]
2330:../Dave/Generated/UCPROBE/lib_str.c **** *
2331:../Dave/Generated/UCPROBE/lib_str.c **** *                                                             log [2 ^ 24]
2332:../Dave/Generated/UCPROBE/lib_str.c **** *                                                         =  --------------
2333:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               log [10]
2334:../Dave/Generated/UCPROBE/lib_str.c **** *
2335:../Dave/Generated/UCPROBE/lib_str.c **** *                                                         <  7.225  Base-10 Digits
2336:../Dave/Generated/UCPROBE/lib_str.c **** *
2337:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
2338:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Internal-Base                   Internal number base of flo
2339:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           point numbers (i.e.  2)
2340:../Dave/Generated/UCPROBE/lib_str.c **** *                                       External-Base                   External number base of flo
2341:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           point numbers (i.e. 10)
2342:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Number-Internal-Base-Digits     Number of internal number b
2343:../Dave/Generated/UCPROBE/lib_str.c **** *                                                                           significant digits (i.e
2344:../Dave/Generated/UCPROBE/lib_str.c **** *
2345:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Some CPUs' &/or compilers' floating-point implementations MAY further reduc
2346:../Dave/Generated/UCPROBE/lib_str.c **** *                       maximum accuracy.
2347:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2348:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) If the total number of digits to format ('nbr_dig + nbr_dp') is zero; then 
2349:../Dave/Generated/UCPROBE/lib_str.c **** *                       formatting is performed except possible NULL-termination of the string (see
2350:../Dave/Generated/UCPROBE/lib_str.c **** *
2351:../Dave/Generated/UCPROBE/lib_str.c **** *                           Example :
2352:../Dave/Generated/UCPROBE/lib_str.c **** *
2353:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr     = -23456.789
2354:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dig =  0
2355:../Dave/Generated/UCPROBE/lib_str.c **** *                               nbr_dp  =  0
2356:../Dave/Generated/UCPROBE/lib_str.c **** *
2357:../Dave/Generated/UCPROBE/lib_str.c **** *                               pstr    = ""                        See Note #7a
2358:../Dave/Generated/UCPROBE/lib_str.c **** *
2359:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is less than the number o
2360:../Dave/Generated/UCPROBE/lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
2361:../Dave/Generated/UCPROBE/lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
2362:../Dave/Generated/UCPROBE/lib_str.c **** *
2363:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2364:../Dave/Generated/UCPROBE/lib_str.c **** *
2365:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = 23456.789
2366:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig = 3
2367:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  = 2
2368:../Dave/Generated/UCPROBE/lib_str.c **** *
2369:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "??????"              See Note #7d
2370:../Dave/Generated/UCPROBE/lib_str.c **** *
2371:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) If the number to format ('nbr') is negative but the number of digits to
2372:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
2373:../Dave/Generated/UCPROBE/lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
2374:../Dave/Generated/UCPROBE/lib_str.c **** *                           the negative sign.
2375:../Dave/Generated/UCPROBE/lib_str.c **** *
2376:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2377:../Dave/Generated/UCPROBE/lib_str.c **** *
2378:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = -23456.789
2379:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig =  5
2380:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  =  2
2381:../Dave/Generated/UCPROBE/lib_str.c **** *
2382:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "????????"            See Note #7d
2383:../Dave/Generated/UCPROBE/lib_str.c **** *
2384:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of significa
2385:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits is zero, & the number of digits to format ('nbr_dig') is
2386:../Dave/Generated/UCPROBE/lib_str.c **** *                           but the number of decimal point digits to format ('nbr_dp') is zero; th
2387:../Dave/Generated/UCPROBE/lib_str.c **** *                           an invalid string is formatted instead of truncating the negative sign.
2388:../Dave/Generated/UCPROBE/lib_str.c **** *
2389:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
2390:../Dave/Generated/UCPROBE/lib_str.c **** *
2391:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr     = -0.7895
2392:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig =  1
2393:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp  =  0
2394:../Dave/Generated/UCPROBE/lib_str.c **** *
2395:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr    = "?"                   See Note #7d
2396:../Dave/Generated/UCPROBE/lib_str.c **** *
2397:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) (A) If the number to format ('nbr') is negative but the number of signi
2398:../Dave/Generated/UCPROBE/lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2399:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2400:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero; then the negative sign immediately prefixes the decimal point
2401:../Dave/Generated/UCPROBE/lib_str.c **** *                               with NO decimal digits formatted, NOT even a single decimal digit o
2402:../Dave/Generated/UCPROBE/lib_str.c **** *
2403:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2404:../Dave/Generated/UCPROBE/lib_str.c **** *
2405:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr     = -0.7895
2406:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig =  0
2407:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp  =  2
2408:../Dave/Generated/UCPROBE/lib_str.c **** *
2409:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr    = "-.78"
2410:../Dave/Generated/UCPROBE/lib_str.c **** *
2411:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is positive but the number of signi
2412:../Dave/Generated/UCPROBE/lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2413:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2414:../Dave/Generated/UCPROBE/lib_str.c **** *                               zero; then a single decimal digit of '0' prefixes the decimal point
2415:../Dave/Generated/UCPROBE/lib_str.c **** *
2416:../Dave/Generated/UCPROBE/lib_str.c **** *                               This '0' digit is used whenever a negative sign is not formatted (s
2417:../Dave/Generated/UCPROBE/lib_str.c **** *                               Note #2b4A) so that the formatted string's decimal point is not flo
2418:../Dave/Generated/UCPROBE/lib_str.c **** *                               but fixed in the string as the 2nd character.
2419:../Dave/Generated/UCPROBE/lib_str.c **** *
2420:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2421:../Dave/Generated/UCPROBE/lib_str.c **** *
2422:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr     =  0.7895
2423:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig =  0
2424:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp  =  2
2425:../Dave/Generated/UCPROBE/lib_str.c **** *
2426:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr    = "0.78"
2427:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2428:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the total number of digits to format ('nbr_dig + nbr_dp') is greater
2429:../Dave/Generated/UCPROBE/lib_str.c **** *
2430:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) ... the maximum accuracy of the CPU's &/or compiler's 32-bit floati
2431:../Dave/Generated/UCPROBE/lib_str.c **** *                               numbers, digits following all significantly-accurate digits of the 
2432:../Dave/Generated/UCPROBE/lib_str.c **** *                               format ('nbr') will be inaccurate; ...
2433:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) ... the configured maximum accuracy ('LIB_STR_CFG_FP_MAX_NBR_DIG_SI
2434:../Dave/Generated/UCPROBE/lib_str.c **** *                               digits or decimal places following all significantly-accurate digit
2435:../Dave/Generated/UCPROBE/lib_str.c **** *                               number to format ('nbr') will be replaced & formatted with zeros ('
2436:../Dave/Generated/UCPROBE/lib_str.c **** *
2437:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2438:../Dave/Generated/UCPROBE/lib_str.c **** *
2439:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr                            = 123456789.012345
2440:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig                        = 9
2441:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp                         = 6
2442:../Dave/Generated/UCPROBE/lib_str.c **** *                                       LIB_STR_CFG_FP_MAX_NBR_DIG_SIG = 7
2443:../Dave/Generated/UCPROBE/lib_str.c **** *
2444:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr                           = "123456700.000000"
2445:../Dave/Generated/UCPROBE/lib_str.c **** *
2446:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Therefore, one or more least-significant digit(s) of the number to form
2447:../Dave/Generated/UCPROBE/lib_str.c **** *                           MAY be rounded & not necessarily truncated due to the inaccuracy of the
2448:../Dave/Generated/UCPROBE/lib_str.c **** *                           &/or compiler's floating-point implementation.
2449:../Dave/Generated/UCPROBE/lib_str.c **** *
2450:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #1.
2451:../Dave/Generated/UCPROBE/lib_str.c **** *
2452:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2453:../Dave/Generated/UCPROBE/lib_str.c **** *
2454:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2455:../Dave/Generated/UCPROBE/lib_str.c **** *
2456:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a base-10 digit, ...
2457:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
2458:../Dave/Generated/UCPROBE/lib_str.c **** *
2459:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2460:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2461:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2462:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
2463:../Dave/Generated/UCPROBE/lib_str.c **** *
2464:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
2465:../Dave/Generated/UCPROBE/lib_str.c **** *
2466:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456.789
2467:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
2468:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp    = 2
2469:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2470:../Dave/Generated/UCPROBE/lib_str.c **** *
2471:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456.78"
2472:../Dave/Generated/UCPROBE/lib_str.c **** *
2473:../Dave/Generated/UCPROBE/lib_str.c **** *
2474:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456.789
2475:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   =  7
2476:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dp    =  2
2477:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
2478:../Dave/Generated/UCPROBE/lib_str.c **** *
2479:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456.78"
2480:../Dave/Generated/UCPROBE/lib_str.c **** *
2481:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2482:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
2483:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2484:../Dave/Generated/UCPROBE/lib_str.c **** *
2485:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Example :
2486:../Dave/Generated/UCPROBE/lib_str.c **** *
2487:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr       = -23456.789
2488:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig   =  8
2489:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp    =  2
2490:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char = '0'
2491:../Dave/Generated/UCPROBE/lib_str.c **** *
2492:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr      = "-0023456.78"
2493:../Dave/Generated/UCPROBE/lib_str.c **** *
2494:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2495:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
2496:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2497:../Dave/Generated/UCPROBE/lib_str.c **** *
2498:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
2499:../Dave/Generated/UCPROBE/lib_str.c **** *
2500:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr       = -23456.789
2501:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig   =  8
2502:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dp    =  2
2503:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char = '#'
2504:../Dave/Generated/UCPROBE/lib_str.c **** *
2505:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr      = "##-23456.78"
2506:../Dave/Generated/UCPROBE/lib_str.c **** *
2507:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the integer value of the number to format is zero & ...
2508:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... the number of digits to format is greater than one ...
2509:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... OR  the number is NOT negative,                    ...
2510:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... but NO leading character available;                ...
2511:../Dave/Generated/UCPROBE/lib_str.c **** *                       (5) ... then one digit of '0' value is formatted.
2512:../Dave/Generated/UCPROBE/lib_str.c **** *
2513:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2514:../Dave/Generated/UCPROBE/lib_str.c **** *
2515:../Dave/Generated/UCPROBE/lib_str.c **** *                       See also Note #2b4B.
2516:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2517:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2518:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
2519:../Dave/Generated/UCPROBE/lib_str.c **** *
2520:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2521:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2522:../Dave/Generated/UCPROBE/lib_str.c **** *
2523:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2524:../Dave/Generated/UCPROBE/lib_str.c **** *
2525:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
2526:../Dave/Generated/UCPROBE/lib_str.c **** *
2527:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2528:../Dave/Generated/UCPROBE/lib_str.c **** *                                                              'nbr_dp'           +
2529:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
2530:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 decimal point   +
2531:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2532:../Dave/Generated/UCPROBE/lib_str.c **** *
2533:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) String format terminates when :
2534:../Dave/Generated/UCPROBE/lib_str.c **** *
2535:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
2536:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
2537:../Dave/Generated/UCPROBE/lib_str.c **** *
2538:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Total number of digits to format ('nbr_dig + nbr_dp') is zero.
2539:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
2540:../Dave/Generated/UCPROBE/lib_str.c **** *
2541:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant
2542:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible
2543:../Dave/Generated/UCPROBE/lib_str.c **** *                           negative sign.
2544:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2545:../Dave/Generated/UCPROBE/lib_str.c **** *
2546:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Lead character is NOT a valid, printable character (see Note #3a).
2547:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2548:../Dave/Generated/UCPROBE/lib_str.c **** *
2549:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Number successfully formatted into character string array.
2550:../Dave/Generated/UCPROBE/lib_str.c **** *
2551:../Dave/Generated/UCPROBE/lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
2552:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2553:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits ('nbr_dig') & number of decimal point digits ('nbr_dp') to for
2554:../Dave/Generated/UCPROBE/lib_str.c **** *
2555:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (a)    0 (NULL string)          ,  if 'nbr_dig' = 0 
2556:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2557:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {
2558:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (b)   'nbr_dig'                 ,  if 'nbr_dig' > 0 
2559:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2560:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {
2561:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {  (c)  ['nbr_dp'               +  ,  if 'nbr_dig' = 0 
2562:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {         1 (for decimal point) +        'nbr_dp'  > 0
2563:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {         1 (for negative sign) ]
2564:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {
2565:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {  (d)  ['nbr_dig'              +  ,  if 'nbr_dig' > 0 
2566:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {        'nbr_dp'               +        'nbr_dp'  > 0
2567:../Dave/Generated/UCPROBE/lib_str.c **** *                                           {         1 (for decimal point) ]
2568:../Dave/Generated/UCPROBE/lib_str.c **** *
2569:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2570:../Dave/Generated/UCPROBE/lib_str.c **** */
2571:../Dave/Generated/UCPROBE/lib_str.c **** 
2572:../Dave/Generated/UCPROBE/lib_str.c **** #if (LIB_STR_CFG_FP_EN == DEF_ENABLED)
2573:../Dave/Generated/UCPROBE/lib_str.c **** CPU_CHAR  *Str_FmtNbr_32 (CPU_FP32      nbr,
2574:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_INT08U    nbr_dig,
2575:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_INT08U    nbr_dp,
2576:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_CHAR      lead_char,
2577:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_BOOLEAN   nul,
2578:../Dave/Generated/UCPROBE/lib_str.c ****                           CPU_CHAR     *pstr)
2579:../Dave/Generated/UCPROBE/lib_str.c **** {
2580:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
2581:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_DATA      i;
2582:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      nbr_fmt;
2583:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      nbr_log;
2584:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_shiftd;
2585:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16U    nbr_dig_max;
2586:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT16U    nbr_dig_sig;
2587:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_neg_sign;
2588:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    dig_val;
2589:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      dig_exp;
2590:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_FP32      dp_exp;
2591:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
2592:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_fmtd;
2593:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_0;
2594:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
2595:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   print_char;
2596:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2597:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
2598:../Dave/Generated/UCPROBE/lib_str.c **** 
2599:../Dave/Generated/UCPROBE/lib_str.c **** 
2600:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
2601:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
2602:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
2603:../Dave/Generated/UCPROBE/lib_str.c ****     }
2604:../Dave/Generated/UCPROBE/lib_str.c **** 
2605:../Dave/Generated/UCPROBE/lib_str.c ****     dig_exp     =  1.0f;
2606:../Dave/Generated/UCPROBE/lib_str.c ****     fmt_invalid =  DEF_NO;
2607:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = (lead_char == '0') ? DEF_YES : DEF_NO;        /* Chk if lead char a '0' dig (see 
2608:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_fmt     =  0.0f;
2609:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_neg     =  DEF_NO;
2610:../Dave/Generated/UCPROBE/lib_str.c **** 
2611:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_dig < 1) && (nbr_dp < 1)) {                        /* If nbr digs/dps = 0, ...        
2612:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
2613:../Dave/Generated/UCPROBE/lib_str.c ****     }
2614:../Dave/Generated/UCPROBE/lib_str.c **** 
2615:../Dave/Generated/UCPROBE/lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
2616:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
2617:../Dave/Generated/UCPROBE/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable  (see
2618:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str         (see
2619:../Dave/Generated/UCPROBE/lib_str.c **** 
2620:../Dave/Generated/UCPROBE/lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 dig.    
2621:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_dig = ASCII_IsDig(lead_char);
2622:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If  lead char     non-0 dig (see
2623:../Dave/Generated/UCPROBE/lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str         (see
2624:../Dave/Generated/UCPROBE/lib_str.c ****             }
2625:../Dave/Generated/UCPROBE/lib_str.c ****         }
2626:../Dave/Generated/UCPROBE/lib_str.c ****     }
2627:../Dave/Generated/UCPROBE/lib_str.c **** 
2628:../Dave/Generated/UCPROBE/lib_str.c **** 
2629:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
2630:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt = pstr;
2631:../Dave/Generated/UCPROBE/lib_str.c **** 
2632:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid == DEF_NO) {
2633:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr < 0.0f) {                                       /* If nbr neg, ...                 
2634:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_fmt      = -nbr;                                /* ... negate nbr.                 
2635:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_sign =  1u;
2636:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg      =  DEF_YES;
2637:../Dave/Generated/UCPROBE/lib_str.c ****         } else {
2638:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_fmt      =  nbr;
2639:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_sign =  0u;
2640:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg      =  DEF_NO;
2641:../Dave/Generated/UCPROBE/lib_str.c ****         }
2642:../Dave/Generated/UCPROBE/lib_str.c **** 
2643:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_log     = nbr_fmt;
2644:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_max = 0u;
2645:../Dave/Generated/UCPROBE/lib_str.c ****         while (nbr_log >= 1.0f) {                               /* While base-10 digs avail, ...   
2646:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
2647:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= 10.0f;
2648:../Dave/Generated/UCPROBE/lib_str.c ****         }
2649:../Dave/Generated/UCPROBE/lib_str.c **** 
2650:../Dave/Generated/UCPROBE/lib_str.c ****         if (((nbr_dig >= (nbr_dig_max + nbr_neg_sign)) ||       /* If req'd nbr digs >= (max nbr di
2651:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_dig_max < 1))                        &&       /* .. or NO nbr digs,              
2652:../Dave/Generated/UCPROBE/lib_str.c ****             ((nbr_dig     > 1) ||                               /* .. but NOT [(req'd nbr dig = 1) 
2653:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_dp      > 0) ||                               /* ..          (req'd nbr dp  = 0) 
2654:../Dave/Generated/UCPROBE/lib_str.c ****              (nbr_neg == DEF_NO))) {                            /* ..          (      nbr neg    )]
2655:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* .. prepare nbr digs to fmt.     
2656:../Dave/Generated/UCPROBE/lib_str.c ****             for (i = 1u; i < nbr_dig; i++) {
2657:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_exp *= 10.0f;
2658:../Dave/Generated/UCPROBE/lib_str.c ****             }
2659:../Dave/Generated/UCPROBE/lib_str.c **** 
2660:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd   =  DEF_NO;
2661:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_sig    =  0u;
2662:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_fmtd =  DEF_NO;
2663:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
2664:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
2665:../Dave/Generated/UCPROBE/lib_str.c ****         }
2666:../Dave/Generated/UCPROBE/lib_str.c ****     }
2667:../Dave/Generated/UCPROBE/lib_str.c **** 
2668:../Dave/Generated/UCPROBE/lib_str.c **** 
2669:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
2670:../Dave/Generated/UCPROBE/lib_str.c ****     for (i = nbr_dig; i > 0; i--) {                             /* Fmt str for desired nbr digs :  
2671:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
2672:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_dig_sig < LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) { /* If nbr sig digs < max, fmt str d
2673:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_shiftd = (CPU_INT32U)(nbr_fmt / dig_exp);
2674:../Dave/Generated/UCPROBE/lib_str.c ****                 if ((nbr_shiftd > 0) ||                         /* If shifted nbr > 0              
2675:../Dave/Generated/UCPROBE/lib_str.c ****                     (i == 1u)) {                                /* ... OR on one's dig to fmt (see 
2676:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & fmt dig val;         
2677:../Dave/Generated/UCPROBE/lib_str.c ****                     if ((nbr_neg      == DEF_YES) &&            /* If  nbr neg                     
2678:../Dave/Generated/UCPROBE/lib_str.c ****                         (nbr_neg_fmtd == DEF_NO )) {            /* ... but neg sign NOT yet fmt'd; 
2679:../Dave/Generated/UCPROBE/lib_str.c **** 
2680:../Dave/Generated/UCPROBE/lib_str.c ****                         if (lead_char_fmtd == DEF_YES) {        /* ... & if lead char(s) fmt'd,    
2681:../Dave/Generated/UCPROBE/lib_str.c ****                             pstr_fmt--;                         /* ... replace last lead char w/   
2682:../Dave/Generated/UCPROBE/lib_str.c ****                         }
2683:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++   = '-';                     /* ... prepend neg sign (see Notes 
2684:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr_neg_fmtd = DEF_YES;
2685:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2686:../Dave/Generated/UCPROBE/lib_str.c **** 
2687:../Dave/Generated/UCPROBE/lib_str.c ****                     if (nbr_shiftd > 0) {                       /* If shifted nbr > 0,        ...  
2688:../Dave/Generated/UCPROBE/lib_str.c ****                         dig_val    = (CPU_INT08U)(nbr_shiftd % 10u);
2689:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++ = (CPU_CHAR  )(dig_val    + '0');
2690:../Dave/Generated/UCPROBE/lib_str.c **** 
2691:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr_dig_sig++;                          /* ... inc nbr sig digs;      ...  
2692:../Dave/Generated/UCPROBE/lib_str.c **** 
2693:../Dave/Generated/UCPROBE/lib_str.c ****                     } else if ((nbr_dig > 1) ||                 /* ... else if req'd digs > 1 ...  
2694:../Dave/Generated/UCPROBE/lib_str.c ****                                (nbr_neg == DEF_NO)) {           /* ... or non-neg nbr,        ...  
2695:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt++ = '0';                       /* ... fmt one '0' char (see Note #
2696:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2697:../Dave/Generated/UCPROBE/lib_str.c **** 
2698:../Dave/Generated/UCPROBE/lib_str.c ****                 } else if ((nbr_neg      == DEF_YES) &&         /* ... else if nbr neg             
2699:../Dave/Generated/UCPROBE/lib_str.c ****                            (lead_char_0  == DEF_YES) &&         /* ... & lead char a '0' dig       
2700:../Dave/Generated/UCPROBE/lib_str.c ****                            (nbr_neg_fmtd == DEF_NO )) {         /* ... but neg sign NOT yet fmt'd, 
2701:../Dave/Generated/UCPROBE/lib_str.c **** 
2702:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++   = '-';                         /* ... prepend neg sign (see Note #
2703:../Dave/Generated/UCPROBE/lib_str.c ****                     nbr_neg_fmtd = DEF_YES;
2704:../Dave/Generated/UCPROBE/lib_str.c **** 
2705:../Dave/Generated/UCPROBE/lib_str.c ****                 } else if (lead_char != (CPU_CHAR)'\0') {       /* ... else if avail,              
2706:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++     = lead_char;                 /* ... fmt lead char.              
2707:../Dave/Generated/UCPROBE/lib_str.c ****                     lead_char_fmtd = DEF_YES;
2708:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2709:../Dave/Generated/UCPROBE/lib_str.c **** 
2710:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_exp /= 10.0f;                               /* Shift to next least-sig dig.    
2711:../Dave/Generated/UCPROBE/lib_str.c **** 
2712:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* ... else append non-sig 0's (see
2713:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt++ = '0';
2714:../Dave/Generated/UCPROBE/lib_str.c ****             }
2715:../Dave/Generated/UCPROBE/lib_str.c **** 
2716:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2717:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '?';
2718:../Dave/Generated/UCPROBE/lib_str.c ****         }
2719:../Dave/Generated/UCPROBE/lib_str.c ****     }
2720:../Dave/Generated/UCPROBE/lib_str.c **** 
2721:../Dave/Generated/UCPROBE/lib_str.c **** 
2722:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_dp > 0) {                                           /* Fmt str for desired nbr dp :    
2723:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_dig < 1) {                                      /* If NO digs fmt'd;               
2724:../Dave/Generated/UCPROBE/lib_str.c ****             if (fmt_invalid == DEF_NO) {                        /* ... nbr fmt valid,              
2725:../Dave/Generated/UCPROBE/lib_str.c ****                 if ((nbr_neg      == DEF_YES) &&                /* ... nbr neg                     
2726:../Dave/Generated/UCPROBE/lib_str.c ****                     (nbr_neg_fmtd == DEF_NO )) {                /* ... but neg sign NOT yet fmt'd, 
2727:../Dave/Generated/UCPROBE/lib_str.c ****                     *pstr_fmt++ = '-';                          /* ... prepend neg sign (see Notes 
2728:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {                                        /* ... else prepend 1 dig of '0' (s
2729:../Dave/Generated/UCPROBE/lib_str.c ****                     *pstr_fmt++ = '0';
2730:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2731:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* ... else fmt '?' for invalid str
2732:../Dave/Generated/UCPROBE/lib_str.c ****                 *pstr_fmt++ = '?';
2733:../Dave/Generated/UCPROBE/lib_str.c ****             }
2734:../Dave/Generated/UCPROBE/lib_str.c ****         }
2735:../Dave/Generated/UCPROBE/lib_str.c **** 
2736:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {                            /* If nbr fmt valid, ...           
2737:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '.';                                   /* ... append dp prior to dp conver
2738:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2739:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt++ = '?';
2740:../Dave/Generated/UCPROBE/lib_str.c ****         }
2741:../Dave/Generated/UCPROBE/lib_str.c **** 
2742:../Dave/Generated/UCPROBE/lib_str.c ****         dp_exp = 10.0f;
2743:../Dave/Generated/UCPROBE/lib_str.c ****         for (i = 0u; i < nbr_dp; i++) {
2744:../Dave/Generated/UCPROBE/lib_str.c ****             if (fmt_invalid == DEF_NO) {
2745:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* If nbr sig digs < max, fmt str d
2746:../Dave/Generated/UCPROBE/lib_str.c ****                 if (nbr_dig_sig <  LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) {
2747:../Dave/Generated/UCPROBE/lib_str.c ****                     nbr_shiftd  = (CPU_INT32U)(nbr_fmt * dp_exp);
2748:../Dave/Generated/UCPROBE/lib_str.c ****                     dig_val     = (CPU_INT08U)(nbr_shiftd % 10u);
2749:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++  = (CPU_CHAR  )(dig_val    + '0');
2750:../Dave/Generated/UCPROBE/lib_str.c ****                     dp_exp     *=  10.0f;                       /* Shift to next least-sig dp.     
2751:../Dave/Generated/UCPROBE/lib_str.c **** 
2752:../Dave/Generated/UCPROBE/lib_str.c ****                     if ((nbr_shiftd  > 0) ||                    /* If shifted nbr > 0              
2753:../Dave/Generated/UCPROBE/lib_str.c ****                         (nbr_dig_sig > 0)) {                    /* ... OR  > 0 sig digs already fmt
2754:../Dave/Generated/UCPROBE/lib_str.c ****                          nbr_dig_sig++;                         /* ... inc nbr sig digs.           
2755:../Dave/Generated/UCPROBE/lib_str.c ****                     }
2756:../Dave/Generated/UCPROBE/lib_str.c **** 
2757:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {                                        /* ... else append non-sig 0's (see
2758:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt++ = '0';
2759:../Dave/Generated/UCPROBE/lib_str.c ****                 }
2760:../Dave/Generated/UCPROBE/lib_str.c **** 
2761:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* Else fmt '?' for invalid str (se
2762:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt++ = '?';
2763:../Dave/Generated/UCPROBE/lib_str.c ****             }
2764:../Dave/Generated/UCPROBE/lib_str.c ****         }
2765:../Dave/Generated/UCPROBE/lib_str.c ****     }
2766:../Dave/Generated/UCPROBE/lib_str.c **** 
2767:../Dave/Generated/UCPROBE/lib_str.c **** 
2768:../Dave/Generated/UCPROBE/lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
2769:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
2770:../Dave/Generated/UCPROBE/lib_str.c ****     }
2771:../Dave/Generated/UCPROBE/lib_str.c **** 
2772:../Dave/Generated/UCPROBE/lib_str.c **** 
2773:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
2774:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
2775:../Dave/Generated/UCPROBE/lib_str.c ****     }
2776:../Dave/Generated/UCPROBE/lib_str.c **** 
2777:../Dave/Generated/UCPROBE/lib_str.c **** 
2778:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
2779:../Dave/Generated/UCPROBE/lib_str.c **** }
2780:../Dave/Generated/UCPROBE/lib_str.c **** #endif
2781:../Dave/Generated/UCPROBE/lib_str.c **** 
2782:../Dave/Generated/UCPROBE/lib_str.c **** 
2783:../Dave/Generated/UCPROBE/lib_str.c **** /*
2784:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2785:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32U()
2786:../Dave/Generated/UCPROBE/lib_str.c **** *
2787:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit unsigned integer from string.
2788:../Dave/Generated/UCPROBE/lib_str.c **** *
2789:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
2790:../Dave/Generated/UCPROBE/lib_str.c **** *
2791:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
2792:../Dave/Generated/UCPROBE/lib_str.c **** *
2793:../Dave/Generated/UCPROBE/lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
2794:../Dave/Generated/UCPROBE/lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
2795:../Dave/Generated/UCPROBE/lib_str.c **** *                               (b) Return a pointer to 'pstr',
2796:../Dave/Generated/UCPROBE/lib_str.c **** *                                       otherwise      (see Note #2a2A2).
2797:../Dave/Generated/UCPROBE/lib_str.c **** *
2798:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
2799:../Dave/Generated/UCPROBE/lib_str.c **** *
2800:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
2801:../Dave/Generated/UCPROBE/lib_str.c **** *
2802:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
2803:../Dave/Generated/UCPROBE/lib_str.c **** *
2804:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
2805:../Dave/Generated/UCPROBE/lib_str.c **** *
2806:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
2807:../Dave/Generated/UCPROBE/lib_str.c **** *
2808:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
2809:../Dave/Generated/UCPROBE/lib_str.c **** *
2810:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : DESCRIPTION' states tha
2811:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
2812:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type unsigned long ... representation" :
2813:../Dave/Generated/UCPROBE/lib_str.c **** *
2814:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
2815:../Dave/Generated/UCPROBE/lib_str.c **** *
2816:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
2817:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
2818:../Dave/Generated/UCPROBE/lib_str.c **** *
2819:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
2820:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
2821:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
2822:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
2823:../Dave/Generated/UCPROBE/lib_str.c **** *
2824:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
2825:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
2826:../Dave/Generated/UCPROBE/lib_str.c **** *
2827:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
2828:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
2829:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
2830:../Dave/Generated/UCPROBE/lib_str.c **** *
2831:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
2832:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
2833:../Dave/Generated/UCPROBE/lib_str.c **** *
2834:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
2835:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
2836:../Dave/Generated/UCPROBE/lib_str.c **** *
2837:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
2838:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
2839:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
2840:../Dave/Generated/UCPROBE/lib_str.c **** *
2841:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
2842:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
2843:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
2844:../Dave/Generated/UCPROBE/lib_str.c **** *
2845:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
2846:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
2847:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
2848:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
2849:../Dave/Generated/UCPROBE/lib_str.c **** *
2850:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
2851:../Dave/Generated/UCPROBE/lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
2852:../Dave/Generated/UCPROBE/lib_str.c **** *
2853:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
2854:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
2855:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
2856:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
2857:../Dave/Generated/UCPROBE/lib_str.c **** *
2858:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
2859:../Dave/Generated/UCPROBE/lib_str.c **** *
2860:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
2861:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.
2862:../Dave/Generated/UCPROBE/lib_str.c **** *
2863:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
2864:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
2865:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
2866:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2867:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an unsig
2868:../Dave/Generated/UCPROBE/lib_str.c **** *
2869:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
2870:../Dave/Generated/UCPROBE/lib_str.c **** *
2871:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion [is] performed"; ...
2872:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') [is] stored in the object pointed 
2873:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
2874:../Dave/Generated/UCPROBE/lib_str.c **** *
2875:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
2876:../Dave/Generated/UCPROBE/lib_str.c **** *
2877:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
2878:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
2879:../Dave/Generated/UCPROBE/lib_str.c **** *
2880:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
2881:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
2882:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
2883:../Dave/Generated/UCPROBE/lib_str.c **** *
2884:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
2885:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
2886:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
2887:../Dave/Generated/UCPROBE/lib_str.c **** *
2888:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : RETURN VALU
2889:../Dave/Generated/UCPROBE/lib_str.c **** *
2890:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
2891:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
2892:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ... shall be returned."
2893:../Dave/Generated/UCPROBE/lib_str.c **** *
2894:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
2895:../Dave/Generated/UCPROBE/lib_str.c **** *
2896:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2897:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
2898:../Dave/Generated/UCPROBE/lib_str.c **** *
2899:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
2900:../Dave/Generated/UCPROBE/lib_str.c **** *
2901:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
2902:../Dave/Generated/UCPROBE/lib_str.c **** *
2903:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2904:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
2905:../Dave/Generated/UCPROBE/lib_str.c **** *
2906:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
2907:../Dave/Generated/UCPROBE/lib_str.c **** *
2908:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
2909:../Dave/Generated/UCPROBE/lib_str.c **** *
2910:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
2911:../Dave/Generated/UCPROBE/lib_str.c **** *
2912:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
2913:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
2914:../Dave/Generated/UCPROBE/lib_str.c **** *
2915:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
2916:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
2917:../Dave/Generated/UCPROBE/lib_str.c **** *
2918:../Dave/Generated/UCPROBE/lib_str.c **** *
2919:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
2920:../Dave/Generated/UCPROBE/lib_str.c **** *
2921:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
2922:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2923:../Dave/Generated/UCPROBE/lib_str.c **** *
2924:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2925:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
2926:../Dave/Generated/UCPROBE/lib_str.c **** *
2927:../Dave/Generated/UCPROBE/lib_str.c **** *
2928:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
2929:../Dave/Generated/UCPROBE/lib_str.c **** *
2930:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
2931:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
2932:../Dave/Generated/UCPROBE/lib_str.c **** *
2933:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2934:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
2935:../Dave/Generated/UCPROBE/lib_str.c **** *
2936:../Dave/Generated/UCPROBE/lib_str.c **** *
2937:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
2938:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
2939:../Dave/Generated/UCPROBE/lib_str.c **** *
2940:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
2941:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
2942:../Dave/Generated/UCPROBE/lib_str.c **** *
2943:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2944:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
2945:../Dave/Generated/UCPROBE/lib_str.c **** *
2946:../Dave/Generated/UCPROBE/lib_str.c **** *
2947:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
2948:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
2949:../Dave/Generated/UCPROBE/lib_str.c **** *
2950:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
2951:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
2952:../Dave/Generated/UCPROBE/lib_str.c **** *
2953:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
2954:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
2955:../Dave/Generated/UCPROBE/lib_str.c **** *
2956:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
2957:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
2958:../Dave/Generated/UCPROBE/lib_str.c **** *
2959:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
2960:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2961:../Dave/Generated/UCPROBE/lib_str.c **** *
2962:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
2963:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
2964:../Dave/Generated/UCPROBE/lib_str.c **** *
2965:../Dave/Generated/UCPROBE/lib_str.c **** *
2966:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Invalid negative unsigned parse string :
2967:../Dave/Generated/UCPROBE/lib_str.c **** *
2968:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
2969:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
2970:../Dave/Generated/UCPROBE/lib_str.c **** *
2971:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 0
2972:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "  -12345678901234567890*123456"
2973:../Dave/Generated/UCPROBE/lib_str.c **** *
2974:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2975:../Dave/Generated/UCPROBE/lib_str.c **** */
2976:../Dave/Generated/UCPROBE/lib_str.c **** 
2977:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT32U  Str_ParseNbr_Int32U (const  CPU_CHAR     *pstr,
2978:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_CHAR    **pstr_next,
2979:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_INT08U    nbr_base)
2980:../Dave/Generated/UCPROBE/lib_str.c **** {
 2067              	 .loc 1 2980 0
 2068              	 .cfi_startproc
 2069              	 
 2070              	 
 2071 0000 80B5     	 push {r7,lr}
 2072              	.LCFI106:
 2073              	 .cfi_def_cfa_offset 8
 2074              	 .cfi_offset 7,-8
 2075              	 .cfi_offset 14,-4
 2076 0002 88B0     	 sub sp,sp,#32
 2077              	.LCFI107:
 2078              	 .cfi_def_cfa_offset 40
 2079 0004 02AF     	 add r7,sp,#8
 2080              	.LCFI108:
 2081              	 .cfi_def_cfa 7,32
 2082 0006 F860     	 str r0,[r7,#12]
 2083 0008 B960     	 str r1,[r7,#8]
 2084 000a 1346     	 mov r3,r2
 2085 000c FB71     	 strb r3,[r7,#7]
2981:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U  nbr;
2982:../Dave/Generated/UCPROBE/lib_str.c **** 
2983:../Dave/Generated/UCPROBE/lib_str.c **** 
2984:../Dave/Generated/UCPROBE/lib_str.c ****     nbr = Str_ParseNbr_Int32(               pstr,               /* Parse/convert str ...           
 2086              	 .loc 1 2984 0
 2087 000e FA79     	 ldrb r2,[r7,#7]
 2088 0010 0023     	 movs r3,#0
 2089 0012 0093     	 str r3,[sp]
 2090 0014 F868     	 ldr r0,[r7,#12]
 2091 0016 B968     	 ldr r1,[r7,#8]
 2092 0018 0023     	 movs r3,#0
 2093 001a FFF7FEFF 	 bl Str_ParseNbr_Int32
 2094 001e 7861     	 str r0,[r7,#20]
2985:../Dave/Generated/UCPROBE/lib_str.c ****                                             pstr_next,
2986:../Dave/Generated/UCPROBE/lib_str.c ****                                             nbr_base,
2987:../Dave/Generated/UCPROBE/lib_str.c ****                                             DEF_NO,             /* ... as unsigned int (see Note #2
2988:../Dave/Generated/UCPROBE/lib_str.c ****                              (CPU_BOOLEAN *)0);
2989:../Dave/Generated/UCPROBE/lib_str.c **** 
2990:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
 2095              	 .loc 1 2990 0
 2096 0020 7B69     	 ldr r3,[r7,#20]
2991:../Dave/Generated/UCPROBE/lib_str.c **** }
 2097              	 .loc 1 2991 0
 2098 0022 1846     	 mov r0,r3
 2099 0024 1837     	 adds r7,r7,#24
 2100              	.LCFI109:
 2101              	 .cfi_def_cfa_offset 8
 2102 0026 BD46     	 mov sp,r7
 2103              	.LCFI110:
 2104              	 .cfi_def_cfa_register 13
 2105              	 
 2106 0028 80BD     	 pop {r7,pc}
 2107              	 .cfi_endproc
 2108              	.LFE20:
 2110 002a 00BF     	 .section .text.Str_ParseNbr_Int32S,"ax",%progbits
 2111              	 .align 2
 2112              	 .global Str_ParseNbr_Int32S
 2113              	 .thumb
 2114              	 .thumb_func
 2116              	Str_ParseNbr_Int32S:
 2117              	.LFB21:
2992:../Dave/Generated/UCPROBE/lib_str.c **** 
2993:../Dave/Generated/UCPROBE/lib_str.c **** 
2994:../Dave/Generated/UCPROBE/lib_str.c **** /*
2995:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
2996:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32S()
2997:../Dave/Generated/UCPROBE/lib_str.c **** *
2998:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit signed integer from string.
2999:../Dave/Generated/UCPROBE/lib_str.c **** *
3000:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
3001:../Dave/Generated/UCPROBE/lib_str.c **** *
3002:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
3003:../Dave/Generated/UCPROBE/lib_str.c **** *
3004:../Dave/Generated/UCPROBE/lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
3005:../Dave/Generated/UCPROBE/lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
3006:../Dave/Generated/UCPROBE/lib_str.c **** *                               (b) Return a pointer to 'pstr',
3007:../Dave/Generated/UCPROBE/lib_str.c **** *                                       otherwise      (see Note #2a2A2).
3008:../Dave/Generated/UCPROBE/lib_str.c **** *
3009:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
3010:../Dave/Generated/UCPROBE/lib_str.c **** *
3011:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO over- or underflow (see Note #2a3A).
3012:../Dave/Generated/UCPROBE/lib_str.c **** *
3013:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32S_MIN_VAL, if integer parsed but negatively underflowed (see Note #2a3A1a
3014:../Dave/Generated/UCPROBE/lib_str.c **** *
3015:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but positively overflowed  (see Note #2a3A1b
3016:../Dave/Generated/UCPROBE/lib_str.c **** *
3017:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                                    (see Note #2a3B).
3018:../Dave/Generated/UCPROBE/lib_str.c **** *
3019:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Application.
3020:../Dave/Generated/UCPROBE/lib_str.c **** *
3021:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3022:../Dave/Generated/UCPROBE/lib_str.c **** *
3023:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3024:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3025:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type long ... representation" :
3026:../Dave/Generated/UCPROBE/lib_str.c **** *
3027:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3028:../Dave/Generated/UCPROBE/lib_str.c **** *
3029:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3030:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
3031:../Dave/Generated/UCPROBE/lib_str.c **** *
3032:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3033:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
3034:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3035:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3036:../Dave/Generated/UCPROBE/lib_str.c **** *
3037:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3038:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3039:../Dave/Generated/UCPROBE/lib_str.c **** *
3040:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3041:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3042:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
3043:../Dave/Generated/UCPROBE/lib_str.c **** *
3044:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3045:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
3046:../Dave/Generated/UCPROBE/lib_str.c **** *
3047:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3048:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3049:../Dave/Generated/UCPROBE/lib_str.c **** *
3050:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3051:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3052:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3053:../Dave/Generated/UCPROBE/lib_str.c **** *
3054:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3055:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3056:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3057:../Dave/Generated/UCPROBE/lib_str.c **** *
3058:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3059:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3060:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3061:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
3062:../Dave/Generated/UCPROBE/lib_str.c **** *
3063:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3064:../Dave/Generated/UCPROBE/lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
3065:../Dave/Generated/UCPROBE/lib_str.c **** *
3066:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
3067:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3068:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3069:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3070:../Dave/Generated/UCPROBE/lib_str.c **** *
3071:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3072:../Dave/Generated/UCPROBE/lib_str.c **** *
3073:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
3074:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.
3075:../Dave/Generated/UCPROBE/lib_str.c **** *
3076:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3077:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3078:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3079:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3080:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3081:../Dave/Generated/UCPROBE/lib_str.c **** *
3082:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3083:../Dave/Generated/UCPROBE/lib_str.c **** *
3084:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion is performed"; ...
3085:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3086:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3087:../Dave/Generated/UCPROBE/lib_str.c **** *
3088:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3089:../Dave/Generated/UCPROBE/lib_str.c **** *
3090:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3091:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3092:../Dave/Generated/UCPROBE/lib_str.c **** *
3093:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3094:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3095:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3096:../Dave/Generated/UCPROBE/lib_str.c **** *
3097:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3098:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3099:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
3100:../Dave/Generated/UCPROBE/lib_str.c **** *
3101:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3102:../Dave/Generated/UCPROBE/lib_str.c **** *
3103:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3104:../Dave/Generated/UCPROBE/lib_str.c **** *
3105:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3106:../Dave/Generated/UCPROBE/lib_str.c **** *                                    of the following "shall be returned" :
3107:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "{LONG_MIN}" or ...
3108:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "{LONG_MAX}"
3109:../Dave/Generated/UCPROBE/lib_str.c **** *
3110:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3111:../Dave/Generated/UCPROBE/lib_str.c **** *
3112:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3113:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
3114:../Dave/Generated/UCPROBE/lib_str.c **** *
3115:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3116:../Dave/Generated/UCPROBE/lib_str.c **** *
3117:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3118:../Dave/Generated/UCPROBE/lib_str.c **** *
3119:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3120:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
3121:../Dave/Generated/UCPROBE/lib_str.c **** *
3122:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3123:../Dave/Generated/UCPROBE/lib_str.c **** *
3124:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3125:../Dave/Generated/UCPROBE/lib_str.c **** *
3126:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
3127:../Dave/Generated/UCPROBE/lib_str.c **** *
3128:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
3129:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3130:../Dave/Generated/UCPROBE/lib_str.c **** *
3131:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
3132:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
3133:../Dave/Generated/UCPROBE/lib_str.c **** *
3134:../Dave/Generated/UCPROBE/lib_str.c **** *
3135:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
3136:../Dave/Generated/UCPROBE/lib_str.c **** *
3137:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
3138:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3139:../Dave/Generated/UCPROBE/lib_str.c **** *
3140:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3141:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3142:../Dave/Generated/UCPROBE/lib_str.c **** *
3143:../Dave/Generated/UCPROBE/lib_str.c **** *
3144:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3145:../Dave/Generated/UCPROBE/lib_str.c **** *
3146:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3147:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3148:../Dave/Generated/UCPROBE/lib_str.c **** *
3149:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3150:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3151:../Dave/Generated/UCPROBE/lib_str.c **** *
3152:../Dave/Generated/UCPROBE/lib_str.c **** *
3153:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3154:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
3155:../Dave/Generated/UCPROBE/lib_str.c **** *
3156:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3157:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3158:../Dave/Generated/UCPROBE/lib_str.c **** *
3159:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3160:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3161:../Dave/Generated/UCPROBE/lib_str.c **** *
3162:../Dave/Generated/UCPROBE/lib_str.c **** *
3163:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3164:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
3165:../Dave/Generated/UCPROBE/lib_str.c **** *
3166:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
3167:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3168:../Dave/Generated/UCPROBE/lib_str.c **** *
3169:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3170:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
3171:../Dave/Generated/UCPROBE/lib_str.c **** *
3172:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3173:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
3174:../Dave/Generated/UCPROBE/lib_str.c **** *
3175:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3176:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3177:../Dave/Generated/UCPROBE/lib_str.c **** *
3178:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MAX_VAL
3179:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3180:../Dave/Generated/UCPROBE/lib_str.c **** *
3181:../Dave/Generated/UCPROBE/lib_str.c **** *
3182:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Parse string integer underflow :
3183:../Dave/Generated/UCPROBE/lib_str.c **** *
3184:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3185:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3186:../Dave/Generated/UCPROBE/lib_str.c **** *
3187:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3188:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3189:../Dave/Generated/UCPROBE/lib_str.c **** *
3190:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3191:../Dave/Generated/UCPROBE/lib_str.c **** */
3192:../Dave/Generated/UCPROBE/lib_str.c **** 
3193:../Dave/Generated/UCPROBE/lib_str.c **** CPU_INT32S  Str_ParseNbr_Int32S (const  CPU_CHAR     *pstr,
3194:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_CHAR    **pstr_next,
3195:../Dave/Generated/UCPROBE/lib_str.c ****                                         CPU_INT08U    nbr_base)
3196:../Dave/Generated/UCPROBE/lib_str.c **** {
 2118              	 .loc 1 3196 0
 2119              	 .cfi_startproc
 2120              	 
 2121              	 
 2122 0000 80B5     	 push {r7,lr}
 2123              	.LCFI111:
 2124              	 .cfi_def_cfa_offset 8
 2125              	 .cfi_offset 7,-8
 2126              	 .cfi_offset 14,-4
 2127 0002 8AB0     	 sub sp,sp,#40
 2128              	.LCFI112:
 2129              	 .cfi_def_cfa_offset 48
 2130 0004 02AF     	 add r7,sp,#8
 2131              	.LCFI113:
 2132              	 .cfi_def_cfa 7,40
 2133 0006 F860     	 str r0,[r7,#12]
 2134 0008 B960     	 str r1,[r7,#8]
 2135 000a 1346     	 mov r3,r2
 2136 000c FB71     	 strb r3,[r7,#7]
3197:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32S   nbr;
3198:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U   nbr_abs;
3199:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN  nbr_neg;
3200:../Dave/Generated/UCPROBE/lib_str.c **** 
3201:../Dave/Generated/UCPROBE/lib_str.c **** 
3202:../Dave/Generated/UCPROBE/lib_str.c ****     nbr_abs = Str_ParseNbr_Int32(pstr,                          /* Parse/convert str ...           
 2137              	 .loc 1 3202 0
 2138 000e FA79     	 ldrb r2,[r7,#7]
 2139 0010 07F11703 	 add r3,r7,#23
 2140 0014 0093     	 str r3,[sp]
 2141 0016 F868     	 ldr r0,[r7,#12]
 2142 0018 B968     	 ldr r1,[r7,#8]
 2143 001a 0123     	 movs r3,#1
 2144 001c FFF7FEFF 	 bl Str_ParseNbr_Int32
 2145 0020 B861     	 str r0,[r7,#24]
3203:../Dave/Generated/UCPROBE/lib_str.c ****                                  pstr_next,
3204:../Dave/Generated/UCPROBE/lib_str.c ****                                  nbr_base,
3205:../Dave/Generated/UCPROBE/lib_str.c ****                                  DEF_YES,                       /* ... as signed int (see Note #2a2
3206:../Dave/Generated/UCPROBE/lib_str.c ****                                 &nbr_neg);
3207:../Dave/Generated/UCPROBE/lib_str.c **** 
3208:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_neg == DEF_NO) {                                    /* Chk for neg nbr & ovf/undf (see 
 2146              	 .loc 1 3208 0
 2147 0022 FB7D     	 ldrb r3,[r7,#23]
 2148 0024 002B     	 cmp r3,#0
 2149 0026 08D1     	 bne .L132
3209:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
 2150              	 .loc 1 3209 0
 2151 0028 BB69     	 ldr r3,[r7,#24]
3210:../Dave/Generated/UCPROBE/lib_str.c ****                                                                     :  (CPU_INT32S)nbr_abs;
 2152              	 .loc 1 3210 0
 2153 002a 002B     	 cmp r3,#0
 2154 002c 01DB     	 blt .L133
 2155              	 .loc 1 3210 0 is_stmt 0 discriminator 1
 2156 002e BB69     	 ldr r3,[r7,#24]
 2157 0030 01E0     	 b .L134
 2158              	.L133:
 2159              	 .loc 1 3210 0 discriminator 2
 2160 0032 6FF00043 	 mvn r3,#-2147483648
 2161              	.L134:
3209:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
 2162              	 .loc 1 3209 0 is_stmt 1
 2163 0036 FB61     	 str r3,[r7,#28]
 2164 0038 08E0     	 b .L135
 2165              	.L132:
3211:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
3212:../Dave/Generated/UCPROBE/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U)-DEF_INT_32S_MIN_VAL_ONES_CPL) ?  (CPU_INT32S)DEF_INT_32S_MIN_
 2166              	 .loc 1 3212 0
 2167 003a BB69     	 ldr r3,[r7,#24]
3213:../Dave/Generated/UCPROBE/lib_str.c ****                                                                     : -(CPU_INT32S)nbr_abs;
 2168              	 .loc 1 3213 0
 2169 003c 002B     	 cmp r3,#0
 2170 003e 02DB     	 blt .L136
 2171              	 .loc 1 3213 0 is_stmt 0 discriminator 1
 2172 0040 BB69     	 ldr r3,[r7,#24]
 2173 0042 5B42     	 negs r3,r3
 2174 0044 01E0     	 b .L137
 2175              	.L136:
 2176              	 .loc 1 3213 0 discriminator 2
 2177 0046 4FF00043 	 mov r3,#-2147483648
 2178              	.L137:
3212:../Dave/Generated/UCPROBE/lib_str.c ****                                                                     : -(CPU_INT32S)nbr_abs;
 2179              	 .loc 1 3212 0 is_stmt 1
 2180 004a FB61     	 str r3,[r7,#28]
 2181              	.L135:
3214:../Dave/Generated/UCPROBE/lib_str.c ****     }
3215:../Dave/Generated/UCPROBE/lib_str.c **** 
3216:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
 2182              	 .loc 1 3216 0
 2183 004c FB69     	 ldr r3,[r7,#28]
3217:../Dave/Generated/UCPROBE/lib_str.c **** }
 2184              	 .loc 1 3217 0
 2185 004e 1846     	 mov r0,r3
 2186 0050 2037     	 adds r7,r7,#32
 2187              	.LCFI114:
 2188              	 .cfi_def_cfa_offset 8
 2189 0052 BD46     	 mov sp,r7
 2190              	.LCFI115:
 2191              	 .cfi_def_cfa_register 13
 2192              	 
 2193 0054 80BD     	 pop {r7,pc}
 2194              	 .cfi_endproc
 2195              	.LFE21:
 2197 0056 00BF     	 .section .text.Str_FmtNbr_Int32,"ax",%progbits
 2198              	 .align 2
 2199              	 .thumb
 2200              	 .thumb_func
 2202              	Str_FmtNbr_Int32:
 2203              	.LFB22:
3218:../Dave/Generated/UCPROBE/lib_str.c **** 
3219:../Dave/Generated/UCPROBE/lib_str.c **** 
3220:../Dave/Generated/UCPROBE/lib_str.c **** /*
3221:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3222:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3223:../Dave/Generated/UCPROBE/lib_str.c **** *                                           LOCAL FUNCTIONS
3224:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3225:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3226:../Dave/Generated/UCPROBE/lib_str.c **** */
3227:../Dave/Generated/UCPROBE/lib_str.c **** 
3228:../Dave/Generated/UCPROBE/lib_str.c **** /*
3229:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3230:../Dave/Generated/UCPROBE/lib_str.c **** *                                         Str_FmtNbr_Int32()
3231:../Dave/Generated/UCPROBE/lib_str.c **** *
3232:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Format 32-bit integer into a multi-digit character string.
3233:../Dave/Generated/UCPROBE/lib_str.c **** *
3234:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : nbr             Number           to format.
3235:../Dave/Generated/UCPROBE/lib_str.c **** *
3236:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
3237:../Dave/Generated/UCPROBE/lib_str.c **** *
3238:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
3239:../Dave/Generated/UCPROBE/lib_str.c **** *
3240:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_neg         Indicates whether number to format is negative :
3241:../Dave/Generated/UCPROBE/lib_str.c **** *               -------
3242:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Number is non-negative.
3243:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Number is     negative.
3244:../Dave/Generated/UCPROBE/lib_str.c **** *
3245:../Dave/Generated/UCPROBE/lib_str.c **** *                               Argument validated in Str_FmtNbr_Int32U(),
3246:../Dave/Generated/UCPROBE/lib_str.c **** *                                                     Str_FmtNbr_Int32S().
3247:../Dave/Generated/UCPROBE/lib_str.c **** *
3248:../Dave/Generated/UCPROBE/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
3249:../Dave/Generated/UCPROBE/lib_str.c **** *
3250:../Dave/Generated/UCPROBE/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
3251:../Dave/Generated/UCPROBE/lib_str.c **** *                                     Printable character          Prepend leading character to str
3252:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6e).
3253:../Dave/Generated/UCPROBE/lib_str.c **** *
3254:../Dave/Generated/UCPROBE/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
3255:../Dave/Generated/UCPROBE/lib_str.c **** *
3256:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
3257:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
3258:../Dave/Generated/UCPROBE/lib_str.c **** *
3259:../Dave/Generated/UCPROBE/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
3260:../Dave/Generated/UCPROBE/lib_str.c **** *
3261:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
3262:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
3263:../Dave/Generated/UCPROBE/lib_str.c **** *
3264:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
3265:../Dave/Generated/UCPROBE/lib_str.c **** *
3266:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6f].
3267:../Dave/Generated/UCPROBE/lib_str.c **** *
3268:../Dave/Generated/UCPROBE/lib_str.c **** *               Pointer to NULL,             otherwise.
3269:../Dave/Generated/UCPROBE/lib_str.c **** *
3270:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Str_FmtNbr_Int32U(),
3271:../Dave/Generated/UCPROBE/lib_str.c **** *               Str_FmtNbr_Int32S().
3272:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3273:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) (a) The maximum number of digits to format for 32-bit integer numbers :
3274:../Dave/Generated/UCPROBE/lib_str.c **** *
3275:../Dave/Generated/UCPROBE/lib_str.c **** *
3276:../Dave/Generated/UCPROBE/lib_str.c **** *                               Maximum Number of             [  log (Number)      ]
3277:../Dave/Generated/UCPROBE/lib_str.c **** *                             32-bit Integer Digits  =  floor [ -------------- + 1 ]
3278:../Dave/Generated/UCPROBE/lib_str.c **** *                                   to Format                 [   log (Base)       ]
3279:../Dave/Generated/UCPROBE/lib_str.c **** *
3280:../Dave/Generated/UCPROBE/lib_str.c **** *                               where
3281:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Number                  Number to format
3282:../Dave/Generated/UCPROBE/lib_str.c **** *                                       Base            Base of number to format
3283:../Dave/Generated/UCPROBE/lib_str.c **** *
3284:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is zero; then NO formatti
3285:../Dave/Generated/UCPROBE/lib_str.c **** *                           is performed except possible NULL-termination of the string (see Note #
3286:../Dave/Generated/UCPROBE/lib_str.c **** *
3287:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3288:../Dave/Generated/UCPROBE/lib_str.c **** *
3289:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = -23456
3290:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  =  0
3291:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3292:../Dave/Generated/UCPROBE/lib_str.c **** *
3293:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = ""                   See Note #7a
3294:../Dave/Generated/UCPROBE/lib_str.c **** *
3295:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) If the number of digits to format ('nbr_dig') is less than the number o
3296:../Dave/Generated/UCPROBE/lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
3297:../Dave/Generated/UCPROBE/lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
3298:../Dave/Generated/UCPROBE/lib_str.c **** *
3299:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3300:../Dave/Generated/UCPROBE/lib_str.c **** *
3301:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = 23456
3302:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  = 3
3303:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3304:../Dave/Generated/UCPROBE/lib_str.c **** *
3305:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = "???"                See Note #7b
3306:../Dave/Generated/UCPROBE/lib_str.c **** *
3307:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of digits to
3308:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
3309:../Dave/Generated/UCPROBE/lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
3310:../Dave/Generated/UCPROBE/lib_str.c **** *                           the negative sign.
3311:../Dave/Generated/UCPROBE/lib_str.c **** *
3312:../Dave/Generated/UCPROBE/lib_str.c **** *                               Example :
3313:../Dave/Generated/UCPROBE/lib_str.c **** *
3314:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr      = -23456
3315:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig  =  5
3316:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base = 10
3317:../Dave/Generated/UCPROBE/lib_str.c **** *
3318:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr     = "?????"              See Note #7b
3319:../Dave/Generated/UCPROBE/lib_str.c **** *
3320:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
3321:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3322:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
3323:../Dave/Generated/UCPROBE/lib_str.c **** *
3324:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
3325:../Dave/Generated/UCPROBE/lib_str.c **** *
3326:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
3327:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) with the exception of '0'.
3328:../Dave/Generated/UCPROBE/lib_str.c **** *
3329:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
3330:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
3331:../Dave/Generated/UCPROBE/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
3332:../Dave/Generated/UCPROBE/lib_str.c **** *                           ('nbr_dig').
3333:../Dave/Generated/UCPROBE/lib_str.c **** *
3334:../Dave/Generated/UCPROBE/lib_str.c **** *                               Examples :
3335:../Dave/Generated/UCPROBE/lib_str.c **** *
3336:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = 23456
3337:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
3338:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
3339:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
3340:../Dave/Generated/UCPROBE/lib_str.c **** *
3341:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = "  23456"
3342:../Dave/Generated/UCPROBE/lib_str.c **** *
3343:../Dave/Generated/UCPROBE/lib_str.c **** *
3344:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr       = -23456
3345:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_dig   = 7
3346:../Dave/Generated/UCPROBE/lib_str.c **** *                                   nbr_base  = 10
3347:../Dave/Generated/UCPROBE/lib_str.c **** *                                   lead_char = ' '
3348:../Dave/Generated/UCPROBE/lib_str.c **** *
3349:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pstr      = " -23456"
3350:../Dave/Generated/UCPROBE/lib_str.c **** *
3351:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
3352:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character
3353:../Dave/Generated/UCPROBE/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
3354:../Dave/Generated/UCPROBE/lib_str.c **** *
3355:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
3356:../Dave/Generated/UCPROBE/lib_str.c **** *
3357:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
3358:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3359:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
3360:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
3361:../Dave/Generated/UCPROBE/lib_str.c **** *
3362:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-0023456"
3363:../Dave/Generated/UCPROBE/lib_str.c **** *
3364:../Dave/Generated/UCPROBE/lib_str.c **** *
3365:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
3366:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3367:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
3368:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '0'
3369:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_NO
3370:../Dave/Generated/UCPROBE/lib_str.c **** *
3371:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "-000ABCD"
3372:../Dave/Generated/UCPROBE/lib_str.c **** *
3373:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
3374:../Dave/Generated/UCPROBE/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character
3375:../Dave/Generated/UCPROBE/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
3376:../Dave/Generated/UCPROBE/lib_str.c **** *
3377:../Dave/Generated/UCPROBE/lib_str.c **** *                                   Examples :
3378:../Dave/Generated/UCPROBE/lib_str.c **** *
3379:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -23456
3380:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3381:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 10
3382:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
3383:../Dave/Generated/UCPROBE/lib_str.c **** *
3384:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "##-23456"
3385:../Dave/Generated/UCPROBE/lib_str.c **** *
3386:../Dave/Generated/UCPROBE/lib_str.c **** *
3387:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr        = -43981
3388:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_dig    =  8
3389:../Dave/Generated/UCPROBE/lib_str.c **** *                                       nbr_base   = 16
3390:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lead_char  = '#'
3391:../Dave/Generated/UCPROBE/lib_str.c **** *                                       lower_case = DEF_YES
3392:../Dave/Generated/UCPROBE/lib_str.c **** *
3393:../Dave/Generated/UCPROBE/lib_str.c **** *                                       pstr       = "###-abcd"
3394:../Dave/Generated/UCPROBE/lib_str.c **** *
3395:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
3396:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
3397:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) ... but NO leading character available;           ...
3398:../Dave/Generated/UCPROBE/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
3399:../Dave/Generated/UCPROBE/lib_str.c **** *
3400:../Dave/Generated/UCPROBE/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
3401:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3402:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
3403:../Dave/Generated/UCPROBE/lib_str.c **** *                       array formatting.
3404:../Dave/Generated/UCPROBE/lib_str.c **** *
3405:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
3406:../Dave/Generated/UCPROBE/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
3407:../Dave/Generated/UCPROBE/lib_str.c **** *
3408:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
3409:../Dave/Generated/UCPROBE/lib_str.c **** *
3410:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) To prevent character buffer overrun :
3411:../Dave/Generated/UCPROBE/lib_str.c **** *
3412:../Dave/Generated/UCPROBE/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
3413:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 negative sign   +
3414:../Dave/Generated/UCPROBE/lib_str.c **** *                                                               1 'NUL' terminator)  characters
3415:../Dave/Generated/UCPROBE/lib_str.c **** *
3416:../Dave/Generated/UCPROBE/lib_str.c **** *               (6) String format terminates when :
3417:../Dave/Generated/UCPROBE/lib_str.c **** *
3418:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
3419:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
3420:../Dave/Generated/UCPROBE/lib_str.c **** *
3421:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Number of digits to format ('nbr_dig') is zero.
3422:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
3423:../Dave/Generated/UCPROBE/lib_str.c **** *
3424:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant
3425:../Dave/Generated/UCPROBE/lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible
3426:../Dave/Generated/UCPROBE/lib_str.c **** *                           negative sign.
3427:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3428:../Dave/Generated/UCPROBE/lib_str.c **** *
3429:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Base is passed an invalid base (see Note #2).
3430:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string format performed; NULL pointer returned.
3431:../Dave/Generated/UCPROBE/lib_str.c **** *
3432:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Lead character is NOT a valid, printable character (see Note #3a).
3433:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3434:../Dave/Generated/UCPROBE/lib_str.c **** *
3435:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Number successfully formatted into character string array.
3436:../Dave/Generated/UCPROBE/lib_str.c **** *
3437:../Dave/Generated/UCPROBE/lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
3438:../Dave/Generated/UCPROBE/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
3439:../Dave/Generated/UCPROBE/lib_str.c **** *                   number of digits to format ('nbr_dig') :
3440:../Dave/Generated/UCPROBE/lib_str.c **** *
3441:../Dave/Generated/UCPROBE/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
3442:../Dave/Generated/UCPROBE/lib_str.c **** *                          number of     =  {
3443:../Dave/Generated/UCPROBE/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
3444:../Dave/Generated/UCPROBE/lib_str.c **** *
3445:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3446:../Dave/Generated/UCPROBE/lib_str.c **** */
3447:../Dave/Generated/UCPROBE/lib_str.c **** 
3448:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_CHAR  *Str_FmtNbr_Int32 (CPU_INT32U    nbr,
3449:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_INT08U    nbr_dig,
3450:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_INT08U    nbr_base,
3451:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   nbr_neg,
3452:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_CHAR      lead_char,
3453:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   lower_case,
3454:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_BOOLEAN   nul,
3455:../Dave/Generated/UCPROBE/lib_str.c ****                                      CPU_CHAR     *pstr)
3456:../Dave/Generated/UCPROBE/lib_str.c **** {
 2204              	 .loc 1 3456 0
 2205              	 .cfi_startproc
 2206              	 
 2207              	 
 2208 0000 80B5     	 push {r7,lr}
 2209              	.LCFI116:
 2210              	 .cfi_def_cfa_offset 8
 2211              	 .cfi_offset 7,-8
 2212              	 .cfi_offset 14,-4
 2213 0002 8AB0     	 sub sp,sp,#40
 2214              	.LCFI117:
 2215              	 .cfi_def_cfa_offset 48
 2216 0004 00AF     	 add r7,sp,#0
 2217              	.LCFI118:
 2218              	 .cfi_def_cfa_register 7
 2219 0006 7860     	 str r0,[r7,#4]
 2220 0008 0846     	 mov r0,r1
 2221 000a 1146     	 mov r1,r2
 2222 000c 1A46     	 mov r2,r3
 2223 000e 0346     	 mov r3,r0
 2224 0010 FB70     	 strb r3,[r7,#3]
 2225 0012 0B46     	 mov r3,r1
 2226 0014 BB70     	 strb r3,[r7,#2]
 2227 0016 1346     	 mov r3,r2
 2228 0018 7B70     	 strb r3,[r7,#1]
3457:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_CHAR     *pstr_fmt;
3458:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_DATA      i;
3459:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_fmt;
3460:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT32U    nbr_log;
3461:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_max;
3462:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_min;
3463:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_dig_fmtd;
3464:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_neg_sign;
3465:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    nbr_lead_char;
3466:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    dig_val;
3467:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    lead_char_delta_0;
3468:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_INT08U    lead_char_delta_a;
3469:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
3470:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   lead_char_0;
3471:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
3472:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   print_char;
3473:../Dave/Generated/UCPROBE/lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
3474:../Dave/Generated/UCPROBE/lib_str.c **** 
3475:../Dave/Generated/UCPROBE/lib_str.c **** 
3476:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
3477:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
 2229              	 .loc 1 3477 0
 2230 001a FB6B     	 ldr r3,[r7,#60]
 2231 001c 002B     	 cmp r3,#0
 2232 001e 01D1     	 bne .L140
3478:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2233              	 .loc 1 3478 0
 2234 0020 0023     	 movs r3,#0
 2235 0022 24E1     	 b .L141
 2236              	.L140:
3479:../Dave/Generated/UCPROBE/lib_str.c ****     }
3480:../Dave/Generated/UCPROBE/lib_str.c **** 
3481:../Dave/Generated/UCPROBE/lib_str.c ****     fmt_invalid = DEF_NO;
 2237              	 .loc 1 3481 0
 2238 0024 0023     	 movs r3,#0
 2239 0026 BB74     	 strb r3,[r7,#18]
3482:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = DEF_NO;
 2240              	 .loc 1 3482 0
 2241 0028 0023     	 movs r3,#0
 2242 002a FB74     	 strb r3,[r7,#19]
3483:../Dave/Generated/UCPROBE/lib_str.c **** 
3484:../Dave/Generated/UCPROBE/lib_str.c ****     if (nbr_dig < 1) {                                          /* If nbr digs = 0, ...            
 2243              	 .loc 1 3484 0
 2244 002c FB78     	 ldrb r3,[r7,#3]
 2245 002e 002B     	 cmp r3,#0
 2246 0030 01D1     	 bne .L142
3485:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
 2247              	 .loc 1 3485 0
 2248 0032 0123     	 movs r3,#1
 2249 0034 BB74     	 strb r3,[r7,#18]
 2250              	.L142:
3486:../Dave/Generated/UCPROBE/lib_str.c ****     }
3487:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* If invalid base, ...            
3488:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_base <  2u) ||
 2251              	 .loc 1 3488 0
 2252 0036 BB78     	 ldrb r3,[r7,#2]
 2253 0038 012B     	 cmp r3,#1
 2254 003a 02D9     	 bls .L143
 2255              	 .loc 1 3488 0 is_stmt 0 discriminator 1
 2256 003c BB78     	 ldrb r3,[r7,#2]
 2257 003e 242B     	 cmp r3,#36
 2258 0040 01D9     	 bls .L144
 2259              	.L143:
3489:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
3490:../Dave/Generated/UCPROBE/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
 2260              	 .loc 1 3490 0 is_stmt 1
 2261 0042 0123     	 movs r3,#1
 2262 0044 BB74     	 strb r3,[r7,#18]
 2263              	.L144:
3491:../Dave/Generated/UCPROBE/lib_str.c ****     }
3492:../Dave/Generated/UCPROBE/lib_str.c **** 
3493:../Dave/Generated/UCPROBE/lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
 2264              	 .loc 1 3493 0
 2265 0046 97F83030 	 ldrb r3,[r7,#48]
 2266 004a 002B     	 cmp r3,#0
 2267 004c 3CD0     	 beq .L145
3494:../Dave/Generated/UCPROBE/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
 2268              	 .loc 1 3494 0
 2269 004e 97F83030 	 ldrb r3,[r7,#48]
 2270 0052 1846     	 mov r0,r3
 2271 0054 FFF7FEFF 	 bl ASCII_IsPrint
 2272 0058 0346     	 mov r3,r0
 2273 005a 3B74     	 strb r3,[r7,#16]
3495:../Dave/Generated/UCPROBE/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable (see 
 2274              	 .loc 1 3495 0
 2275 005c 3B7C     	 ldrb r3,[r7,#16]
 2276 005e 012B     	 cmp r3,#1
 2277 0060 02D0     	 beq .L146
3496:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str        (see 
 2278              	 .loc 1 3496 0
 2279 0062 0123     	 movs r3,#1
 2280 0064 BB74     	 strb r3,[r7,#18]
 2281 0066 2FE0     	 b .L145
 2282              	.L146:
3497:../Dave/Generated/UCPROBE/lib_str.c **** 
3498:../Dave/Generated/UCPROBE/lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 nbr base
 2283              	 .loc 1 3498 0
 2284 0068 97F83030 	 ldrb r3,[r7,#48]
 2285 006c 302B     	 cmp r3,#48
 2286 006e 2BD0     	 beq .L145
3499:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_delta_0 = (CPU_INT08U)(lead_char - '0');
 2287              	 .loc 1 3499 0
 2288 0070 97F83030 	 ldrb r3,[r7,#48]
 2289 0074 303B     	 subs r3,r3,#48
 2290 0076 FB73     	 strb r3,[r7,#15]
3500:../Dave/Generated/UCPROBE/lib_str.c ****             if (lower_case != DEF_YES) {
 2291              	 .loc 1 3500 0
 2292 0078 97F83430 	 ldrb r3,[r7,#52]
 2293 007c 012B     	 cmp r3,#1
 2294 007e 04D0     	 beq .L147
3501:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
 2295              	 .loc 1 3501 0
 2296 0080 97F83030 	 ldrb r3,[r7,#48]
 2297 0084 413B     	 subs r3,r3,#65
 2298 0086 3B75     	 strb r3,[r7,#20]
 2299 0088 03E0     	 b .L148
 2300              	.L147:
3502:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3503:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'a');
 2301              	 .loc 1 3503 0
 2302 008a 97F83030 	 ldrb r3,[r7,#48]
 2303 008e 613B     	 subs r3,r3,#97
 2304 0090 3B75     	 strb r3,[r7,#20]
 2305              	.L148:
3504:../Dave/Generated/UCPROBE/lib_str.c ****             }
3505:../Dave/Generated/UCPROBE/lib_str.c **** 
3506:../Dave/Generated/UCPROBE/lib_str.c ****             lead_char_dig = (((nbr_base <= 10u) &&  (lead_char_delta_0 <  nbr_base))      ||
 2306              	 .loc 1 3506 0
 2307 0092 BB78     	 ldrb r3,[r7,#2]
 2308 0094 0A2B     	 cmp r3,#10
 2309 0096 03D8     	 bhi .L149
 2310              	 .loc 1 3506 0 is_stmt 0 discriminator 1
 2311 0098 FA7B     	 ldrb r2,[r7,#15]
 2312 009a BB78     	 ldrb r3,[r7,#2]
 2313 009c 9A42     	 cmp r2,r3
 2314 009e 0AD3     	 bcc .L150
 2315              	.L149:
 2316              	 .loc 1 3506 0 discriminator 4
 2317 00a0 BB78     	 ldrb r3,[r7,#2]
 2318 00a2 0A2B     	 cmp r3,#10
 2319 00a4 09D9     	 bls .L151
3507:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2320              	 .loc 1 3507 0 is_stmt 1
 2321 00a6 FB7B     	 ldrb r3,[r7,#15]
 2322 00a8 092B     	 cmp r3,#9
 2323 00aa 04D9     	 bls .L150
3508:../Dave/Generated/UCPROBE/lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
 2324              	 .loc 1 3508 0 discriminator 1
 2325 00ac 3A7D     	 ldrb r2,[r7,#20]
 2326 00ae BB78     	 ldrb r3,[r7,#2]
 2327 00b0 0A3B     	 subs r3,r3,#10
3507:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2328              	 .loc 1 3507 0 discriminator 1
 2329 00b2 9A42     	 cmp r2,r3
 2330 00b4 01D2     	 bcs .L151
 2331              	.L150:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2332              	 .loc 1 3506 0 discriminator 3
 2333 00b6 0123     	 movs r3,#1
 2334 00b8 00E0     	 b .L152
 2335              	.L151:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2336              	 .loc 1 3506 0 is_stmt 0 discriminator 5
 2337 00ba 0023     	 movs r3,#0
 2338              	.L152:
3506:../Dave/Generated/UCPROBE/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 2339              	 .loc 1 3506 0 discriminator 7
 2340 00bc BB73     	 strb r3,[r7,#14]
3509:../Dave/Generated/UCPROBE/lib_str.c **** 
3510:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If lead char non-0 nbr base dig 
 2341              	 .loc 1 3510 0 is_stmt 1 discriminator 7
 2342 00be BB7B     	 ldrb r3,[r7,#14]
 2343 00c0 012B     	 cmp r3,#1
 2344 00c2 01D1     	 bne .L145
3511:../Dave/Generated/UCPROBE/lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str             
 2345              	 .loc 1 3511 0
 2346 00c4 0123     	 movs r3,#1
 2347 00c6 BB74     	 strb r3,[r7,#18]
 2348              	.L145:
3512:../Dave/Generated/UCPROBE/lib_str.c ****             }
3513:../Dave/Generated/UCPROBE/lib_str.c ****         }
3514:../Dave/Generated/UCPROBE/lib_str.c ****     }
3515:../Dave/Generated/UCPROBE/lib_str.c **** 
3516:../Dave/Generated/UCPROBE/lib_str.c **** 
3517:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
3518:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt    = pstr;
 2349              	 .loc 1 3518 0
 2350 00c8 FB6B     	 ldr r3,[r7,#60]
 2351 00ca 7B62     	 str r3,[r7,#36]
3519:../Dave/Generated/UCPROBE/lib_str.c ****     lead_char_0 = DEF_NO;
 2352              	 .loc 1 3519 0
 2353 00cc 0023     	 movs r3,#0
 2354 00ce FB74     	 strb r3,[r7,#19]
3520:../Dave/Generated/UCPROBE/lib_str.c **** 
3521:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid == DEF_NO) {
 2355              	 .loc 1 3521 0
 2356 00d0 BB7C     	 ldrb r3,[r7,#18]
 2357 00d2 002B     	 cmp r3,#0
 2358 00d4 49D1     	 bne .L153
3522:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_fmt     = nbr;
 2359              	 .loc 1 3522 0
 2360 00d6 7B68     	 ldr r3,[r7,#4]
 2361 00d8 FB61     	 str r3,[r7,#28]
3523:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_log     = nbr;
 2362              	 .loc 1 3523 0
 2363 00da 7B68     	 ldr r3,[r7,#4]
 2364 00dc BB61     	 str r3,[r7,#24]
3524:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_max = 1u;
 2365              	 .loc 1 3524 0
 2366 00de 0123     	 movs r3,#1
 2367 00e0 FB75     	 strb r3,[r7,#23]
3525:../Dave/Generated/UCPROBE/lib_str.c ****         while (nbr_log >= nbr_base) {                           /* While nbr base digs avail, ...  
 2368              	 .loc 1 3525 0
 2369 00e2 07E0     	 b .L154
 2370              	.L155:
3526:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 2371              	 .loc 1 3526 0
 2372 00e4 FB7D     	 ldrb r3,[r7,#23]
 2373 00e6 0133     	 adds r3,r3,#1
 2374 00e8 FB75     	 strb r3,[r7,#23]
3527:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_log /= nbr_base;
 2375              	 .loc 1 3527 0
 2376 00ea BB78     	 ldrb r3,[r7,#2]
 2377 00ec BA69     	 ldr r2,[r7,#24]
 2378 00ee B2FBF3F3 	 udiv r3,r2,r3
 2379 00f2 BB61     	 str r3,[r7,#24]
 2380              	.L154:
3525:../Dave/Generated/UCPROBE/lib_str.c ****         while (nbr_log >= nbr_base) {                           /* While nbr base digs avail, ...  
 2381              	 .loc 1 3525 0
 2382 00f4 BA78     	 ldrb r2,[r7,#2]
 2383 00f6 BB69     	 ldr r3,[r7,#24]
 2384 00f8 9A42     	 cmp r2,r3
 2385 00fa F3D9     	 bls .L155
3528:../Dave/Generated/UCPROBE/lib_str.c ****         }
3529:../Dave/Generated/UCPROBE/lib_str.c **** 
3530:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_neg_sign = (nbr_neg == DEF_YES) ? 1u : 0u;
 2386              	 .loc 1 3530 0
 2387 00fc 7B78     	 ldrb r3,[r7,#1]
 2388 00fe 012B     	 cmp r3,#1
 2389 0100 01D1     	 bne .L156
 2390              	 .loc 1 3530 0 is_stmt 0 discriminator 1
 2391 0102 0123     	 movs r3,#1
 2392 0104 00E0     	 b .L157
 2393              	.L156:
 2394              	 .loc 1 3530 0 discriminator 2
 2395 0106 0023     	 movs r3,#0
 2396              	.L157:
 2397              	 .loc 1 3530 0 discriminator 4
 2398 0108 7B73     	 strb r3,[r7,#13]
3531:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_dig >= (nbr_dig_max + nbr_neg_sign)) {          /* If req'd nbr digs >= (max nbr di
 2399              	 .loc 1 3531 0 is_stmt 1 discriminator 4
 2400 010a FA78     	 ldrb r2,[r7,#3]
 2401 010c F97D     	 ldrb r1,[r7,#23]
 2402 010e 7B7B     	 ldrb r3,[r7,#13]
 2403 0110 0B44     	 add r3,r3,r1
 2404 0112 9A42     	 cmp r2,r3
 2405 0114 27DB     	 blt .L158
3532:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_neg_fmtd = DEF_NO;
 2406              	 .loc 1 3532 0
 2407 0116 0023     	 movs r3,#0
 2408 0118 7B74     	 strb r3,[r7,#17]
3533:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig_min  = DEF_MIN(nbr_dig_max, nbr_dig);
 2409              	 .loc 1 3533 0
 2410 011a FA78     	 ldrb r2,[r7,#3]
 2411 011c FB7D     	 ldrb r3,[r7,#23]
 2412 011e 9342     	 cmp r3,r2
 2413 0120 28BF     	 it cs
 2414 0122 1346     	 movcs r3,r2
 2415 0124 3B73     	 strb r3,[r7,#12]
3534:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc nbr digs to fmt & nbr l
3535:../Dave/Generated/UCPROBE/lib_str.c ****             if (lead_char != (CPU_CHAR)'\0') {
 2416              	 .loc 1 3535 0
 2417 0126 97F83030 	 ldrb r3,[r7,#48]
 2418 012a 002B     	 cmp r3,#0
 2419 012c 09D0     	 beq .L159
3536:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 2420              	 .loc 1 3536 0
 2421 012e FB78     	 ldrb r3,[r7,#3]
 2422 0130 BB75     	 strb r3,[r7,#22]
3537:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_lead_char = nbr_dig     -
 2423              	 .loc 1 3537 0
 2424 0132 FA78     	 ldrb r2,[r7,#3]
 2425 0134 3B7B     	 ldrb r3,[r7,#12]
 2426 0136 D31A     	 subs r3,r2,r3
 2427 0138 DAB2     	 uxtb r2,r3
 2428 013a 7B7B     	 ldrb r3,[r7,#13]
 2429 013c D31A     	 subs r3,r2,r3
 2430 013e 7B75     	 strb r3,[r7,#21]
 2431 0140 05E0     	 b .L160
 2432              	.L159:
3538:../Dave/Generated/UCPROBE/lib_str.c ****                                 nbr_dig_min - nbr_neg_sign;
3539:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3540:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig_min + nbr_neg_sign;
 2433              	 .loc 1 3540 0
 2434 0142 3A7B     	 ldrb r2,[r7,#12]
 2435 0144 7B7B     	 ldrb r3,[r7,#13]
 2436 0146 1344     	 add r3,r3,r2
 2437 0148 BB75     	 strb r3,[r7,#22]
3541:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_lead_char = 0u;
 2438              	 .loc 1 3541 0
 2439 014a 0023     	 movs r3,#0
 2440 014c 7B75     	 strb r3,[r7,#21]
 2441              	.L160:
3542:../Dave/Generated/UCPROBE/lib_str.c ****             }
3543:../Dave/Generated/UCPROBE/lib_str.c **** 
3544:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_lead_char > 0) {                            /* If lead chars to fmt, ...       
 2442              	 .loc 1 3544 0
 2443 014e 7B7D     	 ldrb r3,[r7,#21]
 2444 0150 002B     	 cmp r3,#0
 2445 0152 0AD0     	 beq .L153
3545:../Dave/Generated/UCPROBE/lib_str.c ****                 lead_char_0 = (lead_char == '0')                /* ... chk if lead char a '0' dig (
 2446              	 .loc 1 3545 0
 2447 0154 97F83030 	 ldrb r3,[r7,#48]
 2448 0158 302B     	 cmp r3,#48
 2449 015a 01D1     	 bne .L162
 2450              	 .loc 1 3545 0 is_stmt 0 discriminator 1
 2451 015c 0123     	 movs r3,#1
 2452 015e 00E0     	 b .L163
 2453              	.L162:
 2454              	 .loc 1 3545 0 discriminator 2
 2455 0160 0023     	 movs r3,#0
 2456              	.L163:
 2457              	 .loc 1 3545 0 discriminator 4
 2458 0162 FB74     	 strb r3,[r7,#19]
 2459 0164 01E0     	 b .L153
 2460              	.L158:
3546:../Dave/Generated/UCPROBE/lib_str.c ****                             ?  DEF_YES : DEF_NO;
3547:../Dave/Generated/UCPROBE/lib_str.c ****             }
3548:../Dave/Generated/UCPROBE/lib_str.c **** 
3549:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
3550:../Dave/Generated/UCPROBE/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
 2461              	 .loc 1 3550 0 is_stmt 1
 2462 0166 0123     	 movs r3,#1
 2463 0168 BB74     	 strb r3,[r7,#18]
 2464              	.L153:
3551:../Dave/Generated/UCPROBE/lib_str.c ****         }
3552:../Dave/Generated/UCPROBE/lib_str.c ****     }
3553:../Dave/Generated/UCPROBE/lib_str.c **** 
3554:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {
 2465              	 .loc 1 3554 0
 2466 016a BB7C     	 ldrb r3,[r7,#18]
 2467 016c 002B     	 cmp r3,#0
 2468 016e 01D0     	 beq .L164
3555:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_dig_fmtd = nbr_dig;
 2469              	 .loc 1 3555 0
 2470 0170 FB78     	 ldrb r3,[r7,#3]
 2471 0172 BB75     	 strb r3,[r7,#22]
 2472              	.L164:
3556:../Dave/Generated/UCPROBE/lib_str.c ****     }
3557:../Dave/Generated/UCPROBE/lib_str.c **** 
3558:../Dave/Generated/UCPROBE/lib_str.c **** 
3559:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
3560:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt += nbr_dig_fmtd;                                   /* Start fmt @ least-sig dig.      
 2473              	 .loc 1 3560 0
 2474 0174 BB7D     	 ldrb r3,[r7,#22]
 2475 0176 7A6A     	 ldr r2,[r7,#36]
 2476 0178 1344     	 add r3,r3,r2
 2477 017a 7B62     	 str r3,[r7,#36]
3561:../Dave/Generated/UCPROBE/lib_str.c **** 
3562:../Dave/Generated/UCPROBE/lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
 2478              	 .loc 1 3562 0
 2479 017c 97F83830 	 ldrb r3,[r7,#56]
 2480 0180 002B     	 cmp r3,#0
 2481 0182 02D0     	 beq .L165
3563:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 2482              	 .loc 1 3563 0
 2483 0184 7B6A     	 ldr r3,[r7,#36]
 2484 0186 0022     	 movs r2,#0
 2485 0188 1A70     	 strb r2,[r3]
 2486              	.L165:
3564:../Dave/Generated/UCPROBE/lib_str.c ****     }
3565:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_fmt--;
 2487              	 .loc 1 3565 0
 2488 018a 7B6A     	 ldr r3,[r7,#36]
 2489 018c 013B     	 subs r3,r3,#1
 2490 018e 7B62     	 str r3,[r7,#36]
3566:../Dave/Generated/UCPROBE/lib_str.c **** 
3567:../Dave/Generated/UCPROBE/lib_str.c **** 
3568:../Dave/Generated/UCPROBE/lib_str.c ****     for (i = 0u; i < nbr_dig_fmtd; i++) {                       /* Fmt str for desired nbr digs :  
 2491              	 .loc 1 3568 0
 2492 0190 0023     	 movs r3,#0
 2493 0192 3B62     	 str r3,[r7,#32]
 2494 0194 61E0     	 b .L166
 2495              	.L178:
3569:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 2496              	 .loc 1 3569 0
 2497 0196 BB7C     	 ldrb r3,[r7,#18]
 2498 0198 002B     	 cmp r3,#0
 2499 019a 56D1     	 bne .L167
3570:../Dave/Generated/UCPROBE/lib_str.c ****             if ((nbr_fmt > 0) ||                                /* If fmt nbr > 0                  
 2500              	 .loc 1 3570 0
 2501 019c FB69     	 ldr r3,[r7,#28]
 2502 019e 002B     	 cmp r3,#0
 2503 01a0 02D1     	 bne .L168
 2504              	 .loc 1 3570 0 is_stmt 0 discriminator 1
 2505 01a2 3B6A     	 ldr r3,[r7,#32]
 2506 01a4 002B     	 cmp r3,#0
 2507 01a6 2BD1     	 bne .L169
 2508              	.L168:
3571:../Dave/Generated/UCPROBE/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
3572:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... calc & fmt dig val;         
3573:../Dave/Generated/UCPROBE/lib_str.c ****                 dig_val = (CPU_INT08U)(nbr_fmt % nbr_base);
 2509              	 .loc 1 3573 0 is_stmt 1
 2510 01a8 BA78     	 ldrb r2,[r7,#2]
 2511 01aa FB69     	 ldr r3,[r7,#28]
 2512 01ac B3FBF2F1 	 udiv r1,r3,r2
 2513 01b0 02FB01F2 	 mul r2,r2,r1
 2514 01b4 9B1A     	 subs r3,r3,r2
 2515 01b6 FB72     	 strb r3,[r7,#11]
3574:../Dave/Generated/UCPROBE/lib_str.c ****                 if (dig_val < 10u) {
 2516              	 .loc 1 3574 0
 2517 01b8 FB7A     	 ldrb r3,[r7,#11]
 2518 01ba 092B     	 cmp r3,#9
 2519 01bc 07D8     	 bhi .L170
3575:../Dave/Generated/UCPROBE/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 2520              	 .loc 1 3575 0
 2521 01be 7B6A     	 ldr r3,[r7,#36]
 2522 01c0 5A1E     	 subs r2,r3,#1
 2523 01c2 7A62     	 str r2,[r7,#36]
 2524 01c4 FA7A     	 ldrb r2,[r7,#11]
 2525 01c6 3032     	 adds r2,r2,#48
 2526 01c8 D2B2     	 uxtb r2,r2
 2527 01ca 1A70     	 strb r2,[r3]
 2528 01cc 12E0     	 b .L171
 2529              	.L170:
3576:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
3577:../Dave/Generated/UCPROBE/lib_str.c ****                     if (lower_case !=  DEF_YES) {
 2530              	 .loc 1 3577 0
 2531 01ce 97F83430 	 ldrb r3,[r7,#52]
 2532 01d2 012B     	 cmp r3,#1
 2533 01d4 07D0     	 beq .L172
3578:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 2534              	 .loc 1 3578 0
 2535 01d6 7B6A     	 ldr r3,[r7,#36]
 2536 01d8 5A1E     	 subs r2,r3,#1
 2537 01da 7A62     	 str r2,[r7,#36]
 2538 01dc FA7A     	 ldrb r2,[r7,#11]
 2539 01de 3732     	 adds r2,r2,#55
 2540 01e0 D2B2     	 uxtb r2,r2
 2541 01e2 1A70     	 strb r2,[r3]
 2542 01e4 06E0     	 b .L171
 2543              	.L172:
3579:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
3580:../Dave/Generated/UCPROBE/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'a');
 2544              	 .loc 1 3580 0
 2545 01e6 7B6A     	 ldr r3,[r7,#36]
 2546 01e8 5A1E     	 subs r2,r3,#1
 2547 01ea 7A62     	 str r2,[r7,#36]
 2548 01ec FA7A     	 ldrb r2,[r7,#11]
 2549 01ee 5732     	 adds r2,r2,#87
 2550 01f0 D2B2     	 uxtb r2,r2
 2551 01f2 1A70     	 strb r2,[r3]
 2552              	.L171:
3581:../Dave/Generated/UCPROBE/lib_str.c ****                     }
3582:../Dave/Generated/UCPROBE/lib_str.c ****                 }
3583:../Dave/Generated/UCPROBE/lib_str.c **** 
3584:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_fmt /= nbr_base;                            /* Shift to next more-sig dig.     
 2553              	 .loc 1 3584 0
 2554 01f4 BB78     	 ldrb r3,[r7,#2]
 2555 01f6 FA69     	 ldr r2,[r7,#28]
 2556 01f8 B2FBF3F3 	 udiv r3,r2,r3
 2557 01fc FB61     	 str r3,[r7,#28]
 2558 01fe 23E0     	 b .L173
 2559              	.L169:
3585:../Dave/Generated/UCPROBE/lib_str.c **** 
3586:../Dave/Generated/UCPROBE/lib_str.c ****             } else if ((nbr_neg      == DEF_YES)  &&            /* ... else if nbr neg             
 2560              	 .loc 1 3586 0
 2561 0200 7B78     	 ldrb r3,[r7,#1]
 2562 0202 012B     	 cmp r3,#1
 2563 0204 15D1     	 bne .L174
 2564              	 .loc 1 3586 0 is_stmt 0 discriminator 1
 2565 0206 FB7C     	 ldrb r3,[r7,#19]
 2566 0208 002B     	 cmp r3,#0
 2567 020a 02D1     	 bne .L175
3587:../Dave/Generated/UCPROBE/lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
 2568              	 .loc 1 3587 0 is_stmt 1
 2569 020c 7B7C     	 ldrb r3,[r7,#17]
 2570 020e 002B     	 cmp r3,#0
 2571 0210 07D0     	 beq .L176
 2572              	.L175:
3588:../Dave/Generated/UCPROBE/lib_str.c ****                        (nbr_neg_fmtd == DEF_NO )) ||            /* ... but neg sign NOT yet fmt'd  
 2573              	 .loc 1 3588 0
 2574 0212 FB7C     	 ldrb r3,[r7,#19]
 2575 0214 002B     	 cmp r3,#0
 2576 0216 0CD0     	 beq .L174
3589:../Dave/Generated/UCPROBE/lib_str.c ****                       ((lead_char_0  != DEF_NO )  &&            /* ... lead char is  a '0' dig     
3590:../Dave/Generated/UCPROBE/lib_str.c ****                        (i == (nbr_dig_fmtd - 1u))))) {          /* ... & on most-sig dig to fmt,   
 2577              	 .loc 1 3590 0
 2578 0218 BB7D     	 ldrb r3,[r7,#22]
 2579 021a 5A1E     	 subs r2,r3,#1
3589:../Dave/Generated/UCPROBE/lib_str.c ****                       ((lead_char_0  != DEF_NO )  &&            /* ... lead char is  a '0' dig     
 2580              	 .loc 1 3589 0
 2581 021c 3B6A     	 ldr r3,[r7,#32]
 2582 021e 9A42     	 cmp r2,r3
 2583 0220 07D1     	 bne .L174
 2584              	.L176:
3591:../Dave/Generated/UCPROBE/lib_str.c **** 
3592:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt--   = '-';                             /* ... prepend neg sign (see Note #
 2585              	 .loc 1 3592 0
 2586 0222 7B6A     	 ldr r3,[r7,#36]
 2587 0224 5A1E     	 subs r2,r3,#1
 2588 0226 7A62     	 str r2,[r7,#36]
 2589 0228 2D22     	 movs r2,#45
 2590 022a 1A70     	 strb r2,[r3]
3593:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 2591              	 .loc 1 3593 0
 2592 022c 0123     	 movs r3,#1
 2593 022e 7B74     	 strb r3,[r7,#17]
 2594 0230 0AE0     	 b .L173
 2595              	.L174:
3594:../Dave/Generated/UCPROBE/lib_str.c **** 
3595:../Dave/Generated/UCPROBE/lib_str.c ****             } else if (lead_char != (CPU_CHAR)'\0') {           /* ... else if avail,              
 2596              	 .loc 1 3595 0
 2597 0232 97F83030 	 ldrb r3,[r7,#48]
 2598 0236 002B     	 cmp r3,#0
 2599 0238 0CD0     	 beq .L177
3596:../Dave/Generated/UCPROBE/lib_str.c ****                *pstr_fmt-- = lead_char;                         /* ... fmt lead char.              
 2600              	 .loc 1 3596 0
 2601 023a 7B6A     	 ldr r3,[r7,#36]
 2602 023c 5A1E     	 subs r2,r3,#1
 2603 023e 7A62     	 str r2,[r7,#36]
 2604 0240 97F83020 	 ldrb r2,[r7,#48]
 2605 0244 1A70     	 strb r2,[r3]
 2606 0246 05E0     	 b .L177
 2607              	.L173:
 2608 0248 04E0     	 b .L177
 2609              	.L167:
3597:../Dave/Generated/UCPROBE/lib_str.c ****             }
3598:../Dave/Generated/UCPROBE/lib_str.c **** 
3599:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
3600:../Dave/Generated/UCPROBE/lib_str.c ****            *pstr_fmt-- = '?';
 2610              	 .loc 1 3600 0
 2611 024a 7B6A     	 ldr r3,[r7,#36]
 2612 024c 5A1E     	 subs r2,r3,#1
 2613 024e 7A62     	 str r2,[r7,#36]
 2614 0250 3F22     	 movs r2,#63
 2615 0252 1A70     	 strb r2,[r3]
 2616              	.L177:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 2617              	 .loc 1 3568 0 discriminator 2
 2618 0254 3B6A     	 ldr r3,[r7,#32]
 2619 0256 0133     	 adds r3,r3,#1
 2620 0258 3B62     	 str r3,[r7,#32]
 2621              	.L166:
3568:../Dave/Generated/UCPROBE/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 2622              	 .loc 1 3568 0 is_stmt 0 discriminator 1
 2623 025a BA7D     	 ldrb r2,[r7,#22]
 2624 025c 3B6A     	 ldr r3,[r7,#32]
 2625 025e 9A42     	 cmp r2,r3
 2626 0260 99D8     	 bhi .L178
3601:../Dave/Generated/UCPROBE/lib_str.c ****         }
3602:../Dave/Generated/UCPROBE/lib_str.c ****     }
3603:../Dave/Generated/UCPROBE/lib_str.c **** 
3604:../Dave/Generated/UCPROBE/lib_str.c **** 
3605:../Dave/Generated/UCPROBE/lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
 2627              	 .loc 1 3605 0 is_stmt 1
 2628 0262 BB7C     	 ldrb r3,[r7,#18]
 2629 0264 002B     	 cmp r3,#0
 2630 0266 01D0     	 beq .L179
3606:../Dave/Generated/UCPROBE/lib_str.c ****         return ((CPU_CHAR *)0);
 2631              	 .loc 1 3606 0
 2632 0268 0023     	 movs r3,#0
 2633 026a 00E0     	 b .L141
 2634              	.L179:
3607:../Dave/Generated/UCPROBE/lib_str.c ****     }
3608:../Dave/Generated/UCPROBE/lib_str.c **** 
3609:../Dave/Generated/UCPROBE/lib_str.c **** 
3610:../Dave/Generated/UCPROBE/lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
 2635              	 .loc 1 3610 0
 2636 026c FB6B     	 ldr r3,[r7,#60]
 2637              	.L141:
3611:../Dave/Generated/UCPROBE/lib_str.c **** }
 2638              	 .loc 1 3611 0
 2639 026e 1846     	 mov r0,r3
 2640 0270 2837     	 adds r7,r7,#40
 2641              	.LCFI119:
 2642              	 .cfi_def_cfa_offset 8
 2643 0272 BD46     	 mov sp,r7
 2644              	.LCFI120:
 2645              	 .cfi_def_cfa_register 13
 2646              	 
 2647 0274 80BD     	 pop {r7,pc}
 2648              	 .cfi_endproc
 2649              	.LFE22:
 2651 0276 00BF     	 .section .text.Str_ParseNbr_Int32,"ax",%progbits
 2652              	 .align 2
 2653              	 .thumb
 2654              	 .thumb_func
 2656              	Str_ParseNbr_Int32:
 2657              	.LFB23:
3612:../Dave/Generated/UCPROBE/lib_str.c **** 
3613:../Dave/Generated/UCPROBE/lib_str.c **** 
3614:../Dave/Generated/UCPROBE/lib_str.c **** /*
3615:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3616:../Dave/Generated/UCPROBE/lib_str.c **** *                                        Str_ParseNbr_Int32()
3617:../Dave/Generated/UCPROBE/lib_str.c **** *
3618:../Dave/Generated/UCPROBE/lib_str.c **** * Description : Parse 32-bit integer from string.
3619:../Dave/Generated/UCPROBE/lib_str.c **** *
3620:../Dave/Generated/UCPROBE/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Notes #1 & #2a).
3621:../Dave/Generated/UCPROBE/lib_str.c **** *
3622:../Dave/Generated/UCPROBE/lib_str.c **** *               pstr_next       Optional pointer to a variable to ... :
3623:../Dave/Generated/UCPROBE/lib_str.c **** *
3624:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) Return a pointer to first character following the integer s
3625:../Dave/Generated/UCPROBE/lib_str.c **** *                                           if NO error(s) [see Note #2a2B2];
3626:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) Return a pointer to 'pstr',
3627:../Dave/Generated/UCPROBE/lib_str.c **** *                                           otherwise      (see Note #2a2A2).
3628:../Dave/Generated/UCPROBE/lib_str.c **** *
3629:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_base        Base of number to parse (see Notes #2a1B1 & #2a2B1).
3630:../Dave/Generated/UCPROBE/lib_str.c **** *
3631:../Dave/Generated/UCPROBE/lib_str.c **** *               nbr_signed      Indicates whether number to parse is signed :
3632:../Dave/Generated/UCPROBE/lib_str.c **** *
3633:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO                  Number is unsigned.
3634:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                 Number is   signed.
3635:../Dave/Generated/UCPROBE/lib_str.c **** *
3636:../Dave/Generated/UCPROBE/lib_str.c **** *               pnbr_neg        Pointer to a variable to return if the parsed (signed) number is ne
3637:../Dave/Generated/UCPROBE/lib_str.c **** *
3638:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_NO                  Number is non-negative.
3639:../Dave/Generated/UCPROBE/lib_str.c **** *                                   DEF_YES                 Number is     negative.
3640:../Dave/Generated/UCPROBE/lib_str.c **** *
3641:../Dave/Generated/UCPROBE/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
3642:../Dave/Generated/UCPROBE/lib_str.c **** *
3643:../Dave/Generated/UCPROBE/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
3644:../Dave/Generated/UCPROBE/lib_str.c **** *
3645:../Dave/Generated/UCPROBE/lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
3646:../Dave/Generated/UCPROBE/lib_str.c **** *
3647:../Dave/Generated/UCPROBE/lib_str.c **** * Caller(s)   : Str_ParseNbr_Int32U(),
3648:../Dave/Generated/UCPROBE/lib_str.c **** *               Str_ParseNbr_Int32S().
3649:../Dave/Generated/UCPROBE/lib_str.c **** *
3650:../Dave/Generated/UCPROBE/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3651:../Dave/Generated/UCPROBE/lib_str.c **** *
3652:../Dave/Generated/UCPROBE/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3653:../Dave/Generated/UCPROBE/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3654:../Dave/Generated/UCPROBE/lib_str.c **** *                       to a type long ... representation" :
3655:../Dave/Generated/UCPROBE/lib_str.c **** *
3656:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3657:../Dave/Generated/UCPROBE/lib_str.c **** *
3658:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3659:../Dave/Generated/UCPROBE/lib_str.c **** *                                by isspace()]."
3660:../Dave/Generated/UCPROBE/lib_str.c **** *
3661:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3662:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string, starting with the first non-white-space characte
3663:../Dave/Generated/UCPROBE/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3664:../Dave/Generated/UCPROBE/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3665:../Dave/Generated/UCPROBE/lib_str.c **** *
3666:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3667:../Dave/Generated/UCPROBE/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3668:../Dave/Generated/UCPROBE/lib_str.c **** *
3669:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3670:../Dave/Generated/UCPROBE/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3671:../Dave/Generated/UCPROBE/lib_str.c **** *                                        hexadecimal constant" :
3672:../Dave/Generated/UCPROBE/lib_str.c **** *
3673:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3674:../Dave/Generated/UCPROBE/lib_str.c **** *                                            sequence of decimal digits."
3675:../Dave/Generated/UCPROBE/lib_str.c **** *
3676:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3677:../Dave/Generated/UCPROBE/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3678:../Dave/Generated/UCPROBE/lib_str.c **** *
3679:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3680:../Dave/Generated/UCPROBE/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3681:../Dave/Generated/UCPROBE/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3682:../Dave/Generated/UCPROBE/lib_str.c **** *
3683:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3684:../Dave/Generated/UCPROBE/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3685:../Dave/Generated/UCPROBE/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3686:../Dave/Generated/UCPROBE/lib_str.c **** *
3687:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3688:../Dave/Generated/UCPROBE/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3689:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3690:../Dave/Generated/UCPROBE/lib_str.c **** *                                                are permitted."
3691:../Dave/Generated/UCPROBE/lib_str.c **** *
3692:../Dave/Generated/UCPROBE/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3693:../Dave/Generated/UCPROBE/lib_str.c **** *                                               '0X' may optionally precede the sequence of letters
3694:../Dave/Generated/UCPROBE/lib_str.c **** *
3695:../Dave/Generated/UCPROBE/lib_str.c **** *                                           (B) Although NO specification states that "if the value
3696:../Dave/Generated/UCPROBE/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3697:../Dave/Generated/UCPROBE/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3698:../Dave/Generated/UCPROBE/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3699:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3700:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3701:../Dave/Generated/UCPROBE/lib_str.c **** *
3702:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (a) It does NOT seem reasonable to parse & convert a negative n
3703:../Dave/Generated/UCPROBE/lib_str.c **** *                                       integer string into an unsigned integer.  However, a negati
3704:../Dave/Generated/UCPROBE/lib_str.c **** *                                       for an unsigned integer will automatically be parsed as an 
3705:../Dave/Generated/UCPROBE/lib_str.c **** *                                       character (see Note #2aC1).
3706:../Dave/Generated/UCPROBE/lib_str.c **** *
3707:../Dave/Generated/UCPROBE/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3708:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3709:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3710:../Dave/Generated/UCPROBE/lib_str.c **** *
3711:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3712:../Dave/Generated/UCPROBE/lib_str.c **** *
3713:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3714:../Dave/Generated/UCPROBE/lib_str.c **** *
3715:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "no conversion is performed"; ...
3716:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3717:../Dave/Generated/UCPROBE/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3718:../Dave/Generated/UCPROBE/lib_str.c **** *
3719:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3720:../Dave/Generated/UCPROBE/lib_str.c **** *
3721:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3722:../Dave/Generated/UCPROBE/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3723:../Dave/Generated/UCPROBE/lib_str.c **** *
3724:../Dave/Generated/UCPROBE/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3725:../Dave/Generated/UCPROBE/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3726:../Dave/Generated/UCPROBE/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3727:../Dave/Generated/UCPROBE/lib_str.c **** *
3728:../Dave/Generated/UCPROBE/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3729:../Dave/Generated/UCPROBE/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3730:../Dave/Generated/UCPROBE/lib_str.c **** *                                   pointer."
3731:../Dave/Generated/UCPROBE/lib_str.c **** *
3732:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3733:../Dave/Generated/UCPROBE/lib_str.c **** *
3734:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3735:../Dave/Generated/UCPROBE/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3736:../Dave/Generated/UCPROBE/lib_str.c **** *                                    [or] {LONG_MAX} ... shall be returned."
3737:../Dave/Generated/UCPROBE/lib_str.c **** *
3738:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3739:../Dave/Generated/UCPROBE/lib_str.c **** *
3740:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3741:../Dave/Generated/UCPROBE/lib_str.c **** *                           shall fail if" :
3742:../Dave/Generated/UCPROBE/lib_str.c **** *
3743:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3744:../Dave/Generated/UCPROBE/lib_str.c **** *
3745:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3746:../Dave/Generated/UCPROBE/lib_str.c **** *
3747:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3748:../Dave/Generated/UCPROBE/lib_str.c **** *                           may fail if" :
3749:../Dave/Generated/UCPROBE/lib_str.c **** *
3750:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3751:../Dave/Generated/UCPROBE/lib_str.c **** *$PAGE*
3752:../Dave/Generated/UCPROBE/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3753:../Dave/Generated/UCPROBE/lib_str.c **** *
3754:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Valid parse string integer :
3755:../Dave/Generated/UCPROBE/lib_str.c **** *
3756:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE xyz"
3757:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3758:../Dave/Generated/UCPROBE/lib_str.c **** *
3759:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = 703710
3760:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = " xyz"
3761:../Dave/Generated/UCPROBE/lib_str.c **** *
3762:../Dave/Generated/UCPROBE/lib_str.c **** *
3763:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) Invalid parse string integer :
3764:../Dave/Generated/UCPROBE/lib_str.c **** *
3765:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     ABCDE"
3766:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3767:../Dave/Generated/UCPROBE/lib_str.c **** *
3768:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3769:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3770:../Dave/Generated/UCPROBE/lib_str.c **** *
3771:../Dave/Generated/UCPROBE/lib_str.c **** *
3772:../Dave/Generated/UCPROBE/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3773:../Dave/Generated/UCPROBE/lib_str.c **** *
3774:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3775:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 16
3776:../Dave/Generated/UCPROBE/lib_str.c **** *
3777:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3778:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3779:../Dave/Generated/UCPROBE/lib_str.c **** *
3780:../Dave/Generated/UCPROBE/lib_str.c **** *
3781:../Dave/Generated/UCPROBE/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3782:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid hexadecimal characters) :
3783:../Dave/Generated/UCPROBE/lib_str.c **** *
3784:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0xGABCDE"
3785:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3786:../Dave/Generated/UCPROBE/lib_str.c **** *
3787:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3788:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "xGABCDE"
3789:../Dave/Generated/UCPROBE/lib_str.c **** *
3790:../Dave/Generated/UCPROBE/lib_str.c **** *
3791:../Dave/Generated/UCPROBE/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3792:../Dave/Generated/UCPROBE/lib_str.c **** *                               following invalid octal       characters) :
3793:../Dave/Generated/UCPROBE/lib_str.c **** *
3794:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "     0GABCDE"
3795:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  =  0
3796:../Dave/Generated/UCPROBE/lib_str.c **** *
3797:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       =  0
3798:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "GABCDE"
3799:../Dave/Generated/UCPROBE/lib_str.c **** *
3800:../Dave/Generated/UCPROBE/lib_str.c **** *
3801:../Dave/Generated/UCPROBE/lib_str.c **** *                   (f) Parse string integer overflow :
3802:../Dave/Generated/UCPROBE/lib_str.c **** *
3803:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3804:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3805:../Dave/Generated/UCPROBE/lib_str.c **** *
3806:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
3807:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3808:../Dave/Generated/UCPROBE/lib_str.c **** *
3809:../Dave/Generated/UCPROBE/lib_str.c **** *
3810:../Dave/Generated/UCPROBE/lib_str.c **** *                   (g) Parse string integer underflow :
3811:../Dave/Generated/UCPROBE/lib_str.c **** *
3812:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3813:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr_base  = 10
3814:../Dave/Generated/UCPROBE/lib_str.c **** *
3815:../Dave/Generated/UCPROBE/lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3816:../Dave/Generated/UCPROBE/lib_str.c **** *                           pstr_next = "*123456"
3817:../Dave/Generated/UCPROBE/lib_str.c **** *
3818:../Dave/Generated/UCPROBE/lib_str.c **** *
3819:../Dave/Generated/UCPROBE/lib_str.c **** *               (4) String parse terminates when :
3820:../Dave/Generated/UCPROBE/lib_str.c **** *
3821:../Dave/Generated/UCPROBE/lib_str.c **** *                   (a) Base passed an invalid base (see Note #2a1B1b).
3822:../Dave/Generated/UCPROBE/lib_str.c **** *                       (1) No conversion performed; 0 returned.
3823:../Dave/Generated/UCPROBE/lib_str.c **** *
3824:../Dave/Generated/UCPROBE/lib_str.c **** *                   (b) (1) Parse string passed a NULL pointer OR empty integer sequence (see Note 
3825:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) No conversion performed; 0 returned.
3826:../Dave/Generated/UCPROBE/lib_str.c **** *
3827:../Dave/Generated/UCPROBE/lib_str.c **** *                       (2) Invalid parse string character found (see Note #2a1C).
3828:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Parsed integer returned.
3829:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) 'pstr_next' points to invalid character.
3830:../Dave/Generated/UCPROBE/lib_str.c **** *
3831:../Dave/Generated/UCPROBE/lib_str.c **** *                       (3) Entire  parse string converted (see Note #2a2B).
3832:../Dave/Generated/UCPROBE/lib_str.c **** *                           (A) Parsed integer returned.
3833:../Dave/Generated/UCPROBE/lib_str.c **** *                           (B) 'pstr_next' points to terminating NULL character.
3834:../Dave/Generated/UCPROBE/lib_str.c **** *
3835:../Dave/Generated/UCPROBE/lib_str.c **** *               (5) Pointers to variables that return values MUST be initialized PRIOR to all other
3836:../Dave/Generated/UCPROBE/lib_str.c **** *                   validation or function handling in case of any error(s).
3837:../Dave/Generated/UCPROBE/lib_str.c **** ***************************************************************************************************
3838:../Dave/Generated/UCPROBE/lib_str.c **** */
3839:../Dave/Generated/UCPROBE/lib_str.c **** 
3840:../Dave/Generated/UCPROBE/lib_str.c **** static  CPU_INT32U  Str_ParseNbr_Int32 (const  CPU_CHAR      *pstr,
3841:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_CHAR     **pstr_next,
3842:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_INT08U     nbr_base,
3843:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
3844:../Dave/Generated/UCPROBE/lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg)
3845:../Dave/Generated/UCPROBE/lib_str.c **** {
 2658              	 .loc 1 3845 0
 2659              	 .cfi_startproc
 2660              	 
 2661              	 
 2662 0000 80B5     	 push {r7,lr}
 2663              	.LCFI121:
 2664              	 .cfi_def_cfa_offset 8
 2665              	 .cfi_offset 7,-8
 2666              	 .cfi_offset 14,-4
 2667 0002 8EB0     	 sub sp,sp,#56
 2668              	.LCFI122:
 2669              	 .cfi_def_cfa_offset 64
 2670 0004 00AF     	 add r7,sp,#0
 2671              	.LCFI123:
 2672              	 .cfi_def_cfa_register 7
 2673 0006 F860     	 str r0,[r7,#12]
 2674 0008 B960     	 str r1,[r7,#8]
 2675 000a 1146     	 mov r1,r2
 2676 000c 1A46     	 mov r2,r3
 2677 000e 0B46     	 mov r3,r1
 2678 0010 FB71     	 strb r3,[r7,#7]
 2679 0012 1346     	 mov r3,r2
 2680 0014 BB71     	 strb r3,[r7,#6]
3846:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_parse;
3847:../Dave/Generated/UCPROBE/lib_str.c ****     const  CPU_CHAR     *pstr_parse_nbr;
3848:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR     *pstr_parse_unused;
3849:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_CHAR      parse_char;
3850:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT08U    parse_dig;
3851:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_INT32U    nbr;
3852:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_neg_unused;
3853:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_dig;
3854:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_alpha;
3855:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_hex;
3856:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   nbr_hex_lower;
3857:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   whitespace;
3858:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   neg;
3859:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   ovf;
3860:../Dave/Generated/UCPROBE/lib_str.c ****            CPU_BOOLEAN   done;
3861:../Dave/Generated/UCPROBE/lib_str.c **** 
3862:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* --------------- VALIDATE PARSE A
3863:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_next == (CPU_CHAR **) 0) {                         /* If NOT avail, ...               
 2681              	 .loc 1 3863 0
 2682 0016 BB68     	 ldr r3,[r7,#8]
 2683 0018 002B     	 cmp r3,#0
 2684 001a 02D1     	 bne .L181
3864:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_next  = (CPU_CHAR **)&pstr_parse_unused;           /* ... re-cfg NULL rtn ptr to unuse
 2685              	 .loc 1 3864 0
 2686 001c 07F11803 	 add r3,r7,#24
 2687 0020 BB60     	 str r3,[r7,#8]
 2688              	.L181:
3865:../Dave/Generated/UCPROBE/lib_str.c ****        (void)&pstr_parse_unused;                                /* Prevent possible 'variable unuse
3866:../Dave/Generated/UCPROBE/lib_str.c ****     }
3867:../Dave/Generated/UCPROBE/lib_str.c ****    *pstr_next = (CPU_CHAR *)pstr;                               /* Init rtn str for err (see Note #
 2689              	 .loc 1 3867 0
 2690 0022 BB68     	 ldr r3,[r7,#8]
 2691 0024 FA68     	 ldr r2,[r7,#12]
 2692 0026 1A60     	 str r2,[r3]
3868:../Dave/Generated/UCPROBE/lib_str.c **** 
3869:../Dave/Generated/UCPROBE/lib_str.c ****     if (pnbr_neg == (CPU_BOOLEAN *) 0) {                        /* If NOT avail, ...               
 2693              	 .loc 1 3869 0
 2694 0028 3B6C     	 ldr r3,[r7,#64]
 2695 002a 002B     	 cmp r3,#0
 2696 002c 02D1     	 bne .L182
3870:../Dave/Generated/UCPROBE/lib_str.c ****         pnbr_neg  = (CPU_BOOLEAN *)&nbr_neg_unused;             /* ... re-cfg NULL rtn ptr to unuse
 2697              	 .loc 1 3870 0
 2698 002e 07F11703 	 add r3,r7,#23
 2699 0032 3B64     	 str r3,[r7,#64]
 2700              	.L182:
3871:../Dave/Generated/UCPROBE/lib_str.c ****        (void)&nbr_neg_unused;                                   /* Prevent possible 'variable unuse
3872:../Dave/Generated/UCPROBE/lib_str.c ****     }
3873:../Dave/Generated/UCPROBE/lib_str.c ****    *pnbr_neg = DEF_NO;                                          /* Init nbr neg for err (see Note #
 2701              	 .loc 1 3873 0
 2702 0034 3B6C     	 ldr r3,[r7,#64]
 2703 0036 0022     	 movs r2,#0
 2704 0038 1A70     	 strb r2,[r3]
3874:../Dave/Generated/UCPROBE/lib_str.c **** 
3875:../Dave/Generated/UCPROBE/lib_str.c **** 
3876:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn zero if str ptr NULL (see No
 2705              	 .loc 1 3876 0
 2706 003a FB68     	 ldr r3,[r7,#12]
 2707 003c 002B     	 cmp r3,#0
 2708 003e 01D1     	 bne .L183
3877:../Dave/Generated/UCPROBE/lib_str.c ****         return (0u);
 2709              	 .loc 1 3877 0
 2710 0040 0023     	 movs r3,#0
 2711 0042 2BE1     	 b .L224
 2712              	.L183:
3878:../Dave/Generated/UCPROBE/lib_str.c ****     }
3879:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* Rtn zero if invalid base (see No
3880:../Dave/Generated/UCPROBE/lib_str.c ****     if ((nbr_base == 1u) ||
 2713              	 .loc 1 3880 0
 2714 0044 FB79     	 ldrb r3,[r7,#7]
 2715 0046 012B     	 cmp r3,#1
 2716 0048 02D0     	 beq .L185
 2717              	 .loc 1 3880 0 is_stmt 0 discriminator 1
 2718 004a FB79     	 ldrb r3,[r7,#7]
 2719 004c 242B     	 cmp r3,#36
 2720 004e 01D9     	 bls .L186
 2721              	.L185:
3881:../Dave/Generated/UCPROBE/lib_str.c ****         (nbr_base > 36u)) {
3882:../Dave/Generated/UCPROBE/lib_str.c ****         return (0u);
 2722              	 .loc 1 3882 0 is_stmt 1
 2723 0050 0023     	 movs r3,#0
 2724 0052 23E1     	 b .L224
 2725              	.L186:
3883:../Dave/Generated/UCPROBE/lib_str.c ****     }
3884:../Dave/Generated/UCPROBE/lib_str.c **** 
3885:../Dave/Generated/UCPROBE/lib_str.c **** 
3886:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------- IGNORE PRECEDING C
3887:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_parse = pstr;                                          /* Save ptr to init'l str for err (
 2726              	 .loc 1 3887 0
 2727 0054 FB68     	 ldr r3,[r7,#12]
 2728 0056 7B63     	 str r3,[r7,#52]
3888:../Dave/Generated/UCPROBE/lib_str.c **** 
3889:../Dave/Generated/UCPROBE/lib_str.c ****     whitespace = ASCII_IsSpace(*pstr_parse);
 2729              	 .loc 1 3889 0
 2730 0058 7B6B     	 ldr r3,[r7,#52]
 2731 005a 1B78     	 ldrb r3,[r3]
 2732 005c 1846     	 mov r0,r3
 2733 005e FFF7FEFF 	 bl ASCII_IsSpace
 2734 0062 0346     	 mov r3,r0
 2735 0064 87F82B30 	 strb r3,[r7,#43]
3890:../Dave/Generated/UCPROBE/lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
 2736              	 .loc 1 3890 0
 2737 0068 0AE0     	 b .L187
 2738              	.L188:
3891:../Dave/Generated/UCPROBE/lib_str.c ****         pstr_parse++;
 2739              	 .loc 1 3891 0
 2740 006a 7B6B     	 ldr r3,[r7,#52]
 2741 006c 0133     	 adds r3,r3,#1
 2742 006e 7B63     	 str r3,[r7,#52]
3892:../Dave/Generated/UCPROBE/lib_str.c ****         whitespace = ASCII_IsSpace(*pstr_parse);
 2743              	 .loc 1 3892 0
 2744 0070 7B6B     	 ldr r3,[r7,#52]
 2745 0072 1B78     	 ldrb r3,[r3]
 2746 0074 1846     	 mov r0,r3
 2747 0076 FFF7FEFF 	 bl ASCII_IsSpace
 2748 007a 0346     	 mov r3,r0
 2749 007c 87F82B30 	 strb r3,[r7,#43]
 2750              	.L187:
3890:../Dave/Generated/UCPROBE/lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
 2751              	 .loc 1 3890 0
 2752 0080 97F82B30 	 ldrb r3,[r7,#43]
 2753 0084 012B     	 cmp r3,#1
 2754 0086 F0D0     	 beq .L188
3893:../Dave/Generated/UCPROBE/lib_str.c ****     }
3894:../Dave/Generated/UCPROBE/lib_str.c **** 
3895:../Dave/Generated/UCPROBE/lib_str.c ****     switch (*pstr_parse) {
 2755              	 .loc 1 3895 0
 2756 0088 7B6B     	 ldr r3,[r7,#52]
 2757 008a 1B78     	 ldrb r3,[r3]
 2758 008c 2B2B     	 cmp r3,#43
 2759 008e 02D0     	 beq .L190
 2760 0090 2D2B     	 cmp r3,#45
 2761 0092 07D0     	 beq .L191
 2762 0094 10E0     	 b .L225
 2763              	.L190:
3896:../Dave/Generated/UCPROBE/lib_str.c ****         case '+':                                               /* Ignore   pos sign (see Note #2a1
3897:../Dave/Generated/UCPROBE/lib_str.c ****              pstr_parse++;
 2764              	 .loc 1 3897 0
 2765 0096 7B6B     	 ldr r3,[r7,#52]
 2766 0098 0133     	 adds r3,r3,#1
 2767 009a 7B63     	 str r3,[r7,#52]
3898:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_NO;
 2768              	 .loc 1 3898 0
 2769 009c 0023     	 movs r3,#0
 2770 009e 87F82A30 	 strb r3,[r7,#42]
3899:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 2771              	 .loc 1 3899 0
 2772 00a2 0DE0     	 b .L192
 2773              	.L191:
3900:../Dave/Generated/UCPROBE/lib_str.c **** 
3901:../Dave/Generated/UCPROBE/lib_str.c **** 
3902:../Dave/Generated/UCPROBE/lib_str.c ****         case '-':                                               /* Validate neg sign (see Note #2a1
3903:../Dave/Generated/UCPROBE/lib_str.c ****              if (nbr_signed == DEF_YES) {
 2774              	 .loc 1 3903 0
 2775 00a4 BB79     	 ldrb r3,[r7,#6]
 2776 00a6 012B     	 cmp r3,#1
 2777 00a8 02D1     	 bne .L193
3904:../Dave/Generated/UCPROBE/lib_str.c ****                  pstr_parse++;
 2778              	 .loc 1 3904 0
 2779 00aa 7B6B     	 ldr r3,[r7,#52]
 2780 00ac 0133     	 adds r3,r3,#1
 2781 00ae 7B63     	 str r3,[r7,#52]
 2782              	.L193:
3905:../Dave/Generated/UCPROBE/lib_str.c ****              }
3906:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_YES;
 2783              	 .loc 1 3906 0
 2784 00b0 0123     	 movs r3,#1
 2785 00b2 87F82A30 	 strb r3,[r7,#42]
3907:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 2786              	 .loc 1 3907 0
 2787 00b6 03E0     	 b .L192
 2788              	.L225:
3908:../Dave/Generated/UCPROBE/lib_str.c **** 
3909:../Dave/Generated/UCPROBE/lib_str.c **** 
3910:../Dave/Generated/UCPROBE/lib_str.c ****         default:
3911:../Dave/Generated/UCPROBE/lib_str.c ****              neg = DEF_NO;
 2789              	 .loc 1 3911 0
 2790 00b8 0023     	 movs r3,#0
 2791 00ba 87F82A30 	 strb r3,[r7,#42]
3912:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 2792              	 .loc 1 3912 0
 2793 00be 00BF     	 nop
 2794              	.L192:
3913:../Dave/Generated/UCPROBE/lib_str.c ****     }
3914:../Dave/Generated/UCPROBE/lib_str.c **** 
3915:../Dave/Generated/UCPROBE/lib_str.c **** 
3916:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* --------- IGNORE NBR BASE PRECED
3917:../Dave/Generated/UCPROBE/lib_str.c ****     pstr_parse_nbr = pstr_parse;                                /* Save ptr to str's nbr (see Note 
 2795              	 .loc 1 3917 0
 2796 00c0 7B6B     	 ldr r3,[r7,#52]
 2797 00c2 7B62     	 str r3,[r7,#36]
3918:../Dave/Generated/UCPROBE/lib_str.c **** 
3919:../Dave/Generated/UCPROBE/lib_str.c ****     switch (nbr_base) {
 2798              	 .loc 1 3919 0
 2799 00c4 FB79     	 ldrb r3,[r7,#7]
 2800 00c6 082B     	 cmp r3,#8
 2801 00c8 2FD0     	 beq .L195
 2802 00ca 102B     	 cmp r3,#16
 2803 00cc 36D0     	 beq .L196
 2804 00ce 002B     	 cmp r3,#0
 2805 00d0 00D0     	 beq .L197
3920:../Dave/Generated/UCPROBE/lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
3921:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3922:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3923:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
3924:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
3925:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'X':
3926:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_base   = 16u;                    /* ... set nbr base = 16    (see No
3927:../Dave/Generated/UCPROBE/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
3928:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
3929:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
3930:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
3931:../Dave/Generated/UCPROBE/lib_str.c ****                            }
3932:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3933:../Dave/Generated/UCPROBE/lib_str.c **** 
3934:../Dave/Generated/UCPROBE/lib_str.c **** 
3935:../Dave/Generated/UCPROBE/lib_str.c ****                       default:                                  /* For '0'  prefix, ...            
3936:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_base =  8u;                      /* ... set nbr base =  8    (see No
3937:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3938:../Dave/Generated/UCPROBE/lib_str.c ****                   }
3939:../Dave/Generated/UCPROBE/lib_str.c **** 
3940:../Dave/Generated/UCPROBE/lib_str.c ****              } else {                                           /* For non-'0' prefix, ...         
3941:../Dave/Generated/UCPROBE/lib_str.c ****                  nbr_base = 10u;                                /* ... set nbr base = 10    (see No
3942:../Dave/Generated/UCPROBE/lib_str.c ****              }
3943:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3944:../Dave/Generated/UCPROBE/lib_str.c **** 
3945:../Dave/Generated/UCPROBE/lib_str.c **** 
3946:../Dave/Generated/UCPROBE/lib_str.c ****         case  8u:                                               /* See Note #2a1B1a2.              
3947:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3948:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3949:../Dave/Generated/UCPROBE/lib_str.c ****              }
3950:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3951:../Dave/Generated/UCPROBE/lib_str.c **** 
3952:../Dave/Generated/UCPROBE/lib_str.c **** 
3953:../Dave/Generated/UCPROBE/lib_str.c ****         case 16u:                                               /* See Note #2a1B1a3.              
3954:../Dave/Generated/UCPROBE/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
3955:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
3956:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
3957:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':
3958:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'X':
3959:../Dave/Generated/UCPROBE/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
3960:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
3961:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
3962:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
3963:../Dave/Generated/UCPROBE/lib_str.c ****                            }
3964:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3965:../Dave/Generated/UCPROBE/lib_str.c **** 
3966:../Dave/Generated/UCPROBE/lib_str.c **** 
3967:../Dave/Generated/UCPROBE/lib_str.c ****                       default:
3968:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
3969:../Dave/Generated/UCPROBE/lib_str.c ****                   }
3970:../Dave/Generated/UCPROBE/lib_str.c ****              }
3971:../Dave/Generated/UCPROBE/lib_str.c ****              break;
3972:../Dave/Generated/UCPROBE/lib_str.c **** 
3973:../Dave/Generated/UCPROBE/lib_str.c **** 
3974:../Dave/Generated/UCPROBE/lib_str.c ****         default:                                                /* See Note #2a1B1b.               
3975:../Dave/Generated/UCPROBE/lib_str.c ****              break;
 2806              	 .loc 1 3975 0
 2807 00d2 57E0     	 b .L204
 2808              	.L197:
3921:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 2809              	 .loc 1 3921 0
 2810 00d4 7B6B     	 ldr r3,[r7,#52]
 2811 00d6 1B78     	 ldrb r3,[r3]
 2812 00d8 302B     	 cmp r3,#48
 2813 00da 23D1     	 bne .L198
3922:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
 2814              	 .loc 1 3922 0
 2815 00dc 7B6B     	 ldr r3,[r7,#52]
 2816 00de 0133     	 adds r3,r3,#1
 2817 00e0 7B63     	 str r3,[r7,#52]
3923:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
 2818              	 .loc 1 3923 0
 2819 00e2 7B6B     	 ldr r3,[r7,#52]
 2820 00e4 1B78     	 ldrb r3,[r3]
 2821 00e6 582B     	 cmp r3,#88
 2822 00e8 01D0     	 beq .L200
 2823 00ea 782B     	 cmp r3,#120
 2824 00ec 16D1     	 bne .L226
 2825              	.L200:
3926:../Dave/Generated/UCPROBE/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
 2826              	 .loc 1 3926 0
 2827 00ee 1023     	 movs r3,#16
 2828 00f0 FB71     	 strb r3,[r7,#7]
3927:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
 2829              	 .loc 1 3927 0
 2830 00f2 7B6B     	 ldr r3,[r7,#52]
 2831 00f4 5B78     	 ldrb r3,[r3,#1]
 2832 00f6 87F82330 	 strb r3,[r7,#35]
3928:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 2833              	 .loc 1 3928 0
 2834 00fa 97F82330 	 ldrb r3,[r7,#35]
 2835 00fe 1846     	 mov r0,r3
 2836 0100 FFF7FEFF 	 bl ASCII_IsDigHex
 2837 0104 0346     	 mov r3,r0
 2838 0106 87F82230 	 strb r3,[r7,#34]
3929:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 2839              	 .loc 1 3929 0
 2840 010a 97F82230 	 ldrb r3,[r7,#34]
 2841 010e 012B     	 cmp r3,#1
 2842 0110 03D1     	 bne .L201
3930:../Dave/Generated/UCPROBE/lib_str.c ****                            }
 2843              	 .loc 1 3930 0
 2844 0112 7B6B     	 ldr r3,[r7,#52]
 2845 0114 0133     	 adds r3,r3,#1
 2846 0116 7B63     	 str r3,[r7,#52]
3932:../Dave/Generated/UCPROBE/lib_str.c **** 
 2847              	 .loc 1 3932 0
 2848 0118 03E0     	 b .L202
 2849              	.L201:
 2850 011a 02E0     	 b .L202
 2851              	.L226:
3936:../Dave/Generated/UCPROBE/lib_str.c ****                            break;
 2852              	 .loc 1 3936 0
 2853 011c 0823     	 movs r3,#8
 2854 011e FB71     	 strb r3,[r7,#7]
3937:../Dave/Generated/UCPROBE/lib_str.c ****                   }
 2855              	 .loc 1 3937 0
 2856 0120 00BF     	 nop
 2857              	.L202:
3943:../Dave/Generated/UCPROBE/lib_str.c **** 
 2858              	 .loc 1 3943 0 discriminator 1
 2859 0122 2FE0     	 b .L204
 2860              	.L198:
3941:../Dave/Generated/UCPROBE/lib_str.c ****              }
 2861              	 .loc 1 3941 0
 2862 0124 0A23     	 movs r3,#10
 2863 0126 FB71     	 strb r3,[r7,#7]
3943:../Dave/Generated/UCPROBE/lib_str.c **** 
 2864              	 .loc 1 3943 0
 2865 0128 2CE0     	 b .L204
 2866              	.L195:
3947:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 2867              	 .loc 1 3947 0
 2868 012a 7B6B     	 ldr r3,[r7,#52]
 2869 012c 1B78     	 ldrb r3,[r3]
 2870 012e 302B     	 cmp r3,#48
 2871 0130 03D1     	 bne .L205
3948:../Dave/Generated/UCPROBE/lib_str.c ****              }
 2872              	 .loc 1 3948 0
 2873 0132 7B6B     	 ldr r3,[r7,#52]
 2874 0134 0133     	 adds r3,r3,#1
 2875 0136 7B63     	 str r3,[r7,#52]
3950:../Dave/Generated/UCPROBE/lib_str.c **** 
 2876              	 .loc 1 3950 0
 2877 0138 24E0     	 b .L204
 2878              	.L205:
 2879 013a 23E0     	 b .L204
 2880              	.L196:
3954:../Dave/Generated/UCPROBE/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 2881              	 .loc 1 3954 0
 2882 013c 7B6B     	 ldr r3,[r7,#52]
 2883 013e 1B78     	 ldrb r3,[r3]
 2884 0140 302B     	 cmp r3,#48
 2885 0142 1ED1     	 bne .L206
3955:../Dave/Generated/UCPROBE/lib_str.c ****                   switch (*pstr_parse) {
 2886              	 .loc 1 3955 0
 2887 0144 7B6B     	 ldr r3,[r7,#52]
 2888 0146 0133     	 adds r3,r3,#1
 2889 0148 7B63     	 str r3,[r7,#52]
3956:../Dave/Generated/UCPROBE/lib_str.c ****                       case 'x':
 2890              	 .loc 1 3956 0
 2891 014a 7B6B     	 ldr r3,[r7,#52]
 2892 014c 1B78     	 ldrb r3,[r3]
 2893 014e 582B     	 cmp r3,#88
 2894 0150 02D0     	 beq .L208
 2895 0152 782B     	 cmp r3,#120
 2896 0154 00D0     	 beq .L208
3968:../Dave/Generated/UCPROBE/lib_str.c ****                   }
 2897              	 .loc 1 3968 0
 2898 0156 14E0     	 b .L206
 2899              	.L208:
3959:../Dave/Generated/UCPROBE/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
 2900              	 .loc 1 3959 0
 2901 0158 7B6B     	 ldr r3,[r7,#52]
 2902 015a 5B78     	 ldrb r3,[r3,#1]
 2903 015c 87F82330 	 strb r3,[r7,#35]
3960:../Dave/Generated/UCPROBE/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 2904              	 .loc 1 3960 0
 2905 0160 97F82330 	 ldrb r3,[r7,#35]
 2906 0164 1846     	 mov r0,r3
 2907 0166 FFF7FEFF 	 bl ASCII_IsDigHex
 2908 016a 0346     	 mov r3,r0
 2909 016c 87F82230 	 strb r3,[r7,#34]
3961:../Dave/Generated/UCPROBE/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 2910              	 .loc 1 3961 0
 2911 0170 97F82230 	 ldrb r3,[r7,#34]
 2912 0174 012B     	 cmp r3,#1
 2913 0176 03D1     	 bne .L209
3962:../Dave/Generated/UCPROBE/lib_str.c ****                            }
 2914              	 .loc 1 3962 0
 2915 0178 7B6B     	 ldr r3,[r7,#52]
 2916 017a 0133     	 adds r3,r3,#1
 2917 017c 7B63     	 str r3,[r7,#52]
3964:../Dave/Generated/UCPROBE/lib_str.c **** 
 2918              	 .loc 1 3964 0
 2919 017e FFE7     	 b .L227
 2920              	.L209:
 2921              	.L227:
 2922 0180 00BF     	 nop
 2923              	.L206:
3971:../Dave/Generated/UCPROBE/lib_str.c **** 
 2924              	 .loc 1 3971 0 discriminator 3
 2925 0182 00BF     	 nop
 2926              	.L204:
3976:../Dave/Generated/UCPROBE/lib_str.c ****     }
3977:../Dave/Generated/UCPROBE/lib_str.c **** 
3978:../Dave/Generated/UCPROBE/lib_str.c **** 
3979:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ------------------ PARSE INT STR
3980:../Dave/Generated/UCPROBE/lib_str.c ****     nbr  = 0u;
 2927              	 .loc 1 3980 0
 2928 0184 0023     	 movs r3,#0
 2929 0186 FB62     	 str r3,[r7,#44]
3981:../Dave/Generated/UCPROBE/lib_str.c ****     ovf  = DEF_NO;
 2930              	 .loc 1 3981 0
 2931 0188 0023     	 movs r3,#0
 2932 018a 87F82930 	 strb r3,[r7,#41]
3982:../Dave/Generated/UCPROBE/lib_str.c ****     done = DEF_NO;
 2933              	 .loc 1 3982 0
 2934 018e 0023     	 movs r3,#0
 2935 0190 87F82830 	 strb r3,[r7,#40]
3983:../Dave/Generated/UCPROBE/lib_str.c **** 
3984:../Dave/Generated/UCPROBE/lib_str.c ****     while (done == DEF_NO) {                                    /* Parse str for desired nbr base d
 2936              	 .loc 1 3984 0
 2937 0194 67E0     	 b .L210
 2938              	.L220:
3985:../Dave/Generated/UCPROBE/lib_str.c ****         parse_char = (CPU_CHAR)*pstr_parse;
 2939              	 .loc 1 3985 0
 2940 0196 7B6B     	 ldr r3,[r7,#52]
 2941 0198 1B78     	 ldrb r3,[r3]
 2942 019a 87F82330 	 strb r3,[r7,#35]
3986:../Dave/Generated/UCPROBE/lib_str.c ****         nbr_alpha  =  ASCII_IsAlphaNum(parse_char);
 2943              	 .loc 1 3986 0
 2944 019e 97F82330 	 ldrb r3,[r7,#35]
 2945 01a2 1846     	 mov r0,r3
 2946 01a4 FFF7FEFF 	 bl ASCII_IsAlphaNum
 2947 01a8 0346     	 mov r3,r0
 2948 01aa 87F82130 	 strb r3,[r7,#33]
3987:../Dave/Generated/UCPROBE/lib_str.c ****         if (nbr_alpha == DEF_YES) {                             /* If valid alpha num nbr dig avail
 2949              	 .loc 1 3987 0
 2950 01ae 97F82130 	 ldrb r3,[r7,#33]
 2951 01b2 012B     	 cmp r3,#1
 2952 01b4 54D1     	 bne .L211
3988:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... convert parse char into nbr 
3989:../Dave/Generated/UCPROBE/lib_str.c ****             nbr_dig = ASCII_IsDig(parse_char);
 2953              	 .loc 1 3989 0
 2954 01b6 97F82330 	 ldrb r3,[r7,#35]
 2955 01ba 1846     	 mov r0,r3
 2956 01bc FFF7FEFF 	 bl ASCII_IsDig
 2957 01c0 0346     	 mov r3,r0
 2958 01c2 87F82030 	 strb r3,[r7,#32]
3990:../Dave/Generated/UCPROBE/lib_str.c ****             if (nbr_dig == DEF_YES) {
 2959              	 .loc 1 3990 0
 2960 01c6 97F82030 	 ldrb r3,[r7,#32]
 2961 01ca 012B     	 cmp r3,#1
 2962 01cc 05D1     	 bne .L212
3991:../Dave/Generated/UCPROBE/lib_str.c ****                 parse_dig = (CPU_INT08U)(parse_char - '0');
 2963              	 .loc 1 3991 0
 2964 01ce 97F82330 	 ldrb r3,[r7,#35]
 2965 01d2 303B     	 subs r3,r3,#48
 2966 01d4 87F83330 	 strb r3,[r7,#51]
 2967 01d8 14E0     	 b .L213
 2968              	.L212:
3992:../Dave/Generated/UCPROBE/lib_str.c ****             } else {
3993:../Dave/Generated/UCPROBE/lib_str.c ****                 nbr_hex_lower = ASCII_IsLower(parse_char);
 2969              	 .loc 1 3993 0
 2970 01da 97F82330 	 ldrb r3,[r7,#35]
 2971 01de 1846     	 mov r0,r3
 2972 01e0 FFF7FEFF 	 bl ASCII_IsLower
 2973 01e4 0346     	 mov r3,r0
 2974 01e6 FB77     	 strb r3,[r7,#31]
3994:../Dave/Generated/UCPROBE/lib_str.c ****                 if (nbr_hex_lower == DEF_YES) {
 2975              	 .loc 1 3994 0
 2976 01e8 FB7F     	 ldrb r3,[r7,#31]
 2977 01ea 012B     	 cmp r3,#1
 2978 01ec 05D1     	 bne .L214
3995:../Dave/Generated/UCPROBE/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'a') + 10u);
 2979              	 .loc 1 3995 0
 2980 01ee 97F82330 	 ldrb r3,[r7,#35]
 2981 01f2 573B     	 subs r3,r3,#87
 2982 01f4 87F83330 	 strb r3,[r7,#51]
 2983 01f8 04E0     	 b .L213
 2984              	.L214:
3996:../Dave/Generated/UCPROBE/lib_str.c ****                 } else {
3997:../Dave/Generated/UCPROBE/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'A') + 10u);
 2985              	 .loc 1 3997 0
 2986 01fa 97F82330 	 ldrb r3,[r7,#35]
 2987 01fe 373B     	 subs r3,r3,#55
 2988 0200 87F83330 	 strb r3,[r7,#51]
 2989              	.L213:
3998:../Dave/Generated/UCPROBE/lib_str.c ****                 }
3999:../Dave/Generated/UCPROBE/lib_str.c ****             }
4000:../Dave/Generated/UCPROBE/lib_str.c **** 
4001:../Dave/Generated/UCPROBE/lib_str.c ****             if (parse_dig < nbr_base) {                         /* If parse char valid for nbr base
 2990              	 .loc 1 4001 0
 2991 0204 97F83320 	 ldrb r2,[r7,#51]
 2992 0208 FB79     	 ldrb r3,[r7,#7]
 2993 020a 9A42     	 cmp r2,r3
 2994 020c 24D2     	 bcs .L215
4002:../Dave/Generated/UCPROBE/lib_str.c ****                 if (ovf == DEF_NO) {                            /* ... & nbr NOT yet ovf'd,        
 2995              	 .loc 1 4002 0
 2996 020e 97F82930 	 ldrb r3,[r7,#41]
 2997 0212 002B     	 cmp r3,#0
 2998 0214 1CD1     	 bne .L216
4003:../Dave/Generated/UCPROBE/lib_str.c ****                     if (nbr <= Str_MultOvfThTbl_Int32U[nbr_base]) {
 2999              	 .loc 1 4003 0
 3000 0216 FB79     	 ldrb r3,[r7,#7]
 3001 0218 224A     	 ldr r2,.L228
 3002 021a 52F82320 	 ldr r2,[r2,r3,lsl#2]
 3003 021e FB6A     	 ldr r3,[r7,#44]
 3004 0220 9A42     	 cmp r2,r3
 3005 0222 12D3     	 bcc .L217
4004:../Dave/Generated/UCPROBE/lib_str.c ****                                                                 /* ... merge parse char dig into nb
4005:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr *= nbr_base;
 3006              	 .loc 1 4005 0
 3007 0224 FA79     	 ldrb r2,[r7,#7]
 3008 0226 FB6A     	 ldr r3,[r7,#44]
 3009 0228 02FB03F3 	 mul r3,r2,r3
 3010 022c FB62     	 str r3,[r7,#44]
4006:../Dave/Generated/UCPROBE/lib_str.c ****                         nbr += parse_dig;
 3011              	 .loc 1 4006 0
 3012 022e 97F83330 	 ldrb r3,[r7,#51]
 3013 0232 FA6A     	 ldr r2,[r7,#44]
 3014 0234 1344     	 add r3,r3,r2
 3015 0236 FB62     	 str r3,[r7,#44]
4007:../Dave/Generated/UCPROBE/lib_str.c ****                         if (nbr < parse_dig) {
 3016              	 .loc 1 4007 0
 3017 0238 97F83320 	 ldrb r2,[r7,#51]
 3018 023c FB6A     	 ldr r3,[r7,#44]
 3019 023e 9A42     	 cmp r2,r3
 3020 0240 06D9     	 bls .L216
4008:../Dave/Generated/UCPROBE/lib_str.c ****                             ovf = DEF_YES;
 3021              	 .loc 1 4008 0
 3022 0242 0123     	 movs r3,#1
 3023 0244 87F82930 	 strb r3,[r7,#41]
 3024 0248 02E0     	 b .L216
 3025              	.L217:
4009:../Dave/Generated/UCPROBE/lib_str.c ****                         }
4010:../Dave/Generated/UCPROBE/lib_str.c ****                     } else {
4011:../Dave/Generated/UCPROBE/lib_str.c ****                         ovf = DEF_YES;
 3026              	 .loc 1 4011 0
 3027 024a 0123     	 movs r3,#1
 3028 024c 87F82930 	 strb r3,[r7,#41]
 3029              	.L216:
4012:../Dave/Generated/UCPROBE/lib_str.c ****                     }
4013:../Dave/Generated/UCPROBE/lib_str.c ****                 }
4014:../Dave/Generated/UCPROBE/lib_str.c ****                 pstr_parse++;
 3030              	 .loc 1 4014 0
 3031 0250 7B6B     	 ldr r3,[r7,#52]
 3032 0252 0133     	 adds r3,r3,#1
 3033 0254 7B63     	 str r3,[r7,#52]
 3034 0256 06E0     	 b .L210
 3035              	.L215:
4015:../Dave/Generated/UCPROBE/lib_str.c **** 
4016:../Dave/Generated/UCPROBE/lib_str.c ****             } else {                                            /* Invalid         char parsed (see
4017:../Dave/Generated/UCPROBE/lib_str.c ****                 done = DEF_YES;
 3036              	 .loc 1 4017 0
 3037 0258 0123     	 movs r3,#1
 3038 025a 87F82830 	 strb r3,[r7,#40]
 3039 025e 02E0     	 b .L210
 3040              	.L211:
4018:../Dave/Generated/UCPROBE/lib_str.c ****             }
4019:../Dave/Generated/UCPROBE/lib_str.c **** 
4020:../Dave/Generated/UCPROBE/lib_str.c ****         } else {                                                /* Invalid OR NULL char parsed (see
4021:../Dave/Generated/UCPROBE/lib_str.c ****             done = DEF_YES;
 3041              	 .loc 1 4021 0
 3042 0260 0123     	 movs r3,#1
 3043 0262 87F82830 	 strb r3,[r7,#40]
 3044              	.L210:
3984:../Dave/Generated/UCPROBE/lib_str.c ****         parse_char = (CPU_CHAR)*pstr_parse;
 3045              	 .loc 1 3984 0
 3046 0266 97F82830 	 ldrb r3,[r7,#40]
 3047 026a 002B     	 cmp r3,#0
 3048 026c 93D0     	 beq .L220
4022:../Dave/Generated/UCPROBE/lib_str.c ****         }
4023:../Dave/Generated/UCPROBE/lib_str.c ****     }
4024:../Dave/Generated/UCPROBE/lib_str.c **** 
4025:../Dave/Generated/UCPROBE/lib_str.c ****     if (ovf == DEF_YES) {                                       /* If nbr ovf'd, ...               
 3049              	 .loc 1 4025 0
 3050 026e 97F82930 	 ldrb r3,[r7,#41]
 3051 0272 012B     	 cmp r3,#1
 3052 0274 02D1     	 bne .L221
4026:../Dave/Generated/UCPROBE/lib_str.c ****         nbr  = DEF_INT_32U_MAX_VAL;                             /* ... rtn max int val (see Note #2
 3053              	 .loc 1 4026 0
 3054 0276 4FF0FF33 	 mov r3,#-1
 3055 027a FB62     	 str r3,[r7,#44]
 3056              	.L221:
4027:../Dave/Generated/UCPROBE/lib_str.c ****     }
4028:../Dave/Generated/UCPROBE/lib_str.c **** 
4029:../Dave/Generated/UCPROBE/lib_str.c **** 
4030:../Dave/Generated/UCPROBE/lib_str.c ****     if (pstr_parse !=             pstr_parse_nbr) {             /* If final parse str != init'l par
 3057              	 .loc 1 4030 0
 3058 027c 7A6B     	 ldr r2,[r7,#52]
 3059 027e 7B6A     	 ldr r3,[r7,#36]
 3060 0280 9A42     	 cmp r2,r3
 3061 0282 03D0     	 beq .L222
4031:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr_parse;                   /* .. rtn   parse str's next char (
 3062              	 .loc 1 4031 0
 3063 0284 BB68     	 ldr r3,[r7,#8]
 3064 0286 7A6B     	 ldr r2,[r7,#52]
 3065 0288 1A60     	 str r2,[r3]
 3066 028a 02E0     	 b .L223
 3067              	.L222:
4032:../Dave/Generated/UCPROBE/lib_str.c ****     } else {
4033:../Dave/Generated/UCPROBE/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr;                         /* .. else rtn initial parse str  (
 3068              	 .loc 1 4033 0
 3069 028c BB68     	 ldr r3,[r7,#8]
 3070 028e FA68     	 ldr r2,[r7,#12]
 3071 0290 1A60     	 str r2,[r3]
 3072              	.L223:
4034:../Dave/Generated/UCPROBE/lib_str.c ****     }
4035:../Dave/Generated/UCPROBE/lib_str.c **** 
4036:../Dave/Generated/UCPROBE/lib_str.c ****    *pnbr_neg = neg;                                             /* Rtn neg nbr status.             
 3073              	 .loc 1 4036 0
 3074 0292 3B6C     	 ldr r3,[r7,#64]
 3075 0294 97F82A20 	 ldrb r2,[r7,#42]
 3076 0298 1A70     	 strb r2,[r3]
4037:../Dave/Generated/UCPROBE/lib_str.c **** 
4038:../Dave/Generated/UCPROBE/lib_str.c **** 
4039:../Dave/Generated/UCPROBE/lib_str.c ****     return (nbr);
 3077              	 .loc 1 4039 0
 3078 029a FB6A     	 ldr r3,[r7,#44]
 3079              	.L224:
4040:../Dave/Generated/UCPROBE/lib_str.c **** }
 3080              	 .loc 1 4040 0 discriminator 5
 3081 029c 1846     	 mov r0,r3
 3082 029e 3837     	 adds r7,r7,#56
 3083              	.LCFI124:
 3084              	 .cfi_def_cfa_offset 8
 3085 02a0 BD46     	 mov sp,r7
 3086              	.LCFI125:
 3087              	 .cfi_def_cfa_register 13
 3088              	 
 3089 02a2 80BD     	 pop {r7,pc}
 3090              	.L229:
 3091              	 .align 2
 3092              	.L228:
 3093 02a4 00000000 	 .word Str_MultOvfThTbl_Int32U
 3094              	 .cfi_endproc
 3095              	.LFE23:
 3097              	 .text
 3098              	.Letext0:
 3099              	 .file 2 "../Dave/Generated/UCPROBE/cpu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lib_str.c
    {standard input}:20     .rodata.Str_MultOvfThTbl_Int32U:00000000 $d
    {standard input}:23     .rodata.Str_MultOvfThTbl_Int32U:00000000 Str_MultOvfThTbl_Int32U
    {standard input}:62     .text.Str_Len:00000000 $t
    {standard input}:67     .text.Str_Len:00000000 Str_Len
    {standard input}:112    .text.Str_Len_N:00000000 Str_Len_N
    {standard input}:107    .text.Str_Len_N:00000000 $t
    {standard input}:185    .text.Str_Copy:00000000 $t
    {standard input}:190    .text.Str_Copy:00000000 Str_Copy
    {standard input}:236    .text.Str_Copy_N:00000000 Str_Copy_N
    {standard input}:231    .text.Str_Copy_N:00000000 $t
    {standard input}:366    .text.Str_Cat:00000000 $t
    {standard input}:371    .text.Str_Cat:00000000 Str_Cat
    {standard input}:417    .text.Str_Cat_N:00000000 Str_Cat_N
    {standard input}:412    .text.Str_Cat_N:00000000 $t
    {standard input}:576    .text.Str_Cmp:00000000 $t
    {standard input}:581    .text.Str_Cmp:00000000 Str_Cmp
    {standard input}:629    .text.Str_Cmp_N:00000000 Str_Cmp_N
    {standard input}:624    .text.Str_Cmp_N:00000000 $t
    {standard input}:853    .text.Str_CmpIgnoreCase:00000000 $t
    {standard input}:858    .text.Str_CmpIgnoreCase:00000000 Str_CmpIgnoreCase
    {standard input}:906    .text.Str_CmpIgnoreCase_N:00000000 Str_CmpIgnoreCase_N
    {standard input}:901    .text.Str_CmpIgnoreCase_N:00000000 $t
    {standard input}:1171   .text.Str_Char:00000000 $t
    {standard input}:1176   .text.Str_Char:00000000 Str_Char
    {standard input}:1224   .text.Str_Char_N:00000000 Str_Char_N
    {standard input}:1219   .text.Str_Char_N:00000000 $t
    {standard input}:1350   .text.Str_Char_Last:00000000 $t
    {standard input}:1355   .text.Str_Char_Last:00000000 Str_Char_Last
    {standard input}:1403   .text.Str_Char_Last_N:00000000 Str_Char_Last_N
    {standard input}:1398   .text.Str_Char_Last_N:00000000 $t
    {standard input}:1513   .text.Str_Char_Replace:00000000 $t
    {standard input}:1518   .text.Str_Char_Replace:00000000 Str_Char_Replace
    {standard input}:1570   .text.Str_Char_Replace_N:00000000 Str_Char_Replace_N
    {standard input}:1565   .text.Str_Char_Replace_N:00000000 $t
    {standard input}:1674   .text.Str_Str:00000000 $t
    {standard input}:1679   .text.Str_Str:00000000 Str_Str
    {standard input}:1725   .text.Str_Str_N:00000000 Str_Str_N
    {standard input}:1720   .text.Str_Str_N:00000000 $t
    {standard input}:1912   .text.Str_FmtNbr_Int32U:00000000 $t
    {standard input}:1917   .text.Str_FmtNbr_Int32U:00000000 Str_FmtNbr_Int32U
    {standard input}:2202   .text.Str_FmtNbr_Int32:00000000 Str_FmtNbr_Int32
    {standard input}:1975   .text.Str_FmtNbr_Int32S:00000000 $t
    {standard input}:1980   .text.Str_FmtNbr_Int32S:00000000 Str_FmtNbr_Int32S
    {standard input}:2060   .text.Str_ParseNbr_Int32U:00000000 $t
    {standard input}:2065   .text.Str_ParseNbr_Int32U:00000000 Str_ParseNbr_Int32U
    {standard input}:2656   .text.Str_ParseNbr_Int32:00000000 Str_ParseNbr_Int32
    {standard input}:2111   .text.Str_ParseNbr_Int32S:00000000 $t
    {standard input}:2116   .text.Str_ParseNbr_Int32S:00000000 Str_ParseNbr_Int32S
    {standard input}:2198   .text.Str_FmtNbr_Int32:00000000 $t
    {standard input}:2652   .text.Str_ParseNbr_Int32:00000000 $t
    {standard input}:3093   .text.Str_ParseNbr_Int32:000002a4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ASCII_ToLower
ASCII_IsPrint
ASCII_IsSpace
ASCII_IsDigHex
ASCII_IsAlphaNum
ASCII_IsDig
ASCII_IsLower
