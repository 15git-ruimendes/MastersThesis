   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_rtc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_GetMirrorStatus:
  25              	.LFB170:
  26              	 .file 1 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2019-12-02
   4:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
   7:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.
  11:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  14:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * do so, all subject to the following:
  20:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  21:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * a source language processor.
  27:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  28:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *****************************************************************************
  40:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  41:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  42:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  43:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  44:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  45:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  46:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  47:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  48:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  49:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  50:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  51:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  52:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  54:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  55:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  56:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  57:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  58:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  59:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  60:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  62:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  63:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  64:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * 2019-12-02:
  65:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Fix including files following the convention: angle brackets are used for standard include
  66:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  67:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond
  68:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  69:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
  70:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  71:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  72:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
  73:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  74:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  75:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  76:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc_common.h"
  77:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
  78:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
  79:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  80:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  81:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
  82:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
  83:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
  84:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  85:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  86:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  87:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  88:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  89:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  90:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  91:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control
  93:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  95:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  96:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  97:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
  98:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  99:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic
 101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
 103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
 105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
 106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS
 179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc1_scu.h"
 203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #include "xmc4_scu.h"
 205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #else
 206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** }
 242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering
 259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** }
 267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for
 271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock.
 284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration.
 285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 293:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 294:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 295:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 296:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 297:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 298:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 299:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 300:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 301:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 302:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 303:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 304:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 305:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 306:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 307:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 308:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 309:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 310:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 311:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 312:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 313:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 314:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 315:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 316:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 317:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 318:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 319:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 320:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 321:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 322:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 323:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 324:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 325:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 326:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 327:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 328:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 329:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 330:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 331:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 332:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 333:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 334:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 335:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 336:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 337:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 338:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 339:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 340:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 341:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 342:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 343:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 344:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 345:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 346:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 347:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 348:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 349:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 350:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 351:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 352:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 353:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 354:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular
 355:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 356:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 357:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation.
 358:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 359:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 360:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 361:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 362:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 363:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 364:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 365:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 366:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 367:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 368:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 370:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 371:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 372:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 373:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 374:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 375:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 376:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 377:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 378:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 379:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 380:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 381:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 382:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 383:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 384:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 385:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 386:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 387:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 388:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 389:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 390:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset.
 391:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in
 392:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 393:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 394:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 395:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 396:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 397:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 398:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 399:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 400:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 401:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 402:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** }
 403:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 404:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 405:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 406:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 407:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 408:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 409:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 410:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 411:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 412:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 413:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 414:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 415:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 416:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 417:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 418:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** }
 419:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 420:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 421:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 422:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 423:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 424:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 425:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 426:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 427:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 428:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 429:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 430:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 431:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 432:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 433:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 434:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
 435:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 436:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** }
 437:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 438:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 439:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 440:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 441:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 442:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 443:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 444:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 445:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 446:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 447:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void);
 448:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 449:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 450:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 451:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 452:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 453:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 454:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 455:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 456:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 457:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 458:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 459:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 460:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 461:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 462:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 463:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 464:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 465:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 466:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 467:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 468:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 469:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 470:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 471:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 472:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 473:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 474:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 475:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 476:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 477:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 478:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 479:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 480:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 481:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 482:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 483:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 484:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 485:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 486:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 487:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 488:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 489:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 490:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 491:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the
 492:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 493:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 494:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 495:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 496:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 497:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 498:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 499:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 500:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 501:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 502:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 503:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 504:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 505:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 506:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 507:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 508:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 509:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 510:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 511:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 512:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done.
 513:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 514:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 515:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 516:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 517:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 518:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 519:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 520:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 521:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 522:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 523:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 524:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 525:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 526:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 527:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 528:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 529:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 530:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 531:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 532:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 533:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 534:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 535:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** 
 536:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** /**
 537:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 538:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 539:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 540:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 541:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  *
 542:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 543:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 544:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 545:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 546:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 547:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 548:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 549:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 550:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****  */
 551:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 552:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** {
  27              	 .loc 1 552 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
 553:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h ****   return (SCU_GENERAL->MIRRSTS);
  39              	 .loc 1 553 0
  40 0004 034B     	 ldr r3,.L3
  41 0006 D3F8C430 	 ldr r3,[r3,#196]
 554:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_scu.h **** }
  42              	 .loc 1 554 0
  43 000a 1846     	 mov r0,r3
  44 000c BD46     	 mov sp,r7
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 13
  47              	 
  48 000e 5DF8047B 	 ldr r7,[sp],#4
  49              	.LCFI3:
  50              	 .cfi_restore 7
  51              	 .cfi_def_cfa_offset 0
  52 0012 7047     	 bx lr
  53              	.L4:
  54              	 .align 2
  55              	.L3:
  56 0014 00400050 	 .word 1342193664
  57              	 .cfi_endproc
  58              	.LFE170:
  60              	 .section .text.XMC_RTC_Start,"ax",%progbits
  61              	 .align 2
  62              	 .global XMC_RTC_Start
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_RTC_Start:
  67              	.LFB173:
  68              	 .file 2 "../Libraries/XMCLib/src/xmc_rtc.c"
   1:../Libraries/XMCLib/src/xmc_rtc.c **** /**
   2:../Libraries/XMCLib/src/xmc_rtc.c ****  * @file xmc_rtc.c
   3:../Libraries/XMCLib/src/xmc_rtc.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   5:../Libraries/XMCLib/src/xmc_rtc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_rtc.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_rtc.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   9:../Libraries/XMCLib/src/xmc_rtc.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_rtc.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  12:../Libraries/XMCLib/src/xmc_rtc.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  14:../Libraries/XMCLib/src/xmc_rtc.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_rtc.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_rtc.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_rtc.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_rtc.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_rtc.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  21:../Libraries/XMCLib/src/xmc_rtc.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_rtc.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_rtc.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_rtc.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_rtc.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_rtc.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  28:../Libraries/XMCLib/src/xmc_rtc.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_rtc.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_rtc.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_rtc.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_rtc.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_rtc.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_rtc.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  36:../Libraries/XMCLib/src/xmc_rtc.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_rtc.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_rtc.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_rtc.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  41:../Libraries/XMCLib/src/xmc_rtc.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_rtc.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  44:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  47:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Removed GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  50:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2016-05-19:
  51:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Added XMC_RTC_SetTimeStdFormat() and XMC_RTC_SetAlarmStdFormat()
  52:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  53:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2018-06-21:
  54:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed value of XMC_RTC_MAXSECONDS, XMC_RTC_MAXMINUTES, XMC_RTC_MAXHOURS macros
  55:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed assertion on XMC_RTC_MAXDAYS
  56:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  57:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2019-05-07:
  58:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed compilation warnings
  59:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  60:../Libraries/XMCLib/src/xmc_rtc.c ****  * @endcond
  61:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  62:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  63:../Libraries/XMCLib/src/xmc_rtc.c **** 
  64:../Libraries/XMCLib/src/xmc_rtc.c **** /**
  65:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  66:../Libraries/XMCLib/src/xmc_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  67:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  68:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  69:../Libraries/XMCLib/src/xmc_rtc.c **** 
  70:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  71:../Libraries/XMCLib/src/xmc_rtc.c ****  * HEADER FILES
  72:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  73:../Libraries/XMCLib/src/xmc_rtc.c **** 
  74:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_scu.h"
  75:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_rtc.h"
  76:../Libraries/XMCLib/src/xmc_rtc.c **** 
  77:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_rtc.c ****  * MACROS
  79:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_rtc.c **** 
  81:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXSECONDS  (60U)   /**< RTC time : Maximum seconds */
  82:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMINUTES  (60U)   /**< RTC time : Maximum minutes */
  83:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXHOURS    (24U)   /**< RTC time : Maximum hours */
  84:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYS     (31U)   /**< RTC time : Maximum days */
  85:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYSOFWEEK  (7U) /**< RTC time : Maximum days of week */
  86:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMONTH  (12U)     /**< RTC time : Maximum month */
  87:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXYEAR  (0xFFFFU)  /**< RTC time : Maximum year */
  88:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXPRESCALER  (0xFFFFU)  /**< RTC time : Maximum prescaler */
  89:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_YEAR_OFFSET (1900U)      /**< RTC year offset : Year offset */
  90:../Libraries/XMCLib/src/xmc_rtc.c **** 
  91:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC4)
  92:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (1U)
  93:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  94:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC1)
  95:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (0U)
  96:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  97:../Libraries/XMCLib/src/xmc_rtc.c **** 
  98:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  99:../Libraries/XMCLib/src/xmc_rtc.c ****  * API IMPLEMENTATION
 100:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
 101:../Libraries/XMCLib/src/xmc_rtc.c **** 
 102:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 103:../Libraries/XMCLib/src/xmc_rtc.c ****  * Enables RTC peripheral to start counting time
 104:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 105:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Start(void)
 106:../Libraries/XMCLib/src/xmc_rtc.c **** {
  69              	 .loc 2 106 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73 0000 80B5     	 push {r7,lr}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 8
  76              	 .cfi_offset 7,-8
  77              	 .cfi_offset 14,-4
  78 0002 00AF     	 add r7,sp,#0
  79              	.LCFI5:
  80              	 .cfi_def_cfa_register 7
 107:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  81              	 .loc 2 107 0
  82 0004 00BF     	 nop
  83              	.L6:
  84              	 .loc 2 107 0 is_stmt 0 discriminator 1
  85 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
  86 000a 0346     	 mov r3,r0
  87 000c 03F48073 	 and r3,r3,#256
  88 0010 002B     	 cmp r3,#0
  89 0012 F8D1     	 bne .L6
 108:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 109:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 110:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 111:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR |= (uint32_t)RTC_CTR_ENB_Msk;
  90              	 .loc 2 111 0 is_stmt 1
  91 0014 034A     	 ldr r2,.L7
  92 0016 034B     	 ldr r3,.L7
  93 0018 5B68     	 ldr r3,[r3,#4]
  94 001a 43F00103 	 orr r3,r3,#1
  95 001e 5360     	 str r3,[r2,#4]
 112:../Libraries/XMCLib/src/xmc_rtc.c **** }
  96              	 .loc 2 112 0
  97 0020 80BD     	 pop {r7,pc}
  98              	.L8:
  99 0022 00BF     	 .align 2
 100              	.L7:
 101 0024 004A0050 	 .word 1342196224
 102              	 .cfi_endproc
 103              	.LFE173:
 105              	 .section .text.XMC_RTC_Stop,"ax",%progbits
 106              	 .align 2
 107              	 .global XMC_RTC_Stop
 108              	 .thumb
 109              	 .thumb_func
 111              	XMC_RTC_Stop:
 112              	.LFB174:
 113:../Libraries/XMCLib/src/xmc_rtc.c **** 
 114:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 115:../Libraries/XMCLib/src/xmc_rtc.c ****  * Disables RTC peripheral to start counting time
 116:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 117:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Stop(void)
 118:../Libraries/XMCLib/src/xmc_rtc.c **** {
 113              	 .loc 2 118 0
 114              	 .cfi_startproc
 115              	 
 116              	 
 117 0000 80B5     	 push {r7,lr}
 118              	.LCFI6:
 119              	 .cfi_def_cfa_offset 8
 120              	 .cfi_offset 7,-8
 121              	 .cfi_offset 14,-4
 122 0002 00AF     	 add r7,sp,#0
 123              	.LCFI7:
 124              	 .cfi_def_cfa_register 7
 119:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 125              	 .loc 2 119 0
 126 0004 00BF     	 nop
 127              	.L10:
 128              	 .loc 2 119 0 is_stmt 0 discriminator 1
 129 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 130 000a 0346     	 mov r3,r0
 131 000c 03F48073 	 and r3,r3,#256
 132 0010 002B     	 cmp r3,#0
 133 0012 F8D1     	 bne .L10
 120:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 121:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 122:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 123:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR &= ~(uint32_t)RTC_CTR_ENB_Msk;
 134              	 .loc 2 123 0 is_stmt 1
 135 0014 034A     	 ldr r2,.L11
 136 0016 034B     	 ldr r3,.L11
 137 0018 5B68     	 ldr r3,[r3,#4]
 138 001a 23F00103 	 bic r3,r3,#1
 139 001e 5360     	 str r3,[r2,#4]
 124:../Libraries/XMCLib/src/xmc_rtc.c **** }
 140              	 .loc 2 124 0
 141 0020 80BD     	 pop {r7,pc}
 142              	.L12:
 143 0022 00BF     	 .align 2
 144              	.L11:
 145 0024 004A0050 	 .word 1342196224
 146              	 .cfi_endproc
 147              	.LFE174:
 149              	 .section .text.XMC_RTC_SetPrescaler,"ax",%progbits
 150              	 .align 2
 151              	 .global XMC_RTC_SetPrescaler
 152              	 .thumb
 153              	 .thumb_func
 155              	XMC_RTC_SetPrescaler:
 156              	.LFB175:
 125:../Libraries/XMCLib/src/xmc_rtc.c **** 
 126:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 127:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module prescaler value
 128:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 129:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetPrescaler(uint16_t prescaler)
 130:../Libraries/XMCLib/src/xmc_rtc.c **** {
 157              	 .loc 2 130 0
 158              	 .cfi_startproc
 159              	 
 160              	 
 161 0000 80B5     	 push {r7,lr}
 162              	.LCFI8:
 163              	 .cfi_def_cfa_offset 8
 164              	 .cfi_offset 7,-8
 165              	 .cfi_offset 14,-4
 166 0002 82B0     	 sub sp,sp,#8
 167              	.LCFI9:
 168              	 .cfi_def_cfa_offset 16
 169 0004 00AF     	 add r7,sp,#0
 170              	.LCFI10:
 171              	 .cfi_def_cfa_register 7
 172 0006 0346     	 mov r3,r0
 173 0008 FB80     	 strh r3,[r7,#6]
 131:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetPrescaler:Wrong prescaler value", (prescaler < XMC_RTC_MAXPRESCALER));
 132:../Libraries/XMCLib/src/xmc_rtc.c **** 
 133:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 174              	 .loc 2 133 0
 175 000a 00BF     	 nop
 176              	.L14:
 177              	 .loc 2 133 0 is_stmt 0 discriminator 1
 178 000c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 179 0010 0346     	 mov r3,r0
 180 0012 03F48073 	 and r3,r3,#256
 181 0016 002B     	 cmp r3,#0
 182 0018 F8D1     	 bne .L14
 134:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 135:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 136:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 137:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR = (RTC->CTR & ~(uint32_t)RTC_CTR_DIV_Msk) |
 183              	 .loc 2 137 0 is_stmt 1
 184 001a 0549     	 ldr r1,.L15
 185 001c 044B     	 ldr r3,.L15
 186 001e 5B68     	 ldr r3,[r3,#4]
 187 0020 9AB2     	 uxth r2,r3
 138:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 188              	 .loc 2 138 0
 189 0022 FB88     	 ldrh r3,[r7,#6]
 190 0024 1B04     	 lsls r3,r3,#16
 137:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 191              	 .loc 2 137 0
 192 0026 1343     	 orrs r3,r3,r2
 193 0028 4B60     	 str r3,[r1,#4]
 139:../Libraries/XMCLib/src/xmc_rtc.c **** }
 194              	 .loc 2 139 0
 195 002a 0837     	 adds r7,r7,#8
 196              	.LCFI11:
 197              	 .cfi_def_cfa_offset 8
 198 002c BD46     	 mov sp,r7
 199              	.LCFI12:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 002e 80BD     	 pop {r7,pc}
 203              	.L16:
 204              	 .align 2
 205              	.L15:
 206 0030 004A0050 	 .word 1342196224
 207              	 .cfi_endproc
 208              	.LFE175:
 210              	 .section .text.XMC_RTC_SetTime,"ax",%progbits
 211              	 .align 2
 212              	 .global XMC_RTC_SetTime
 213              	 .thumb
 214              	 .thumb_func
 216              	XMC_RTC_SetTime:
 217              	.LFB176:
 140:../Libraries/XMCLib/src/xmc_rtc.c **** 
 141:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 142:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC_TIM0, RTC_TIM1 registers with time values
 143:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 144:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const time)
 145:../Libraries/XMCLib/src/xmc_rtc.c **** {
 218              	 .loc 2 145 0
 219              	 .cfi_startproc
 220              	 
 221              	 
 222 0000 80B5     	 push {r7,lr}
 223              	.LCFI13:
 224              	 .cfi_def_cfa_offset 8
 225              	 .cfi_offset 7,-8
 226              	 .cfi_offset 14,-4
 227 0002 82B0     	 sub sp,sp,#8
 228              	.LCFI14:
 229              	 .cfi_def_cfa_offset 16
 230 0004 00AF     	 add r7,sp,#0
 231              	.LCFI15:
 232              	 .cfi_def_cfa_register 7
 233 0006 7860     	 str r0,[r7,#4]
 146:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong seconds value", ((uint32_t)time->seconds < XMC_RTC_MAXSECONDS))
 147:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong minutes value", ((uint32_t)time->minutes < XMC_RTC_MAXMINUTES))
 148:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong hours value", ((uint32_t)time->hours < XMC_RTC_MAXHOURS));
 149:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong week day value", ((uint32_t)time->daysofweek < XMC_RTC_MAXDAYSO
 150:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month value", ((uint32_t)time->month < XMC_RTC_MAXMONTH));
 151:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong year value", ((uint32_t)time->year < XMC_RTC_MAXYEAR));
 152:../Libraries/XMCLib/src/xmc_rtc.c **** 
 153:../Libraries/XMCLib/src/xmc_rtc.c **** #if (XMC_RTC_INIT_SEQUENCE == 1U)
 154:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 234              	 .loc 2 154 0
 235 0008 00BF     	 nop
 236              	.L18:
 237              	 .loc 2 154 0 is_stmt 0 discriminator 1
 238 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 239 000e 0346     	 mov r3,r0
 240 0010 03F40063 	 and r3,r3,#2048
 241 0014 002B     	 cmp r3,#0
 242 0016 F8D1     	 bne .L18
 155:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 156:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 157:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 158:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->TIM0 = time->raw0;
 243              	 .loc 2 158 0 is_stmt 1
 244 0018 094A     	 ldr r2,.L20
 245 001a 7B68     	 ldr r3,[r7,#4]
 246 001c 1B68     	 ldr r3,[r3]
 247 001e 1362     	 str r3,[r2,#32]
 159:../Libraries/XMCLib/src/xmc_rtc.c **** 
 160:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 248              	 .loc 2 160 0
 249 0020 00BF     	 nop
 250              	.L19:
 251              	 .loc 2 160 0 is_stmt 0 discriminator 1
 252 0022 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 253 0026 0346     	 mov r3,r0
 254 0028 03F48053 	 and r3,r3,#4096
 255 002c 002B     	 cmp r3,#0
 256 002e F8D1     	 bne .L19
 161:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 162:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 163:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 164:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->TIM1 = time->raw1;
 257              	 .loc 2 164 0 is_stmt 1
 258 0030 034A     	 ldr r2,.L20
 259 0032 7B68     	 ldr r3,[r7,#4]
 260 0034 5B68     	 ldr r3,[r3,#4]
 261 0036 5362     	 str r3,[r2,#36]
 165:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
 166:../Libraries/XMCLib/src/xmc_rtc.c **** #if (XMC_RTC_INIT_SEQUENCE == 0U)
 167:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk | SCU_GENERAL_MIRRSTS_RTC_T
 168:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 169:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 170:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 171:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->TIM0 = time->raw0;
 172:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->TIM1 = time->raw1;	;
 173:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
 174:../Libraries/XMCLib/src/xmc_rtc.c **** }
 262              	 .loc 2 174 0
 263 0038 0837     	 adds r7,r7,#8
 264              	.LCFI16:
 265              	 .cfi_def_cfa_offset 8
 266 003a BD46     	 mov sp,r7
 267              	.LCFI17:
 268              	 .cfi_def_cfa_register 13
 269              	 
 270 003c 80BD     	 pop {r7,pc}
 271              	.L21:
 272 003e 00BF     	 .align 2
 273              	.L20:
 274 0040 004A0050 	 .word 1342196224
 275              	 .cfi_endproc
 276              	.LFE176:
 278              	 .section .text.XMC_RTC_GetTime,"ax",%progbits
 279              	 .align 2
 280              	 .global XMC_RTC_GetTime
 281              	 .thumb
 282              	 .thumb_func
 284              	XMC_RTC_GetTime:
 285              	.LFB177:
 175:../Libraries/XMCLib/src/xmc_rtc.c **** 
 176:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 177:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time value
 178:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 179:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time)
 180:../Libraries/XMCLib/src/xmc_rtc.c **** {
 286              	 .loc 2 180 0
 287              	 .cfi_startproc
 288              	 
 289              	 
 290              	 
 291 0000 80B4     	 push {r7}
 292              	.LCFI18:
 293              	 .cfi_def_cfa_offset 4
 294              	 .cfi_offset 7,-4
 295 0002 83B0     	 sub sp,sp,#12
 296              	.LCFI19:
 297              	 .cfi_def_cfa_offset 16
 298 0004 00AF     	 add r7,sp,#0
 299              	.LCFI20:
 300              	 .cfi_def_cfa_register 7
 301 0006 7860     	 str r0,[r7,#4]
 181:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 302              	 .loc 2 181 0
 303 0008 064B     	 ldr r3,.L23
 304 000a 1A6A     	 ldr r2,[r3,#32]
 305 000c 7B68     	 ldr r3,[r7,#4]
 306 000e 1A60     	 str r2,[r3]
 182:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 307              	 .loc 2 182 0
 308 0010 044B     	 ldr r3,.L23
 309 0012 5A6A     	 ldr r2,[r3,#36]
 310 0014 7B68     	 ldr r3,[r7,#4]
 311 0016 5A60     	 str r2,[r3,#4]
 183:../Libraries/XMCLib/src/xmc_rtc.c **** }
 312              	 .loc 2 183 0
 313 0018 0C37     	 adds r7,r7,#12
 314              	.LCFI21:
 315              	 .cfi_def_cfa_offset 4
 316 001a BD46     	 mov sp,r7
 317              	.LCFI22:
 318              	 .cfi_def_cfa_register 13
 319              	 
 320 001c 5DF8047B 	 ldr r7,[sp],#4
 321              	.LCFI23:
 322              	 .cfi_restore 7
 323              	 .cfi_def_cfa_offset 0
 324 0020 7047     	 bx lr
 325              	.L24:
 326 0022 00BF     	 .align 2
 327              	.L23:
 328 0024 004A0050 	 .word 1342196224
 329              	 .cfi_endproc
 330              	.LFE177:
 332              	 .section .text.XMC_RTC_SetTimeStdFormat,"ax",%progbits
 333              	 .align 2
 334              	 .global XMC_RTC_SetTimeStdFormat
 335              	 .thumb
 336              	 .thumb_func
 338              	XMC_RTC_SetTimeStdFormat:
 339              	.LFB178:
 184:../Libraries/XMCLib/src/xmc_rtc.c **** 
 185:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 186:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module time values in standard format
 187:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 188:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTimeStdFormat(const struct tm *const stdtime)
 189:../Libraries/XMCLib/src/xmc_rtc.c **** {
 340              	 .loc 2 189 0
 341              	 .cfi_startproc
 342              	 
 343              	 
 344 0000 80B5     	 push {r7,lr}
 345              	.LCFI24:
 346              	 .cfi_def_cfa_offset 8
 347              	 .cfi_offset 7,-8
 348              	 .cfi_offset 14,-4
 349 0002 84B0     	 sub sp,sp,#16
 350              	.LCFI25:
 351              	 .cfi_def_cfa_offset 24
 352 0004 00AF     	 add r7,sp,#0
 353              	.LCFI26:
 354              	 .cfi_def_cfa_register 7
 355 0006 7860     	 str r0,[r7,#4]
 190:../Libraries/XMCLib/src/xmc_rtc.c **** 
 191:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 192:../Libraries/XMCLib/src/xmc_rtc.c **** 
 193:../Libraries/XMCLib/src/xmc_rtc.c ****   time.seconds = stdtime->tm_sec;
 356              	 .loc 2 193 0
 357 0008 7B68     	 ldr r3,[r7,#4]
 358 000a 1B68     	 ldr r3,[r3]
 359 000c DBB2     	 uxtb r3,r3
 360 000e 03F03F03 	 and r3,r3,#63
 361 0012 DAB2     	 uxtb r2,r3
 362 0014 3B7A     	 ldrb r3,[r7,#8]
 363 0016 62F30503 	 bfi r3,r2,#0,#6
 364 001a 3B72     	 strb r3,[r7,#8]
 194:../Libraries/XMCLib/src/xmc_rtc.c ****   time.minutes = stdtime->tm_min;
 365              	 .loc 2 194 0
 366 001c 7B68     	 ldr r3,[r7,#4]
 367 001e 5B68     	 ldr r3,[r3,#4]
 368 0020 DBB2     	 uxtb r3,r3
 369 0022 03F03F03 	 and r3,r3,#63
 370 0026 DAB2     	 uxtb r2,r3
 371 0028 7B7A     	 ldrb r3,[r7,#9]
 372 002a 62F30503 	 bfi r3,r2,#0,#6
 373 002e 7B72     	 strb r3,[r7,#9]
 195:../Libraries/XMCLib/src/xmc_rtc.c ****   time.hours = stdtime->tm_hour;
 374              	 .loc 2 195 0
 375 0030 7B68     	 ldr r3,[r7,#4]
 376 0032 9B68     	 ldr r3,[r3,#8]
 377 0034 DBB2     	 uxtb r3,r3
 378 0036 03F01F03 	 and r3,r3,#31
 379 003a DAB2     	 uxtb r2,r3
 380 003c BB7A     	 ldrb r3,[r7,#10]
 381 003e 62F30403 	 bfi r3,r2,#0,#5
 382 0042 BB72     	 strb r3,[r7,#10]
 196:../Libraries/XMCLib/src/xmc_rtc.c ****   time.days = stdtime->tm_mday - 1;
 383              	 .loc 2 196 0
 384 0044 7B68     	 ldr r3,[r7,#4]
 385 0046 DB68     	 ldr r3,[r3,#12]
 386 0048 DBB2     	 uxtb r3,r3
 387 004a 013B     	 subs r3,r3,#1
 388 004c DBB2     	 uxtb r3,r3
 389 004e 03F01F03 	 and r3,r3,#31
 390 0052 DAB2     	 uxtb r2,r3
 391 0054 FB7A     	 ldrb r3,[r7,#11]
 392 0056 62F30403 	 bfi r3,r2,#0,#5
 393 005a FB72     	 strb r3,[r7,#11]
 197:../Libraries/XMCLib/src/xmc_rtc.c ****   time.month = stdtime->tm_mon;
 394              	 .loc 2 197 0
 395 005c 7B68     	 ldr r3,[r7,#4]
 396 005e 1B69     	 ldr r3,[r3,#16]
 397 0060 DBB2     	 uxtb r3,r3
 398 0062 03F00F03 	 and r3,r3,#15
 399 0066 DAB2     	 uxtb r2,r3
 400 0068 7B7B     	 ldrb r3,[r7,#13]
 401 006a 62F30303 	 bfi r3,r2,#0,#4
 402 006e 7B73     	 strb r3,[r7,#13]
 198:../Libraries/XMCLib/src/xmc_rtc.c ****   time.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 403              	 .loc 2 198 0
 404 0070 7B68     	 ldr r3,[r7,#4]
 405 0072 5B69     	 ldr r3,[r3,#20]
 406 0074 9BB2     	 uxth r3,r3
 407 0076 03F26C73 	 addw r3,r3,#1900
 408 007a 9BB2     	 uxth r3,r3
 409 007c FB81     	 strh r3,[r7,#14]
 199:../Libraries/XMCLib/src/xmc_rtc.c ****   time.daysofweek = stdtime->tm_wday;
 410              	 .loc 2 199 0
 411 007e 7B68     	 ldr r3,[r7,#4]
 412 0080 9B69     	 ldr r3,[r3,#24]
 413 0082 DBB2     	 uxtb r3,r3
 414 0084 03F00703 	 and r3,r3,#7
 415 0088 DAB2     	 uxtb r2,r3
 416 008a 3B7B     	 ldrb r3,[r7,#12]
 417 008c 62F30203 	 bfi r3,r2,#0,#3
 418 0090 3B73     	 strb r3,[r7,#12]
 200:../Libraries/XMCLib/src/xmc_rtc.c **** 
 201:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetTime(&time);
 419              	 .loc 2 201 0
 420 0092 07F10803 	 add r3,r7,#8
 421 0096 1846     	 mov r0,r3
 422 0098 FFF7FEFF 	 bl XMC_RTC_SetTime
 202:../Libraries/XMCLib/src/xmc_rtc.c **** }
 423              	 .loc 2 202 0
 424 009c 1037     	 adds r7,r7,#16
 425              	.LCFI27:
 426              	 .cfi_def_cfa_offset 8
 427 009e BD46     	 mov sp,r7
 428              	.LCFI28:
 429              	 .cfi_def_cfa_register 13
 430              	 
 431 00a0 80BD     	 pop {r7,pc}
 432              	 .cfi_endproc
 433              	.LFE178:
 435 00a2 00BF     	 .section .text.XMC_RTC_GetTimeStdFormat,"ax",%progbits
 436              	 .align 2
 437              	 .global XMC_RTC_GetTimeStdFormat
 438              	 .thumb
 439              	 .thumb_func
 441              	XMC_RTC_GetTimeStdFormat:
 442              	.LFB179:
 203:../Libraries/XMCLib/src/xmc_rtc.c **** 
 204:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 205:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time values in standard format
 206:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 207:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime)
 208:../Libraries/XMCLib/src/xmc_rtc.c **** {
 443              	 .loc 2 208 0
 444              	 .cfi_startproc
 445              	 
 446              	 
 447              	 
 448 0000 80B4     	 push {r7}
 449              	.LCFI29:
 450              	 .cfi_def_cfa_offset 4
 451              	 .cfi_offset 7,-4
 452 0002 85B0     	 sub sp,sp,#20
 453              	.LCFI30:
 454              	 .cfi_def_cfa_offset 24
 455 0004 00AF     	 add r7,sp,#0
 456              	.LCFI31:
 457              	 .cfi_def_cfa_register 7
 458 0006 7860     	 str r0,[r7,#4]
 209:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 210:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw0 = RTC->TIM0;
 459              	 .loc 2 210 0
 460 0008 1C4B     	 ldr r3,.L27
 461 000a 1B6A     	 ldr r3,[r3,#32]
 462 000c BB60     	 str r3,[r7,#8]
 211:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 463              	 .loc 2 211 0
 464 000e 1B4B     	 ldr r3,.L27
 465 0010 5B6A     	 ldr r3,[r3,#36]
 466 0012 FB60     	 str r3,[r7,#12]
 212:../Libraries/XMCLib/src/xmc_rtc.c **** 
 213:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)time.seconds;
 467              	 .loc 2 213 0
 468 0014 3B7A     	 ldrb r3,[r7,#8]
 469 0016 C3F30503 	 ubfx r3,r3,#0,#6
 470 001a DBB2     	 uxtb r3,r3
 471 001c 1A46     	 mov r2,r3
 472 001e 7B68     	 ldr r3,[r7,#4]
 473 0020 1A60     	 str r2,[r3]
 214:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 474              	 .loc 2 214 0
 475 0022 7B7A     	 ldrb r3,[r7,#9]
 476 0024 C3F30503 	 ubfx r3,r3,#0,#6
 477 0028 DBB2     	 uxtb r3,r3
 478 002a 1A46     	 mov r2,r3
 479 002c 7B68     	 ldr r3,[r7,#4]
 480 002e 5A60     	 str r2,[r3,#4]
 215:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 481              	 .loc 2 215 0
 482 0030 BB7A     	 ldrb r3,[r7,#10]
 483 0032 C3F30403 	 ubfx r3,r3,#0,#5
 484 0036 DBB2     	 uxtb r3,r3
 485 0038 1A46     	 mov r2,r3
 486 003a 7B68     	 ldr r3,[r7,#4]
 487 003c 9A60     	 str r2,[r3,#8]
 216:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 488              	 .loc 2 216 0
 489 003e FB7A     	 ldrb r3,[r7,#11]
 490 0040 C3F30403 	 ubfx r3,r3,#0,#5
 491 0044 DBB2     	 uxtb r3,r3
 492 0046 5A1C     	 adds r2,r3,#1
 493 0048 7B68     	 ldr r3,[r7,#4]
 494 004a DA60     	 str r2,[r3,#12]
 217:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 495              	 .loc 2 217 0
 496 004c 7B7B     	 ldrb r3,[r7,#13]
 497 004e C3F30303 	 ubfx r3,r3,#0,#4
 498 0052 DBB2     	 uxtb r3,r3
 499 0054 1A46     	 mov r2,r3
 500 0056 7B68     	 ldr r3,[r7,#4]
 501 0058 1A61     	 str r2,[r3,#16]
 218:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 502              	 .loc 2 218 0
 503 005a FB89     	 ldrh r3,[r7,#14]
 504 005c A3F26C72 	 subw r2,r3,#1900
 505 0060 7B68     	 ldr r3,[r7,#4]
 506 0062 5A61     	 str r2,[r3,#20]
 219:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 507              	 .loc 2 219 0
 508 0064 3B7B     	 ldrb r3,[r7,#12]
 509 0066 C3F30203 	 ubfx r3,r3,#0,#3
 510 006a DBB2     	 uxtb r3,r3
 511 006c 1A46     	 mov r2,r3
 512 006e 7B68     	 ldr r3,[r7,#4]
 513 0070 9A61     	 str r2,[r3,#24]
 220:../Libraries/XMCLib/src/xmc_rtc.c **** }
 514              	 .loc 2 220 0
 515 0072 1437     	 adds r7,r7,#20
 516              	.LCFI32:
 517              	 .cfi_def_cfa_offset 4
 518 0074 BD46     	 mov sp,r7
 519              	.LCFI33:
 520              	 .cfi_def_cfa_register 13
 521              	 
 522 0076 5DF8047B 	 ldr r7,[sp],#4
 523              	.LCFI34:
 524              	 .cfi_restore 7
 525              	 .cfi_def_cfa_offset 0
 526 007a 7047     	 bx lr
 527              	.L28:
 528              	 .align 2
 529              	.L27:
 530 007c 004A0050 	 .word 1342196224
 531              	 .cfi_endproc
 532              	.LFE179:
 534              	 .section .text.XMC_RTC_SetAlarm,"ax",%progbits
 535              	 .align 2
 536              	 .global XMC_RTC_SetAlarm
 537              	 .thumb
 538              	 .thumb_func
 540              	XMC_RTC_SetAlarm:
 541              	.LFB180:
 221:../Libraries/XMCLib/src/xmc_rtc.c **** 
 222:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 223:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value
 224:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 225:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm)
 226:../Libraries/XMCLib/src/xmc_rtc.c **** {
 542              	 .loc 2 226 0
 543              	 .cfi_startproc
 544              	 
 545              	 
 546 0000 80B5     	 push {r7,lr}
 547              	.LCFI35:
 548              	 .cfi_def_cfa_offset 8
 549              	 .cfi_offset 7,-8
 550              	 .cfi_offset 14,-4
 551 0002 82B0     	 sub sp,sp,#8
 552              	.LCFI36:
 553              	 .cfi_def_cfa_offset 16
 554 0004 00AF     	 add r7,sp,#0
 555              	.LCFI37:
 556              	 .cfi_def_cfa_register 7
 557 0006 7860     	 str r0,[r7,#4]
 227:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong seconds value", ((uint32_t)alarm->seconds < XMC_RTC_MAXSECONDS
 228:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong minutes value", ((uint32_t)alarm->minutes < XMC_RTC_MAXMINUTES
 229:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong hours value", ((uint32_t)alarm->hours < XMC_RTC_MAXHOURS));
 230:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong month value", ((uint32_t)alarm->month < XMC_RTC_MAXMONTH));
 231:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong year value", ((uint32_t)alarm->year < XMC_RTC_MAXYEAR));
 232:../Libraries/XMCLib/src/xmc_rtc.c **** 
 233:../Libraries/XMCLib/src/xmc_rtc.c **** #if (XMC_RTC_INIT_SEQUENCE == 1U)
 234:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 558              	 .loc 2 234 0
 559 0008 00BF     	 nop
 560              	.L30:
 561              	 .loc 2 234 0 is_stmt 0 discriminator 1
 562 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 563 000e 0346     	 mov r3,r0
 564 0010 03F40073 	 and r3,r3,#512
 565 0014 002B     	 cmp r3,#0
 566 0016 F8D1     	 bne .L30
 235:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 236:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 237:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 238:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->ATIM0 = alarm->raw0;
 567              	 .loc 2 238 0 is_stmt 1
 568 0018 094A     	 ldr r2,.L32
 569 001a 7B68     	 ldr r3,[r7,#4]
 570 001c 1B68     	 ldr r3,[r3]
 571 001e 9361     	 str r3,[r2,#24]
 239:../Libraries/XMCLib/src/xmc_rtc.c **** 
 240:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 572              	 .loc 2 240 0
 573 0020 00BF     	 nop
 574              	.L31:
 575              	 .loc 2 240 0 is_stmt 0 discriminator 1
 576 0022 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 577 0026 0346     	 mov r3,r0
 578 0028 03F48063 	 and r3,r3,#1024
 579 002c 002B     	 cmp r3,#0
 580 002e F8D1     	 bne .L31
 241:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 242:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 243:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 244:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->ATIM1 = alarm->raw1;
 581              	 .loc 2 244 0 is_stmt 1
 582 0030 034A     	 ldr r2,.L32
 583 0032 7B68     	 ldr r3,[r7,#4]
 584 0034 5B68     	 ldr r3,[r3,#4]
 585 0036 D361     	 str r3,[r2,#28]
 245:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
 246:../Libraries/XMCLib/src/xmc_rtc.c **** #if (XMC_RTC_INIT_SEQUENCE == 0U)
 247:../Libraries/XMCLib/src/xmc_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk | SCU_GENERAL_MIRRSTS_RTC_
 248:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 249:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 250:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 251:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->ATIM0 = alarm->raw0;
 252:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->ATIM1 = alarm->raw1;
 253:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
 254:../Libraries/XMCLib/src/xmc_rtc.c **** }
 586              	 .loc 2 254 0
 587 0038 0837     	 adds r7,r7,#8
 588              	.LCFI38:
 589              	 .cfi_def_cfa_offset 8
 590 003a BD46     	 mov sp,r7
 591              	.LCFI39:
 592              	 .cfi_def_cfa_register 13
 593              	 
 594 003c 80BD     	 pop {r7,pc}
 595              	.L33:
 596 003e 00BF     	 .align 2
 597              	.L32:
 598 0040 004A0050 	 .word 1342196224
 599              	 .cfi_endproc
 600              	.LFE180:
 602              	 .section .text.XMC_RTC_GetAlarm,"ax",%progbits
 603              	 .align 2
 604              	 .global XMC_RTC_GetAlarm
 605              	 .thumb
 606              	 .thumb_func
 608              	XMC_RTC_GetAlarm:
 609              	.LFB181:
 255:../Libraries/XMCLib/src/xmc_rtc.c **** 
 256:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 257:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value
 258:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 259:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm)
 260:../Libraries/XMCLib/src/xmc_rtc.c **** {
 610              	 .loc 2 260 0
 611              	 .cfi_startproc
 612              	 
 613              	 
 614              	 
 615 0000 80B4     	 push {r7}
 616              	.LCFI40:
 617              	 .cfi_def_cfa_offset 4
 618              	 .cfi_offset 7,-4
 619 0002 83B0     	 sub sp,sp,#12
 620              	.LCFI41:
 621              	 .cfi_def_cfa_offset 16
 622 0004 00AF     	 add r7,sp,#0
 623              	.LCFI42:
 624              	 .cfi_def_cfa_register 7
 625 0006 7860     	 str r0,[r7,#4]
 261:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 626              	 .loc 2 261 0
 627 0008 064B     	 ldr r3,.L35
 628 000a 9A69     	 ldr r2,[r3,#24]
 629 000c 7B68     	 ldr r3,[r7,#4]
 630 000e 1A60     	 str r2,[r3]
 262:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 631              	 .loc 2 262 0
 632 0010 044B     	 ldr r3,.L35
 633 0012 DA69     	 ldr r2,[r3,#28]
 634 0014 7B68     	 ldr r3,[r7,#4]
 635 0016 5A60     	 str r2,[r3,#4]
 263:../Libraries/XMCLib/src/xmc_rtc.c **** }
 636              	 .loc 2 263 0
 637 0018 0C37     	 adds r7,r7,#12
 638              	.LCFI43:
 639              	 .cfi_def_cfa_offset 4
 640 001a BD46     	 mov sp,r7
 641              	.LCFI44:
 642              	 .cfi_def_cfa_register 13
 643              	 
 644 001c 5DF8047B 	 ldr r7,[sp],#4
 645              	.LCFI45:
 646              	 .cfi_restore 7
 647              	 .cfi_def_cfa_offset 0
 648 0020 7047     	 bx lr
 649              	.L36:
 650 0022 00BF     	 .align 2
 651              	.L35:
 652 0024 004A0050 	 .word 1342196224
 653              	 .cfi_endproc
 654              	.LFE181:
 656              	 .section .text.XMC_RTC_SetAlarmStdFormat,"ax",%progbits
 657              	 .align 2
 658              	 .global XMC_RTC_SetAlarmStdFormat
 659              	 .thumb
 660              	 .thumb_func
 662              	XMC_RTC_SetAlarmStdFormat:
 663              	.LFB182:
 264:../Libraries/XMCLib/src/xmc_rtc.c **** 
 265:../Libraries/XMCLib/src/xmc_rtc.c **** 
 266:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 267:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value in standard format
 268:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 269:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarmStdFormat(const struct tm *const stdtime)
 270:../Libraries/XMCLib/src/xmc_rtc.c **** {
 664              	 .loc 2 270 0
 665              	 .cfi_startproc
 666              	 
 667              	 
 668 0000 80B5     	 push {r7,lr}
 669              	.LCFI46:
 670              	 .cfi_def_cfa_offset 8
 671              	 .cfi_offset 7,-8
 672              	 .cfi_offset 14,-4
 673 0002 84B0     	 sub sp,sp,#16
 674              	.LCFI47:
 675              	 .cfi_def_cfa_offset 24
 676 0004 00AF     	 add r7,sp,#0
 677              	.LCFI48:
 678              	 .cfi_def_cfa_register 7
 679 0006 7860     	 str r0,[r7,#4]
 271:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 272:../Libraries/XMCLib/src/xmc_rtc.c **** 
 273:../Libraries/XMCLib/src/xmc_rtc.c **** 
 274:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.seconds = stdtime->tm_sec;
 680              	 .loc 2 274 0
 681 0008 7B68     	 ldr r3,[r7,#4]
 682 000a 1B68     	 ldr r3,[r3]
 683 000c DBB2     	 uxtb r3,r3
 684 000e 03F03F03 	 and r3,r3,#63
 685 0012 DAB2     	 uxtb r2,r3
 686 0014 3B7A     	 ldrb r3,[r7,#8]
 687 0016 62F30503 	 bfi r3,r2,#0,#6
 688 001a 3B72     	 strb r3,[r7,#8]
 275:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.minutes = stdtime->tm_min;
 689              	 .loc 2 275 0
 690 001c 7B68     	 ldr r3,[r7,#4]
 691 001e 5B68     	 ldr r3,[r3,#4]
 692 0020 DBB2     	 uxtb r3,r3
 693 0022 03F03F03 	 and r3,r3,#63
 694 0026 DAB2     	 uxtb r2,r3
 695 0028 7B7A     	 ldrb r3,[r7,#9]
 696 002a 62F30503 	 bfi r3,r2,#0,#6
 697 002e 7B72     	 strb r3,[r7,#9]
 276:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.hours = stdtime->tm_hour;
 698              	 .loc 2 276 0
 699 0030 7B68     	 ldr r3,[r7,#4]
 700 0032 9B68     	 ldr r3,[r3,#8]
 701 0034 DBB2     	 uxtb r3,r3
 702 0036 03F01F03 	 and r3,r3,#31
 703 003a DAB2     	 uxtb r2,r3
 704 003c BB7A     	 ldrb r3,[r7,#10]
 705 003e 62F30403 	 bfi r3,r2,#0,#5
 706 0042 BB72     	 strb r3,[r7,#10]
 277:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.days = stdtime->tm_mday - 1;
 707              	 .loc 2 277 0
 708 0044 7B68     	 ldr r3,[r7,#4]
 709 0046 DB68     	 ldr r3,[r3,#12]
 710 0048 DBB2     	 uxtb r3,r3
 711 004a 013B     	 subs r3,r3,#1
 712 004c DBB2     	 uxtb r3,r3
 713 004e 03F01F03 	 and r3,r3,#31
 714 0052 DAB2     	 uxtb r2,r3
 715 0054 FB7A     	 ldrb r3,[r7,#11]
 716 0056 62F30403 	 bfi r3,r2,#0,#5
 717 005a FB72     	 strb r3,[r7,#11]
 278:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.month = stdtime->tm_mon;
 718              	 .loc 2 278 0
 719 005c 7B68     	 ldr r3,[r7,#4]
 720 005e 1B69     	 ldr r3,[r3,#16]
 721 0060 DBB2     	 uxtb r3,r3
 722 0062 03F00F03 	 and r3,r3,#15
 723 0066 DAB2     	 uxtb r2,r3
 724 0068 7B7B     	 ldrb r3,[r7,#13]
 725 006a 62F30303 	 bfi r3,r2,#0,#4
 726 006e 7B73     	 strb r3,[r7,#13]
 279:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 727              	 .loc 2 279 0
 728 0070 7B68     	 ldr r3,[r7,#4]
 729 0072 5B69     	 ldr r3,[r3,#20]
 730 0074 9BB2     	 uxth r3,r3
 731 0076 03F26C73 	 addw r3,r3,#1900
 732 007a 9BB2     	 uxth r3,r3
 733 007c FB81     	 strh r3,[r7,#14]
 280:../Libraries/XMCLib/src/xmc_rtc.c **** 
 281:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetAlarm(&alarm);
 734              	 .loc 2 281 0
 735 007e 07F10803 	 add r3,r7,#8
 736 0082 1846     	 mov r0,r3
 737 0084 FFF7FEFF 	 bl XMC_RTC_SetAlarm
 282:../Libraries/XMCLib/src/xmc_rtc.c **** }
 738              	 .loc 2 282 0
 739 0088 1037     	 adds r7,r7,#16
 740              	.LCFI49:
 741              	 .cfi_def_cfa_offset 8
 742 008a BD46     	 mov sp,r7
 743              	.LCFI50:
 744              	 .cfi_def_cfa_register 13
 745              	 
 746 008c 80BD     	 pop {r7,pc}
 747              	 .cfi_endproc
 748              	.LFE182:
 750 008e 00BF     	 .section .text.XMC_RTC_GetAlarmStdFormat,"ax",%progbits
 751              	 .align 2
 752              	 .global XMC_RTC_GetAlarmStdFormat
 753              	 .thumb
 754              	 .thumb_func
 756              	XMC_RTC_GetAlarmStdFormat:
 757              	.LFB183:
 283:../Libraries/XMCLib/src/xmc_rtc.c **** 
 284:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 285:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value in standard format
 286:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 287:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime)
 288:../Libraries/XMCLib/src/xmc_rtc.c **** {
 758              	 .loc 2 288 0
 759              	 .cfi_startproc
 760              	 
 761              	 
 762              	 
 763 0000 80B4     	 push {r7}
 764              	.LCFI51:
 765              	 .cfi_def_cfa_offset 4
 766              	 .cfi_offset 7,-4
 767 0002 85B0     	 sub sp,sp,#20
 768              	.LCFI52:
 769              	 .cfi_def_cfa_offset 24
 770 0004 00AF     	 add r7,sp,#0
 771              	.LCFI53:
 772              	 .cfi_def_cfa_register 7
 773 0006 7860     	 str r0,[r7,#4]
 289:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 290:../Libraries/XMCLib/src/xmc_rtc.c **** 
 291:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw0 = RTC->ATIM0;
 774              	 .loc 2 291 0
 775 0008 194B     	 ldr r3,.L39
 776 000a 9B69     	 ldr r3,[r3,#24]
 777 000c BB60     	 str r3,[r7,#8]
 292:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw1 = RTC->ATIM1;
 778              	 .loc 2 292 0
 779 000e 184B     	 ldr r3,.L39
 780 0010 DB69     	 ldr r3,[r3,#28]
 781 0012 FB60     	 str r3,[r7,#12]
 293:../Libraries/XMCLib/src/xmc_rtc.c **** 
 294:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)alarm.seconds;
 782              	 .loc 2 294 0
 783 0014 3B7A     	 ldrb r3,[r7,#8]
 784 0016 C3F30503 	 ubfx r3,r3,#0,#6
 785 001a DBB2     	 uxtb r3,r3
 786 001c 1A46     	 mov r2,r3
 787 001e 7B68     	 ldr r3,[r7,#4]
 788 0020 1A60     	 str r2,[r3]
 295:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)alarm.minutes;
 789              	 .loc 2 295 0
 790 0022 7B7A     	 ldrb r3,[r7,#9]
 791 0024 C3F30503 	 ubfx r3,r3,#0,#6
 792 0028 DBB2     	 uxtb r3,r3
 793 002a 1A46     	 mov r2,r3
 794 002c 7B68     	 ldr r3,[r7,#4]
 795 002e 5A60     	 str r2,[r3,#4]
 296:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)alarm.hours;
 796              	 .loc 2 296 0
 797 0030 BB7A     	 ldrb r3,[r7,#10]
 798 0032 C3F30403 	 ubfx r3,r3,#0,#5
 799 0036 DBB2     	 uxtb r3,r3
 800 0038 1A46     	 mov r2,r3
 801 003a 7B68     	 ldr r3,[r7,#4]
 802 003c 9A60     	 str r2,[r3,#8]
 297:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)alarm.days + (int8_t)1);
 803              	 .loc 2 297 0
 804 003e FB7A     	 ldrb r3,[r7,#11]
 805 0040 C3F30403 	 ubfx r3,r3,#0,#5
 806 0044 DBB2     	 uxtb r3,r3
 807 0046 5A1C     	 adds r2,r3,#1
 808 0048 7B68     	 ldr r3,[r7,#4]
 809 004a DA60     	 str r2,[r3,#12]
 298:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)alarm.month;
 810              	 .loc 2 298 0
 811 004c 7B7B     	 ldrb r3,[r7,#13]
 812 004e C3F30303 	 ubfx r3,r3,#0,#4
 813 0052 DBB2     	 uxtb r3,r3
 814 0054 1A46     	 mov r2,r3
 815 0056 7B68     	 ldr r3,[r7,#4]
 816 0058 1A61     	 str r2,[r3,#16]
 299:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)alarm.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 817              	 .loc 2 299 0
 818 005a FB89     	 ldrh r3,[r7,#14]
 819 005c A3F26C72 	 subw r2,r3,#1900
 820 0060 7B68     	 ldr r3,[r7,#4]
 821 0062 5A61     	 str r2,[r3,#20]
 300:../Libraries/XMCLib/src/xmc_rtc.c **** }
 822              	 .loc 2 300 0
 823 0064 1437     	 adds r7,r7,#20
 824              	.LCFI54:
 825              	 .cfi_def_cfa_offset 4
 826 0066 BD46     	 mov sp,r7
 827              	.LCFI55:
 828              	 .cfi_def_cfa_register 13
 829              	 
 830 0068 5DF8047B 	 ldr r7,[sp],#4
 831              	.LCFI56:
 832              	 .cfi_restore 7
 833              	 .cfi_def_cfa_offset 0
 834 006c 7047     	 bx lr
 835              	.L40:
 836 006e 00BF     	 .align 2
 837              	.L39:
 838 0070 004A0050 	 .word 1342196224
 839              	 .cfi_endproc
 840              	.LFE183:
 842              	 .section .text.XMC_RTC_GetEventStatus,"ax",%progbits
 843              	 .align 2
 844              	 .global XMC_RTC_GetEventStatus
 845              	 .thumb
 846              	 .thumb_func
 848              	XMC_RTC_GetEventStatus:
 849              	.LFB184:
 301:../Libraries/XMCLib/src/xmc_rtc.c **** 
 302:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 303:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC periodic and alarm event(s) status
 304:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 305:../Libraries/XMCLib/src/xmc_rtc.c **** uint32_t XMC_RTC_GetEventStatus(void)
 306:../Libraries/XMCLib/src/xmc_rtc.c **** {
 850              	 .loc 2 306 0
 851              	 .cfi_startproc
 852              	 
 853              	 
 854              	 
 855 0000 80B4     	 push {r7}
 856              	.LCFI57:
 857              	 .cfi_def_cfa_offset 4
 858              	 .cfi_offset 7,-4
 859 0002 00AF     	 add r7,sp,#0
 860              	.LCFI58:
 861              	 .cfi_def_cfa_register 7
 307:../Libraries/XMCLib/src/xmc_rtc.c ****   return RTC->STSSR;
 862              	 .loc 2 307 0
 863 0004 034B     	 ldr r3,.L43
 864 0006 DB68     	 ldr r3,[r3,#12]
 308:../Libraries/XMCLib/src/xmc_rtc.c **** }
 865              	 .loc 2 308 0
 866 0008 1846     	 mov r0,r3
 867 000a BD46     	 mov sp,r7
 868              	.LCFI59:
 869              	 .cfi_def_cfa_register 13
 870              	 
 871 000c 5DF8047B 	 ldr r7,[sp],#4
 872              	.LCFI60:
 873              	 .cfi_restore 7
 874              	 .cfi_def_cfa_offset 0
 875 0010 7047     	 bx lr
 876              	.L44:
 877 0012 00BF     	 .align 2
 878              	.L43:
 879 0014 004A0050 	 .word 1342196224
 880              	 .cfi_endproc
 881              	.LFE184:
 883              	 .text
 884              	.Letext0:
 885              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 886              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 887              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 888              	 .file 6 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\time.h"
 889              	 .file 7 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc_rtc.h"
 890              	 .file 8 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Include/cmsis_gcc.h"
 891              	 .file 9 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Include/core_cm4.h"
 892              	 .file 10 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_rtc.c
    {standard input}:20     .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:24     .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:56     .text.XMC_SCU_GetMirrorStatus:00000014 $d
    {standard input}:61     .text.XMC_RTC_Start:00000000 $t
    {standard input}:66     .text.XMC_RTC_Start:00000000 XMC_RTC_Start
    {standard input}:101    .text.XMC_RTC_Start:00000024 $d
    {standard input}:106    .text.XMC_RTC_Stop:00000000 $t
    {standard input}:111    .text.XMC_RTC_Stop:00000000 XMC_RTC_Stop
    {standard input}:145    .text.XMC_RTC_Stop:00000024 $d
    {standard input}:150    .text.XMC_RTC_SetPrescaler:00000000 $t
    {standard input}:155    .text.XMC_RTC_SetPrescaler:00000000 XMC_RTC_SetPrescaler
    {standard input}:206    .text.XMC_RTC_SetPrescaler:00000030 $d
    {standard input}:211    .text.XMC_RTC_SetTime:00000000 $t
    {standard input}:216    .text.XMC_RTC_SetTime:00000000 XMC_RTC_SetTime
    {standard input}:274    .text.XMC_RTC_SetTime:00000040 $d
    {standard input}:279    .text.XMC_RTC_GetTime:00000000 $t
    {standard input}:284    .text.XMC_RTC_GetTime:00000000 XMC_RTC_GetTime
    {standard input}:328    .text.XMC_RTC_GetTime:00000024 $d
    {standard input}:333    .text.XMC_RTC_SetTimeStdFormat:00000000 $t
    {standard input}:338    .text.XMC_RTC_SetTimeStdFormat:00000000 XMC_RTC_SetTimeStdFormat
    {standard input}:436    .text.XMC_RTC_GetTimeStdFormat:00000000 $t
    {standard input}:441    .text.XMC_RTC_GetTimeStdFormat:00000000 XMC_RTC_GetTimeStdFormat
    {standard input}:530    .text.XMC_RTC_GetTimeStdFormat:0000007c $d
    {standard input}:535    .text.XMC_RTC_SetAlarm:00000000 $t
    {standard input}:540    .text.XMC_RTC_SetAlarm:00000000 XMC_RTC_SetAlarm
    {standard input}:598    .text.XMC_RTC_SetAlarm:00000040 $d
    {standard input}:603    .text.XMC_RTC_GetAlarm:00000000 $t
    {standard input}:608    .text.XMC_RTC_GetAlarm:00000000 XMC_RTC_GetAlarm
    {standard input}:652    .text.XMC_RTC_GetAlarm:00000024 $d
    {standard input}:657    .text.XMC_RTC_SetAlarmStdFormat:00000000 $t
    {standard input}:662    .text.XMC_RTC_SetAlarmStdFormat:00000000 XMC_RTC_SetAlarmStdFormat
    {standard input}:751    .text.XMC_RTC_GetAlarmStdFormat:00000000 $t
    {standard input}:756    .text.XMC_RTC_GetAlarmStdFormat:00000000 XMC_RTC_GetAlarmStdFormat
    {standard input}:838    .text.XMC_RTC_GetAlarmStdFormat:00000070 $d
    {standard input}:843    .text.XMC_RTC_GetEventStatus:00000000 $t
    {standard input}:848    .text.XMC_RTC_GetEventStatus:00000000 XMC_RTC_GetEventStatus
    {standard input}:879    .text.XMC_RTC_GetEventStatus:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
