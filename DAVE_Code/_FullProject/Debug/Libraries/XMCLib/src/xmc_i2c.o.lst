   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_i2c.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_GetTransmitBufferStatus:
  25              	.LFB158:
  26              	 .file 1 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 845:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 846:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 847:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 848:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1073:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1074:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1075:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1076:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1091:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1092:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1093:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1098:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1099:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t transmit_control_information)
1133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value
1183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly.
1225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
1273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1293:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1294:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1295:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1296:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1297:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1298:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1299:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1300:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1301:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1302:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1303:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1304:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1305:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1306:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1309:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1310:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1311:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1312:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1313:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1314:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1316:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1317:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1318:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1318 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1319:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  43              	 .loc 1 1319 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 9B6B     	 ldr r3,[r3,#56]
  46 000c DBB2     	 uxtb r3,r3
  47 000e 23F07F03 	 bic r3,r3,#127
  48 0012 DBB2     	 uxtb r3,r3
1320:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
  49              	 .loc 1 1320 0
  50 0014 1846     	 mov r0,r3
  51 0016 0C37     	 adds r7,r7,#12
  52              	.LCFI3:
  53              	 .cfi_def_cfa_offset 4
  54 0018 BD46     	 mov sp,r7
  55              	.LCFI4:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 001a 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI5:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 001e 7047     	 bx lr
  63              	 .cfi_endproc
  64              	.LFE158:
  66              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  67              	 .align 2
  68              	 .thumb
  69              	 .thumb_func
  71              	XMC_USIC_CH_SetMode:
  72              	.LFB199:
1321:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1323:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1324:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1327:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1328:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1329:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1330:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1331:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1332:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1333:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1334:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte.
1335:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1336:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1337:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1338:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1339:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1340:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1341:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1342:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1343:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1344:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1345:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1346:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1347:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1348:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1349:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1350:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1351:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1352:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1353:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1354:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1355:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1356:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1357:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1358:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1359:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1360:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1361:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1362:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1363:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1364:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1365:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)
1366:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1367:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1368:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1369:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1370:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1372:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1373:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1374:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1375:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1376:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1380:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1381:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1382:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1383:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1384:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1385:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1386:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)
1387:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1388:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1389:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1390:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1391:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1392:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1393:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1394:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1395:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1396:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1397:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1398:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the
1399:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1400:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1401:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1402:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1403:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1404:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1405:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1406:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1407:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1408:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1409:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1410:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1411:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1412:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1413:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1414:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1415:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1416:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1417:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1418:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1419:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1420:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1421:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of word length. \n\n
1422:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of word length is enabled, word length is configured based on the
1423:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is con
1424:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1425:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1426:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1428:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1429:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1430:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableWordLengthControl(XMC_USIC_CH_t *const channel)
1431:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1432:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1433:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_SELMD_Msk |
1434:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_WAMD_Msk |
1435:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                              USIC_CH_TCSR_HPCMD_Msk))) |
1436:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)USIC_CH_TCSR_WLEMD_Msk;
1437:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1438:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1439:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1440:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1441:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1442:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1443:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1444:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1445:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1446:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1447:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1448:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1449:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1451:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1452:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1453:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1454:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1455:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1456:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1457:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1458:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1459:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1460:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1461:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1462:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1463:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of word length. \n\n
1464:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of word length is disabled, word length has to configured explicitly.
1465:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Word length remains fixed until it is changed again.
1466:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1467:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1468:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl(), XMC_USIC_CH_SetWordLength() \n\n\n
1469:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1470:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableWordLengthControl(XMC_USIC_CH_t *const channel)
1471:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1472:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_WLEMD_Msk;
1473:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1474:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1475:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1476:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1477:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1478:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1479:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1480:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1481:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1482:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1483:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1484:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1485:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1486:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1487:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1488:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1489:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1490:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1491:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1492:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1493:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1494:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1495:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1496:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1497:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1498:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1499:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1500:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1501:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1502:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1503:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1504:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1505:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1506:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1507:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1508:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1509:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1510:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1511:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1512:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1513:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1514:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1515:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1516:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1517:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1518:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1519:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be
1520:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled.
1521:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1522:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1524:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1526:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1528:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1534:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1535:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1536:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1537:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1538:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1539:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1540:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1541:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1542:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1543:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1544:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)
1545:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1547:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1553:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1554:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1557:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1560:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_InvalidateReadData(XMC_USIC_CH_t *const channel)
1562:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = USIC_CH_FMR_CRDV0_Msk | USIC_CH_FMR_CRDV1_Msk;
1564:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1567:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1568:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1569:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1570:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1571:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1572:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1573:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1574:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1575:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1576:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the
1577:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1578:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1579:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1580:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1581:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1582:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1583:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)
1584:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1586:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1587:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1588:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1589:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1590:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1591:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1592:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1593:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1594:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1595:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1596:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1597:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1598:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1599:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1603:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1604:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1605:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1606:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1607:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1608:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1609:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1610:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1611:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1612:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1613:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1614:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1615:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1616:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1617:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1618:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1619:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1620:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1621:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1622:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1623:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1624:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1625:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() }
1627:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1628:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1629:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1630:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the
1631:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1632:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1633:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1635:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1636:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1637:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1638:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
1639:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1640:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1641:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1642:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1643:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1644:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1645:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
1646:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1647:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1648:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1649:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
1650:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1651:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1652:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1653:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1654:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
1655:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
1656:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1657:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR = (channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) | ((limit << USIC_CH_TBCTR
1658:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1659:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1660:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1661:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1666:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1667:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1668:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1669:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1670:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1671:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
1672:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1673:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1674:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1675:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1676:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1677:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1678:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1679:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1680:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1681:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1682:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1683:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1684:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1685:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1686:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1687:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1688:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1689:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1690:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1691:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1692:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1693:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1694:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
1695:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent().
1696:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1697:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1698:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1699:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1700:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1701:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1702:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1703:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1704:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1705:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1706:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1710:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1711:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1712:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1713:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1714:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1715:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1716:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1717:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1718:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1719:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1720:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1721:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1722:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1723:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1724:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1725:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1726:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1727:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1728:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1729:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1730:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1731:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1732:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
1733:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
1734:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1735:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1736:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1737:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1738:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1739:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1740:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1741:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1742:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1744:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1745:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1746:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1747:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1748:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1749:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1750:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1751:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1752:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1753:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1754:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1755:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1756:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1757:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1758:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1759:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1760:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param loc Input location. \n
1761:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1762:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1763:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1764:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit data can be loaded to TBUF by software by writing to the transmit buffer input
1765:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written
1766:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * to one of these input locations is stored in the transmit buffer TBUF. Additionally, the
1767:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * address of the written location is evaluated and can be used for additional control
1768:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * purposes. This 5-bit wide information (named Transmit Control Information TCI) can be
1769:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * used for different purposes in different protocols.
1770:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableWordLengthControl() \n
1773:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1774:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1775:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataEx(XMC_USIC_CH_t *const channel, const uint16_t data
1776:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1777:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[loc] = data;
1778:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1779:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1780:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1781:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1782:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1783:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1784:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1785:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1786:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1787:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1788:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1789:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1790:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1791:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1792:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1793:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1794:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1795:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_PutDataEx() \n
1796:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1797:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1798:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1799:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1800:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1801:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1802:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1803:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1804:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1805:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1806:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1807:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1808:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1809:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1810:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1811:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1812:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1813:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1814:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1815:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1816:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral.
1817:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1818:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1819:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1821:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1822:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1823:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t data,
1824:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t frame_length)
1825:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1826:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1827:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1828:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1829:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1830:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1831:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1832:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1833:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1834:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1835:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1836:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1837:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1839:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1840:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1841:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1842:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1843:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1844:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1845:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1846:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1847:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1848:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1849:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1850:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1851:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1852:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1853:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1854:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1855:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1856:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1857:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1858:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1859:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1860:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1861:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1862:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1863:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1864:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1865:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1866:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1867:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1868:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1869:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1870:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1872:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1873:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1874:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO,
1875:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1876:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1877:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1878:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1879:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1880:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1881:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1882:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1883:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1884:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1885:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1886:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1887:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1888:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n
1889:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1890:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1891:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1892:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1893:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1894:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1895:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1896:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1897:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1898:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1899:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1900:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1901:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1902:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1903:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1904:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1905:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1906:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1907:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1908:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1909:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1910:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1911:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1912:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1913:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1914:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1915:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1916:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1917:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1918:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1919:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1920:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1921:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1922:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1923:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1924:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_TBERI_Msk));
1925:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1926:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1927:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1928:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1929:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1930:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1931:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1932:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1933:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1934:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1935:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1936:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1937:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
1938:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1939:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
1940:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1941:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1942:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1943:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1944:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1945:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1946:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
1947:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
1948:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1949:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
1950:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1951:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1952:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1953:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1954:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1955:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1956:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1957:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1958:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1959:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1960:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1961:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1962:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1963:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1964:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1965:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1966:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1967:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1968:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1969:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1971:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1972:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** */
1973:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1974:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1975:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1976:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1977:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
1978:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
1979:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1980:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1981:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1982:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1983:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1984:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1985:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1986:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1987:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \deprecated { Use XMC_USIC_CH_RXFIFO_SetTriggerLimit() }
1988:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1989:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1990:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1991:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the
1992:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1993:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
1994:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1995:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1996:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
1997:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1998:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_FIFO_SIZE_t size,
1999:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit);
2000:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2001:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2002:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2003:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2004:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
2005:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a fifo size -1.
2006:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2007:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2008:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2009:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the trigger limit for the TX FIFO. \n\n
2010:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2011:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2012:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() \n\n\n
2013:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2014:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_SetTriggerLimit(XMC_USIC_CH_t *const channel,
2015:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t limit)
2016:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2017:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR = (channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) | ((limit << USIC_CH_RBCTR
2018:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2019:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2020:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2021:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2022:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2023:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
2024:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2025:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2026:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2027:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
2028:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
2029:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing
2030:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
2031:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2032:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
2033:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
2034:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2035:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2036:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
2037:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2038:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
2039:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2040:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
2041:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2042:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2043:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2044:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2045:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2046:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2047:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
2048:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
2049:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
2050:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2051:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2052:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2053:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
2054:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event
2055:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent().
2056:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
2057:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
2058:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2059:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2060:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2061:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2062:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
2063:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2064:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
2065:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2066:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2067:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2068:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2069:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2070:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
2071:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
2072:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
2073:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
2074:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
2075:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2076:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2077:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2078:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
2079:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
2080:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
2081:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
2082:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
2083:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
2084:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
2085:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2086:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
2087:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2088:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2089:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
2090:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2091:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
2092:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
2093:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t service_request);
2094:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2095:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2096:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2097:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2098:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
2099:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
2100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
2103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
2104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
2105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
2106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
2107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
2110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
2112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
2114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
2123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
2124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
2127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
2129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
2131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
2137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
2138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
2141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
2142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
2143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
2146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
2148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
2150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
2156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
2157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
2160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
2161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
2162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
2163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
2168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
2170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
2176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
2177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
2180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
2181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the
2182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
2183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
2186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
2188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
2190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
2196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
2201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
2202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
2203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
2204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
2205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
2207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
2210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
2212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
2214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_RBERI_Msk |
2215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                                         USIC_CH_TRBSR_ARBI_Msk));
2216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
2222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
2223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
2224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
2228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
2229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value.
2230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
2231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of
2232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
2233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
2236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
2238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t event)
2239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
2241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
2250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
2251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
2254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
2256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
2258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
2267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
2268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
2271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
2273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
2275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
2281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
2282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
2286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
2288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t passive_level)
2289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
2291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2293:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2294:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2295:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
2296:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
2297:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
2298:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
2299:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
2300:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
2301:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
2302:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
2303:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2304:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2305:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2306:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
2307:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
2308:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
2309:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
2310:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
2311:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
2312:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2313:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2314:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
2315:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t passive_level,
2316:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t clock_output)
2317:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
2318:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
2319:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                             USIC_CH_BRG_SCLKOSEL_Msk))) |
2320:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
2321:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
2322:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
2323:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** 
2324:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** /**
2325:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
2326:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
2327:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
2328:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
2329:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
2330:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
2331:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
2332:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2333:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
2334:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
2335:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
2336:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2337:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  *
2338:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2339:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2340:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****  */
2341:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2342:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** {
  73              	 .loc 1 2342 0
  74              	 .cfi_startproc
  75              	 
  76              	 
  77              	 
  78 0000 80B4     	 push {r7}
  79              	.LCFI6:
  80              	 .cfi_def_cfa_offset 4
  81              	 .cfi_offset 7,-4
  82 0002 83B0     	 sub sp,sp,#12
  83              	.LCFI7:
  84              	 .cfi_def_cfa_offset 16
  85 0004 00AF     	 add r7,sp,#0
  86              	.LCFI8:
  87              	 .cfi_def_cfa_register 7
  88 0006 7860     	 str r0,[r7,#4]
  89 0008 0B46     	 mov r3,r1
  90 000a FB70     	 strb r3,[r7,#3]
2343:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  91              	 .loc 1 2343 0
  92 000c 7B68     	 ldr r3,[r7,#4]
  93 000e 1B6C     	 ldr r3,[r3,#64]
  94 0010 23F00F02 	 bic r2,r3,#15
  95 0014 FB78     	 ldrb r3,[r7,#3]
  96 0016 1A43     	 orrs r2,r2,r3
  97 0018 7B68     	 ldr r3,[r7,#4]
  98 001a 1A64     	 str r2,[r3,#64]
2344:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_usic.h **** }
  99              	 .loc 1 2344 0
 100 001c 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 001e BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0020 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0024 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE199:
 115 0026 00BF     	 .section .text.XMC_I2C_CH_ClearStatusFlag,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_I2C_CH_ClearStatusFlag:
 121              	.LFB208:
 122              	 .file 2 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2020-12-05
   4:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
   7:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.
  11:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  14:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * do so, all subject to the following:
  20:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  21:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * a source language processor.
  27:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  28:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *****************************************************************************
  40:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  41:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  42:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  43:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  44:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  45:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  46:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  47:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  48:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  49:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  50:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  51:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  52:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  53:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  54:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  55:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  56:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  57:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  58:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  59:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  60:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  61:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  62:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  63:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  64:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  65:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  66:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  68:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  69:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  70:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  71:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  72:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  73:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  74:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  75:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  76:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  77:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  78:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  79:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  80:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  81:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-05-07:
  82:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added normal_divider_mode to XMC_I2C_CH_CONFIG_t configuration structure.
  83:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  84:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetBaudrateEx()
  85:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  86:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-12-10:
  87:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetHoldDelay()
  88:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  89:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2020-12-05:
  90:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *    - Added XMC_I2C_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  91:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  92:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond
  93:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  94:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  95:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
  96:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  97:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  98:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
  99:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 100:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
 101:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 102:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 103:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
 104:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 105:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 106:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
 107:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 108:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 109:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 110:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 111:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
 112:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family.
 113:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 114:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 115:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 116:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 117:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 118:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 119:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 120:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 121:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 122:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 123:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 124:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 125:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 126:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 127:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 128:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 129:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 130:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 131:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 132:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 133:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 134:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 135:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 136:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 137:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 138:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 139:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 140:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 141:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 142:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 143:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 144:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 145:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 146:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 147:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 148:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 149:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 150:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 151:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 152:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 153:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 154:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 155:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 156:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 157:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 158:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 159:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 160:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 161:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 162:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 163:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 164:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 165:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 166:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 167:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 168:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 169:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 170:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 171:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 172:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 173:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 174:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 175:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 176:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 177:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 178:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 179:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 180:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 181:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 182:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 183:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 184:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 185:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 186:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 187:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 188:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 189:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 190:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 191:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 192:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 193:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 194:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 195:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 196:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 197:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 198:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 199:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 200:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 201:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 202:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 203:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 204:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 205:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 206:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 207:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 208:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 209:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 210:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 211:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 212:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 213:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 214:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 215:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 216:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 217:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 218:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 219:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 220:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 221:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 222:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 223:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 224:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 225:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 226:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 227:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 228:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 229:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 230:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 231:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 232:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 233:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 234:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 235:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 236:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 237:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 238:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 239:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 240:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 241:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 242:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 243:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 244:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 245:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 246:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 247:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 248:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 249:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 250:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 251:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 252:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 253:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 254:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 255:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 256:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 257:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 258:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 259:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 260:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 261:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 262:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 263:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 264:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 265:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 266:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 267:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 268:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 269:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 270:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 271:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 272:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 273:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 274:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   bool normal_divider_mode; /**< Selects normal divider mode for baudrate generator instead of defa
 275:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address
 276:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 277:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 278:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 279:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 280:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 281:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 282:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 283:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 284:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 285:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 286:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 287:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 288:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 289:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 290:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 291:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 292:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 293:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 294:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 295:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 296:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 297:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 298:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 299:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 300:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 301:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 302:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 303:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 304:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 305:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config, bool 
 306:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 307:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 308:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 309:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 310:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 311:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 312:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 313:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 314:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 315:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 316:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 317:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 318:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 319:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 320:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 321:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 322:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 323:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const
 324:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 325:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_InitEx(channel, config, true);
 326:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 327:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 328:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 329:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 330:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 331:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 332:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 333:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 335:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 336:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 337:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 338:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 339:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 340:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 341:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 342:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 343:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 344:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 345:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 346:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 347:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 348:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 349:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 350:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 351:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 352:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 353:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 354:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 355:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 356:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 357:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 358:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 359:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 360:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 361:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 362:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 363:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 364:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 365:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 366:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 367:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 368:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 369:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 370:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 371:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 372:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 373:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 374:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 375:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 376:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 377:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 378:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 379:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 380:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 381:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 382:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 383:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 384:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 385:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 386:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 387:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 388:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 389:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 390:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 391:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 392:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 393:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 394:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 395:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 396:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 397:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 398:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 399:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 400:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 401:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 402:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 403:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 404:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 405:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 406:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 407:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 408:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 409:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 410:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 411:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 412:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 413:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 414:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 415:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 416:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 417:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint8_t service_request)
 418:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 419:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 420:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 421:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 422:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 423:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 424:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 425:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 426:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 427:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 428:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 429:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 430:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 431:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 432:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 433:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 434:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 435:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 436:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 437:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 438:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 439:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 440:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 441:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 442:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 443:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****     const XMC_I2C_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 444:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****     const uint32_t service_request)
 445:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 446:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 447:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****                                       (uint32_t)service_request);
 448:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 449:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 450:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 451:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 452:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 453:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 454:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 455:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 456:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 457:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 458:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 459:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 460:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 461:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 462:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 463:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 464:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 465:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 466:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 467:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 468:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 469:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 470:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 471:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 472:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 473:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 474:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 475:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 476:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 477:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 478:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 479:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 480:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 481:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 482:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 483:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 484:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 485:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 486:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 487:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 488:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 489:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 490:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 491:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 492:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 493:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 494:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 495:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 496:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 497:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 498:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 499:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 500:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 501:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 502:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 503:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 504:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 505:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 506:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 507:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 508:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 509:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 510:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 511:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 512:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 513:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 514:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 515:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 516:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 517:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 518:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 519:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 520:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 521:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 522:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 523:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 524:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 525:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 526:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 527:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 528:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 529:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 530:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 531:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 532:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 533:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 534:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 535:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 536:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 537:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 538:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 539:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 540:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 541:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 542:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 543:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 544:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 545:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 546:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 547:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 548:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 549:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 550:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 551:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 552:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 553:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 554:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 555:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 556:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 557:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 558:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 559:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 560:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 561:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 562:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 563:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 564:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 565:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 566:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 567:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 568:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 569:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 570:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 571:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 572:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 573:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 574:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 575:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 576:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 577:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 578:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 579:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 580:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 581:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 582:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 583:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 584:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 585:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 586:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 587:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 588:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 589:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 590:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 591:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 592:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 593:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 594:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 595:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 596:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 597:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 598:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 599:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 600:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 601:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 602:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 603:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 604:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 605:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 606:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 607:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 608:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 609:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 610:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 611:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 612:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 613:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 614:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 615:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 616:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 617:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 618:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 619:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 620:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 621:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 622:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 623:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 624:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 625:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 626:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 627:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 628:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 629:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 630:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 631:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 632:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 633:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 634:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 635:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 636:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 637:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 638:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 639:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 640:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 641:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 642:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 643:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 644:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 645:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 646:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 647:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 648:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 649:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 650:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 651:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 652:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 653:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 654:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 655:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 656:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 657:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 658:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 659:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 660:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 661:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 662:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 663:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 664:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 665:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 666:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 667:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 668:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 669:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 670:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 671:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 672:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 673:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 674:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 675:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 676:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   return ((uint8_t)((channel->RBUF) >> 8U));
 677:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 678:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 679:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 680:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 681:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 682:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 683:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 684:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 685:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 686:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 687:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 688:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 689:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 690:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 691:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 692:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 693:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 694:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 695:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 696:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 697:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 698:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 699:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 700:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 701:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 702:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 703:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 704:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 705:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 706:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 707:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 708:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 709:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 710:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 711:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 712:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 713:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 714:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 715:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 716:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 717:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 718:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 719:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** 
 720:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 721:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 722:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 723:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 724:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 725:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 726:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 727:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 728:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 729:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 730:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 731:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 732:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** {
 123              	 .loc 2 732 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127              	 
 128 0000 80B4     	 push {r7}
 129              	.LCFI12:
 130              	 .cfi_def_cfa_offset 4
 131              	 .cfi_offset 7,-4
 132 0002 83B0     	 sub sp,sp,#12
 133              	.LCFI13:
 134              	 .cfi_def_cfa_offset 16
 135 0004 00AF     	 add r7,sp,#0
 136              	.LCFI14:
 137              	 .cfi_def_cfa_register 7
 138 0006 7860     	 str r0,[r7,#4]
 139 0008 3960     	 str r1,[r7]
 733:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
 140              	 .loc 2 733 0
 141 000a 7B68     	 ldr r3,[r7,#4]
 142 000c DA6C     	 ldr r2,[r3,#76]
 143 000e 3B68     	 ldr r3,[r7]
 144 0010 1A43     	 orrs r2,r2,r3
 145 0012 7B68     	 ldr r3,[r7,#4]
 146 0014 DA64     	 str r2,[r3,#76]
 734:C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/XMCLib/inc\xmc_i2c.h **** }
 147              	 .loc 2 734 0
 148 0016 0C37     	 adds r7,r7,#12
 149              	.LCFI15:
 150              	 .cfi_def_cfa_offset 4
 151 0018 BD46     	 mov sp,r7
 152              	.LCFI16:
 153              	 .cfi_def_cfa_register 13
 154              	 
 155 001a 5DF8047B 	 ldr r7,[sp],#4
 156              	.LCFI17:
 157              	 .cfi_restore 7
 158              	 .cfi_def_cfa_offset 0
 159 001e 7047     	 bx lr
 160              	 .cfi_endproc
 161              	.LFE208:
 163              	 .section .text.XMC_I2C_CH_InitEx,"ax",%progbits
 164              	 .align 2
 165              	 .global XMC_I2C_CH_InitEx
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_I2C_CH_InitEx:
 170              	.LFB217:
 171              	 .file 3 "../Libraries/XMCLib/src/xmc_i2c.c"
   1:../Libraries/XMCLib/src/xmc_i2c.c **** /**
   2:../Libraries/XMCLib/src/xmc_i2c.c ****  * @file xmc_i2c.c
   3:../Libraries/XMCLib/src/xmc_i2c.c ****  * @date 2020-12-05
   4:../Libraries/XMCLib/src/xmc_i2c.c ****  *
   5:../Libraries/XMCLib/src/xmc_i2c.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_i2c.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_i2c.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_i2c.c ****  *
   9:../Libraries/XMCLib/src/xmc_i2c.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_i2c.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  12:../Libraries/XMCLib/src/xmc_i2c.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  14:../Libraries/XMCLib/src/xmc_i2c.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_i2c.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_i2c.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_i2c.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_i2c.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_i2c.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  21:../Libraries/XMCLib/src/xmc_i2c.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_i2c.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_i2c.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_i2c.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_i2c.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_i2c.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  28:../Libraries/XMCLib/src/xmc_i2c.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_i2c.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_i2c.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_i2c.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_i2c.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_i2c.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_i2c.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  36:../Libraries/XMCLib/src/xmc_i2c.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_i2c.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_i2c.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_i2c.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  41:../Libraries/XMCLib/src/xmc_i2c.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_i2c.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  44:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  47:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-05-20:
  48:../Libraries/XMCLib/src/xmc_i2c.c ****        - Modified XMC_I2C_CH_Stop() API for not setting to IDLE the channel if it is busy <br>
  49:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  50:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-06-20:
  51:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Removed GetDriverVersion API <br>
  52:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  53:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-08-14:
  54:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - updated the XMC_I2C_CH_SetBaudrate API to support dynamic change from 400K to low frequenc
  55:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  56:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-09-01:
  57:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Modified XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_DisableEvent() for supporting multiple ev
  58:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  59:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-10-02:
  60:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fixed 10bit addressing
  61:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  62:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2019-05-07:
  63:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Added XMC_I2C_CH_SetBaudrateEx() which allows to select between baudrate generator normal 
  64:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  65:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2019-07-12:
  66:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fixed wrong oversampling setting in case of baudrate greater than 100Kbaud/s
  67:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  68:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2019-12-16:
  69:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  70:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  71:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2020-09-02:
  72:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fixed XMC_I2C_CH_SetSlaveAddress
  73:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  74:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2020-12-05:
  75:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Added XMC_I2C_CH_InitEx that allows user select if automatic baudrate configuration should
  76:../Libraries/XMCLib/src/xmc_i2c.c ****  * 
  77:../Libraries/XMCLib/src/xmc_i2c.c ****  * @endcond
  78:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  79:../Libraries/XMCLib/src/xmc_i2c.c ****  */
  80:../Libraries/XMCLib/src/xmc_i2c.c **** 
  81:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_i2c.c ****  * HEADER FILES
  83:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_i2c.c **** #include "xmc_i2c.h"
  85:../Libraries/XMCLib/src/xmc_i2c.c **** 
  86:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  87:../Libraries/XMCLib/src/xmc_i2c.c ****  * MACROS
  88:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  89:../Libraries/XMCLib/src/xmc_i2c.c **** #define XMC_I2C_7BIT_ADDR_Pos   (8U)		/**< 7-bit address position */
  90:../Libraries/XMCLib/src/xmc_i2c.c **** #define TRANSMISSION_MODE       (3U)		/**< The shift control signal is considered active
  91:../Libraries/XMCLib/src/xmc_i2c.c ****                                                  without referring to the actual signal level. Data
  92:../Libraries/XMCLib/src/xmc_i2c.c ****                                                  frame transfer is possible after each edge of the 
  93:../Libraries/XMCLib/src/xmc_i2c.c **** #define WORDLENGTH              (7U)        /**< Word length */
  94:../Libraries/XMCLib/src/xmc_i2c.c **** #define SET_TDV                 (1U)		/**< Transmission data valid */
  95:../Libraries/XMCLib/src/xmc_i2c.c **** #define XMC_I2C_10BIT_ADDR_MASK (0x7C00U)   /**< Address mask for 10-bit mode */
  96:../Libraries/XMCLib/src/xmc_i2c.c **** 
  97:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  98:../Libraries/XMCLib/src/xmc_i2c.c ****  * ENUMS
  99:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
 100:../Libraries/XMCLib/src/xmc_i2c.c **** 
 101:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_TDF
 102:../Libraries/XMCLib/src/xmc_i2c.c **** {
 103:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_SEND =         0U,
 104:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_SLAVE_SEND =          (uint32_t)1U << 8U,
 105:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK =  (uint32_t)2U << 8U,
 106:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK = (uint32_t)3U << 8U,
 107:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_START =        (uint32_t)4U << 8U,
 108:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RESTART =      (uint32_t)5U << 8U,
 109:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_STOP =         (uint32_t)6U << 8U
 110:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_TDF_t;
 111:../Libraries/XMCLib/src/xmc_i2c.c **** 
 112:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_MAX_SPEED
 113:../Libraries/XMCLib/src/xmc_i2c.c **** {
 114:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_MAX_SPEED_STANDARD = 100000U,
 115:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_MAX_SPEED_FAST = 400000U
 116:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_MAX_SPEED_t;
 117:../Libraries/XMCLib/src/xmc_i2c.c **** 
 118:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_CLOCK_OVERSAMPLING
 119:../Libraries/XMCLib/src/xmc_i2c.c **** {
 120:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_CLOCK_OVERSAMPLING_STANDARD = 10U,
 121:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST     = 25U
 122:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_CLOCK_OVERSAMPLINGS_t;
 123:../Libraries/XMCLib/src/xmc_i2c.c **** 
 124:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
 125:../Libraries/XMCLib/src/xmc_i2c.c ****  * API IMPLEMENTATION
 126:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
 127:../Libraries/XMCLib/src/xmc_i2c.c **** /* Initializes the USIC channel by setting the data format, slave address, baudrate, transfer buffe
 128:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config, bool 
 129:../Libraries/XMCLib/src/xmc_i2c.c **** {
 172              	 .loc 3 129 0
 173              	 .cfi_startproc
 174              	 
 175              	 
 176 0000 80B5     	 push {r7,lr}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 8
 179              	 .cfi_offset 7,-8
 180              	 .cfi_offset 14,-4
 181 0002 84B0     	 sub sp,sp,#16
 182              	.LCFI19:
 183              	 .cfi_def_cfa_offset 24
 184 0004 00AF     	 add r7,sp,#0
 185              	.LCFI20:
 186              	 .cfi_def_cfa_register 7
 187 0006 F860     	 str r0,[r7,#12]
 188 0008 B960     	 str r1,[r7,#8]
 189 000a 1346     	 mov r3,r2
 190 000c FB71     	 strb r3,[r7,#7]
 130:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_USIC_CH_Enable(channel);
 191              	 .loc 3 130 0
 192 000e F868     	 ldr r0,[r7,#12]
 193 0010 FFF7FEFF 	 bl XMC_USIC_CH_Enable
 131:../Libraries/XMCLib/src/xmc_i2c.c **** 
 132:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Data format configuration */
 133:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->SCTR = ((uint32_t)TRANSMISSION_MODE << (uint32_t)USIC_CH_SCTR_TRM_Pos) | /* Transmision 
 194              	 .loc 3 133 0
 195 0014 FB68     	 ldr r3,[r7,#12]
 196 0016 114A     	 ldr r2,.L7
 197 0018 5A63     	 str r2,[r3,#52]
 134:../Libraries/XMCLib/src/xmc_i2c.c ****                   ((uint32_t)WORDLENGTH << (uint32_t)USIC_CH_SCTR_WLE_Pos) | /* 8 data bits */
 135:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_FLE_Msk |           /* unlimited data flow */
 136:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_SDIR_Msk |          /* MSB shifted first */
 137:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_PDL_Msk;            /* Passive Data Level */
 138:../Libraries/XMCLib/src/xmc_i2c.c **** 
 139:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_SetSlaveAddress(channel, config->address);
 198              	 .loc 3 139 0
 199 001a BB68     	 ldr r3,[r7,#8]
 200 001c DB88     	 ldrh r3,[r3,#6]
 201 001e F868     	 ldr r0,[r7,#12]
 202 0020 1946     	 mov r1,r3
 203 0022 FFF7FEFF 	 bl XMC_I2C_CH_SetSlaveAddress
 140:../Libraries/XMCLib/src/xmc_i2c.c **** 
 141:../Libraries/XMCLib/src/xmc_i2c.c ****   if (init_brg)
 204              	 .loc 3 141 0
 205 0026 FB79     	 ldrb r3,[r7,#7]
 206 0028 002B     	 cmp r3,#0
 207 002a 08D0     	 beq .L6
 142:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 143:../Libraries/XMCLib/src/xmc_i2c.c ****     (void)XMC_I2C_CH_SetBaudrateEx(channel, config->baudrate, config->normal_divider_mode);
 208              	 .loc 3 143 0
 209 002c BB68     	 ldr r3,[r7,#8]
 210 002e 1A68     	 ldr r2,[r3]
 211 0030 BB68     	 ldr r3,[r7,#8]
 212 0032 1B79     	 ldrb r3,[r3,#4]
 213 0034 F868     	 ldr r0,[r7,#12]
 214 0036 1146     	 mov r1,r2
 215 0038 1A46     	 mov r2,r3
 216 003a FFF7FEFF 	 bl XMC_I2C_CH_SetBaudrateEx
 217              	.L6:
 144:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 145:../Libraries/XMCLib/src/xmc_i2c.c **** 
 146:../Libraries/XMCLib/src/xmc_i2c.c **** 
 147:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Enable transfer buffer */
 148:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->TCSR = ((uint32_t)SET_TDV << (uint32_t)USIC_CH_TCSR_TDEN_Pos) | USIC_CH_TCSR_TDSSM_Msk;
 218              	 .loc 3 148 0
 219 003e FB68     	 ldr r3,[r7,#12]
 220 0040 4FF4A062 	 mov r2,#1280
 221 0044 9A63     	 str r2,[r3,#56]
 149:../Libraries/XMCLib/src/xmc_i2c.c **** 
 150:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Clear status flags */
 151:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PSCR = 0xFFFFFFFFU;
 222              	 .loc 3 151 0
 223 0046 FB68     	 ldr r3,[r7,#12]
 224 0048 4FF0FF32 	 mov r2,#-1
 225 004c DA64     	 str r2,[r3,#76]
 152:../Libraries/XMCLib/src/xmc_i2c.c **** 
 153:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Disable parity generation */
 154:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR = 0x0U;
 226              	 .loc 3 154 0
 227 004e FB68     	 ldr r3,[r7,#12]
 228 0050 0022     	 movs r2,#0
 229 0052 1A64     	 str r2,[r3,#64]
 155:../Libraries/XMCLib/src/xmc_i2c.c **** }
 230              	 .loc 3 155 0
 231 0054 1037     	 adds r7,r7,#16
 232              	.LCFI21:
 233              	 .cfi_def_cfa_offset 8
 234 0056 BD46     	 mov sp,r7
 235              	.LCFI22:
 236              	 .cfi_def_cfa_register 13
 237              	 
 238 0058 80BD     	 pop {r7,pc}
 239              	.L8:
 240 005a 00BF     	 .align 2
 241              	.L7:
 242 005c 03033F07 	 .word 121570051
 243              	 .cfi_endproc
 244              	.LFE217:
 246              	 .section .text.XMC_I2C_CH_SetSlaveAddress,"ax",%progbits
 247              	 .align 2
 248              	 .global XMC_I2C_CH_SetSlaveAddress
 249              	 .thumb
 250              	 .thumb_func
 252              	XMC_I2C_CH_SetSlaveAddress:
 253              	.LFB218:
 156:../Libraries/XMCLib/src/xmc_i2c.c **** 
 157:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the slave address */
 158:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address)
 159:../Libraries/XMCLib/src/xmc_i2c.c **** {
 254              	 .loc 3 159 0
 255              	 .cfi_startproc
 256              	 
 257              	 
 258              	 
 259 0000 80B4     	 push {r7}
 260              	.LCFI23:
 261              	 .cfi_def_cfa_offset 4
 262              	 .cfi_offset 7,-4
 263 0002 83B0     	 sub sp,sp,#12
 264              	.LCFI24:
 265              	 .cfi_def_cfa_offset 16
 266 0004 00AF     	 add r7,sp,#0
 267              	.LCFI25:
 268              	 .cfi_def_cfa_register 7
 269 0006 7860     	 str r0,[r7,#4]
 270 0008 0B46     	 mov r3,r1
 271 000a 7B80     	 strh r3,[r7,#2]
 160:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((address & XMC_I2C_10BIT_ADDR_MASK) == XMC_I2C_10BIT_ADDR_GROUP)
 272              	 .loc 3 160 0
 273 000c 7B88     	 ldrh r3,[r7,#2]
 274 000e 03F4F843 	 and r3,r3,#31744
 275 0012 B3F5F04F 	 cmp r3,#30720
 276 0016 0ED1     	 bne .L10
 161:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 162:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode = (channel->PCR_IICMode & (uint32_t)~USIC_CH_PCR_IICMode_SLAD_Msk) |
 277              	 .loc 3 162 0
 278 0018 7B68     	 ldr r3,[r7,#4]
 279 001a DB6B     	 ldr r3,[r3,#60]
 280 001c 1B0C     	 lsrs r3,r3,#16
 281 001e 1B04     	 lsls r3,r3,#16
 282 0020 7A88     	 ldrh r2,[r7,#2]
 283 0022 D2B2     	 uxtb r2,r2
 284 0024 1A43     	 orrs r2,r2,r3
 163:../Libraries/XMCLib/src/xmc_i2c.c ****                            (address & 0x00ffU) | ((address << 1) & 0xfe00U);
 285              	 .loc 3 163 0
 286 0026 7B88     	 ldrh r3,[r7,#2]
 287 0028 5B00     	 lsls r3,r3,#1
 288 002a 03F47E43 	 and r3,r3,#65024
 289 002e 1A43     	 orrs r2,r2,r3
 162:../Libraries/XMCLib/src/xmc_i2c.c ****                            (address & 0x00ffU) | ((address << 1) & 0xfe00U);
 290              	 .loc 3 162 0
 291 0030 7B68     	 ldr r3,[r7,#4]
 292 0032 DA63     	 str r2,[r3,#60]
 293 0034 08E0     	 b .L9
 294              	.L10:
 164:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 165:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 166:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 167:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode = (channel->PCR_IICMode & (uint32_t)~USIC_CH_PCR_IICMode_SLAD_Msk) |
 295              	 .loc 3 167 0
 296 0036 7B68     	 ldr r3,[r7,#4]
 297 0038 DB6B     	 ldr r3,[r3,#60]
 298 003a 1B0C     	 lsrs r3,r3,#16
 299 003c 1B04     	 lsls r3,r3,#16
 168:../Libraries/XMCLib/src/xmc_i2c.c ****                            ((uint32_t)address) << XMC_I2C_7BIT_ADDR_Pos;
 300              	 .loc 3 168 0
 301 003e 7A88     	 ldrh r2,[r7,#2]
 302 0040 1202     	 lsls r2,r2,#8
 167:../Libraries/XMCLib/src/xmc_i2c.c ****                            ((uint32_t)address) << XMC_I2C_7BIT_ADDR_Pos;
 303              	 .loc 3 167 0
 304 0042 1A43     	 orrs r2,r2,r3
 305 0044 7B68     	 ldr r3,[r7,#4]
 306 0046 DA63     	 str r2,[r3,#60]
 307              	.L9:
 169:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 170:../Libraries/XMCLib/src/xmc_i2c.c **** }
 308              	 .loc 3 170 0
 309 0048 0C37     	 adds r7,r7,#12
 310              	.LCFI26:
 311              	 .cfi_def_cfa_offset 4
 312 004a BD46     	 mov sp,r7
 313              	.LCFI27:
 314              	 .cfi_def_cfa_register 13
 315              	 
 316 004c 5DF8047B 	 ldr r7,[sp],#4
 317              	.LCFI28:
 318              	 .cfi_restore 7
 319              	 .cfi_def_cfa_offset 0
 320 0050 7047     	 bx lr
 321              	 .cfi_endproc
 322              	.LFE218:
 324 0052 00BF     	 .section .text.XMC_I2C_CH_GetSlaveAddress,"ax",%progbits
 325              	 .align 2
 326              	 .global XMC_I2C_CH_GetSlaveAddress
 327              	 .thumb
 328              	 .thumb_func
 330              	XMC_I2C_CH_GetSlaveAddress:
 331              	.LFB219:
 171:../Libraries/XMCLib/src/xmc_i2c.c **** /* Read the slave address */
 172:../Libraries/XMCLib/src/xmc_i2c.c **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel)
 173:../Libraries/XMCLib/src/xmc_i2c.c **** {
 332              	 .loc 3 173 0
 333              	 .cfi_startproc
 334              	 
 335              	 
 336              	 
 337 0000 80B4     	 push {r7}
 338              	.LCFI29:
 339              	 .cfi_def_cfa_offset 4
 340              	 .cfi_offset 7,-4
 341 0002 85B0     	 sub sp,sp,#20
 342              	.LCFI30:
 343              	 .cfi_def_cfa_offset 24
 344 0004 00AF     	 add r7,sp,#0
 345              	.LCFI31:
 346              	 .cfi_def_cfa_register 7
 347 0006 7860     	 str r0,[r7,#4]
 174:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t address = channel->PCR_IICMode & (uint32_t)USIC_CH_PCR_IICMode_SLAD_Msk;
 348              	 .loc 3 174 0
 349 0008 7B68     	 ldr r3,[r7,#4]
 350 000a DB6B     	 ldr r3,[r3,#60]
 351 000c 9BB2     	 uxth r3,r3
 352 000e FB60     	 str r3,[r7,#12]
 175:../Libraries/XMCLib/src/xmc_i2c.c **** 
 176:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((address & 0xffU) == 0U)
 353              	 .loc 3 176 0
 354 0010 FB68     	 ldr r3,[r7,#12]
 355 0012 DBB2     	 uxtb r3,r3
 356 0014 002B     	 cmp r3,#0
 357 0016 03D1     	 bne .L13
 177:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 178:../Libraries/XMCLib/src/xmc_i2c.c ****     address = address >> XMC_I2C_7BIT_ADDR_Pos;
 358              	 .loc 3 178 0
 359 0018 FB68     	 ldr r3,[r7,#12]
 360 001a 1B0A     	 lsrs r3,r3,#8
 361 001c FB60     	 str r3,[r7,#12]
 362 001e 07E0     	 b .L14
 363              	.L13:
 179:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 180:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 181:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 182:../Libraries/XMCLib/src/xmc_i2c.c ****     address = (address & 0xffU) | ((address >> 1) & 0x0300U);
 364              	 .loc 3 182 0
 365 0020 FB68     	 ldr r3,[r7,#12]
 366 0022 DAB2     	 uxtb r2,r3
 367 0024 FB68     	 ldr r3,[r7,#12]
 368 0026 5B08     	 lsrs r3,r3,#1
 369 0028 03F44073 	 and r3,r3,#768
 370 002c 1343     	 orrs r3,r3,r2
 371 002e FB60     	 str r3,[r7,#12]
 372              	.L14:
 183:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 184:../Libraries/XMCLib/src/xmc_i2c.c **** 
 185:../Libraries/XMCLib/src/xmc_i2c.c ****   return (uint16_t)address;
 373              	 .loc 3 185 0
 374 0030 FB68     	 ldr r3,[r7,#12]
 375 0032 9BB2     	 uxth r3,r3
 186:../Libraries/XMCLib/src/xmc_i2c.c **** }
 376              	 .loc 3 186 0
 377 0034 1846     	 mov r0,r3
 378 0036 1437     	 adds r7,r7,#20
 379              	.LCFI32:
 380              	 .cfi_def_cfa_offset 4
 381 0038 BD46     	 mov sp,r7
 382              	.LCFI33:
 383              	 .cfi_def_cfa_register 13
 384              	 
 385 003a 5DF8047B 	 ldr r7,[sp],#4
 386              	.LCFI34:
 387              	 .cfi_restore 7
 388              	 .cfi_def_cfa_offset 0
 389 003e 7047     	 bx lr
 390              	 .cfi_endproc
 391              	.LFE219:
 393              	 .section .text.XMC_I2C_CH_SetBaudrate,"ax",%progbits
 394              	 .align 2
 395              	 .global XMC_I2C_CH_SetBaudrate
 396              	 .thumb
 397              	 .thumb_func
 399              	XMC_I2C_CH_SetBaudrate:
 400              	.LFB220:
 187:../Libraries/XMCLib/src/xmc_i2c.c **** 
 188:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the baudrate and oversampling based on standard speed or fast speed */
 189:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate)
 190:../Libraries/XMCLib/src/xmc_i2c.c **** {
 401              	 .loc 3 190 0
 402              	 .cfi_startproc
 403              	 
 404              	 
 405 0000 80B5     	 push {r7,lr}
 406              	.LCFI35:
 407              	 .cfi_def_cfa_offset 8
 408              	 .cfi_offset 7,-8
 409              	 .cfi_offset 14,-4
 410 0002 84B0     	 sub sp,sp,#16
 411              	.LCFI36:
 412              	 .cfi_def_cfa_offset 24
 413 0004 00AF     	 add r7,sp,#0
 414              	.LCFI37:
 415              	 .cfi_def_cfa_register 7
 416 0006 7860     	 str r0,[r7,#4]
 417 0008 3960     	 str r1,[r7]
 191:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_STATUS_t status;
 192:../Libraries/XMCLib/src/xmc_i2c.c **** 
 193:../Libraries/XMCLib/src/xmc_i2c.c ****   status = XMC_I2C_CH_STATUS_ERROR;
 418              	 .loc 3 193 0
 419 000a 0123     	 movs r3,#1
 420 000c FB73     	 strb r3,[r7,#15]
 194:../Libraries/XMCLib/src/xmc_i2c.c **** 
 195:../Libraries/XMCLib/src/xmc_i2c.c ****   if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_STANDARD)
 421              	 .loc 3 195 0
 422 000e 3B68     	 ldr r3,[r7]
 423 0010 174A     	 ldr r2,.L23
 424 0012 9342     	 cmp r3,r2
 425 0014 10D8     	 bhi .L17
 196:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 197:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode &= (uint32_t)~USIC_CH_PCR_IICMode_STIM_Msk;
 426              	 .loc 3 197 0
 427 0016 7B68     	 ldr r3,[r7,#4]
 428 0018 DB6B     	 ldr r3,[r3,#60]
 429 001a 23F40032 	 bic r2,r3,#131072
 430 001e 7B68     	 ldr r3,[r7,#4]
 431 0020 DA63     	 str r2,[r3,#60]
 198:../Libraries/XMCLib/src/xmc_i2c.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STANDARD) ==
 432              	 .loc 3 198 0
 433 0022 7868     	 ldr r0,[r7,#4]
 434 0024 3968     	 ldr r1,[r7]
 435 0026 0A22     	 movs r2,#10
 436 0028 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 437 002c 0346     	 mov r3,r0
 438 002e 002B     	 cmp r3,#0
 439 0030 19D1     	 bne .L19
 199:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 200:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_I2C_CH_STATUS_OK;
 440              	 .loc 3 200 0
 441 0032 0023     	 movs r3,#0
 442 0034 FB73     	 strb r3,[r7,#15]
 443 0036 16E0     	 b .L19
 444              	.L17:
 201:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 202:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 203:../Libraries/XMCLib/src/xmc_i2c.c ****   else if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_FAST)
 445              	 .loc 3 203 0
 446 0038 3B68     	 ldr r3,[r7]
 447 003a 0E4A     	 ldr r2,.L23+4
 448 003c 9342     	 cmp r3,r2
 449 003e 10D8     	 bhi .L20
 204:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 205:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode |= (uint32_t)USIC_CH_PCR_IICMode_STIM_Msk;
 450              	 .loc 3 205 0
 451 0040 7B68     	 ldr r3,[r7,#4]
 452 0042 DB6B     	 ldr r3,[r3,#60]
 453 0044 43F40032 	 orr r2,r3,#131072
 454 0048 7B68     	 ldr r3,[r7,#4]
 455 004a DA63     	 str r2,[r3,#60]
 206:../Libraries/XMCLib/src/xmc_i2c.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST) == XMC
 456              	 .loc 3 206 0
 457 004c 7868     	 ldr r0,[r7,#4]
 458 004e 3968     	 ldr r1,[r7]
 459 0050 1922     	 movs r2,#25
 460 0052 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 461 0056 0346     	 mov r3,r0
 462 0058 002B     	 cmp r3,#0
 463 005a 04D1     	 bne .L19
 207:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 208:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_I2C_CH_STATUS_OK;
 464              	 .loc 3 208 0
 465 005c 0023     	 movs r3,#0
 466 005e FB73     	 strb r3,[r7,#15]
 467 0060 01E0     	 b .L19
 468              	.L20:
 209:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 210:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 211:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 212:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 213:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_I2C_CH_STATUS_ERROR;
 469              	 .loc 3 213 0
 470 0062 0123     	 movs r3,#1
 471 0064 FB73     	 strb r3,[r7,#15]
 472              	.L19:
 214:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 215:../Libraries/XMCLib/src/xmc_i2c.c **** 
 216:../Libraries/XMCLib/src/xmc_i2c.c ****   return status;
 473              	 .loc 3 216 0
 474 0066 FB7B     	 ldrb r3,[r7,#15]
 217:../Libraries/XMCLib/src/xmc_i2c.c **** }
 475              	 .loc 3 217 0
 476 0068 1846     	 mov r0,r3
 477 006a 1037     	 adds r7,r7,#16
 478              	.LCFI38:
 479              	 .cfi_def_cfa_offset 8
 480 006c BD46     	 mov sp,r7
 481              	.LCFI39:
 482              	 .cfi_def_cfa_register 13
 483              	 
 484 006e 80BD     	 pop {r7,pc}
 485              	.L24:
 486              	 .align 2
 487              	.L23:
 488 0070 A0860100 	 .word 100000
 489 0074 801A0600 	 .word 400000
 490              	 .cfi_endproc
 491              	.LFE220:
 493              	 .section .text.XMC_I2C_CH_SetBaudrateEx,"ax",%progbits
 494              	 .align 2
 495              	 .global XMC_I2C_CH_SetBaudrateEx
 496              	 .thumb
 497              	 .thumb_func
 499              	XMC_I2C_CH_SetBaudrateEx:
 500              	.LFB221:
 218:../Libraries/XMCLib/src/xmc_i2c.c **** 
 219:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the baudrate and oversampling based on standard speed or fast speed */
 220:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 221:../Libraries/XMCLib/src/xmc_i2c.c **** {
 501              	 .loc 3 221 0
 502              	 .cfi_startproc
 503              	 
 504              	 
 505 0000 80B5     	 push {r7,lr}
 506              	.LCFI40:
 507              	 .cfi_def_cfa_offset 8
 508              	 .cfi_offset 7,-8
 509              	 .cfi_offset 14,-4
 510 0002 86B0     	 sub sp,sp,#24
 511              	.LCFI41:
 512              	 .cfi_def_cfa_offset 32
 513 0004 00AF     	 add r7,sp,#0
 514              	.LCFI42:
 515              	 .cfi_def_cfa_register 7
 516 0006 F860     	 str r0,[r7,#12]
 517 0008 B960     	 str r1,[r7,#8]
 518 000a 1346     	 mov r3,r2
 519 000c FB71     	 strb r3,[r7,#7]
 222:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_USIC_CH_STATUS_t status;
 223:../Libraries/XMCLib/src/xmc_i2c.c **** 
 224:../Libraries/XMCLib/src/xmc_i2c.c ****   if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_STANDARD)
 520              	 .loc 3 224 0
 521 000e BB68     	 ldr r3,[r7,#8]
 522 0010 204A     	 ldr r2,.L34
 523 0012 9342     	 cmp r3,r2
 524 0014 19D8     	 bhi .L26
 225:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 226:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode &= (uint32_t)~USIC_CH_PCR_IICMode_STIM_Msk;
 525              	 .loc 3 226 0
 526 0016 FB68     	 ldr r3,[r7,#12]
 527 0018 DB6B     	 ldr r3,[r3,#60]
 528 001a 23F40032 	 bic r2,r3,#131072
 529 001e FB68     	 ldr r3,[r7,#12]
 530 0020 DA63     	 str r2,[r3,#60]
 227:../Libraries/XMCLib/src/xmc_i2c.c ****     if (normal_divider_mode)
 531              	 .loc 3 227 0
 532 0022 FB79     	 ldrb r3,[r7,#7]
 533 0024 002B     	 cmp r3,#0
 534 0026 08D0     	 beq .L27
 228:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 229:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrateEx(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STA
 535              	 .loc 3 229 0
 536 0028 BB68     	 ldr r3,[r7,#8]
 537 002a F868     	 ldr r0,[r7,#12]
 538 002c 1946     	 mov r1,r3
 539 002e 0A22     	 movs r2,#10
 540 0030 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 541 0034 0346     	 mov r3,r0
 542 0036 FB75     	 strb r3,[r7,#23]
 543 0038 27E0     	 b .L29
 544              	.L27:
 230:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 231:../Libraries/XMCLib/src/xmc_i2c.c ****     else
 232:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 233:../Libraries/XMCLib/src/xmc_i2c.c ****       /* Fractional divider mode */
 234:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STAND
 545              	 .loc 3 234 0
 546 003a F868     	 ldr r0,[r7,#12]
 547 003c B968     	 ldr r1,[r7,#8]
 548 003e 0A22     	 movs r2,#10
 549 0040 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 550 0044 0346     	 mov r3,r0
 551 0046 FB75     	 strb r3,[r7,#23]
 552 0048 1FE0     	 b .L29
 553              	.L26:
 235:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 236:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 237:../Libraries/XMCLib/src/xmc_i2c.c ****   else if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_FAST)
 554              	 .loc 3 237 0
 555 004a BB68     	 ldr r3,[r7,#8]
 556 004c 124A     	 ldr r2,.L34+4
 557 004e 9342     	 cmp r3,r2
 558 0050 19D8     	 bhi .L30
 238:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 239:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode |= (uint32_t)USIC_CH_PCR_IICMode_STIM_Msk;
 559              	 .loc 3 239 0
 560 0052 FB68     	 ldr r3,[r7,#12]
 561 0054 DB6B     	 ldr r3,[r3,#60]
 562 0056 43F40032 	 orr r2,r3,#131072
 563 005a FB68     	 ldr r3,[r7,#12]
 564 005c DA63     	 str r2,[r3,#60]
 240:../Libraries/XMCLib/src/xmc_i2c.c ****     if (normal_divider_mode)
 565              	 .loc 3 240 0
 566 005e FB79     	 ldrb r3,[r7,#7]
 567 0060 002B     	 cmp r3,#0
 568 0062 08D0     	 beq .L31
 241:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 242:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrateEx(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_FAS
 569              	 .loc 3 242 0
 570 0064 BB68     	 ldr r3,[r7,#8]
 571 0066 F868     	 ldr r0,[r7,#12]
 572 0068 1946     	 mov r1,r3
 573 006a 1922     	 movs r2,#25
 574 006c FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrateEx
 575 0070 0346     	 mov r3,r0
 576 0072 FB75     	 strb r3,[r7,#23]
 577 0074 09E0     	 b .L29
 578              	.L31:
 243:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 244:../Libraries/XMCLib/src/xmc_i2c.c ****     else
 245:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 246:../Libraries/XMCLib/src/xmc_i2c.c ****       /* Fractional divider mode */
 247:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST)
 579              	 .loc 3 247 0
 580 0076 F868     	 ldr r0,[r7,#12]
 581 0078 B968     	 ldr r1,[r7,#8]
 582 007a 1922     	 movs r2,#25
 583 007c FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 584 0080 0346     	 mov r3,r0
 585 0082 FB75     	 strb r3,[r7,#23]
 586 0084 01E0     	 b .L29
 587              	.L30:
 248:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 249:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 250:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 251:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 252:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 588              	 .loc 3 252 0
 589 0086 0123     	 movs r3,#1
 590 0088 FB75     	 strb r3,[r7,#23]
 591              	.L29:
 253:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 254:../Libraries/XMCLib/src/xmc_i2c.c **** 
 255:../Libraries/XMCLib/src/xmc_i2c.c ****   return (XMC_I2C_CH_STATUS_t)status;
 592              	 .loc 3 255 0
 593 008a FB7D     	 ldrb r3,[r7,#23]
 256:../Libraries/XMCLib/src/xmc_i2c.c **** }
 594              	 .loc 3 256 0
 595 008c 1846     	 mov r0,r3
 596 008e 1837     	 adds r7,r7,#24
 597              	.LCFI43:
 598              	 .cfi_def_cfa_offset 8
 599 0090 BD46     	 mov sp,r7
 600              	.LCFI44:
 601              	 .cfi_def_cfa_register 13
 602              	 
 603 0092 80BD     	 pop {r7,pc}
 604              	.L35:
 605              	 .align 2
 606              	.L34:
 607 0094 A0860100 	 .word 100000
 608 0098 801A0600 	 .word 400000
 609              	 .cfi_endproc
 610              	.LFE221:
 612              	 .section .text.XMC_I2C_CH_MasterStart,"ax",%progbits
 613              	 .align 2
 614              	 .global XMC_I2C_CH_MasterStart
 615              	 .thumb
 616              	 .thumb_func
 618              	XMC_I2C_CH_MasterStart:
 619              	.LFB222:
 257:../Libraries/XMCLib/src/xmc_i2c.c **** 
 258:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master start condition along with read/write command to IN/TBUF register based on FIFO/non
 259:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 260:../Libraries/XMCLib/src/xmc_i2c.c **** {
 620              	 .loc 3 260 0
 621              	 .cfi_startproc
 622              	 
 623              	 
 624 0000 80B5     	 push {r7,lr}
 625              	.LCFI45:
 626              	 .cfi_def_cfa_offset 8
 627              	 .cfi_offset 7,-8
 628              	 .cfi_offset 14,-4
 629 0002 84B0     	 sub sp,sp,#16
 630              	.LCFI46:
 631              	 .cfi_def_cfa_offset 24
 632 0004 00AF     	 add r7,sp,#0
 633              	.LCFI47:
 634              	 .cfi_def_cfa_register 7
 635 0006 7860     	 str r0,[r7,#4]
 636 0008 0B46     	 mov r3,r1
 637 000a 7B80     	 strh r3,[r7,#2]
 638 000c 1346     	 mov r3,r2
 639 000e 7B70     	 strb r3,[r7,#1]
 261:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t temp;
 262:../Libraries/XMCLib/src/xmc_i2c.c **** 
 263:../Libraries/XMCLib/src/xmc_i2c.c ****   temp = addr | (uint32_t)XMC_I2C_CH_TDF_MASTER_START;
 640              	 .loc 3 263 0
 641 0010 7B88     	 ldrh r3,[r7,#2]
 642 0012 43F48063 	 orr r3,r3,#1024
 643 0016 9BB2     	 uxth r3,r3
 644 0018 FB60     	 str r3,[r7,#12]
 264:../Libraries/XMCLib/src/xmc_i2c.c ****   if (command == XMC_I2C_CH_CMD_READ)
 645              	 .loc 3 264 0
 646 001a 7B78     	 ldrb r3,[r7,#1]
 647 001c 012B     	 cmp r3,#1
 648 001e 03D1     	 bne .L37
 265:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 266:../Libraries/XMCLib/src/xmc_i2c.c ****     temp |= 0x1U;
 649              	 .loc 3 266 0
 650 0020 FB68     	 ldr r3,[r7,#12]
 651 0022 43F00103 	 orr r3,r3,#1
 652 0026 FB60     	 str r3,[r7,#12]
 653              	.L37:
 267:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 268:../Libraries/XMCLib/src/xmc_i2c.c **** 
 269:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 270:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 654              	 .loc 3 270 0
 655 0028 7B68     	 ldr r3,[r7,#4]
 656 002a D3F80831 	 ldr r3,[r3,#264]
 657 002e 03F0E063 	 and r3,r3,#117440512
 658 0032 002B     	 cmp r3,#0
 659 0034 10D1     	 bne .L38
 271:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 272:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 660              	 .loc 3 272 0
 661 0036 00BF     	 nop
 662              	.L39:
 663              	 .loc 3 272 0 is_stmt 0 discriminator 1
 664 0038 7868     	 ldr r0,[r7,#4]
 665 003a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 666 003e 0346     	 mov r3,r0
 667 0040 802B     	 cmp r3,#128
 668 0042 F9D0     	 beq .L39
 273:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 274:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 275:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 276:../Libraries/XMCLib/src/xmc_i2c.c **** 
 277:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 278:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 669              	 .loc 3 278 0 is_stmt 1
 670 0044 7868     	 ldr r0,[r7,#4]
 671 0046 4FF40051 	 mov r1,#8192
 672 004a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 279:../Libraries/XMCLib/src/xmc_i2c.c **** 
 280:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = temp;
 673              	 .loc 3 280 0
 674 004e 7B68     	 ldr r3,[r7,#4]
 675 0050 FA68     	 ldr r2,[r7,#12]
 676 0052 C3F88020 	 str r2,[r3,#128]
 677 0056 03E0     	 b .L36
 678              	.L38:
 281:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 282:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 283:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 284:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = temp;
 679              	 .loc 3 284 0
 680 0058 7B68     	 ldr r3,[r7,#4]
 681 005a FA68     	 ldr r2,[r7,#12]
 682 005c C3F88021 	 str r2,[r3,#384]
 683              	.L36:
 285:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 286:../Libraries/XMCLib/src/xmc_i2c.c **** }
 684              	 .loc 3 286 0
 685 0060 1037     	 adds r7,r7,#16
 686              	.LCFI48:
 687              	 .cfi_def_cfa_offset 8
 688 0062 BD46     	 mov sp,r7
 689              	.LCFI49:
 690              	 .cfi_def_cfa_register 13
 691              	 
 692 0064 80BD     	 pop {r7,pc}
 693              	 .cfi_endproc
 694              	.LFE222:
 696 0066 00BF     	 .section .text.XMC_I2C_CH_MasterRepeatedStart,"ax",%progbits
 697              	 .align 2
 698              	 .global XMC_I2C_CH_MasterRepeatedStart
 699              	 .thumb
 700              	 .thumb_func
 702              	XMC_I2C_CH_MasterRepeatedStart:
 703              	.LFB223:
 287:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master repeated start condition along with read/write command to IN/TBUF register based on
 288:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 289:../Libraries/XMCLib/src/xmc_i2c.c **** {
 704              	 .loc 3 289 0
 705              	 .cfi_startproc
 706              	 
 707              	 
 708 0000 80B5     	 push {r7,lr}
 709              	.LCFI50:
 710              	 .cfi_def_cfa_offset 8
 711              	 .cfi_offset 7,-8
 712              	 .cfi_offset 14,-4
 713 0002 84B0     	 sub sp,sp,#16
 714              	.LCFI51:
 715              	 .cfi_def_cfa_offset 24
 716 0004 00AF     	 add r7,sp,#0
 717              	.LCFI52:
 718              	 .cfi_def_cfa_register 7
 719 0006 7860     	 str r0,[r7,#4]
 720 0008 0B46     	 mov r3,r1
 721 000a 7B80     	 strh r3,[r7,#2]
 722 000c 1346     	 mov r3,r2
 723 000e 7B70     	 strb r3,[r7,#1]
 290:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t tmp;
 291:../Libraries/XMCLib/src/xmc_i2c.c ****   tmp = addr | (uint32_t)XMC_I2C_CH_TDF_MASTER_RESTART;
 724              	 .loc 3 291 0
 725 0010 7B88     	 ldrh r3,[r7,#2]
 726 0012 43F4A063 	 orr r3,r3,#1280
 727 0016 9BB2     	 uxth r3,r3
 728 0018 FB60     	 str r3,[r7,#12]
 292:../Libraries/XMCLib/src/xmc_i2c.c ****   if (command == XMC_I2C_CH_CMD_READ)
 729              	 .loc 3 292 0
 730 001a 7B78     	 ldrb r3,[r7,#1]
 731 001c 012B     	 cmp r3,#1
 732 001e 03D1     	 bne .L42
 293:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 294:../Libraries/XMCLib/src/xmc_i2c.c ****     tmp |= 0x1U;
 733              	 .loc 3 294 0
 734 0020 FB68     	 ldr r3,[r7,#12]
 735 0022 43F00103 	 orr r3,r3,#1
 736 0026 FB60     	 str r3,[r7,#12]
 737              	.L42:
 295:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 296:../Libraries/XMCLib/src/xmc_i2c.c **** 
 297:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 298:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 738              	 .loc 3 298 0
 739 0028 7B68     	 ldr r3,[r7,#4]
 740 002a D3F80831 	 ldr r3,[r3,#264]
 741 002e 03F0E063 	 and r3,r3,#117440512
 742 0032 002B     	 cmp r3,#0
 743 0034 10D1     	 bne .L43
 299:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 300:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 744              	 .loc 3 300 0
 745 0036 00BF     	 nop
 746              	.L44:
 747              	 .loc 3 300 0 is_stmt 0 discriminator 1
 748 0038 7868     	 ldr r0,[r7,#4]
 749 003a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 750 003e 0346     	 mov r3,r0
 751 0040 802B     	 cmp r3,#128
 752 0042 F9D0     	 beq .L44
 301:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 302:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 303:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 304:../Libraries/XMCLib/src/xmc_i2c.c **** 
 305:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 306:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 753              	 .loc 3 306 0 is_stmt 1
 754 0044 7868     	 ldr r0,[r7,#4]
 755 0046 4FF40051 	 mov r1,#8192
 756 004a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 307:../Libraries/XMCLib/src/xmc_i2c.c **** 
 308:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = tmp;
 757              	 .loc 3 308 0
 758 004e 7B68     	 ldr r3,[r7,#4]
 759 0050 FA68     	 ldr r2,[r7,#12]
 760 0052 C3F88020 	 str r2,[r3,#128]
 761 0056 03E0     	 b .L41
 762              	.L43:
 309:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 310:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 311:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 312:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = tmp;
 763              	 .loc 3 312 0
 764 0058 7B68     	 ldr r3,[r7,#4]
 765 005a FA68     	 ldr r2,[r7,#12]
 766 005c C3F88021 	 str r2,[r3,#384]
 767              	.L41:
 313:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 314:../Libraries/XMCLib/src/xmc_i2c.c **** }
 768              	 .loc 3 314 0
 769 0060 1037     	 adds r7,r7,#16
 770              	.LCFI53:
 771              	 .cfi_def_cfa_offset 8
 772 0062 BD46     	 mov sp,r7
 773              	.LCFI54:
 774              	 .cfi_def_cfa_register 13
 775              	 
 776 0064 80BD     	 pop {r7,pc}
 777              	 .cfi_endproc
 778              	.LFE223:
 780 0066 00BF     	 .section .text.XMC_I2C_CH_MasterStop,"ax",%progbits
 781              	 .align 2
 782              	 .global XMC_I2C_CH_MasterStop
 783              	 .thumb
 784              	 .thumb_func
 786              	XMC_I2C_CH_MasterStop:
 787              	.LFB224:
 315:../Libraries/XMCLib/src/xmc_i2c.c **** 
 316:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master stop command to IN/TBUF register based on FIFO/non-FIFO modes. */
 317:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel)
 318:../Libraries/XMCLib/src/xmc_i2c.c **** {
 788              	 .loc 3 318 0
 789              	 .cfi_startproc
 790              	 
 791              	 
 792 0000 80B5     	 push {r7,lr}
 793              	.LCFI55:
 794              	 .cfi_def_cfa_offset 8
 795              	 .cfi_offset 7,-8
 796              	 .cfi_offset 14,-4
 797 0002 82B0     	 sub sp,sp,#8
 798              	.LCFI56:
 799              	 .cfi_def_cfa_offset 16
 800 0004 00AF     	 add r7,sp,#0
 801              	.LCFI57:
 802              	 .cfi_def_cfa_register 7
 803 0006 7860     	 str r0,[r7,#4]
 319:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 320:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 804              	 .loc 3 320 0
 805 0008 7B68     	 ldr r3,[r7,#4]
 806 000a D3F80831 	 ldr r3,[r3,#264]
 807 000e 03F0E063 	 and r3,r3,#117440512
 808 0012 002B     	 cmp r3,#0
 809 0014 11D1     	 bne .L47
 321:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 322:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 810              	 .loc 3 322 0
 811 0016 00BF     	 nop
 812              	.L48:
 813              	 .loc 3 322 0 is_stmt 0 discriminator 1
 814 0018 7868     	 ldr r0,[r7,#4]
 815 001a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 816 001e 0346     	 mov r3,r0
 817 0020 802B     	 cmp r3,#128
 818 0022 F9D0     	 beq .L48
 323:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 324:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 325:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 326:../Libraries/XMCLib/src/xmc_i2c.c **** 
 327:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 328:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 819              	 .loc 3 328 0 is_stmt 1
 820 0024 7868     	 ldr r0,[r7,#4]
 821 0026 4FF40051 	 mov r1,#8192
 822 002a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 329:../Libraries/XMCLib/src/xmc_i2c.c **** 
 330:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_STOP;
 823              	 .loc 3 330 0
 824 002e 7B68     	 ldr r3,[r7,#4]
 825 0030 4FF4C062 	 mov r2,#1536
 826 0034 C3F88020 	 str r2,[r3,#128]
 827 0038 04E0     	 b .L46
 828              	.L47:
 331:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 332:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 333:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 334:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = (uint32_t)XMC_I2C_CH_TDF_MASTER_STOP;
 829              	 .loc 3 334 0
 830 003a 7B68     	 ldr r3,[r7,#4]
 831 003c 4FF4C062 	 mov r2,#1536
 832 0040 C3F88021 	 str r2,[r3,#384]
 833              	.L46:
 335:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 336:../Libraries/XMCLib/src/xmc_i2c.c **** }
 834              	 .loc 3 336 0
 835 0044 0837     	 adds r7,r7,#8
 836              	.LCFI58:
 837              	 .cfi_def_cfa_offset 8
 838 0046 BD46     	 mov sp,r7
 839              	.LCFI59:
 840              	 .cfi_def_cfa_register 13
 841              	 
 842 0048 80BD     	 pop {r7,pc}
 843              	 .cfi_endproc
 844              	.LFE224:
 846 004a 00BF     	 .section .text.XMC_I2C_CH_MasterTransmit,"ax",%progbits
 847              	 .align 2
 848              	 .global XMC_I2C_CH_MasterTransmit
 849              	 .thumb
 850              	 .thumb_func
 852              	XMC_I2C_CH_MasterTransmit:
 853              	.LFB225:
 337:../Libraries/XMCLib/src/xmc_i2c.c **** 
 338:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master send command along with data to IN/TBUF register based on FIFO/non-FIFO modes. */
 339:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data)
 340:../Libraries/XMCLib/src/xmc_i2c.c **** {
 854              	 .loc 3 340 0
 855              	 .cfi_startproc
 856              	 
 857              	 
 858 0000 80B5     	 push {r7,lr}
 859              	.LCFI60:
 860              	 .cfi_def_cfa_offset 8
 861              	 .cfi_offset 7,-8
 862              	 .cfi_offset 14,-4
 863 0002 82B0     	 sub sp,sp,#8
 864              	.LCFI61:
 865              	 .cfi_def_cfa_offset 16
 866 0004 00AF     	 add r7,sp,#0
 867              	.LCFI62:
 868              	 .cfi_def_cfa_register 7
 869 0006 7860     	 str r0,[r7,#4]
 870 0008 0B46     	 mov r3,r1
 871 000a FB70     	 strb r3,[r7,#3]
 341:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 342:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 872              	 .loc 3 342 0
 873 000c 7B68     	 ldr r3,[r7,#4]
 874 000e D3F80831 	 ldr r3,[r3,#264]
 875 0012 03F0E063 	 and r3,r3,#117440512
 876 0016 002B     	 cmp r3,#0
 877 0018 10D1     	 bne .L51
 343:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 344:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 878              	 .loc 3 344 0
 879 001a 00BF     	 nop
 880              	.L52:
 881              	 .loc 3 344 0 is_stmt 0 discriminator 1
 882 001c 7868     	 ldr r0,[r7,#4]
 883 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 884 0022 0346     	 mov r3,r0
 885 0024 802B     	 cmp r3,#128
 886 0026 F9D0     	 beq .L52
 345:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 346:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 347:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 348:../Libraries/XMCLib/src/xmc_i2c.c **** 
 349:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 350:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 887              	 .loc 3 350 0 is_stmt 1
 888 0028 7868     	 ldr r0,[r7,#4]
 889 002a 4FF40051 	 mov r1,#8192
 890 002e FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 351:../Libraries/XMCLib/src/xmc_i2c.c **** 
 352:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_SEND | data;
 891              	 .loc 3 352 0
 892 0032 FA78     	 ldrb r2,[r7,#3]
 893 0034 7B68     	 ldr r3,[r7,#4]
 894 0036 C3F88020 	 str r2,[r3,#128]
 895 003a 03E0     	 b .L50
 896              	.L51:
 353:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 354:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 355:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 356:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_SEND | data;
 897              	 .loc 3 356 0
 898 003c FA78     	 ldrb r2,[r7,#3]
 899 003e 7B68     	 ldr r3,[r7,#4]
 900 0040 C3F88021 	 str r2,[r3,#384]
 901              	.L50:
 357:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 358:../Libraries/XMCLib/src/xmc_i2c.c **** }
 902              	 .loc 3 358 0
 903 0044 0837     	 adds r7,r7,#8
 904              	.LCFI63:
 905              	 .cfi_def_cfa_offset 8
 906 0046 BD46     	 mov sp,r7
 907              	.LCFI64:
 908              	 .cfi_def_cfa_register 13
 909              	 
 910 0048 80BD     	 pop {r7,pc}
 911              	 .cfi_endproc
 912              	.LFE225:
 914 004a 00BF     	 .section .text.XMC_I2C_CH_SlaveTransmit,"ax",%progbits
 915              	 .align 2
 916              	 .global XMC_I2C_CH_SlaveTransmit
 917              	 .thumb
 918              	 .thumb_func
 920              	XMC_I2C_CH_SlaveTransmit:
 921              	.LFB226:
 359:../Libraries/XMCLib/src/xmc_i2c.c **** 
 360:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends slave send command along with data to IN/TBUF register based on FIFO/non-FIFO modes. */
 361:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data)
 362:../Libraries/XMCLib/src/xmc_i2c.c **** {
 922              	 .loc 3 362 0
 923              	 .cfi_startproc
 924              	 
 925              	 
 926 0000 80B5     	 push {r7,lr}
 927              	.LCFI65:
 928              	 .cfi_def_cfa_offset 8
 929              	 .cfi_offset 7,-8
 930              	 .cfi_offset 14,-4
 931 0002 82B0     	 sub sp,sp,#8
 932              	.LCFI66:
 933              	 .cfi_def_cfa_offset 16
 934 0004 00AF     	 add r7,sp,#0
 935              	.LCFI67:
 936              	 .cfi_def_cfa_register 7
 937 0006 7860     	 str r0,[r7,#4]
 938 0008 0B46     	 mov r3,r1
 939 000a FB70     	 strb r3,[r7,#3]
 363:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 364:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 940              	 .loc 3 364 0
 941 000c 7B68     	 ldr r3,[r7,#4]
 942 000e D3F80831 	 ldr r3,[r3,#264]
 943 0012 03F0E063 	 and r3,r3,#117440512
 944 0016 002B     	 cmp r3,#0
 945 0018 12D1     	 bne .L55
 365:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 366:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 946              	 .loc 3 366 0
 947 001a 00BF     	 nop
 948              	.L56:
 949              	 .loc 3 366 0 is_stmt 0 discriminator 1
 950 001c 7868     	 ldr r0,[r7,#4]
 951 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 952 0022 0346     	 mov r3,r0
 953 0024 802B     	 cmp r3,#128
 954 0026 F9D0     	 beq .L56
 367:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 368:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 369:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 370:../Libraries/XMCLib/src/xmc_i2c.c **** 
 371:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 372:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 955              	 .loc 3 372 0 is_stmt 1
 956 0028 7868     	 ldr r0,[r7,#4]
 957 002a 4FF40051 	 mov r1,#8192
 958 002e FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 373:../Libraries/XMCLib/src/xmc_i2c.c **** 
 374:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_SLAVE_SEND | data;
 959              	 .loc 3 374 0
 960 0032 FB78     	 ldrb r3,[r7,#3]
 961 0034 43F48072 	 orr r2,r3,#256
 962 0038 7B68     	 ldr r3,[r7,#4]
 963 003a C3F88020 	 str r2,[r3,#128]
 964 003e 05E0     	 b .L54
 965              	.L55:
 375:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 376:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 377:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 378:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_SLAVE_SEND | data;
 966              	 .loc 3 378 0
 967 0040 FB78     	 ldrb r3,[r7,#3]
 968 0042 43F48072 	 orr r2,r3,#256
 969 0046 7B68     	 ldr r3,[r7,#4]
 970 0048 C3F88021 	 str r2,[r3,#384]
 971              	.L54:
 379:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 380:../Libraries/XMCLib/src/xmc_i2c.c **** }
 972              	 .loc 3 380 0
 973 004c 0837     	 adds r7,r7,#8
 974              	.LCFI68:
 975              	 .cfi_def_cfa_offset 8
 976 004e BD46     	 mov sp,r7
 977              	.LCFI69:
 978              	 .cfi_def_cfa_register 13
 979              	 
 980 0050 80BD     	 pop {r7,pc}
 981              	 .cfi_endproc
 982              	.LFE226:
 984 0052 00BF     	 .section .text.XMC_I2C_CH_MasterReceiveAck,"ax",%progbits
 985              	 .align 2
 986              	 .global XMC_I2C_CH_MasterReceiveAck
 987              	 .thumb
 988              	 .thumb_func
 990              	XMC_I2C_CH_MasterReceiveAck:
 991              	.LFB227:
 381:../Libraries/XMCLib/src/xmc_i2c.c **** 
 382:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master receive ack command to IN/TBUF register based on FIFO/non-FIFO modes. */
 383:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel)
 384:../Libraries/XMCLib/src/xmc_i2c.c **** {
 992              	 .loc 3 384 0
 993              	 .cfi_startproc
 994              	 
 995              	 
 996 0000 80B5     	 push {r7,lr}
 997              	.LCFI70:
 998              	 .cfi_def_cfa_offset 8
 999              	 .cfi_offset 7,-8
 1000              	 .cfi_offset 14,-4
 1001 0002 82B0     	 sub sp,sp,#8
 1002              	.LCFI71:
 1003              	 .cfi_def_cfa_offset 16
 1004 0004 00AF     	 add r7,sp,#0
 1005              	.LCFI72:
 1006              	 .cfi_def_cfa_register 7
 1007 0006 7860     	 str r0,[r7,#4]
 385:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 386:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 1008              	 .loc 3 386 0
 1009 0008 7B68     	 ldr r3,[r7,#4]
 1010 000a D3F80831 	 ldr r3,[r3,#264]
 1011 000e 03F0E063 	 and r3,r3,#117440512
 1012 0012 002B     	 cmp r3,#0
 1013 0014 11D1     	 bne .L59
 387:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 388:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 1014              	 .loc 3 388 0
 1015 0016 00BF     	 nop
 1016              	.L60:
 1017              	 .loc 3 388 0 is_stmt 0 discriminator 1
 1018 0018 7868     	 ldr r0,[r7,#4]
 1019 001a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1020 001e 0346     	 mov r3,r0
 1021 0020 802B     	 cmp r3,#128
 1022 0022 F9D0     	 beq .L60
 389:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 390:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 391:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 392:../Libraries/XMCLib/src/xmc_i2c.c **** 
 393:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 394:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 1023              	 .loc 3 394 0 is_stmt 1
 1024 0024 7868     	 ldr r0,[r7,#4]
 1025 0026 4FF40051 	 mov r1,#8192
 1026 002a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 395:../Libraries/XMCLib/src/xmc_i2c.c **** 
 396:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK;
 1027              	 .loc 3 396 0
 1028 002e 7B68     	 ldr r3,[r7,#4]
 1029 0030 4FF40072 	 mov r2,#512
 1030 0034 C3F88020 	 str r2,[r3,#128]
 1031 0038 04E0     	 b .L58
 1032              	.L59:
 397:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 398:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 399:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 400:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK;
 1033              	 .loc 3 400 0
 1034 003a 7B68     	 ldr r3,[r7,#4]
 1035 003c 4FF40072 	 mov r2,#512
 1036 0040 C3F88021 	 str r2,[r3,#384]
 1037              	.L58:
 401:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 402:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1038              	 .loc 3 402 0
 1039 0044 0837     	 adds r7,r7,#8
 1040              	.LCFI73:
 1041              	 .cfi_def_cfa_offset 8
 1042 0046 BD46     	 mov sp,r7
 1043              	.LCFI74:
 1044              	 .cfi_def_cfa_register 13
 1045              	 
 1046 0048 80BD     	 pop {r7,pc}
 1047              	 .cfi_endproc
 1048              	.LFE227:
 1050 004a 00BF     	 .section .text.XMC_I2C_CH_MasterReceiveNack,"ax",%progbits
 1051              	 .align 2
 1052              	 .global XMC_I2C_CH_MasterReceiveNack
 1053              	 .thumb
 1054              	 .thumb_func
 1056              	XMC_I2C_CH_MasterReceiveNack:
 1057              	.LFB228:
 403:../Libraries/XMCLib/src/xmc_i2c.c **** 
 404:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master receive nack command to IN/TBUF register based on FIFO/non-FIFO modes. */
 405:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel)
 406:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1058              	 .loc 3 406 0
 1059              	 .cfi_startproc
 1060              	 
 1061              	 
 1062 0000 80B5     	 push {r7,lr}
 1063              	.LCFI75:
 1064              	 .cfi_def_cfa_offset 8
 1065              	 .cfi_offset 7,-8
 1066              	 .cfi_offset 14,-4
 1067 0002 82B0     	 sub sp,sp,#8
 1068              	.LCFI76:
 1069              	 .cfi_def_cfa_offset 16
 1070 0004 00AF     	 add r7,sp,#0
 1071              	.LCFI77:
 1072              	 .cfi_def_cfa_register 7
 1073 0006 7860     	 str r0,[r7,#4]
 407:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 408:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 1074              	 .loc 3 408 0
 1075 0008 7B68     	 ldr r3,[r7,#4]
 1076 000a D3F80831 	 ldr r3,[r3,#264]
 1077 000e 03F0E063 	 and r3,r3,#117440512
 1078 0012 002B     	 cmp r3,#0
 1079 0014 11D1     	 bne .L63
 409:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 410:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 1080              	 .loc 3 410 0
 1081 0016 00BF     	 nop
 1082              	.L64:
 1083              	 .loc 3 410 0 is_stmt 0 discriminator 1
 1084 0018 7868     	 ldr r0,[r7,#4]
 1085 001a FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1086 001e 0346     	 mov r3,r0
 1087 0020 802B     	 cmp r3,#128
 1088 0022 F9D0     	 beq .L64
 411:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 412:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 413:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 414:../Libraries/XMCLib/src/xmc_i2c.c **** 
 415:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 416:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 1089              	 .loc 3 416 0 is_stmt 1
 1090 0024 7868     	 ldr r0,[r7,#4]
 1091 0026 4FF40051 	 mov r1,#8192
 1092 002a FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 417:../Libraries/XMCLib/src/xmc_i2c.c **** 
 418:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK;
 1093              	 .loc 3 418 0
 1094 002e 7B68     	 ldr r3,[r7,#4]
 1095 0030 4FF44072 	 mov r2,#768
 1096 0034 C3F88020 	 str r2,[r3,#128]
 1097 0038 04E0     	 b .L62
 1098              	.L63:
 419:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 420:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 421:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 422:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK;
 1099              	 .loc 3 422 0
 1100 003a 7B68     	 ldr r3,[r7,#4]
 1101 003c 4FF44072 	 mov r2,#768
 1102 0040 C3F88021 	 str r2,[r3,#384]
 1103              	.L62:
 423:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 424:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1104              	 .loc 3 424 0
 1105 0044 0837     	 adds r7,r7,#8
 1106              	.LCFI78:
 1107              	 .cfi_def_cfa_offset 8
 1108 0046 BD46     	 mov sp,r7
 1109              	.LCFI79:
 1110              	 .cfi_def_cfa_register 13
 1111              	 
 1112 0048 80BD     	 pop {r7,pc}
 1113              	 .cfi_endproc
 1114              	.LFE228:
 1116 004a 00BF     	 .section .text.XMC_I2C_CH_GetReceivedData,"ax",%progbits
 1117              	 .align 2
 1118              	 .global XMC_I2C_CH_GetReceivedData
 1119              	 .thumb
 1120              	 .thumb_func
 1122              	XMC_I2C_CH_GetReceivedData:
 1123              	.LFB229:
 425:../Libraries/XMCLib/src/xmc_i2c.c **** 
 426:../Libraries/XMCLib/src/xmc_i2c.c **** /* Reads the data from RBUF if FIFO size is 0 otherwise from OUTR. */
 427:../Libraries/XMCLib/src/xmc_i2c.c **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel)
 428:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1124              	 .loc 3 428 0
 1125              	 .cfi_startproc
 1126              	 
 1127              	 
 1128              	 
 1129 0000 80B4     	 push {r7}
 1130              	.LCFI80:
 1131              	 .cfi_def_cfa_offset 4
 1132              	 .cfi_offset 7,-4
 1133 0002 85B0     	 sub sp,sp,#20
 1134              	.LCFI81:
 1135              	 .cfi_def_cfa_offset 24
 1136 0004 00AF     	 add r7,sp,#0
 1137              	.LCFI82:
 1138              	 .cfi_def_cfa_register 7
 1139 0006 7860     	 str r0,[r7,#4]
 429:../Libraries/XMCLib/src/xmc_i2c.c ****   uint8_t retval;
 430:../Libraries/XMCLib/src/xmc_i2c.c **** 
 431:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 432:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 1140              	 .loc 3 432 0
 1141 0008 7B68     	 ldr r3,[r7,#4]
 1142 000a D3F80C31 	 ldr r3,[r3,#268]
 1143 000e 03F0E063 	 and r3,r3,#117440512
 1144 0012 002B     	 cmp r3,#0
 1145 0014 03D1     	 bne .L67
 433:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 434:../Libraries/XMCLib/src/xmc_i2c.c ****     retval = (uint8_t)channel->RBUF;
 1146              	 .loc 3 434 0
 1147 0016 7B68     	 ldr r3,[r7,#4]
 1148 0018 5B6D     	 ldr r3,[r3,#84]
 1149 001a FB73     	 strb r3,[r7,#15]
 1150 001c 03E0     	 b .L68
 1151              	.L67:
 435:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 436:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 437:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 438:../Libraries/XMCLib/src/xmc_i2c.c ****     retval = (uint8_t)channel->OUTR;
 1152              	 .loc 3 438 0
 1153 001e 7B68     	 ldr r3,[r7,#4]
 1154 0020 D3F81C31 	 ldr r3,[r3,#284]
 1155 0024 FB73     	 strb r3,[r7,#15]
 1156              	.L68:
 439:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 440:../Libraries/XMCLib/src/xmc_i2c.c **** 
 441:../Libraries/XMCLib/src/xmc_i2c.c ****   return retval;
 1157              	 .loc 3 441 0
 1158 0026 FB7B     	 ldrb r3,[r7,#15]
 442:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1159              	 .loc 3 442 0
 1160 0028 1846     	 mov r0,r3
 1161 002a 1437     	 adds r7,r7,#20
 1162              	.LCFI83:
 1163              	 .cfi_def_cfa_offset 4
 1164 002c BD46     	 mov sp,r7
 1165              	.LCFI84:
 1166              	 .cfi_def_cfa_register 13
 1167              	 
 1168 002e 5DF8047B 	 ldr r7,[sp],#4
 1169              	.LCFI85:
 1170              	 .cfi_restore 7
 1171              	 .cfi_def_cfa_offset 0
 1172 0032 7047     	 bx lr
 1173              	 .cfi_endproc
 1174              	.LFE229:
 1176              	 .section .text.XMC_I2C_CH_Stop,"ax",%progbits
 1177              	 .align 2
 1178              	 .global XMC_I2C_CH_Stop
 1179              	 .thumb
 1180              	 .thumb_func
 1182              	XMC_I2C_CH_Stop:
 1183              	.LFB230:
 443:../Libraries/XMCLib/src/xmc_i2c.c **** 
 444:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the operating mode of USIC to IDLE */
 445:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel)
 446:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1184              	 .loc 3 446 0
 1185              	 .cfi_startproc
 1186              	 
 1187              	 
 1188 0000 80B5     	 push {r7,lr}
 1189              	.LCFI86:
 1190              	 .cfi_def_cfa_offset 8
 1191              	 .cfi_offset 7,-8
 1192              	 .cfi_offset 14,-4
 1193 0002 84B0     	 sub sp,sp,#16
 1194              	.LCFI87:
 1195              	 .cfi_def_cfa_offset 24
 1196 0004 00AF     	 add r7,sp,#0
 1197              	.LCFI88:
 1198              	 .cfi_def_cfa_register 7
 1199 0006 7860     	 str r0,[r7,#4]
 447:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_STATUS_t status = XMC_I2C_CH_STATUS_OK;
 1200              	 .loc 3 447 0
 1201 0008 0023     	 movs r3,#0
 1202 000a FB73     	 strb r3,[r7,#15]
 448:../Libraries/XMCLib/src/xmc_i2c.c **** 
 449:../Libraries/XMCLib/src/xmc_i2c.c ****   if (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 1203              	 .loc 3 449 0
 1204 000c 7868     	 ldr r0,[r7,#4]
 1205 000e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1206 0012 0346     	 mov r3,r0
 1207 0014 802B     	 cmp r3,#128
 1208 0016 02D1     	 bne .L71
 450:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 451:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_I2C_CH_STATUS_BUSY;
 1209              	 .loc 3 451 0
 1210 0018 0223     	 movs r3,#2
 1211 001a FB73     	 strb r3,[r7,#15]
 1212 001c 03E0     	 b .L72
 1213              	.L71:
 452:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 453:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 454:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 455:../Libraries/XMCLib/src/xmc_i2c.c ****     /* USIC channel in IDLE mode */
 456:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 1214              	 .loc 3 456 0
 1215 001e 7868     	 ldr r0,[r7,#4]
 1216 0020 0021     	 movs r1,#0
 1217 0022 FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 1218              	.L72:
 457:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 458:../Libraries/XMCLib/src/xmc_i2c.c ****   return status;
 1219              	 .loc 3 458 0
 1220 0026 FB7B     	 ldrb r3,[r7,#15]
 459:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1221              	 .loc 3 459 0
 1222 0028 1846     	 mov r0,r3
 1223 002a 1037     	 adds r7,r7,#16
 1224              	.LCFI89:
 1225              	 .cfi_def_cfa_offset 8
 1226 002c BD46     	 mov sp,r7
 1227              	.LCFI90:
 1228              	 .cfi_def_cfa_register 13
 1229              	 
 1230 002e 80BD     	 pop {r7,pc}
 1231              	 .cfi_endproc
 1232              	.LFE230:
 1234              	 .section .text.XMC_I2C_CH_EnableEvent,"ax",%progbits
 1235              	 .align 2
 1236              	 .global XMC_I2C_CH_EnableEvent
 1237              	 .thumb
 1238              	 .thumb_func
 1240              	XMC_I2C_CH_EnableEvent:
 1241              	.LFB231:
 460:../Libraries/XMCLib/src/xmc_i2c.c **** 
 461:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 462:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1242              	 .loc 3 462 0
 1243              	 .cfi_startproc
 1244              	 
 1245              	 
 1246              	 
 1247 0000 80B4     	 push {r7}
 1248              	.LCFI91:
 1249              	 .cfi_def_cfa_offset 4
 1250              	 .cfi_offset 7,-4
 1251 0002 83B0     	 sub sp,sp,#12
 1252              	.LCFI92:
 1253              	 .cfi_def_cfa_offset 16
 1254 0004 00AF     	 add r7,sp,#0
 1255              	.LCFI93:
 1256              	 .cfi_def_cfa_register 7
 1257 0006 7860     	 str r0,[r7,#4]
 1258 0008 3960     	 str r1,[r7]
 463:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR |= (event & 0x1fc00U);
 1259              	 .loc 3 463 0
 1260 000a 7B68     	 ldr r3,[r7,#4]
 1261 000c 1A6C     	 ldr r2,[r3,#64]
 1262 000e 3B68     	 ldr r3,[r7]
 1263 0010 03F4FE33 	 and r3,r3,#130048
 1264 0014 1A43     	 orrs r2,r2,r3
 1265 0016 7B68     	 ldr r3,[r7,#4]
 1266 0018 1A64     	 str r2,[r3,#64]
 464:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PCR_IICMode |= ((event) & 0x41fc0000U);
 1267              	 .loc 3 464 0
 1268 001a 7B68     	 ldr r3,[r7,#4]
 1269 001c DA6B     	 ldr r2,[r3,#60]
 1270 001e 3968     	 ldr r1,[r7]
 1271 0020 044B     	 ldr r3,.L75
 1272 0022 0B40     	 ands r3,r3,r1
 1273 0024 1A43     	 orrs r2,r2,r3
 1274 0026 7B68     	 ldr r3,[r7,#4]
 1275 0028 DA63     	 str r2,[r3,#60]
 465:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1276              	 .loc 3 465 0
 1277 002a 0C37     	 adds r7,r7,#12
 1278              	.LCFI94:
 1279              	 .cfi_def_cfa_offset 4
 1280 002c BD46     	 mov sp,r7
 1281              	.LCFI95:
 1282              	 .cfi_def_cfa_register 13
 1283              	 
 1284 002e 5DF8047B 	 ldr r7,[sp],#4
 1285              	.LCFI96:
 1286              	 .cfi_restore 7
 1287              	 .cfi_def_cfa_offset 0
 1288 0032 7047     	 bx lr
 1289              	.L76:
 1290              	 .align 2
 1291              	.L75:
 1292 0034 0000FC41 	 .word 1107034112
 1293              	 .cfi_endproc
 1294              	.LFE231:
 1296              	 .section .text.XMC_I2C_CH_DisableEvent,"ax",%progbits
 1297              	 .align 2
 1298              	 .global XMC_I2C_CH_DisableEvent
 1299              	 .thumb
 1300              	 .thumb_func
 1302              	XMC_I2C_CH_DisableEvent:
 1303              	.LFB232:
 466:../Libraries/XMCLib/src/xmc_i2c.c **** 
 467:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 468:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1304              	 .loc 3 468 0
 1305              	 .cfi_startproc
 1306              	 
 1307              	 
 1308              	 
 1309 0000 80B4     	 push {r7}
 1310              	.LCFI97:
 1311              	 .cfi_def_cfa_offset 4
 1312              	 .cfi_offset 7,-4
 1313 0002 83B0     	 sub sp,sp,#12
 1314              	.LCFI98:
 1315              	 .cfi_def_cfa_offset 16
 1316 0004 00AF     	 add r7,sp,#0
 1317              	.LCFI99:
 1318              	 .cfi_def_cfa_register 7
 1319 0006 7860     	 str r0,[r7,#4]
 1320 0008 3960     	 str r1,[r7]
 469:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR &= (uint32_t)~(event & 0x1fc00U);
 1321              	 .loc 3 469 0
 1322 000a 7B68     	 ldr r3,[r7,#4]
 1323 000c 1A6C     	 ldr r2,[r3,#64]
 1324 000e 3B68     	 ldr r3,[r7]
 1325 0010 03F4FE33 	 and r3,r3,#130048
 1326 0014 DB43     	 mvns r3,r3
 1327 0016 1A40     	 ands r2,r2,r3
 1328 0018 7B68     	 ldr r3,[r7,#4]
 1329 001a 1A64     	 str r2,[r3,#64]
 470:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PCR_IICMode &= (uint32_t)~((event) & 0x41fc0000U);
 1330              	 .loc 3 470 0
 1331 001c 7B68     	 ldr r3,[r7,#4]
 1332 001e DA6B     	 ldr r2,[r3,#60]
 1333 0020 3968     	 ldr r1,[r7]
 1334 0022 054B     	 ldr r3,.L78
 1335 0024 0B40     	 ands r3,r3,r1
 1336 0026 DB43     	 mvns r3,r3
 1337 0028 1A40     	 ands r2,r2,r3
 1338 002a 7B68     	 ldr r3,[r7,#4]
 1339 002c DA63     	 str r2,[r3,#60]
 471:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1340              	 .loc 3 471 0
 1341 002e 0C37     	 adds r7,r7,#12
 1342              	.LCFI100:
 1343              	 .cfi_def_cfa_offset 4
 1344 0030 BD46     	 mov sp,r7
 1345              	.LCFI101:
 1346              	 .cfi_def_cfa_register 13
 1347              	 
 1348 0032 5DF8047B 	 ldr r7,[sp],#4
 1349              	.LCFI102:
 1350              	 .cfi_restore 7
 1351              	 .cfi_def_cfa_offset 0
 1352 0036 7047     	 bx lr
 1353              	.L79:
 1354              	 .align 2
 1355              	.L78:
 1356 0038 0000FC41 	 .word 1107034112
 1357              	 .cfi_endproc
 1358              	.LFE232:
 1360              	 .text
 1361              	.Letext0:
 1362              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1363              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1364              	 .file 6 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Include/cmsis_gcc.h"
 1365              	 .file 7 "C:/Users/Rui Mendes/Desktop/DAVE/Dissertation/Dissertation_TCU/_FullProject/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_i2c.c
    {standard input}:20     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:67     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:71     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:116    .text.XMC_I2C_CH_ClearStatusFlag:00000000 $t
    {standard input}:120    .text.XMC_I2C_CH_ClearStatusFlag:00000000 XMC_I2C_CH_ClearStatusFlag
    {standard input}:164    .text.XMC_I2C_CH_InitEx:00000000 $t
    {standard input}:169    .text.XMC_I2C_CH_InitEx:00000000 XMC_I2C_CH_InitEx
    {standard input}:252    .text.XMC_I2C_CH_SetSlaveAddress:00000000 XMC_I2C_CH_SetSlaveAddress
    {standard input}:499    .text.XMC_I2C_CH_SetBaudrateEx:00000000 XMC_I2C_CH_SetBaudrateEx
    {standard input}:242    .text.XMC_I2C_CH_InitEx:0000005c $d
    {standard input}:247    .text.XMC_I2C_CH_SetSlaveAddress:00000000 $t
    {standard input}:325    .text.XMC_I2C_CH_GetSlaveAddress:00000000 $t
    {standard input}:330    .text.XMC_I2C_CH_GetSlaveAddress:00000000 XMC_I2C_CH_GetSlaveAddress
    {standard input}:394    .text.XMC_I2C_CH_SetBaudrate:00000000 $t
    {standard input}:399    .text.XMC_I2C_CH_SetBaudrate:00000000 XMC_I2C_CH_SetBaudrate
    {standard input}:488    .text.XMC_I2C_CH_SetBaudrate:00000070 $d
    {standard input}:494    .text.XMC_I2C_CH_SetBaudrateEx:00000000 $t
    {standard input}:607    .text.XMC_I2C_CH_SetBaudrateEx:00000094 $d
    {standard input}:613    .text.XMC_I2C_CH_MasterStart:00000000 $t
    {standard input}:618    .text.XMC_I2C_CH_MasterStart:00000000 XMC_I2C_CH_MasterStart
    {standard input}:697    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 $t
    {standard input}:702    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 XMC_I2C_CH_MasterRepeatedStart
    {standard input}:781    .text.XMC_I2C_CH_MasterStop:00000000 $t
    {standard input}:786    .text.XMC_I2C_CH_MasterStop:00000000 XMC_I2C_CH_MasterStop
    {standard input}:847    .text.XMC_I2C_CH_MasterTransmit:00000000 $t
    {standard input}:852    .text.XMC_I2C_CH_MasterTransmit:00000000 XMC_I2C_CH_MasterTransmit
    {standard input}:915    .text.XMC_I2C_CH_SlaveTransmit:00000000 $t
    {standard input}:920    .text.XMC_I2C_CH_SlaveTransmit:00000000 XMC_I2C_CH_SlaveTransmit
    {standard input}:985    .text.XMC_I2C_CH_MasterReceiveAck:00000000 $t
    {standard input}:990    .text.XMC_I2C_CH_MasterReceiveAck:00000000 XMC_I2C_CH_MasterReceiveAck
    {standard input}:1051   .text.XMC_I2C_CH_MasterReceiveNack:00000000 $t
    {standard input}:1056   .text.XMC_I2C_CH_MasterReceiveNack:00000000 XMC_I2C_CH_MasterReceiveNack
    {standard input}:1117   .text.XMC_I2C_CH_GetReceivedData:00000000 $t
    {standard input}:1122   .text.XMC_I2C_CH_GetReceivedData:00000000 XMC_I2C_CH_GetReceivedData
    {standard input}:1177   .text.XMC_I2C_CH_Stop:00000000 $t
    {standard input}:1182   .text.XMC_I2C_CH_Stop:00000000 XMC_I2C_CH_Stop
    {standard input}:1235   .text.XMC_I2C_CH_EnableEvent:00000000 $t
    {standard input}:1240   .text.XMC_I2C_CH_EnableEvent:00000000 XMC_I2C_CH_EnableEvent
    {standard input}:1292   .text.XMC_I2C_CH_EnableEvent:00000034 $d
    {standard input}:1297   .text.XMC_I2C_CH_DisableEvent:00000000 $t
    {standard input}:1302   .text.XMC_I2C_CH_DisableEvent:00000000 XMC_I2C_CH_DisableEvent
    {standard input}:1356   .text.XMC_I2C_CH_DisableEvent:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_USIC_CH_SetBaudrate
XMC_USIC_CH_SetBaudrateEx
