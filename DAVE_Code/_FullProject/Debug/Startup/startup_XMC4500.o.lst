   1              	# 1 "../Startup/startup_XMC4500.S"
   1              	/**************************************************************************************************
   0              	
   0              	
   0              	
   2              	 * @file     startup_XMC4500.S
   3              	 * @brief    CMSIS Core Device Startup File for Infineon XMC4500 Device Series
   4              	 * @version  V1.30
   5              	 * @date     15 Mai 2020
   6              	 *
   7              	 * @cond
   8              	 **************************************************************************************************
   9              	 * Copyright (c) 2011-2020, Infineon Technologies AG
  10              	 * All rights reserved.                        
  11              	 *                                             
  12              	 * Boost Software License - Version 1.0 - August 17th, 2003
  13              	 * 
  14              	 * Permission is hereby granted, free of charge, to any person or organization
  15              	 * obtaining a copy of the software and accompanying documentation covered by
  16              	 * this license (the "Software") to use, reproduce, display, distribute,
  17              	 * execute, and transmit the Software, and to prepare derivative works of the
  18              	 * Software, and to permit third-parties to whom the Software is furnished to
  19              	 * do so, all subject to the following:
  20              	 * 
  21              	 * The copyright notices in the Software and this entire statement, including
  22              	 * the above license grant, this restriction and the following disclaimer,
  23              	 * must be included in all copies of the Software, in whole or in part, and
  24              	 * all derivative works of the Software, unless such copies or derivative
  25              	 * works are solely in the form of machine-executable object code generated by
  26              	 * a source language processor.
  27              	 * 
  28              	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29              	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30              	 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31              	 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32              	 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33              	 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34              	 * DEALINGS IN THE SOFTWARE.
  35              	 *                                                                              
  36              	 * To improve the quality of the software, users are encouraged to share 
  37              	 * modifications, enhancements or bug fixes with Infineon Technologies AG 
  38              	 * at XMCSupport@infineon.com.
  39              	 **************************************************************************************************
  40              	 *
  41              	 **************************** Change history ********************************
  42              	 * V1.0,July 2011, First version for XIP profile
  43              	 * V1.1,Oct  2011, Program loading code included (GH: b to main changed)
  44              	 * V1.2,Nov, 01, 2011 GH :Removed second definition of section .Xmc4500.reset
  45              	 *                        at line 186. 
  46              	 * V1.3,Nov, 16, 2011 GH :Removed PMU0_1_IRQHandler and respective weak function
  47              	 *                        declaration.
  48              	 * V1.4,Dec, 16, 2011 PKB:Jump to __Xmc4500_start_c reinstated for RTOS integration
  49              	 * V1.5,Jan, 10, 2012 PKB:Migrated to GCC from ARM
  50              	 * V1.6,Jan, 16, 2012 PKB:Branch prediction turned off, Parity errors cleared.
  51              	 * V1.7,Apr, 17, 2012 PKB:Added decision function for PLL initialization  
  52              	 * V1.8,Apr, 20, 2012 PKB:Handshake with DAVE code engine added  
  53              	 * V1.9,Jun, 14, 2012 PKB:Removed the handshake protocol towards simplification  
  54              	 * V1.10,Aug, 13, 2012 PKB:Flash Wait states handling  
  55              	 * V1.11,Oct, 11, 2012 PKB:C++ support. Call to global constructors  
  56              	 * V1.12,Jan, 23, 2013 PKB:XMC4 Prefetch bug workaround  
  57              	 * V1.13,Jul, 29, 2013 PKB:AAPCS violation in V1.12 fixed
  58              	 * V1.14,Feb, 05, 2014 PKB:Removed redundant alignment code from copy+clear funcs   
  59              	 * V1.15,May, 05, 2014 JFT:Added ram_code section
  60              	 * V1.16,Nov, 25, 2014 JFT:CPU workaround disabled. Single default handler.
  61              	 *                         Removed DAVE3 dependency
  62              	 * V1.17,June 11, 2015 JFT:Remove SystemCoreClockUpdate call, done in SystemCoreClockSetup
  63              	 * V1.18,Jan, 05, 2016 JFT:Fix .reset section attributes
  64              	 * V1.19,March,04,2016 JFT:Fix weak definition of Veneers. 
  65              	 *                         Only relevant for AA and AB step, which needs ENABLE_PMU_CM_001_WORKAROU
  66              	 * V1.20,June ,01,2016 JFT:Rename ENABLE_CPU_CM_001_WORKAROUND to ENABLE_PMU_CM_001_WORKAROUND
  67              	 *                         Action required: If using AA/AB step, use ENABLE_PMU_CM_001_WORKAROUND i
  68              	 * V1.30,Mai, 15, 2020 JFT:Added option (ENABLE_OWN_HANDLER) to generate a individual interrupt han
  69              	 * @endcond 
  70              	 */
  71              	
  72              	/* ===========START : MACRO DEFINITION MACRO DEFINITION ================== */
  73              	 
  74              	.macro Entry Handler
  75              	#if defined(ENABLE_PMU_CM_001_WORKAROUND)
  76              	    .long \Handler\()_Veneer
  77              	#else
  78              	    .long \Handler
  79              	#endif
  80              	.endm
  81              	
  82              	.macro Insert_ExceptionHandler Handler_Func 
  83              	    .weak \Handler_Func
  84              	#if defined(ENABLE_OWN_HANDLER)
  85              	    .thumb_func
  87              	\Handler_Func:
  88              	    b .
  90              	#else
  91              	    .thumb_set \Handler_Func, Default_Handler
  92              	#endif 
  93              	
  94              	#if defined(ENABLE_PMU_CM_001_WORKAROUND)
  95              	    .weak \Handler_Func\()_Veneer
  97              	\Handler_Func\()_Veneer:
  98              	    push {r0, lr}
  99              	    ldr  r0, =\Handler_Func
 100              	    blx  r0
 101              	    pop  {r0, pc}
 103              	#endif 
 104              	.endm
 105              	
 106              	/* =============END : MACRO DEFINITION MACRO DEFINITION ================== */
 107 0000 00000000 	
 108 0004 00000000 	/* ================== START OF VECTOR TABLE DEFINITION ====================== */
 109              	/* Vector Table - This gets programed into VTOR register by onchip BootROM */
 110 0008 00000000 	    .syntax unified
 111 000c 00000000 	
 112 0010 00000000 	    .section .reset, "a", %progbits
 113 0014 00000000 	    
 114 0018 00000000 		.align 2
 115 001c 00000000 	    .globl  __Vectors
 117 0024 00000000 	__Vectors:
 118 0028 00000000 	    .long   __initial_sp                /* Top of Stack                 */
 119 002c 00000000 	    .long   Reset_Handler               /* Reset Handler                */
 120 0030 00000000 	
 121 0034 00000000 	    Entry   NMI_Handler                 /* NMI Handler                  */
 122 0038 00000000 	    Entry   HardFault_Handler           /* Hard Fault Handler           */
 123 003c 00000000 	    Entry   MemManage_Handler           /* MPU Fault Handler            */
 124              	    Entry   BusFault_Handler            /* Bus Fault Handler            */
 125              	    Entry   UsageFault_Handler          /* Usage Fault Handler          */
 126 0040 00000000 	    .long   0                           /* Reserved                     */
 127 0044 00000000 	    .long   0                           /* Reserved                     */
 128 0048 00000000 	    .long   0                           /* Reserved                     */
 129 004c 00000000 	    .long   0                           /* Reserved                     */
 130 0050 00000000 	    Entry   SVC_Handler                 /* SVCall Handler               */
 131 0054 00000000 	    Entry   DebugMon_Handler            /* Debug Monitor Handler        */
 132 0058 00000000 	    .long   0                           /* Reserved                     */
 133 005c 00000000 	    Entry   PendSV_Handler              /* PendSV Handler               */
 134 0060 00000000 	    Entry   SysTick_Handler             /* SysTick Handler              */
 135 0064 00000000 	
 136 0068 00000000 	    /* Interrupt Handlers for Service Requests (SR) from XMC4500 Peripherals */
 137 006c 00000000 	    Entry   SCU_0_IRQHandler            /* Handler name for SR SCU_0     */
 138 0070 00000000 	    Entry   ERU0_0_IRQHandler           /* Handler name for SR ERU0_0    */
 139 0074 00000000 	    Entry   ERU0_1_IRQHandler           /* Handler name for SR ERU0_1    */
 140 0078 00000000 	    Entry   ERU0_2_IRQHandler           /* Handler name for SR ERU0_2    */
 141 007c 00000000 	    Entry   ERU0_3_IRQHandler           /* Handler name for SR ERU0_3    */ 
 142 0080 00000000 	    Entry   ERU1_0_IRQHandler           /* Handler name for SR ERU1_0    */
 143 0084 00000000 	    Entry   ERU1_1_IRQHandler           /* Handler name for SR ERU1_1    */
 144 0088 00000000 	    Entry   ERU1_2_IRQHandler           /* Handler name for SR ERU1_2    */
 145 008c 00000000 	    Entry   ERU1_3_IRQHandler           /* Handler name for SR ERU1_3    */
 146 0090 00000000 	    .long   0                           /* Not Available                 */
 147 0094 00000000 	    .long   0                           /* Not Available                 */
 148 0098 00000000 	    .long   0                           /* Not Available                 */
 149 009c 00000000 	    Entry   PMU0_0_IRQHandler           /* Handler name for SR PMU0_0    */
 150 00a0 00000000 	    .long   0                           /* Not Available                 */
 151 00a4 00000000 	    Entry   VADC0_C0_0_IRQHandler       /* Handler name for SR VADC0_C0_0  */
 152 00a8 00000000 	    Entry   VADC0_C0_1_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 153 00ac 00000000 	    Entry   VADC0_C0_2_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 154 00b0 00000000 	    Entry   VADC0_C0_3_IRQHandler       /* Handler name for SR VADC0_C0_3  */
 155 00b4 00000000 	    Entry   VADC0_G0_0_IRQHandler       /* Handler name for SR VADC0_G0_0  */
 156 00b8 00000000 	    Entry   VADC0_G0_1_IRQHandler       /* Handler name for SR VADC0_G0_1  */
 157 00bc 00000000 	    Entry   VADC0_G0_2_IRQHandler       /* Handler name for SR VADC0_G0_2  */
 158 00c0 00000000 	    Entry   VADC0_G0_3_IRQHandler       /* Handler name for SR VADC0_G0_3  */
 159 00c4 00000000 	    Entry   VADC0_G1_0_IRQHandler       /* Handler name for SR VADC0_G1_0  */
 160 00c8 00000000 	    Entry   VADC0_G1_1_IRQHandler       /* Handler name for SR VADC0_G1_1  */
 161 00cc 00000000 	    Entry   VADC0_G1_2_IRQHandler       /* Handler name for SR VADC0_G1_2  */
 162 00d0 00000000 	    Entry   VADC0_G1_3_IRQHandler       /* Handler name for SR VADC0_G1_3  */
 163 00d4 00000000 	    Entry   VADC0_G2_0_IRQHandler       /* Handler name for SR VADC0_G2_0  */
 164 00d8 00000000 	    Entry   VADC0_G2_1_IRQHandler       /* Handler name for SR VADC0_G2_1  */
 165 00dc 00000000 	    Entry   VADC0_G2_2_IRQHandler       /* Handler name for SR VADC0_G2_2  */
 166 00e0 00000000 	    Entry   VADC0_G2_3_IRQHandler       /* Handler name for SR VADC0_G2_3  */
 167 00e4 00000000 	    Entry   VADC0_G3_0_IRQHandler       /* Handler name for SR VADC0_G3_0  */
 168 00e8 00000000 	    Entry   VADC0_G3_1_IRQHandler       /* Handler name for SR VADC0_G3_1  */
 169 00ec 00000000 	    Entry   VADC0_G3_2_IRQHandler       /* Handler name for SR VADC0_G3_2  */
 170 00f0 00000000 	    Entry   VADC0_G3_3_IRQHandler       /* Handler name for SR VADC0_G3_3  */
 171 00f4 00000000 	    Entry   DSD0_0_IRQHandler           /* Handler name for SR DSD0_0    */
 172 00f8 00000000 	    Entry   DSD0_1_IRQHandler           /* Handler name for SR DSD0_1    */
 173 00fc 00000000 	    Entry   DSD0_2_IRQHandler           /* Handler name for SR DSD0_2    */
 174 0100 00000000 	    Entry   DSD0_3_IRQHandler           /* Handler name for SR DSD0_3    */
 175 0104 00000000 	    Entry   DSD0_4_IRQHandler           /* Handler name for SR DSD0_4    */
 176 0108 00000000 	    Entry   DSD0_5_IRQHandler           /* Handler name for SR DSD0_5    */
 177 010c 00000000 	    Entry   DSD0_6_IRQHandler           /* Handler name for SR DSD0_6    */
 178 0110 00000000 	    Entry   DSD0_7_IRQHandler           /* Handler name for SR DSD0_7    */
 179 0114 00000000 	    Entry   DAC0_0_IRQHandler           /* Handler name for SR DAC0_0    */
 180 0118 00000000 	    Entry   DAC0_1_IRQHandler           /* Handler name for SR DAC0_0    */
 181 011c 00000000 	    Entry   CCU40_0_IRQHandler          /* Handler name for SR CCU40_0   */
 182 0120 00000000 	    Entry   CCU40_1_IRQHandler          /* Handler name for SR CCU40_1   */
 183 0124 00000000 	    Entry   CCU40_2_IRQHandler          /* Handler name for SR CCU40_2   */
 184 0128 00000000 	    Entry   CCU40_3_IRQHandler          /* Handler name for SR CCU40_3   */
 185 012c 00000000 	    Entry   CCU41_0_IRQHandler          /* Handler name for SR CCU41_0   */
 186 0130 00000000 	    Entry   CCU41_1_IRQHandler          /* Handler name for SR CCU41_1   */
 187 0134 00000000 	    Entry   CCU41_2_IRQHandler          /* Handler name for SR CCU41_2   */
 188 0138 00000000 	    Entry   CCU41_3_IRQHandler          /* Handler name for SR CCU41_3   */
 189 013c 00000000 	    Entry   CCU42_0_IRQHandler          /* Handler name for SR CCU42_0   */
 190 0140 00000000 	    Entry   CCU42_1_IRQHandler          /* Handler name for SR CCU42_1   */
 191 0144 00000000 	    Entry   CCU42_2_IRQHandler          /* Handler name for SR CCU42_2   */
 192 0148 00000000 	    Entry   CCU42_3_IRQHandler          /* Handler name for SR CCU42_3   */
 193 014c 00000000 	    Entry   CCU43_0_IRQHandler          /* Handler name for SR CCU43_0   */
 194 0150 00000000 	    Entry   CCU43_1_IRQHandler          /* Handler name for SR CCU43_1   */
 195 0154 00000000 	    Entry   CCU43_2_IRQHandler          /* Handler name for SR CCU43_2   */
 196 0158 00000000 	    Entry   CCU43_3_IRQHandler          /* Handler name for SR CCU43_3   */
 197 015c 00000000 	    Entry   CCU80_0_IRQHandler          /* Handler name for SR CCU80_0   */
 198 0160 00000000 	    Entry   CCU80_1_IRQHandler          /* Handler name for SR CCU80_1   */
 199 0164 00000000 	    Entry   CCU80_2_IRQHandler          /* Handler name for SR CCU80_2   */
 200 0168 00000000 	    Entry   CCU80_3_IRQHandler          /* Handler name for SR CCU80_3   */
 201 016c 00000000 	    Entry   CCU81_0_IRQHandler          /* Handler name for SR CCU81_0   */
 202 0170 00000000 	    Entry   CCU81_1_IRQHandler          /* Handler name for SR CCU81_1   */
 203 0174 00000000 	    Entry   CCU81_2_IRQHandler          /* Handler name for SR CCU81_2   */
 204 0178 00000000 	    Entry   CCU81_3_IRQHandler          /* Handler name for SR CCU81_3   */
 205 017c 00000000 	    Entry   POSIF0_0_IRQHandler         /* Handler name for SR POSIF0_0  */
 206 0180 00000000 	    Entry   POSIF0_1_IRQHandler         /* Handler name for SR POSIF0_1  */
 207 0184 00000000 	    Entry   POSIF1_0_IRQHandler         /* Handler name for SR POSIF1_0  */
 208 0188 00000000 	    Entry   POSIF1_1_IRQHandler         /* Handler name for SR POSIF1_1  */
 209 018c 00000000 	    .long   0                           /* Not Available                 */
 210 0190 00000000 	    .long   0                           /* Not Available                 */
 211 0194 00000000 	    .long   0                           /* Not Available                 */
 212 0198 00000000 	    .long   0                           /* Not Available                 */
 213 019c 00000000 	    Entry   CAN0_0_IRQHandler           /* Handler name for SR CAN0_0    */
 214 01a0 00000000 	    Entry   CAN0_1_IRQHandler           /* Handler name for SR CAN0_1    */
 215 01a4 00000000 	    Entry   CAN0_2_IRQHandler           /* Handler name for SR CAN0_2    */
 216 01a8 00000000 	    Entry   CAN0_3_IRQHandler           /* Handler name for SR CAN0_3    */
 217 01ac 00000000 	    Entry   CAN0_4_IRQHandler           /* Handler name for SR CAN0_4    */
 218 01b0 00000000 	    Entry   CAN0_5_IRQHandler           /* Handler name for SR CAN0_5    */
 219 01b4 00000000 	    Entry   CAN0_6_IRQHandler           /* Handler name for SR CAN0_6    */
 220 01b8 00000000 	    Entry   CAN0_7_IRQHandler           /* Handler name for SR CAN0_7    */
 221 01bc 00000000 	    Entry   USIC0_0_IRQHandler          /* Handler name for SR USIC0_0   */
 222 01c0 00000000 	    Entry   USIC0_1_IRQHandler          /* Handler name for SR USIC0_1   */
 223 01c4 00000000 	    Entry   USIC0_2_IRQHandler          /* Handler name for SR USIC0_2   */
 224 01c8 00000000 	    Entry   USIC0_3_IRQHandler          /* Handler name for SR USIC0_3   */
 225 01cc 00000000 	    Entry   USIC0_4_IRQHandler          /* Handler name for SR USIC0_4   */
 226 01d0 00000000 	    Entry   USIC0_5_IRQHandler          /* Handler name for SR USIC0_5   */
 227 01d4 00000000 	    Entry   USIC1_0_IRQHandler          /* Handler name for SR USIC1_0   */
 228 01d8 00000000 	    Entry   USIC1_1_IRQHandler          /* Handler name for SR USIC1_1   */
 229 01dc 00000000 	    Entry   USIC1_2_IRQHandler          /* Handler name for SR USIC1_2   */
 230 01e0 00000000 	    Entry   USIC1_3_IRQHandler          /* Handler name for SR USIC1_3   */
 231 01e4 00000000 	    Entry   USIC1_4_IRQHandler          /* Handler name for SR USIC1_4   */
 232 01e8 00000000 	    Entry   USIC1_5_IRQHandler          /* Handler name for SR USIC1_5   */
 233 01ec 00000000 	    Entry   USIC2_0_IRQHandler          /* Handler name for SR USIC2_0   */
 234 01f0 00000000 	    Entry   USIC2_1_IRQHandler          /* Handler name for SR USIC2_1   */
 235 01f4 00000000 	    Entry   USIC2_2_IRQHandler          /* Handler name for SR USIC2_2   */
 236 01f8 00000000 	    Entry   USIC2_3_IRQHandler          /* Handler name for SR USIC2_3   */
 237 01fc 00000000 	    Entry   USIC2_4_IRQHandler          /* Handler name for SR USIC2_4   */
 238              	    Entry   USIC2_5_IRQHandler          /* Handler name for SR USIC2_5   */
 239              	    Entry   LEDTS0_0_IRQHandler         /* Handler name for SR LEDTS0_0  */
 240              	    .long   0                           /* Not Available                 */
 241              	    Entry   FCE0_0_IRQHandler           /* Handler name for SR FCE0_0    */
 242              	    Entry   GPDMA0_0_IRQHandler         /* Handler name for SR GPDMA0_0  */
 243              	    Entry   SDMMC0_0_IRQHandler         /* Handler name for SR SDMMC0_0  */
 244              	    Entry   USB0_0_IRQHandler           /* Handler name for SR USB0_0    */
 245              	    Entry   ETH0_0_IRQHandler           /* Handler name for SR ETH0_0    */
 246              	    .long   0                           /* Not Available                 */
 247              	    Entry   GPDMA1_0_IRQHandler         /* Handler name for SR GPDMA1_0  */
 248              	    .long   0                           /* Not Available                 */
 249              	
 251              	/* ================== END OF VECTOR TABLE DEFINITION ======================= */
 252 0200 DFF88CD0 	
 253              	/* ================== START OF VECTOR ROUTINES ============================= */
 254              	
 255 0204 2348     		.align	1
 256 0206 8047     	    .thumb
 257              	
 258              	/* Reset Handler */
 259              	    .thumb_func
 260              	    .globl  Reset_Handler
 262              	Reset_Handler:
 263              	    ldr sp,=__initial_sp
 264              	
 265              	#ifndef __SKIP_SYSTEM_INIT
 266              	    ldr  r0, =SystemInit
 267              	    blx  r0
 268              	#endif
 269              	
 270              	/* Initialize data
 271              	 *
 272              	 *  Between symbol address __copy_table_start__ and __copy_table_end__,
 273              	 *  there are array of triplets, each of which specify:
 274              	 *    offset 0: LMA of start of a section to copy from
 275              	 *    offset 4: VMA of start of a section to copy to
 276              	 *    offset 8: size of the section to copy. Must be multiply of 4
 277              	 *
 278              	 *  All addresses must be aligned to 4 bytes boundary.
 279              	 */
 280 0208 234C     		ldr	r4, =__copy_table_start__
 281 020a 244D     		ldr	r5, =__copy_table_end__
 282              	
 283              	.L_loop0:
 284 020c AC42     		cmp	r4, r5
 285 020e 09DA     		bge	.L_loop0_done
 286 0210 2168     		ldr	r1, [r4]
 287 0212 6268     		ldr	r2, [r4, #4]
 288 0214 A368     		ldr	r3, [r4, #8]
 289              	
 290              	.L_loop0_0:
 291 0216 043B     		subs	r3, #4
 292 0218 A2BF     		ittt	ge
 293 021a C858     		ldrge	r0, [r1, r3]
 294 021c D050     		strge	r0, [r2, r3]
 295 021e FAE7     		bge	.L_loop0_0
 296              	
 297 0220 0C34     		adds	r4, #12
 298 0222 F3E7     		b	.L_loop0
 299              	
 300              	.L_loop0_done:
 301              	
 302              	/* Zero initialized data 
 303              	 *  Between symbol address __zero_table_start__ and __zero_table_end__,
 304              	 *  there are array of tuples specifying:
 305              	 *    offset 0: Start of a BSS section
 306              	 *    offset 4: Size of this BSS section. Must be multiply of 4
 307              	 *
 308              	 *  Define __SKIP_BSS_CLEAR to disable zeroing uninitialzed data in startup.
 309              	 */    
 310              	#ifndef __SKIP_BSS_CLEAR
 311 0224 1E4B     		ldr	r3, =__zero_table_start__
 312 0226 1F4C     		ldr	r4, =__zero_table_end__
 313              	
 314              	.L_loop2:
 315 0228 A342     		cmp	r3, r4
 316 022a 08DA     		bge	.L_loop2_done
 317 022c 1968     		ldr	r1, [r3]
 318 022e 5A68     		ldr	r2, [r3, #4]
 319 0230 0020     		movs	r0, 0
 320              	
 321              	.L_loop2_0:
 322 0232 043A     		subs	r2, #4
 323 0234 A4BF     		itt	ge
 324 0236 8850     		strge	r0, [r1, r2]
 325 0238 FBE7     		bge	.L_loop2_0
 326              	
 327 023a 0833     		adds	r3, #8
 328 023c F4E7     		b	.L_loop2
 329              	.L_loop2_done:    
 330              	#endif /* __SKIP_BSS_CLEAR */
 331              	   
 332              	#ifndef __SKIP_LIBC_INIT_ARRAY
 333 023e 1A48     	    ldr  r0, =__libc_init_array
 334 0240 8047     	    blx  r0
 335              	#endif
 336              	
 337 0242 1A48     	    ldr  r0, =main
 338 0244 8047     	    blx  r0
 339              	
 340 0246 0000     	.align 2
 341              	__copy_table_start__:
 342 0248 00000000 	    .long __data_load, __data_start, __data_size
 342      00000000 
 342      00000000 
 343 0254 00000000 	    .long __data2_load, __data2_start, __data2_size
 343      00000000 
 343      00000000 
 344 0260 00000000 	    .long __data3_load, __data3_start, __data3_size
 344      00000000 
 344      00000000 
 345 026c 00000000 	    .long __ram_code_load, __ram_code_start, __ram_code_size
 345      00000000 
 345      00000000 
 346              	__copy_table_end__:
 347              	
 348              	__zero_table_start__:
 349 0278 00000000 	    .long __bss_start, __bss_size
 349      00000000 
 350 0280 00000000 	    .long __bss2_start, __bss2_size
 350      00000000 
 351 0288 00000000 	    .long __bss3_start, __bss3_size
 351      00000000 
 352              	__zero_table_end__:
 353              	    
 354 0290 00000000 		.pool
 354      00000000 
 354      48020000 
 354      78020000 
 354      78020000 
 356              	
 357              	/* ======================================================================== */
 358              	/* ========== START OF EXCEPTION HANDLER DEFINITION ======================== */
 359              	
 360              	/* Default exception Handlers - Users may override this default functionality by
 361              	   defining handlers of the same name in their C code */
 362              	
 363              		.align	1
 364              	    .thumb_func
 365              	    .weak Default_Handler
 367              	Default_Handler:
 368 02b0 FEE7     	    b .
 370              	
 371              	     Insert_ExceptionHandler NMI_Handler
 372              	     Insert_ExceptionHandler HardFault_Handler
 373              	     Insert_ExceptionHandler MemManage_Handler
 374              	     Insert_ExceptionHandler BusFault_Handler
 375              	     Insert_ExceptionHandler UsageFault_Handler
 376              	     Insert_ExceptionHandler SVC_Handler
 377              	     Insert_ExceptionHandler DebugMon_Handler
 378              	     Insert_ExceptionHandler PendSV_Handler
 379              	     Insert_ExceptionHandler SysTick_Handler
 380              	
 381              	     Insert_ExceptionHandler SCU_0_IRQHandler
 382              	     Insert_ExceptionHandler ERU0_0_IRQHandler
 383              	     Insert_ExceptionHandler ERU0_1_IRQHandler
 384              	     Insert_ExceptionHandler ERU0_2_IRQHandler
 385              	     Insert_ExceptionHandler ERU0_3_IRQHandler
 386              	     Insert_ExceptionHandler ERU1_0_IRQHandler
 387              	     Insert_ExceptionHandler ERU1_1_IRQHandler
 388              	     Insert_ExceptionHandler ERU1_2_IRQHandler
 389              	     Insert_ExceptionHandler ERU1_3_IRQHandler
 390              	     Insert_ExceptionHandler PMU0_0_IRQHandler
 391              	     Insert_ExceptionHandler VADC0_C0_0_IRQHandler
 392              	     Insert_ExceptionHandler VADC0_C0_1_IRQHandler
 393              	     Insert_ExceptionHandler VADC0_C0_2_IRQHandler
 394              	     Insert_ExceptionHandler VADC0_C0_3_IRQHandler
 395              	     Insert_ExceptionHandler VADC0_G0_0_IRQHandler
 396              	     Insert_ExceptionHandler VADC0_G0_1_IRQHandler
 397              	     Insert_ExceptionHandler VADC0_G0_2_IRQHandler
 398              	     Insert_ExceptionHandler VADC0_G0_3_IRQHandler
 399              	     Insert_ExceptionHandler VADC0_G1_0_IRQHandler
 400              	     Insert_ExceptionHandler VADC0_G1_1_IRQHandler
 401              	     Insert_ExceptionHandler VADC0_G1_2_IRQHandler
 402              	     Insert_ExceptionHandler VADC0_G1_3_IRQHandler
 403              	     Insert_ExceptionHandler VADC0_G2_0_IRQHandler
 404              	     Insert_ExceptionHandler VADC0_G2_1_IRQHandler
 405              	     Insert_ExceptionHandler VADC0_G2_2_IRQHandler
 406              	     Insert_ExceptionHandler VADC0_G2_3_IRQHandler
 407              	     Insert_ExceptionHandler VADC0_G3_0_IRQHandler
 408              	     Insert_ExceptionHandler VADC0_G3_1_IRQHandler
 409              	     Insert_ExceptionHandler VADC0_G3_2_IRQHandler
 410              	     Insert_ExceptionHandler VADC0_G3_3_IRQHandler
 411              	     Insert_ExceptionHandler DSD0_0_IRQHandler
 412              	     Insert_ExceptionHandler DSD0_1_IRQHandler
 413              	     Insert_ExceptionHandler DSD0_2_IRQHandler
 414              	     Insert_ExceptionHandler DSD0_3_IRQHandler
 415              	     Insert_ExceptionHandler DSD0_4_IRQHandler
 416              	     Insert_ExceptionHandler DSD0_5_IRQHandler
 417              	     Insert_ExceptionHandler DSD0_6_IRQHandler
 418              	     Insert_ExceptionHandler DSD0_7_IRQHandler
 419              	     Insert_ExceptionHandler DAC0_0_IRQHandler
 420              	     Insert_ExceptionHandler DAC0_1_IRQHandler
 421              	     Insert_ExceptionHandler CCU40_0_IRQHandler
 422              	     Insert_ExceptionHandler CCU40_1_IRQHandler
 423              	     Insert_ExceptionHandler CCU40_2_IRQHandler
 424              	     Insert_ExceptionHandler CCU40_3_IRQHandler
 425              	     Insert_ExceptionHandler CCU41_0_IRQHandler
 426              	     Insert_ExceptionHandler CCU41_1_IRQHandler
 427              	     Insert_ExceptionHandler CCU41_2_IRQHandler
 428              	     Insert_ExceptionHandler CCU41_3_IRQHandler
 429              	     Insert_ExceptionHandler CCU42_0_IRQHandler
 430              	     Insert_ExceptionHandler CCU42_1_IRQHandler
 431              	     Insert_ExceptionHandler CCU42_2_IRQHandler
 432              	     Insert_ExceptionHandler CCU42_3_IRQHandler
 433              	     Insert_ExceptionHandler CCU43_0_IRQHandler
 434              	     Insert_ExceptionHandler CCU43_1_IRQHandler
 435              	     Insert_ExceptionHandler CCU43_2_IRQHandler
 436              	     Insert_ExceptionHandler CCU43_3_IRQHandler
 437              	     Insert_ExceptionHandler CCU80_0_IRQHandler
 438              	     Insert_ExceptionHandler CCU80_1_IRQHandler
 439              	     Insert_ExceptionHandler CCU80_2_IRQHandler
 440              	     Insert_ExceptionHandler CCU80_3_IRQHandler
 441              	     Insert_ExceptionHandler CCU81_0_IRQHandler
 442              	     Insert_ExceptionHandler CCU81_1_IRQHandler
 443              	     Insert_ExceptionHandler CCU81_2_IRQHandler
 444              	     Insert_ExceptionHandler CCU81_3_IRQHandler
 445              	     Insert_ExceptionHandler POSIF0_0_IRQHandler
 446              	     Insert_ExceptionHandler POSIF0_1_IRQHandler
 447              	     Insert_ExceptionHandler POSIF1_0_IRQHandler
 448              	     Insert_ExceptionHandler POSIF1_1_IRQHandler
 449              	     Insert_ExceptionHandler CAN0_0_IRQHandler
 450              	     Insert_ExceptionHandler CAN0_1_IRQHandler
 451              	     Insert_ExceptionHandler CAN0_2_IRQHandler
 452              	     Insert_ExceptionHandler CAN0_3_IRQHandler
 453              	     Insert_ExceptionHandler CAN0_4_IRQHandler
 454              	     Insert_ExceptionHandler CAN0_5_IRQHandler
 455              	     Insert_ExceptionHandler CAN0_6_IRQHandler
 456              	     Insert_ExceptionHandler CAN0_7_IRQHandler
 457              	     Insert_ExceptionHandler USIC0_0_IRQHandler
 458              	     Insert_ExceptionHandler USIC0_1_IRQHandler
 459              	     Insert_ExceptionHandler USIC0_2_IRQHandler
 460              	     Insert_ExceptionHandler USIC0_3_IRQHandler
 461              	     Insert_ExceptionHandler USIC0_4_IRQHandler
 462              	     Insert_ExceptionHandler USIC0_5_IRQHandler
 463              	     Insert_ExceptionHandler USIC1_0_IRQHandler
 464              	     Insert_ExceptionHandler USIC1_1_IRQHandler
 465              	     Insert_ExceptionHandler USIC1_2_IRQHandler
 466              	     Insert_ExceptionHandler USIC1_3_IRQHandler
 467              	     Insert_ExceptionHandler USIC1_4_IRQHandler
 468              	     Insert_ExceptionHandler USIC1_5_IRQHandler
 469              	     Insert_ExceptionHandler USIC2_0_IRQHandler
 470              	     Insert_ExceptionHandler USIC2_1_IRQHandler
 471              	     Insert_ExceptionHandler USIC2_2_IRQHandler
 472              	     Insert_ExceptionHandler USIC2_3_IRQHandler
 473              	     Insert_ExceptionHandler USIC2_4_IRQHandler
 474              	     Insert_ExceptionHandler USIC2_5_IRQHandler
 475              	     Insert_ExceptionHandler LEDTS0_0_IRQHandler
 476              	     Insert_ExceptionHandler FCE0_0_IRQHandler
 477              	     Insert_ExceptionHandler GPDMA0_0_IRQHandler
 478              	     Insert_ExceptionHandler SDMMC0_0_IRQHandler
 479              	     Insert_ExceptionHandler USB0_0_IRQHandler
 480              	     Insert_ExceptionHandler ETH0_0_IRQHandler
 481              	     Insert_ExceptionHandler GPDMA1_0_IRQHandler
 482              	     
 483              	/* ============= END OF INTERRUPT HANDLER DEFINITION ====================== */
 484              	
 485 02b2 0000     	    .end
DEFINED SYMBOLS
../Startup/startup_XMC4500.S:103    .reset:00000000 $d
../Startup/startup_XMC4500.S:106    .reset:00000000 __Vectors
../Startup/startup_XMC4500.S:251    .reset:00000200 Reset_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 NMI_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 HardFault_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 MemManage_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 BusFault_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 UsageFault_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 SVC_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DebugMon_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 PendSV_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 SysTick_Handler
../Startup/startup_XMC4500.S:367    .reset:000002b0 SCU_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ERU0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ERU0_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ERU0_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ERU0_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ERU1_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ERU1_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ERU1_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ERU1_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 PMU0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_C0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_C0_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_C0_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_C0_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G0_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G0_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G0_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G1_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G1_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G1_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G1_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G2_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G2_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G2_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G2_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G3_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G3_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G3_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 VADC0_G3_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DSD0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DSD0_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DSD0_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DSD0_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DSD0_4_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DSD0_5_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DSD0_6_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DSD0_7_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DAC0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 DAC0_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU40_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU40_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU40_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU40_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU41_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU41_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU41_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU41_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU42_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU42_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU42_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU42_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU43_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU43_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU43_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU43_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU80_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU80_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU80_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU80_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU81_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU81_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU81_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CCU81_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 POSIF0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 POSIF0_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 POSIF1_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 POSIF1_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CAN0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CAN0_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CAN0_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CAN0_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CAN0_4_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CAN0_5_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CAN0_6_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 CAN0_7_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC0_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC0_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC0_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC0_4_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC0_5_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC1_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC1_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC1_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC1_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC1_4_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC1_5_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC2_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC2_1_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC2_2_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC2_3_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC2_4_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USIC2_5_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 LEDTS0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 FCE0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 GPDMA0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 SDMMC0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 USB0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 ETH0_0_IRQHandler
../Startup/startup_XMC4500.S:367    .reset:000002b0 GPDMA1_0_IRQHandler
../Startup/startup_XMC4500.S:252    .reset:00000200 $t
../Startup/startup_XMC4500.S:341    .reset:00000248 __copy_table_start__
../Startup/startup_XMC4500.S:346    .reset:00000278 __copy_table_end__
../Startup/startup_XMC4500.S:348    .reset:00000278 __zero_table_start__
../Startup/startup_XMC4500.S:352    .reset:00000290 __zero_table_end__
../Startup/startup_XMC4500.S:340    .reset:00000246 $d
../Startup/startup_XMC4500.S:367    .reset:000002b0 Default_Handler
../Startup/startup_XMC4500.S:368    .reset:000002b0 $t
                   .debug_aranges:0000000c $d
../Startup/startup_XMC4500.S:485    .reset:000002b2 $d

UNDEFINED SYMBOLS
__initial_sp
SystemInit
__libc_init_array
main
__data_load
__data_start
__data_size
__data2_load
__data2_start
__data2_size
__data3_load
__data3_start
__data3_size
__ram_code_load
__ram_code_start
__ram_code_size
__bss_start
__bss_size
__bss2_start
__bss2_size
__bss3_start
__bss3_size
