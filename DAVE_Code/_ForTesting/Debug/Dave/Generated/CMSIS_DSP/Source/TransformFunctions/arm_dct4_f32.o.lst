   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_dct4_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_dct4_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_dct4_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_dct4_f32:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c"
   1:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * Title:        arm_dct4_f32.c
   4:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * Description:  Processing function of DCT4 & IDCT4 F32
   5:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @ingroup groupTransforms
  33:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @defgroup DCT4_IDCT4 DCT Type IV Functions
  37:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
  38:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   Representation of signals by minimum number of values is important for storage and transmission.
  39:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   The possibility of large discontinuity between the beginning and end of a period of a signal
  40:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   in DFT can be avoided by extending the signal so that it is even-symmetric.
  41:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   Discrete Cosine Transform (DCT) is constructed such that its energy is heavily concentrated in th
  42:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   spectrum and is very widely used in signal and image coding applications.
  43:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   The family of DCTs (DCT type- 1,2,3,4) is the outcome of different combinations of homogeneous bo
  44:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   DCT has an excellent energy-packing capability, hence has many applications and in data compressi
  45:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   
  46:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   DCT is essentially the Discrete Fourier Transform(DFT) of an even-extended real signal.
  47:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   Reordering of the input data makes the computation of DCT just a problem of
  48:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   computing the DFT of a real signal with a few additional operations.
  49:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   This approach provides regular, simple, and very efficient DCT algorithms for practical hardware 
  50:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   
  51:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   DCT type-II can be implemented using Fast fourier transform (FFT) internally, as the transform is
  52:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   DCT4 is implemented using DCT2 as their implementations are similar except with some added pre-pr
  53:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   DCT2 implementation can be described in the following steps:
  54:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   - Re-ordering input
  55:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   - Calculating Real FFT
  56:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   - Multiplication of weights and Real FFT output and getting real part from the product.
  57:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   
  58:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   This process is explained by the block diagram below:
  59:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   \image html DCT4.gif "Discrete Cosine Transform - type-IV"
  60:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  
  61:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @par           Algorithm
  62:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    The N-point type-IV DCT is defined as a real, linear transformation by the formu
  63:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    \image html DCT4Equation.gif
  64:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    where <code>k = 0, 1, 2, ..., N-1</code>
  65:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @par
  66:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    Its inverse is defined as follows:
  67:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    \image html IDCT4Equation.gif
  68:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    where <code>n = 0, 1, 2, ..., N-1</code>
  69:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @par
  70:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    The DCT4 matrices become involutory (i.e. they are self-inverse) by multiplying 
  71:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    The symmetry of the transform matrix indicates that the fast algorithms for the 
  72:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    and inverse transform computation are identical.
  73:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    Note that the implementation of Inverse DCT4 and DCT4 is same, hence same proces
  74:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  
  75:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @par           Lengths supported by the transform:
  76:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    As DCT4 internally uses Real FFT, it supports all the lengths 128, 512, 2048 and
  77:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    The library provides separate functions for Q15, Q31, and floating-point data ty
  78:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @par           Instance Structure
  80:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    The instances for Real FFT and FFT, cosine values table and twiddle factor table
  81:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    A separate instance structure must be defined for each transform.
  82:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    There are separate instance structure declarations for each of the 3 supported d
  83:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                  
  84:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @par           Initialization Functions
  85:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    There is also an associated initialization function for each data type.
  86:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    The initialization function performs the following operations:
  87:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    - Sets the values of the internal structure fields.
  88:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    - Initializes Real FFT as its process function is used internally in DCT4, by ca
  89:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @par
  90:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    Use of the initialization function is optional.
  91:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    However, if the initialization function is used, then the instance structure can
  92:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    To place an instance structure into a const data section, the instance structure
  93:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    Manually initialize the instance structure as follows:
  94:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   <pre>
  95:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****       arm_dct4_instance_f32 S = {N, Nby2, normalize, pTwiddle, pCosFactor, pRfft, pCfft};
  96:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****       arm_dct4_instance_q31 S = {N, Nby2, normalize, pTwiddle, pCosFactor, pRfft, pCfft};
  97:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****       arm_dct4_instance_q15 S = {N, Nby2, normalize, pTwiddle, pCosFactor, pRfft, pCfft};
  98:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   </pre>
  99:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    where \c N is the length of the DCT4; \c Nby2 is half of the length of the DCT4;
 100:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    \c normalize is normalizing factor used and is equal to <code>sqrt(2/N)</code>;
 101:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    \c pTwiddle points to the twiddle factor table;
 102:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    \c pCosFactor points to the cosFactor table;
 103:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    \c pRfft points to the real FFT instance;
 104:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    \c pCfft points to the complex FFT instance;
 105:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    The CFFT and RFFT structures also needs to be initialized, refer to arm_cfft_rad
 106:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    and arm_rfft_f32() respectively for details regarding static initialization.
 107:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  
 108:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @par           Fixed-Point Behavior
 109:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    Care must be taken when using the fixed-point versions of the DCT4 transform fun
 110:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    In particular, the overflow and saturation behavior of the accumulator used in e
 111:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****                    Refer to the function specific documentation below for usage guidelines.
 112:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  */
 113:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 114:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  /**
 115:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @addtogroup DCT4_IDCT4
 116:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @{
 117:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  */
 118:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** /**
 120:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @brief         Processing function for the floating-point DCT4/IDCT4.
 121:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @param[in]     S             points to an instance of the floating-point DCT4/IDCT4 structure
 122:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @param[in]     pState        points to state buffer
 123:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @param[in,out] pInlineBuffer points to the in-place input and output buffer
 124:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   @return        none
 125:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****  */
 126:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 127:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** void arm_dct4_f32(
 128:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   const arm_dct4_instance_f32 * S,
 129:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****         float32_t * pState,
 130:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****         float32_t * pInlineBuffer)
 131:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** {
  28              	 .loc 1 131 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 8CB0     	 sub sp,sp,#48
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 56
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
 132:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   const float32_t *weights = S->pTwiddle;              /* Pointer to the Weights table */
  46              	 .loc 1 132 0
  47 000c FB68     	 ldr r3,[r7,#12]
  48 000e 9B68     	 ldr r3,[r3,#8]
  49 0010 BB61     	 str r3,[r7,#24]
 133:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   const float32_t *cosFact = S->pCosFactor;            /* Pointer to the cos factors table */
  50              	 .loc 1 133 0
  51 0012 FB68     	 ldr r3,[r7,#12]
  52 0014 DB68     	 ldr r3,[r3,#12]
  53 0016 7B61     	 str r3,[r7,#20]
 134:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****         float32_t *pS1, *pS2, *pbuff;                  /* Temporary pointers for input buffer and p
 135:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****         float32_t in;                                  /* Temporary variable */
 136:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****         uint32_t i;                                    /* Loop counter */
 137:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 138:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 139:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* DCT4 computation involves DCT2 (which is calculated using RFFT)
 140:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * along with some pre-processing and post-processing.
 141:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * Computational procedure is explained as follows:
 142:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * (a) Pre-processing involves multiplying input with cos factor,
 143:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *     r(n) = 2 * u(n) * cos(pi*(2*n+1)/(4*n))
 144:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *              where,
 145:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *                 r(n) -- output of preprocessing
 146:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *                 u(n) -- input to preprocessing(actual Source buffer)
 147:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * (b) Calculation of DCT2 using FFT is divided into three steps:
 148:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *                  Step1: Re-ordering of even and odd elements of input.
 149:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *                  Step2: Calculating FFT of the re-ordered input.
 150:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *                  Step3: Taking the real part of the product of FFT output and weights.
 151:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * (c) Post-processing - DCT4 can be obtained from DCT2 output using the following equation:
 152:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *                   Y4(k) = Y2(k) - Y4(k-1) and Y4(-1) = Y4(0)
 153:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *                        where,
 154:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *                           Y4 -- DCT4 output,   Y2 -- DCT2 output
 155:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * (d) Multiplying the output with the normalizing factor sqrt(2/N).
 156:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    */
 157:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 158:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /*-------- Pre-processing ------------*/
 159:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Multiplying input with cos factor i.e. r(n) = 2 * x(n) * cos(pi*(2*n+1)/(4*n)) */
 160:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   arm_scale_f32(pInlineBuffer, 2.0f, pInlineBuffer, S->N);
  54              	 .loc 1 160 0
  55 0018 FB68     	 ldr r3,[r7,#12]
  56 001a 1B88     	 ldrh r3,[r3]
  57 001c 7868     	 ldr r0,[r7,#4]
  58 001e 4FF08041 	 mov r1,#1073741824
  59 0022 7A68     	 ldr r2,[r7,#4]
  60 0024 FFF7FEFF 	 bl arm_scale_f32
 161:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   arm_mult_f32(pInlineBuffer, cosFact, pInlineBuffer, S->N);
  61              	 .loc 1 161 0
  62 0028 FB68     	 ldr r3,[r7,#12]
  63 002a 1B88     	 ldrh r3,[r3]
  64 002c 7868     	 ldr r0,[r7,#4]
  65 002e 7969     	 ldr r1,[r7,#20]
  66 0030 7A68     	 ldr r2,[r7,#4]
  67 0032 FFF7FEFF 	 bl arm_mult_f32
 162:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* ----------------------------------------------------------------
 164:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * Step1: Re-ordering of even and odd elements as
 165:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *             pState[i] =  pInlineBuffer[2*i] and
 166:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *             pState[N-i-1] = pInlineBuffer[2*i+1] where i = 0 to N/2
 167:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    ---------------------------------------------------------------------*/
 168:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 169:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 170:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
  68              	 .loc 1 170 0
  69 0036 BB68     	 ldr r3,[r7,#8]
  70 0038 FB62     	 str r3,[r7,#44]
 171:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 172:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pS2 initialized to pState+N-1, so that it points to the end of the state buffer */
 173:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pS2 = pState + (S->N - 1U);
  71              	 .loc 1 173 0
  72 003a FB68     	 ldr r3,[r7,#12]
  73 003c 1B88     	 ldrh r3,[r3]
  74 003e 03F18043 	 add r3,r3,#1073741824
  75 0042 013B     	 subs r3,r3,#1
  76 0044 9B00     	 lsls r3,r3,#2
  77 0046 BA68     	 ldr r2,[r7,#8]
  78 0048 1344     	 add r3,r3,r2
  79 004a BB62     	 str r3,[r7,#40]
 174:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer */
 176:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
  80              	 .loc 1 176 0
  81 004c 7B68     	 ldr r3,[r7,#4]
  82 004e 7B62     	 str r3,[r7,#36]
 177:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 178:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 179:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 180:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 181:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N/2 >> 2 for loop unrolling by 4 */
 182:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = S->Nby2 >> 2U;
 183:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 184:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 185:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 186:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   do
 187:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 188:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Re-ordering of even and odd elements */
 189:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* pState[i] =  pInlineBuffer[2*i] */
 190:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
 191:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* pState[N-i-1] = pInlineBuffer[2*i+1] */
 192:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 193:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 194:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
 195:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 196:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 197:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
 198:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 199:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 200:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
 201:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 202:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 203:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement loop counter */
 204:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 205:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   } while (i > 0U);
 206:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 207:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer */
 208:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 209:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 210:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 211:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
 212:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 213:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N/4 instead of N for loop unrolling */
 214:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = S->N >> 2U;
 215:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 216:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Processing with loop unrolling 4 times as N is always multiple of 4.
 217:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * Compute 4 outputs at a time */
 218:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   do
 219:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 220:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Writing the re-ordered output back to inplace input buffer */
 221:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 222:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 223:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 224:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 225:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 226:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 227:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 228:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   } while (i > 0U);
 229:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 230:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 231:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* ---------------------------------------------------------
 232:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *     Step2: Calculate RFFT for N-point input
 233:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * ---------------------------------------------------------- */
 234:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pInlineBuffer is real input of length N , pState is the complex output of length 2N */
 235:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   arm_rfft_f32 (S->pRfft, pInlineBuffer, pState);
 236:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 237:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /*----------------------------------------------------------------------
 238:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *  Step3: Multiply the FFT output with the weights.
 239:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *----------------------------------------------------------------------*/
 240:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   arm_cmplx_mult_cmplx_f32 (pState, weights, pState, S->N);
 241:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 242:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* ----------- Post-processing ---------- */
 243:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* DCT-IV can be obtained from DCT-II by the equation,
 244:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *       Y4(k) = Y2(k) - Y4(k-1) and Y4(-1) = Y4(0)
 245:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *       Hence, Y4(0) = Y2(0)/2  */
 246:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Getting only real part from the output and Converting to DCT-IV */
 247:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 248:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N >> 2 for loop unrolling by 4 */
 249:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = (S->N - 1U) >> 2U;
 250:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 251:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer. */
 252:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 253:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 254:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 255:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
 256:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 257:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Calculating Y4(0) from Y2(0) using Y4(0) = Y2(0)/2 */
 258:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   in = *pS1++ * (float32_t) 0.5;
 259:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* input buffer acts as inplace, so output values are stored in the input itself. */
 260:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   *pbuff++ = in;
 261:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 262:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pState pointer is incremented twice as the real values are located alternatively in the array 
 263:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pS1++;
 264:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 265:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 266:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 267:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   do
 268:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 269:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Calculating Y4(1) to Y4(N-1) from Y2 using equation Y4(k) = Y2(k) - Y4(k-1) */
 270:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* pState pointer (pS1) is incremented twice as the real values are located alternatively in th
 271:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 272:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 273:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* points to the next real value */
 274:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 275:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 276:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 277:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 278:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 279:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 280:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 281:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 282:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 283:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 284:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 285:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 286:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 287:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 288:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 289:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 290:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   } while (i > 0U);
 291:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 292:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 293:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    ** No loop unrolling is used. */
 294:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = (S->N - 1U) % 0x4U;
 295:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 296:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   while (i > 0U)
 297:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 298:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Calculating Y4(1) to Y4(N-1) from Y2 using equation Y4(k) = Y2(k) - Y4(k-1) */
 299:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* pState pointer (pS1) is incremented twice as the real values are located alternatively in th
 300:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 301:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 302:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 303:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* points to the next real value */
 304:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 305:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 306:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 307:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 308:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   }
 309:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 310:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 311:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /*------------ Normalizing the output by multiplying with the normalizing factor ----------*/
 312:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 313:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N/4 instead of N for loop unrolling */
 314:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = S->N >> 2U;
 315:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 316:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to the pInlineBuffer(now contains the output values) */
 317:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 318:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 319:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Processing with loop unrolling 4 times as N is always multiple of 4.  Compute 4 outputs at a t
 320:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   do
 321:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 322:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Multiplying pInlineBuffer with the normalizing factor sqrt(2/N) */
 323:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 324:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 325:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 326:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 327:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 328:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 329:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 330:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 331:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 332:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 333:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 334:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 335:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 336:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 337:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   } while (i > 0U);
 338:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 339:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 340:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** #else
 341:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 342:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N/2 */
 343:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = S->Nby2;
  83              	 .loc 1 343 0
  84 0050 FB68     	 ldr r3,[r7,#12]
  85 0052 5B88     	 ldrh r3,[r3,#2]
  86 0054 FB61     	 str r3,[r7,#28]
  87              	.L2:
 344:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 345:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   do
 346:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 347:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Re-ordering of even and odd elements */
 348:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* pState[i] =  pInlineBuffer[2*i] */
 349:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
  88              	 .loc 1 349 0 discriminator 1
  89 0056 FB6A     	 ldr r3,[r7,#44]
  90 0058 1A1D     	 adds r2,r3,#4
  91 005a FA62     	 str r2,[r7,#44]
  92 005c 7A6A     	 ldr r2,[r7,#36]
  93 005e 111D     	 adds r1,r2,#4
  94 0060 7962     	 str r1,[r7,#36]
  95 0062 1268     	 ldr r2,[r2]
  96 0064 1A60     	 str r2,[r3]
 350:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* pState[N-i-1] = pInlineBuffer[2*i+1] */
 351:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
  97              	 .loc 1 351 0 discriminator 1
  98 0066 BB6A     	 ldr r3,[r7,#40]
  99 0068 1A1F     	 subs r2,r3,#4
 100 006a BA62     	 str r2,[r7,#40]
 101 006c 7A6A     	 ldr r2,[r7,#36]
 102 006e 111D     	 adds r1,r2,#4
 103 0070 7962     	 str r1,[r7,#36]
 104 0072 1268     	 ldr r2,[r2]
 105 0074 1A60     	 str r2,[r3]
 352:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 353:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 354:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 106              	 .loc 1 354 0 discriminator 1
 107 0076 FB69     	 ldr r3,[r7,#28]
 108 0078 013B     	 subs r3,r3,#1
 109 007a FB61     	 str r3,[r7,#28]
 355:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   } while (i > 0U);
 110              	 .loc 1 355 0 discriminator 1
 111 007c FB69     	 ldr r3,[r7,#28]
 112 007e 002B     	 cmp r3,#0
 113 0080 E9D1     	 bne .L2
 356:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 357:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer */
 358:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 114              	 .loc 1 358 0
 115 0082 7B68     	 ldr r3,[r7,#4]
 116 0084 7B62     	 str r3,[r7,#36]
 359:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 360:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 361:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
 117              	 .loc 1 361 0
 118 0086 BB68     	 ldr r3,[r7,#8]
 119 0088 FB62     	 str r3,[r7,#44]
 362:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 363:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter */
 364:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = S->N;
 120              	 .loc 1 364 0
 121 008a FB68     	 ldr r3,[r7,#12]
 122 008c 1B88     	 ldrh r3,[r3]
 123 008e FB61     	 str r3,[r7,#28]
 124              	.L3:
 365:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 366:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   do
 367:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 368:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Writing the re-ordered output back to inplace input buffer */
 369:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 125              	 .loc 1 369 0 discriminator 1
 126 0090 7B6A     	 ldr r3,[r7,#36]
 127 0092 1A1D     	 adds r2,r3,#4
 128 0094 7A62     	 str r2,[r7,#36]
 129 0096 FA6A     	 ldr r2,[r7,#44]
 130 0098 111D     	 adds r1,r2,#4
 131 009a F962     	 str r1,[r7,#44]
 132 009c 1268     	 ldr r2,[r2]
 133 009e 1A60     	 str r2,[r3]
 370:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 371:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 372:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 134              	 .loc 1 372 0 discriminator 1
 135 00a0 FB69     	 ldr r3,[r7,#28]
 136 00a2 013B     	 subs r3,r3,#1
 137 00a4 FB61     	 str r3,[r7,#28]
 373:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   } while (i > 0U);
 138              	 .loc 1 373 0 discriminator 1
 139 00a6 FB69     	 ldr r3,[r7,#28]
 140 00a8 002B     	 cmp r3,#0
 141 00aa F1D1     	 bne .L3
 374:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 375:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 376:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* ---------------------------------------------------------
 377:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *     Step2: Calculate RFFT for N-point input
 378:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    * ---------------------------------------------------------- */
 379:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pInlineBuffer is real input of length N , pState is the complex output of length 2N */
 380:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   arm_rfft_f32 (S->pRfft, pInlineBuffer, pState);
 142              	 .loc 1 380 0
 143 00ac FB68     	 ldr r3,[r7,#12]
 144 00ae 1B69     	 ldr r3,[r3,#16]
 145 00b0 1846     	 mov r0,r3
 146 00b2 7968     	 ldr r1,[r7,#4]
 147 00b4 BA68     	 ldr r2,[r7,#8]
 148 00b6 FFF7FEFF 	 bl arm_rfft_f32
 381:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 382:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /*----------------------------------------------------------------------
 383:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *  Step3: Multiply the FFT output with the weights.
 384:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *----------------------------------------------------------------------*/
 385:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   arm_cmplx_mult_cmplx_f32 (pState, weights, pState, S->N);
 149              	 .loc 1 385 0
 150 00ba FB68     	 ldr r3,[r7,#12]
 151 00bc 1B88     	 ldrh r3,[r3]
 152 00be B868     	 ldr r0,[r7,#8]
 153 00c0 B969     	 ldr r1,[r7,#24]
 154 00c2 BA68     	 ldr r2,[r7,#8]
 155 00c4 FFF7FEFF 	 bl arm_cmplx_mult_cmplx_f32
 386:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 387:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* ----------- Post-processing ---------- */
 388:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* DCT-IV can be obtained from DCT-II by the equation,
 389:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *       Y4(k) = Y2(k) - Y4(k-1) and Y4(-1) = Y4(0)
 390:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****    *       Hence, Y4(0) = Y2(0)/2  */
 391:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Getting only real part from the output and Converting to DCT-IV */
 392:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 393:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer. */
 394:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 156              	 .loc 1 394 0
 157 00c8 7B68     	 ldr r3,[r7,#4]
 158 00ca 7B62     	 str r3,[r7,#36]
 395:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 396:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 397:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
 159              	 .loc 1 397 0
 160 00cc BB68     	 ldr r3,[r7,#8]
 161 00ce FB62     	 str r3,[r7,#44]
 398:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 399:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Calculating Y4(0) from Y2(0) using Y4(0) = Y2(0)/2 */
 400:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   in = *pS1++ * (float32_t) 0.5;
 162              	 .loc 1 400 0
 163 00d0 FB6A     	 ldr r3,[r7,#44]
 164 00d2 1A1D     	 adds r2,r3,#4
 165 00d4 FA62     	 str r2,[r7,#44]
 166 00d6 D3ED007A 	 flds s15,[r3]
 167 00da B6EE007A 	 fconsts s14,#96
 168 00de 67EE877A 	 fmuls s15,s15,s14
 169 00e2 C7ED087A 	 fsts s15,[r7,#32]
 401:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* input buffer acts as inplace, so output values are stored in the input itself. */
 402:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   *pbuff++ = in;
 170              	 .loc 1 402 0
 171 00e6 7B6A     	 ldr r3,[r7,#36]
 172 00e8 1A1D     	 adds r2,r3,#4
 173 00ea 7A62     	 str r2,[r7,#36]
 174 00ec 3A6A     	 ldr r2,[r7,#32]
 175 00ee 1A60     	 str r2,[r3]
 403:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 404:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pState pointer is incremented twice as the real values are located alternatively in the array 
 405:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pS1++;
 176              	 .loc 1 405 0
 177 00f0 FB6A     	 ldr r3,[r7,#44]
 178 00f2 0433     	 adds r3,r3,#4
 179 00f4 FB62     	 str r3,[r7,#44]
 406:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 407:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter */
 408:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = (S->N - 1U);
 180              	 .loc 1 408 0
 181 00f6 FB68     	 ldr r3,[r7,#12]
 182 00f8 1B88     	 ldrh r3,[r3]
 183 00fa 013B     	 subs r3,r3,#1
 184 00fc FB61     	 str r3,[r7,#28]
 185              	.L4:
 409:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 410:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   do
 411:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 412:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Calculating Y4(1) to Y4(N-1) from Y2 using equation Y4(k) = Y2(k) - Y4(k-1) */
 413:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* pState pointer (pS1) is incremented twice as the real values are located alternatively in th
 414:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 186              	 .loc 1 414 0 discriminator 1
 187 00fe FB6A     	 ldr r3,[r7,#44]
 188 0100 1A1D     	 adds r2,r3,#4
 189 0102 FA62     	 str r2,[r7,#44]
 190 0104 93ED007A 	 flds s14,[r3]
 191 0108 D7ED087A 	 flds s15,[r7,#32]
 192 010c 77EE677A 	 fsubs s15,s14,s15
 193 0110 C7ED087A 	 fsts s15,[r7,#32]
 415:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 194              	 .loc 1 415 0 discriminator 1
 195 0114 7B6A     	 ldr r3,[r7,#36]
 196 0116 1A1D     	 adds r2,r3,#4
 197 0118 7A62     	 str r2,[r7,#36]
 198 011a 3A6A     	 ldr r2,[r7,#32]
 199 011c 1A60     	 str r2,[r3]
 416:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 417:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* points to the next real value */
 418:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 200              	 .loc 1 418 0 discriminator 1
 201 011e FB6A     	 ldr r3,[r7,#44]
 202 0120 0433     	 adds r3,r3,#4
 203 0122 FB62     	 str r3,[r7,#44]
 419:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 420:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement loop counter */
 421:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 204              	 .loc 1 421 0 discriminator 1
 205 0124 FB69     	 ldr r3,[r7,#28]
 206 0126 013B     	 subs r3,r3,#1
 207 0128 FB61     	 str r3,[r7,#28]
 422:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   } while (i > 0U);
 208              	 .loc 1 422 0 discriminator 1
 209 012a FB69     	 ldr r3,[r7,#28]
 210 012c 002B     	 cmp r3,#0
 211 012e E6D1     	 bne .L4
 423:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 424:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /*------------ Normalizing the output by multiplying with the normalizing factor ----------*/
 425:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 426:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* Initializing loop counter */
 427:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   i = S->N;
 212              	 .loc 1 427 0
 213 0130 FB68     	 ldr r3,[r7,#12]
 214 0132 1B88     	 ldrh r3,[r3]
 215 0134 FB61     	 str r3,[r7,#28]
 428:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 429:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to the pInlineBuffer (now contains the output values) */
 430:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 216              	 .loc 1 430 0
 217 0136 7B68     	 ldr r3,[r7,#4]
 218 0138 7B62     	 str r3,[r7,#36]
 219              	.L5:
 431:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 432:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   do
 433:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   {
 434:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Multiplying pInlineBuffer with the normalizing factor sqrt(2/N) */
 435:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 220              	 .loc 1 435 0 discriminator 1
 221 013a 7B6A     	 ldr r3,[r7,#36]
 222 013c 1B68     	 ldr r3,[r3]
 223 013e 3B62     	 str r3,[r7,#32]
 436:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 224              	 .loc 1 436 0 discriminator 1
 225 0140 7B6A     	 ldr r3,[r7,#36]
 226 0142 1A1D     	 adds r2,r3,#4
 227 0144 7A62     	 str r2,[r7,#36]
 228 0146 FA68     	 ldr r2,[r7,#12]
 229 0148 92ED017A 	 flds s14,[r2,#4]
 230 014c D7ED087A 	 flds s15,[r7,#32]
 231 0150 67EE277A 	 fmuls s15,s14,s15
 232 0154 C3ED007A 	 fsts s15,[r3]
 437:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 438:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     /* Decrement loop counter */
 439:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****     i--;
 233              	 .loc 1 439 0 discriminator 1
 234 0158 FB69     	 ldr r3,[r7,#28]
 235 015a 013B     	 subs r3,r3,#1
 236 015c FB61     	 str r3,[r7,#28]
 440:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c ****   } while (i > 0U);
 237              	 .loc 1 440 0 discriminator 1
 238 015e FB69     	 ldr r3,[r7,#28]
 239 0160 002B     	 cmp r3,#0
 240 0162 EAD1     	 bne .L5
 441:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 442:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 443:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** 
 444:../Dave/Generated/CMSIS_DSP/Source/TransformFunctions/arm_dct4_f32.c **** }
 241              	 .loc 1 444 0
 242 0164 3037     	 adds r7,r7,#48
 243              	.LCFI3:
 244              	 .cfi_def_cfa_offset 8
 245 0166 BD46     	 mov sp,r7
 246              	.LCFI4:
 247              	 .cfi_def_cfa_register 13
 248              	 
 249 0168 80BD     	 pop {r7,pc}
 250              	 .cfi_endproc
 251              	.LFE149:
 253 016a 00BF     	 .text
 254              	.Letext0:
 255              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 256              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 257              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 258              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_dct4_f32.c
    {standard input}:20     .text.arm_dct4_f32:00000000 $t
    {standard input}:25     .text.arm_dct4_f32:00000000 arm_dct4_f32
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
arm_scale_f32
arm_mult_f32
arm_rfft_f32
arm_cmplx_mult_cmplx_f32
