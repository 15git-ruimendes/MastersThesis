   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_mat_scale_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_mat_scale_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_mat_scale_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_mat_scale_q15:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c"
   1:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * Title:        arm_mat_scale_q15.c
   4:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * Description:  Multiplies a Q15 matrix by a scalar
   5:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @ingroup groupMatrix
  33:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @addtogroup MatrixScale
  37:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @brief         Q15 matrix scaling.
  42:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @param[in]     pSrc        points to input matrix
  43:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @param[in]     scaleFract  fractional portion of the scale factor
  44:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @param[in]     shift       number of bits to shift the result by
  45:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @param[out]    pDst        points to output matrix structure
  46:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @return        execution status
  47:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  48:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  49:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  50:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   @par           Scaling and Overflow Behavior
  51:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****                    The input data <code>*pSrc</code> and <code>scaleFract</code> are in 1.15 format
  52:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****                    These are multiplied to yield a 2.30 intermediate result and this is shifted wit
  53:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****  */
  54:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #if defined(ARM_MATH_MVEI)
  55:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** arm_status arm_mat_scale_q15(
  56:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   const arm_matrix_instance_q15 * pSrc,
  57:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         q15_t                     scaleFract,
  58:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         int32_t                   shift,
  59:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         arm_matrix_instance_q15 * pDst)
  60:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** {
  61:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   arm_status status;                             /* Status of matrix scaling */
  62:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   q15_t *pIn = pSrc->pData;       /* input data matrix pointer */
  63:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   q15_t *pOut = pDst->pData;      /* output data matrix pointer */
  64:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   uint32_t  numSamples;           /* total number of elements in the matrix */
  65:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   uint32_t  blkCnt;               /* loop counters */
  66:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   q15x8_t vecIn, vecOut;
  67:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   q15_t const *pInVec;
  68:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   int32_t totShift = shift + 1;   /* shift to apply after scaling */
  69:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   
  70:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   pInVec = (q15_t const *) pIn;
  71:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  72:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   #ifdef ARM_MATH_MATRIX_CHECK
  73:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  74:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   /* Check for matrix mismatch condition */
  75:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   if ((pSrc->numRows != pDst->numRows) ||
  76:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       (pSrc->numCols != pDst->numCols)   )
  77:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   {
  78:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  79:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     status = ARM_MATH_SIZE_MISMATCH;
  80:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   }
  81:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   else
  82:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  83:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
  84:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  85:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   {
  86:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /*
  87:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****      * Total number of samples in the input matrix
  88:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****      */
  89:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     numSamples = (uint32_t) pSrc->numRows * pSrc->numCols;
  90:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     blkCnt = numSamples >> 3;
  91:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     while (blkCnt > 0U)
  92:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     {
  93:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         /*
  94:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****          * C(m,n) = A(m,n) * scale
  95:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****          * Scaling and results are stored in the destination buffer.
  96:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****          */
  97:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         vecIn = vld1q(pInVec); pInVec += 8;
  98:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
  99:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         /* multiply input with scaler value */
 100:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         vecOut = vmulhq(vecIn, vdupq_n_s16(scaleFract));
 101:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****          /* apply shifting */
 102:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         vecOut = vqshlq_r(vecOut, totShift);
 103:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 104:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         vst1q(pOut, vecOut); pOut += 8;
 105:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 106:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         /*
 107:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****          * Decrement the blockSize loop counter
 108:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****          */
 109:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         blkCnt--;
 110:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     }
 111:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /*
 112:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****      * tail
 113:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****      * (will be merged thru tail predication)
 114:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****      */
 115:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     blkCnt = numSamples & 7;
 116:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     if (blkCnt > 0U)
 117:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     {
 118:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         mve_pred16_t p0 = vctp16q(blkCnt);
 119:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         vecIn = vld1q(pInVec); pInVec += 8;
 120:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         vecOut = vmulhq(vecIn, vdupq_n_s16(scaleFract));
 121:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         vecOut = vqshlq_r(vecOut, totShift);
 122:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         vstrhq_p(pOut, vecOut, p0);
 123:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     }
 124:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****      /* Set status as ARM_MATH_SUCCESS */
 125:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     status = ARM_MATH_SUCCESS;
 126:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   }
 127:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 128:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   /* Return to application */
 129:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   return (status);
 130:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** }
 131:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 132:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #else
 133:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** arm_status arm_mat_scale_q15(
 134:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   const arm_matrix_instance_q15 * pSrc,
 135:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         q15_t                     scaleFract,
 136:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         int32_t                   shift,
 137:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         arm_matrix_instance_q15 * pDst)
 138:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** {
  28              	 .loc 1 138 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 8DB0     	 sub sp,sp,#52
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 56
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 7A60     	 str r2,[r7,#4]
  45 000a 3B60     	 str r3,[r7]
  46 000c 0B46     	 mov r3,r1
  47 000e 7B81     	 strh r3,[r7,#10]
 139:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         q15_t *pIn = pSrc->pData;                      /* Input data matrix pointer */
  48              	 .loc 1 139 0
  49 0010 FB68     	 ldr r3,[r7,#12]
  50 0012 5B68     	 ldr r3,[r3,#4]
  51 0014 FB62     	 str r3,[r7,#44]
 140:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         q15_t *pOut = pDst->pData;                     /* Output data matrix pointer */
  52              	 .loc 1 140 0
  53 0016 3B68     	 ldr r3,[r7]
  54 0018 5B68     	 ldr r3,[r3,#4]
  55 001a BB62     	 str r3,[r7,#40]
 141:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         uint32_t numSamples;                           /* Total number of elements in the matrix */
 142:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
 143:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         arm_status status;                             /* Status of matrix scaling */
 144:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         int32_t kShift = 15 - shift;                   /* Total shift to apply after scaling */
  56              	 .loc 1 144 0
  57 001c 7B68     	 ldr r3,[r7,#4]
  58 001e C3F10F03 	 rsb r3,r3,#15
  59 0022 FB61     	 str r3,[r7,#28]
 145:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 146:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #if defined (ARM_MATH_LOOPUNROLL) && defined (ARM_MATH_DSP)
 147:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         q31_t inA1, inA2;
 148:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         q31_t out1, out2, out3, out4;                  /* Temporary output variables */
 149:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****         q15_t in1, in2, in3, in4;                      /* Temporary input variables */
 150:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #endif
 151:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 152:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #ifdef ARM_MATH_MATRIX_CHECK
 153:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 154:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   /* Check for matrix mismatch condition */
 155:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   if ((pSrc->numRows != pDst->numRows) ||
  60              	 .loc 1 155 0
  61 0024 FB68     	 ldr r3,[r7,#12]
  62 0026 1A88     	 ldrh r2,[r3]
  63 0028 3B68     	 ldr r3,[r7]
  64 002a 1B88     	 ldrh r3,[r3]
  65 002c 9A42     	 cmp r2,r3
  66 002e 05D1     	 bne .L2
 156:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       (pSrc->numCols != pDst->numCols)   )
  67              	 .loc 1 156 0 discriminator 1
  68 0030 FB68     	 ldr r3,[r7,#12]
  69 0032 5A88     	 ldrh r2,[r3,#2]
  70 0034 3B68     	 ldr r3,[r7]
  71 0036 5B88     	 ldrh r3,[r3,#2]
 155:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       (pSrc->numCols != pDst->numCols)   )
  72              	 .loc 1 155 0 discriminator 1
  73 0038 9A42     	 cmp r2,r3
  74 003a 03D0     	 beq .L3
  75              	.L2:
 157:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   {
 158:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 159:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     status = ARM_MATH_SIZE_MISMATCH;
  76              	 .loc 1 159 0
  77 003c FD23     	 movs r3,#253
  78 003e 87F82330 	 strb r3,[r7,#35]
  79 0042 2AE0     	 b .L4
  80              	.L3:
 160:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   }
 161:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   else
 162:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
 164:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 165:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   {
 166:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /* Total number of samples in input matrix */
 167:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     numSamples = (uint32_t) pSrc->numRows * pSrc->numCols;
  81              	 .loc 1 167 0
  82 0044 FB68     	 ldr r3,[r7,#12]
  83 0046 1B88     	 ldrh r3,[r3]
  84 0048 1A46     	 mov r2,r3
  85 004a FB68     	 ldr r3,[r7,#12]
  86 004c 5B88     	 ldrh r3,[r3,#2]
  87 004e 03FB02F3 	 mul r3,r3,r2
  88 0052 BB61     	 str r3,[r7,#24]
 168:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 169:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 170:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 171:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 172:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     blkCnt = numSamples >> 2U;
 173:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 174:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     while (blkCnt > 0U)
 175:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     {
 176:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* C(m,n) = A(m,n) * k */
 177:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #if defined (ARM_MATH_DSP)
 179:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* read 2 times 2 samples at a time from source */
 180:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       inA1 = read_q15x2_ia ((q15_t **) &pIn);
 181:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       inA2 = read_q15x2_ia ((q15_t **) &pIn);
 182:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 183:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* Scale inputs and store result in temporary variables
 184:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****        * in single cycle by packing the outputs */
 185:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       out1 = (q31_t) ((q15_t) (inA1 >> 16) * scaleFract);
 186:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       out2 = (q31_t) ((q15_t) (inA1      ) * scaleFract);
 187:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       out3 = (q31_t) ((q15_t) (inA2 >> 16) * scaleFract);
 188:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       out4 = (q31_t) ((q15_t) (inA2      ) * scaleFract);
 189:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 190:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* apply shifting */
 191:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       out1 = out1 >> kShift;
 192:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       out2 = out2 >> kShift;
 193:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       out3 = out3 >> kShift;
 194:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       out4 = out4 >> kShift;
 195:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 196:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* saturate the output */
 197:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       in1 = (q15_t) (__SSAT(out1, 16));
 198:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       in2 = (q15_t) (__SSAT(out2, 16));
 199:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       in3 = (q15_t) (__SSAT(out3, 16));
 200:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       in4 = (q15_t) (__SSAT(out4, 16));
 201:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 202:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* store result to destination */
 203:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       write_q15x2_ia (&pOut, __PKHBT(in2, in1, 16));
 204:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       write_q15x2_ia (&pOut, __PKHBT(in4, in3, 16));
 205:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 206:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #else
 207:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       *pOut++ = (q15_t) (__SSAT(((q31_t) (*pIn++) * scaleFract) >> kShift, 16));
 208:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       *pOut++ = (q15_t) (__SSAT(((q31_t) (*pIn++) * scaleFract) >> kShift, 16));
 209:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       *pOut++ = (q15_t) (__SSAT(((q31_t) (*pIn++) * scaleFract) >> kShift, 16));
 210:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       *pOut++ = (q15_t) (__SSAT(((q31_t) (*pIn++) * scaleFract) >> kShift, 16));
 211:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #endif
 212:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 213:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* Decrement loop counter */
 214:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       blkCnt--;
 215:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     }
 216:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 217:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /* Loop unrolling: Compute remaining outputs */
 218:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     blkCnt = numSamples % 0x4U;
 219:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 220:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #else
 221:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 222:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /* Initialize blkCnt with number of samples */
 223:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     blkCnt = numSamples;
  89              	 .loc 1 223 0
  90 0054 BB69     	 ldr r3,[r7,#24]
  91 0056 7B62     	 str r3,[r7,#36]
 224:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 225:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 226:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 227:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     while (blkCnt > 0U)
  92              	 .loc 1 227 0
  93 0058 19E0     	 b .L5
  94              	.L6:
 228:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     {
 229:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* C(m,n) = A(m,n) * k */
 230:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 231:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* Scale, saturate and store result in destination buffer. */
 232:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       *pOut++ = (q15_t) (__SSAT(((q31_t) (*pIn++) * scaleFract) >> kShift, 16));
  95              	 .loc 1 232 0
  96 005a BB6A     	 ldr r3,[r7,#40]
  97 005c 9A1C     	 adds r2,r3,#2
  98 005e BA62     	 str r2,[r7,#40]
  99              	.LBB2:
 100 0060 FA6A     	 ldr r2,[r7,#44]
 101 0062 911C     	 adds r1,r2,#2
 102 0064 F962     	 str r1,[r7,#44]
 103 0066 1288     	 ldrh r2,[r2]
 104 0068 12B2     	 sxth r2,r2
 105 006a B7F90A10 	 ldrsh r1,[r7,#10]
 106 006e 01FB02F1 	 mul r1,r1,r2
 107 0072 FA69     	 ldr r2,[r7,#28]
 108 0074 41FA02F2 	 asr r2,r1,r2
 109 0078 7A61     	 str r2,[r7,#20]
 110 007a 7A69     	 ldr r2,[r7,#20]
 111              	
 112 007c 02F30F02 	 ssat r2,#16,r2
 113              	
 114              	 .thumb
 115 0080 3A61     	 str r2,[r7,#16]
 116 0082 3A69     	 ldr r2,[r7,#16]
 117              	.LBE2:
 118 0084 92B2     	 uxth r2,r2
 119 0086 1A80     	 strh r2,[r3]
 233:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 234:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       /* Decrement loop counter */
 235:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****       blkCnt--;
 120              	 .loc 1 235 0
 121 0088 7B6A     	 ldr r3,[r7,#36]
 122 008a 013B     	 subs r3,r3,#1
 123 008c 7B62     	 str r3,[r7,#36]
 124              	.L5:
 227:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     {
 125              	 .loc 1 227 0
 126 008e 7B6A     	 ldr r3,[r7,#36]
 127 0090 002B     	 cmp r3,#0
 128 0092 E2D1     	 bne .L6
 236:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     }
 237:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 238:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     /* Set status as ARM_MATH_SUCCESS */
 239:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****     status = ARM_MATH_SUCCESS;
 129              	 .loc 1 239 0
 130 0094 0023     	 movs r3,#0
 131 0096 87F82330 	 strb r3,[r7,#35]
 132              	.L4:
 240:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   }
 241:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** 
 242:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   /* Return to application */
 243:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c ****   return (status);
 133              	 .loc 1 243 0
 134 009a 97F82330 	 ldrb r3,[r7,#35]
 135 009e 5BB2     	 sxtb r3,r3
 244:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_scale_q15.c **** }
 136              	 .loc 1 244 0
 137 00a0 1846     	 mov r0,r3
 138 00a2 3437     	 adds r7,r7,#52
 139              	.LCFI3:
 140              	 .cfi_def_cfa_offset 4
 141 00a4 BD46     	 mov sp,r7
 142              	.LCFI4:
 143              	 .cfi_def_cfa_register 13
 144              	 
 145 00a6 5DF8047B 	 ldr r7,[sp],#4
 146              	.LCFI5:
 147              	 .cfi_restore 7
 148              	 .cfi_def_cfa_offset 0
 149 00aa 7047     	 bx lr
 150              	 .cfi_endproc
 151              	.LFE149:
 153              	 .text
 154              	.Letext0:
 155              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 156              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 157              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 158              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_scale_q15.c
    {standard input}:20     .text.arm_mat_scale_q15:00000000 $t
    {standard input}:25     .text.arm_mat_scale_q15:00000000 arm_mat_scale_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
