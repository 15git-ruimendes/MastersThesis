   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_mat_mult_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_mat_mult_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_mat_mult_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_mat_mult_q31:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c"
   1:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Title:        arm_mat_mult_q31.c
   4:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Description:  Q31 matrix multiplication
   5:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @ingroup groupMatrix
  33:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @addtogroup MatrixMult
  37:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @brief         Q31 matrix multiplication.
  42:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @param[in]     pSrcA      points to the first input matrix structure
  43:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @param[in]     pSrcB      points to the second input matrix structure
  44:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @param[out]    pDst       points to output matrix structure
  45:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @return        execution status
  46:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    - \ref ARM_MATH_SUCCESS       : Operation successful
  47:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    - \ref ARM_MATH_SIZE_MISMATCH : Matrix size check failed
  48:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  49:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @par           Scaling and Overflow Behavior
  50:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    The function is implemented using an internal 64-bit accumulator.
  51:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    The accumulator has a 2.62 format and maintains full precision of the intermedia
  52:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    multiplication results but provides only a single guard bit. There is no saturat
  53:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    on intermediate additions. Thus, if the accumulator overflows it wraps around an
  54:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    distorts the result. The input signals should be scaled down to avoid intermedia
  55:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    overflows. The input is thus scaled down by log2(numColsA) bits
  56:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    to avoid overflows, as a total of numColsA additions are performed internally.
  57:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 format to
  58:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   @remark
  59:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                    Refer to \ref arm_mat_mult_fast_q31() for a faster but less precise implementati
  60:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  61:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #if defined(ARM_MATH_MVEI)
  62:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  63:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #define MATRIX_DIM2 2
  64:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #define MATRIX_DIM3 3
  65:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #define MATRIX_DIM4 4
  66:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  67:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** __STATIC_INLINE arm_status arm_mat_mult_q31_2x2_mve(
  68:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     const arm_matrix_instance_q31 * pSrcA,
  69:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     const arm_matrix_instance_q31 * pSrcB,
  70:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     arm_matrix_instance_q31 * pDst)
  71:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** {
  72:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInB = pSrcB->pData;  /* input data matrix pointer B */
  73:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA = pSrcA->pData;  /* input data matrix pointer A */
  74:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pOut = pDst->pData;   /* output data matrix pointer */
  75:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint32x4_t   vecColBOffs;
  76:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA0 = pInA;
  77:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA1 = pInA0 + MATRIX_DIM2;
  78:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q63_t        acc0, acc1;
  79:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31x4_t      vecB, vecA0, vecA1;
  80:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* enable predication to disable half of vector elements */
  81:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     mve_pred16_t p0 = vctp32q(MATRIX_DIM2);
  82:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  83:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecColBOffs = vidupq_u32((uint32_t)0, 1);
  84:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecColBOffs = vecColBOffs * MATRIX_DIM2;
  85:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  86:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pSrcB->pData;
  87:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  88:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* load 1st B column (partial load) */
  89:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_z_s32(pInB, vecColBOffs, p0);
  90:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  91:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* load A rows */
  92:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA0 = vldrwq_s32(pInA0);
  93:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA1 = vldrwq_s32(pInA1);
  94:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  95:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA0, vecB);
  96:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA1, vecB);
  97:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  98:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
  99:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 100:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM2] = (q31_t) acc0;
 102:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM2] = (q31_t) acc1;
 103:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut++;
 104:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 105:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* move to next B column */
 106:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pInB + 1;
 107:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 108:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_z_s32(pInB, vecColBOffs, p0);
 109:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 110:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA0, vecB);
 111:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA1, vecB);
 112:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 113:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
 114:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 115:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 116:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM2] = (q31_t) acc0;
 117:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM2] = (q31_t) acc1;
 118:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /*
 119:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      * Return to application
 120:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      */
 121:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     return (ARM_MATH_SUCCESS);
 122:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** }
 123:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 125:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** __STATIC_INLINE arm_status arm_mat_mult_q31_3x3_mve(
 127:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     const arm_matrix_instance_q31 * pSrcA,
 128:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     const arm_matrix_instance_q31 * pSrcB,
 129:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     arm_matrix_instance_q31 * pDst)
 130:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** {
 131:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInB = pSrcB->pData;  /* input data matrix pointer B */
 132:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA = pSrcA->pData;  /* input data matrix pointer A */
 133:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pOut = pDst->pData;   /* output data matrix pointer */
 134:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint32x4_t   vecColBOffs;
 135:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA0 = pInA;
 136:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA1 = pInA0 + MATRIX_DIM3;
 137:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA2 = pInA1 + MATRIX_DIM3;
 138:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q63_t        acc0, acc1, acc2;
 139:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31x4_t      vecB, vecA;
 140:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* enable predication to disable last (4th) vector element */
 141:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     mve_pred16_t p0 = vctp32q(MATRIX_DIM3);
 142:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 143:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecColBOffs = vidupq_u32((uint32_t)0, 1);
 144:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecColBOffs = vecColBOffs * MATRIX_DIM3;
 145:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 146:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pSrcB->pData;
 147:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 148:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_z_s32(pInB, vecColBOffs, p0);
 149:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 150:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA0);
 151:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA, vecB);
 152:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA1);
 153:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA, vecB);
 154:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA2);
 155:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = vrmlaldavhq(vecA, vecB);
 156:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 157:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
 158:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 159:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = asrl(acc2, 23);
 160:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM3] = (q31_t) acc0;
 162:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM3] = (q31_t) acc1;
 163:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[2 * MATRIX_DIM3] = (q31_t) acc2;
 164:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut++;
 165:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 166:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* move to next B column */
 167:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pInB + 1;
 168:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 169:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_z_s32(pInB, vecColBOffs, p0);
 170:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 171:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA0);
 172:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA, vecB);
 173:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA1);
 174:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA, vecB);
 175:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA2);
 176:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = vrmlaldavhq(vecA, vecB);
 177:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
 179:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 180:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = asrl(acc2, 23);
 181:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 182:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM3] = (q31_t) acc0;
 183:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM3] = (q31_t) acc1;
 184:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[2 * MATRIX_DIM3] = (q31_t) acc2;
 185:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut++;
 186:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 187:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* move to next B column */
 188:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pInB + 1;
 189:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 190:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_z_s32(pInB, vecColBOffs, p0);
 191:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 192:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA0);
 193:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA, vecB);
 194:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA1);
 195:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA, vecB);
 196:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA2);
 197:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = vrmlaldavhq(vecA, vecB);
 198:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 199:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
 200:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 201:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = asrl(acc2, 23);
 202:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 203:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM3] = (q31_t) acc0;
 204:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM3] = (q31_t) acc1;
 205:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[2 * MATRIX_DIM3] = (q31_t) acc2;
 206:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /*
 207:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      * Return to application
 208:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      */
 209:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     return (ARM_MATH_SUCCESS);
 210:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** }
 211:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 212:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** __STATIC_INLINE arm_status arm_mat_mult_q31_4x4_mve(
 213:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     const arm_matrix_instance_q31 * pSrcA,
 214:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     const arm_matrix_instance_q31 * pSrcB,
 215:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     arm_matrix_instance_q31 * pDst)
 216:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** {
 217:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInB = pSrcB->pData;  /* input data matrix pointer B */
 218:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA = pSrcA->pData;  /* input data matrix pointer A */
 219:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pOut = pDst->pData;   /* output data matrix pointer */
 220:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint32x4_t   vecColBOffs;
 221:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA0 = pInA;
 222:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA1 = pInA0 + MATRIX_DIM4;
 223:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA2 = pInA1 + MATRIX_DIM4;
 224:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t       *pInA3 = pInA2 + MATRIX_DIM4;
 225:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q63_t        acc0, acc1, acc2, acc3;
 226:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31x4_t      vecB, vecA;
 227:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 228:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecColBOffs = vidupq_u32((uint32_t)0, 4);
 229:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 230:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pSrcB->pData;
 231:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 232:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_s32(pInB, vecColBOffs);
 233:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 234:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA0);
 235:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA, vecB);
 236:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA1);
 237:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA, vecB);
 238:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA2);
 239:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = vrmlaldavhq(vecA, vecB);
 240:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA3);
 241:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc3 = vrmlaldavhq(vecA, vecB);
 242:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 243:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
 244:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 245:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = asrl(acc2, 23);
 246:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc3 = asrl(acc3, 23);
 247:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 248:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM4] = (q31_t) acc0;
 249:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM4] = (q31_t) acc1;
 250:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[2 * MATRIX_DIM4] = (q31_t) acc2;
 251:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[3 * MATRIX_DIM4] = (q31_t) acc3;
 252:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut++;
 253:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 254:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* move to next B column */
 255:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pInB + 1;
 256:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_s32(pInB, vecColBOffs);
 258:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 259:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA0);
 260:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA, vecB);
 261:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA1);
 262:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA, vecB);
 263:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA2);
 264:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = vrmlaldavhq(vecA, vecB);
 265:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA3);
 266:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc3 = vrmlaldavhq(vecA, vecB);
 267:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 268:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
 269:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 270:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = asrl(acc2, 23);
 271:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc3 = asrl(acc3, 23);
 272:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 273:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM4] = (q31_t) acc0;
 274:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM4] = (q31_t) acc1;
 275:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[2 * MATRIX_DIM4] = (q31_t) acc2;
 276:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[3 * MATRIX_DIM4] = (q31_t) acc3;
 277:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 278:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut++;
 279:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 280:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* move to next B column */
 281:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pInB + 1;
 282:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 283:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_s32(pInB, vecColBOffs);
 284:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 285:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA0);
 286:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA, vecB);
 287:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA1);
 288:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA, vecB);
 289:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA2);
 290:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = vrmlaldavhq(vecA, vecB);
 291:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA3);
 292:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc3 = vrmlaldavhq(vecA, vecB);
 293:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 294:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
 295:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 296:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = asrl(acc2, 23);
 297:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc3 = asrl(acc3, 23);
 298:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 299:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM4] = (q31_t) acc0;
 300:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM4] = (q31_t) acc1;
 301:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[2 * MATRIX_DIM4] = (q31_t) acc2;
 302:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[3 * MATRIX_DIM4] = (q31_t) acc3;
 303:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut++;
 305:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 306:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* move to next B column */
 307:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pInB = pInB + 1;
 308:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 309:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecB = vldrwq_gather_shifted_offset_s32(pInB, vecColBOffs);
 310:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 311:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA0);
 312:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = vrmlaldavhq(vecA, vecB);
 313:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA1);
 314:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = vrmlaldavhq(vecA, vecB);
 315:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA2);
 316:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = vrmlaldavhq(vecA, vecB);
 317:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecA = vldrwq_s32(pInA3);
 318:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc3 = vrmlaldavhq(vecA, vecB);
 319:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 320:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc0 = asrl(acc0, 23);
 321:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc1 = asrl(acc1, 23);
 322:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc2 = asrl(acc2, 23);
 323:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     acc3 = asrl(acc3, 23);
 324:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 325:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[0 * MATRIX_DIM4] = (q31_t) acc0;
 326:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[1 * MATRIX_DIM4] = (q31_t) acc1;
 327:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[2 * MATRIX_DIM4] = (q31_t) acc2;
 328:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     pOut[3 * MATRIX_DIM4] = (q31_t) acc3;
 329:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /*
 330:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      * Return to application
 331:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      */
 332:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     return (ARM_MATH_SUCCESS);
 333:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** }
 334:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 335:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** arm_status arm_mat_mult_q31(
 336:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
 337:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
 338:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         arm_matrix_instance_q31 * pDst)
 339:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** {
 340:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t const *pInB = (q31_t const *)pSrcB->pData;  /* input data matrix pointer B */
 341:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t const *pInA = (q31_t const *)pSrcA->pData;  /* input data matrix pointer A */
 342:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t      *pOut = pDst->pData;   /* output data matrix pointer */
 343:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     q31_t      *px;               /* Temporary output data matrix pointer */
 344:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint16_t    numRowsA = pSrcA->numRows;    /* number of rows of input matrix A    */
 345:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint16_t    numColsB = pSrcB->numCols;    /* number of columns of input matrix B */
 346:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint16_t    numColsA = pSrcA->numCols;    /* number of columns of input matrix A */
 347:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint16_t    col, i = 0U, row = numRowsA, colCnt;  /* loop counters */
 348:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     arm_status  status;          /* status of matrix multiplication */
 349:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint32x4_t  vecOffs, vecColBOffs;
 350:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     uint32_t    blkCnt, rowCnt;           /* loop counters */
 351:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 352:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   #ifdef ARM_MATH_MATRIX_CHECK
 353:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 354:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Check for matrix mismatch condition */
 355:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
 356:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       (pSrcA->numRows != pDst->numRows)  ||
 357:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       (pSrcB->numCols != pDst->numCols)    )
 358:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
 359:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 360:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
 361:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 362:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   else
 363:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 364:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
 365:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 366:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
 367:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      /* small squared matrix specialized routines */
 368:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     if(numRowsA == numColsB && numColsB == numColsA) {
 369:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         if (numRowsA == 1)
 370:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 371:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           q63_t sum =  (q63_t) *pInA * *pInB;
 372:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pOut[0] = (q31_t)(sum >> 31);
 373:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           return (ARM_MATH_SUCCESS);
 374:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 375:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         else if(numRowsA == 2)
 376:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             return arm_mat_mult_q31_2x2_mve(pSrcA, pSrcB, pDst);
 377:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         else if(numRowsA == 3)
 378:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             return arm_mat_mult_q31_3x3_mve(pSrcA, pSrcB, pDst);
 379:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         else if (numRowsA == 4)
 380:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             return arm_mat_mult_q31_4x4_mve(pSrcA, pSrcB, pDst);
 381:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     }
 382:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 383:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecColBOffs = vidupq_u32((uint32_t)0, 1);
 384:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     vecColBOffs = vecColBOffs * (uint32_t) (numColsB);
 385:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 386:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /*
 387:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      * The following loop performs the dot-product of each row in pSrcA with each column in pSrcB
 388:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      */
 389:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 390:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /*
 391:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      * row loop
 392:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      */
 393:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     rowCnt = row >> 2;
 394:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     while (rowCnt > 0U)
 395:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     {
 396:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 397:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * Output pointer is set to starting address of the row being processed
 398:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 399:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         px = pOut + i;
 400:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         i = i + 4 * numColsB;
 401:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 402:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * For every row wise process, the column loop counter is to be initiated
 403:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 404:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         col = numColsB;
 405:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 406:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * For every row wise process, the pInB pointer is set
 407:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * to the starting address of the pSrcB data
 408:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 409:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pInB = (q31_t const *)pSrcB->pData;
 410:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 411:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * column loop
 412:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 413:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (col > 0U)
 414:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 415:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                     /*
 416:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * generate 4 columns elements
 417:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 418:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 419:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * Matrix A columns number of MAC operations are to be performed
 420:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 421:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             colCnt = numColsA;
 422:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 423:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q31_t const *pSrcA0Vec, *pSrcA1Vec, *pSrcA2Vec, *pSrcA3Vec;
 424:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q31_t const   *pInA0 = pInA;
 425:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q31_t const   *pInA1 = pInA0 + numColsA;
 426:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q31_t const   *pInA2 = pInA1 + numColsA;
 427:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q31_t const   *pInA3 = pInA2 + numColsA;
 428:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q63_t          acc0, acc1, acc2, acc3;
 429:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 430:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc0 = 0LL;
 431:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc1 = 0LL;
 432:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc2 = 0LL;
 433:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc3 = 0LL;
 434:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 435:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             pSrcA0Vec = (q31_t const *) pInA0;
 436:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             pSrcA1Vec = (q31_t const *) pInA1;
 437:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             pSrcA2Vec = (q31_t const *) pInA2;
 438:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             pSrcA3Vec = (q31_t const *) pInA3;
 439:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 440:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             vecOffs = vecColBOffs;
 441:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 442:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /* process 1 x 4 block output */
 443:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             blkCnt = numColsA >> 2;
 444:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             while (blkCnt > 0U)
 445:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             {
 446:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 q31x4_t vecB, vecA;
 447:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 448:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecB = vldrwq_gather_shifted_offset(pInB, vecOffs);
 449:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 /* move Matrix B read offsets, 4 rows down */
 450:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecOffs = vecOffs + (uint32_t) (numColsB * 4);
 451:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 452:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA0Vec);  pSrcA0Vec += 4;
 453:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc0 = vrmlaldavhaq(acc0, vecA, vecB);
 454:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA1Vec);  pSrcA1Vec += 4;
 455:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc1 = vrmlaldavhaq(acc1, vecA, vecB);
 456:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA2Vec);  pSrcA2Vec += 4;
 457:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc2 = vrmlaldavhaq(acc2, vecA, vecB);
 458:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA3Vec);  pSrcA3Vec += 4;
 459:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc3 = vrmlaldavhaq(acc3, vecA, vecB);
 460:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 blkCnt--;
 461:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             }
 462:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 463:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 464:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * tail
 465:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * (will be merged thru tail predication)
 466:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 467:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             blkCnt = numColsA & 3;
 468:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             if (blkCnt > 0U)
 469:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             {
 470:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 mve_pred16_t p0 = vctp32q(blkCnt);
 471:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 q31x4_t   vecB, vecA;
 472:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 473:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecB = vldrwq_gather_shifted_offset_z(pInB, vecOffs, p0);
 474:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 //vecOffs = vecOffs + (uint32_t) (numColsB * 4);
 475:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 476:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA0Vec);  pSrcA0Vec += 4;
 477:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc0 = vrmlaldavhaq(acc0, vecA, vecB);
 478:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA1Vec);  pSrcA1Vec += 4;
 479:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc1 = vrmlaldavhaq(acc1, vecA, vecB);
 480:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA2Vec);  pSrcA2Vec += 4;
 481:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc2 = vrmlaldavhaq(acc2, vecA, vecB);
 482:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA3Vec);  pSrcA3Vec += 4;
 483:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc3 = vrmlaldavhaq(acc3, vecA, vecB);
 484:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             }
 485:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 486:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc0 = asrl(acc0, 23);
 487:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc1 = asrl(acc1, 23);
 488:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc2 = asrl(acc2, 23);
 489:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc3 = asrl(acc3, 23);
 490:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 491:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             px[0] = (q31_t) acc0;
 492:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             px[1 * numColsB] = (q31_t) acc1;
 493:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             px[2 * numColsB] = (q31_t) acc2;
 494:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             px[3 * numColsB] = (q31_t) acc3;
 495:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             px++;
 496:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 497:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * Decrement the column loop counter
 498:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 499:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             col--;
 500:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 501:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * Update the pointer pInB to point to the  starting address of the next column
 502:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 503:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             pInB = (q31_t const *)pSrcB->pData + (numColsB - col);
 504:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 505:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 506:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 507:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * Update the pointer pInA to point to the  starting address of the next row
 508:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 509:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pInA += (numColsA * 4);
 510:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 511:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * Decrement the row loop counter
 512:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 513:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         rowCnt --;
 514:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 515:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     }
 516:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     rowCnt = row & 3;
 517:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     while (rowCnt > 0U)
 518:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     {
 519:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              /*
 520:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * Output pointer is set to starting address of the row being processed
 521:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 522:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         px = pOut + i;
 523:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         i = i + numColsB;
 524:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 525:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * For every row wise process, the column loop counter is to be initiated
 526:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 527:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         col = numColsB;
 528:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 529:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * For every row wise process, the pInB pointer is set
 530:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * to the starting address of the pSrcB data
 531:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 532:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pInB = (q31_t const *)pSrcB->pData;
 533:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 534:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * column loop
 535:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 536:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (col > 0U)
 537:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 538:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 539:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * generate 4 columns elements
 540:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 541:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 542:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * Matrix A columns number of MAC operations are to be performed
 543:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 544:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             colCnt = numColsA;
 545:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 546:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q31_t const *pSrcA0Vec;
 547:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q31_t const   *pInA0 = pInA;
 548:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             q63_t          acc0;
 549:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 550:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc0 = 0LL;
 551:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****            
 552:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 553:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             pSrcA0Vec = (q31_t const *) pInA0;
 554:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****            
 555:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             vecOffs = vecColBOffs;
 556:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 557:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /* process 1 x 4 block output */
 558:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             blkCnt = numColsA >> 2;
 559:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             while (blkCnt > 0U)
 560:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             {
 561:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 q31x4_t vecB, vecA;
 562:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 563:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecB = vldrwq_gather_shifted_offset(pInB, vecOffs);
 564:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 /* move Matrix B read offsets, 4 rows down */
 565:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecOffs = vecOffs + (uint32_t) (numColsB * 4);
 566:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 567:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA0Vec);  pSrcA0Vec += 4;
 568:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc0 = vrmlaldavhaq(acc0, vecA, vecB);
 569:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****               
 570:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 blkCnt--;
 571:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             }
 572:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 573:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 574:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * tail
 575:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * (will be merged thru tail predication)
 576:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 577:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             blkCnt = numColsA & 3;
 578:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             if (blkCnt > 0U)
 579:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             {
 580:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 mve_pred16_t p0 = vctp32q(blkCnt);
 581:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 q31x4_t   vecB, vecA;
 582:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 583:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecB = vldrwq_gather_shifted_offset_z(pInB, vecOffs, p0);
 584:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 //vecOffs = vecOffs + (uint32_t) (numColsB * 4);
 585:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 586:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 vecA = vld1q(pSrcA0Vec);  
 587:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 pSrcA0Vec += 4;
 588:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 acc0 = vrmlaldavhaq(acc0, vecA, vecB);
 589:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****                 
 590:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             }
 591:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 592:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             acc0 = asrl(acc0, 23);
 593:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****            
 594:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 595:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             px[0] = (q31_t) acc0;
 596:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             px++;
 597:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 598:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * Decrement the column loop counter
 599:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 600:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             col--;
 601:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             /*
 602:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              * Update the pointer pInB to point to the  starting address of the next column
 603:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****              */
 604:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****             pInB = (q31_t const *)pSrcB->pData + (numColsB - col);
 605:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 606:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 607:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 608:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * Update the pointer pInA to point to the  starting address of the next row
 609:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 610:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pInA += numColsA;
 611:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /*
 612:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          * Decrement the row loop counter
 613:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          */
 614:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         rowCnt--;
 615:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     }
 616:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 617:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /*
 618:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      * set status as ARM_MATH_SUCCESS
 619:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      */
 620:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SUCCESS;
 621:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 622:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 623:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Return to application */
 624:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   return (status);
 625:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** }
 626:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 627:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #else
 628:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** arm_status arm_mat_mult_q31(
 629:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
 630:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
 631:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         arm_matrix_instance_q31 * pDst)
 632:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** {
  28              	 .loc 1 632 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 20
  35              	 .cfi_offset 4,-20
  36              	 .cfi_offset 5,-16
  37              	 .cfi_offset 6,-12
  38              	 .cfi_offset 7,-8
  39              	 .cfi_offset 14,-4
  40 0002 95B0     	 sub sp,sp,#84
  41              	.LCFI1:
  42              	 .cfi_def_cfa_offset 104
  43 0004 00AF     	 add r7,sp,#0
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 7
  46 0006 F860     	 str r0,[r7,#12]
  47 0008 B960     	 str r1,[r7,#8]
  48 000a 7A60     	 str r2,[r7,#4]
 633:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pIn1 = pSrcA->pData;                    /* Input data matrix pointer A */
  49              	 .loc 1 633 0
  50 000c FB68     	 ldr r3,[r7,#12]
  51 000e 5B68     	 ldr r3,[r3,#4]
  52 0010 FB64     	 str r3,[r7,#76]
 634:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pIn2 = pSrcB->pData;                    /* Input data matrix pointer B */
  53              	 .loc 1 634 0
  54 0012 BB68     	 ldr r3,[r7,#8]
  55 0014 5B68     	 ldr r3,[r3,#4]
  56 0016 BB64     	 str r3,[r7,#72]
 635:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* Input data matrix pointer A */
  57              	 .loc 1 635 0
  58 0018 FB68     	 ldr r3,[r7,#12]
  59 001a 5B68     	 ldr r3,[r3,#4]
  60 001c 7B64     	 str r3,[r7,#68]
 636:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pInB = pSrcB->pData;                    /* Input data matrix pointer B */
  61              	 .loc 1 636 0
  62 001e BB68     	 ldr r3,[r7,#8]
  63 0020 5B68     	 ldr r3,[r3,#4]
  64 0022 3B62     	 str r3,[r7,#32]
 637:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pOut = pDst->pData;                     /* Output data matrix pointer */
  65              	 .loc 1 637 0
  66 0024 7B68     	 ldr r3,[r7,#4]
  67 0026 5B68     	 ldr r3,[r3,#4]
  68 0028 FB61     	 str r3,[r7,#28]
 638:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
 639:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q63_t sum;                                     /* Accumulator */
 640:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* Number of rows of input matrix A */
  69              	 .loc 1 640 0
  70 002a FB68     	 ldr r3,[r7,#12]
  71 002c 1B88     	 ldrh r3,[r3]
  72 002e 7B83     	 strh r3,[r7,#26]
 641:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* Number of columns of input matrix B */
  73              	 .loc 1 641 0
  74 0030 BB68     	 ldr r3,[r7,#8]
  75 0032 5B88     	 ldrh r3,[r3,#2]
  76 0034 3B83     	 strh r3,[r7,#24]
 642:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* Number of columns of input matrix A */
  77              	 .loc 1 642 0
  78 0036 FB68     	 ldr r3,[r7,#12]
  79 0038 5B88     	 ldrh r3,[r3,#2]
  80 003a FB82     	 strh r3,[r7,#22]
 643:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint32_t col, i = 0U, row = numRowsA, colCnt;  /* Loop counters */
  81              	 .loc 1 643 0
  82 003c 0023     	 movs r3,#0
  83 003e 3B63     	 str r3,[r7,#48]
  84 0040 7B8B     	 ldrh r3,[r7,#26]
  85 0042 FB62     	 str r3,[r7,#44]
 644:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* Status of matrix multiplication */
 645:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 646:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
 647:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 648:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Check for matrix mismatch condition */
 649:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
  86              	 .loc 1 649 0
  87 0044 FB68     	 ldr r3,[r7,#12]
  88 0046 5A88     	 ldrh r2,[r3,#2]
  89 0048 BB68     	 ldr r3,[r7,#8]
  90 004a 1B88     	 ldrh r3,[r3]
  91 004c 9A42     	 cmp r2,r3
  92 004e 0BD1     	 bne .L2
 650:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       (pSrcA->numRows != pDst->numRows)  ||
  93              	 .loc 1 650 0 discriminator 1
  94 0050 FB68     	 ldr r3,[r7,#12]
  95 0052 1A88     	 ldrh r2,[r3]
  96 0054 7B68     	 ldr r3,[r7,#4]
  97 0056 1B88     	 ldrh r3,[r3]
 649:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       (pSrcA->numRows != pDst->numRows)  ||
  98              	 .loc 1 649 0 discriminator 1
  99 0058 9A42     	 cmp r2,r3
 100 005a 05D1     	 bne .L2
 651:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       (pSrcB->numCols != pDst->numCols)    )
 101              	 .loc 1 651 0
 102 005c BB68     	 ldr r3,[r7,#8]
 103 005e 5A88     	 ldrh r2,[r3,#2]
 104 0060 7B68     	 ldr r3,[r7,#4]
 105 0062 5B88     	 ldrh r3,[r3,#2]
 650:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       (pSrcA->numRows != pDst->numRows)  ||
 106              	 .loc 1 650 0
 107 0064 9A42     	 cmp r2,r3
 108 0066 03D0     	 beq .L3
 109              	.L2:
 652:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
 653:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 654:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
 110              	 .loc 1 654 0
 111 0068 FD23     	 movs r3,#253
 112 006a 87F82730 	 strb r3,[r7,#39]
 113 006e 65E0     	 b .L4
 114              	.L3:
 655:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 656:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   else
 657:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 658:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #endif /* #ifdef ARM_MATH_MATRIX_CHECK */
 659:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 660:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
 661:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 662:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* row loop */
 663:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     do
 664:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     {
 665:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Output pointer is set to starting address of row being processed */
 666:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       px = pOut + i;
 115              	 .loc 1 666 0
 116 0070 3B6B     	 ldr r3,[r7,#48]
 117 0072 9B00     	 lsls r3,r3,#2
 118 0074 FA69     	 ldr r2,[r7,#28]
 119 0076 1344     	 add r3,r3,r2
 120 0078 3B64     	 str r3,[r7,#64]
 667:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 668:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* For every row wise process, column loop counter is to be initiated */
 669:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       col = numColsB;
 121              	 .loc 1 669 0
 122 007a 3B8B     	 ldrh r3,[r7,#24]
 123 007c 7B63     	 str r3,[r7,#52]
 670:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 671:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* For every row wise process, pIn2 pointer is set to starting address of pSrcB data */
 672:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       pIn2 = pSrcB->pData;
 124              	 .loc 1 672 0
 125 007e BB68     	 ldr r3,[r7,#8]
 126 0080 5B68     	 ldr r3,[r3,#4]
 127 0082 BB64     	 str r3,[r7,#72]
 128              	.L7:
 673:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 674:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* column loop */
 675:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       do
 676:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       {
 677:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 678:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         sum = 0;
 129              	 .loc 1 678 0
 130 0084 4FF00002 	 mov r2,#0
 131 0088 4FF00003 	 mov r3,#0
 132 008c C7E90E23 	 strd r2,[r7,#56]
 679:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 680:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Initialize pointer pIn1 to point to starting address of column being processed */
 681:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pIn1 = pInA;
 133              	 .loc 1 681 0
 134 0090 7B6C     	 ldr r3,[r7,#68]
 135 0092 FB64     	 str r3,[r7,#76]
 682:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 683:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 684:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 685:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Loop unrolling: Compute 4 MACs at a time. */
 686:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA >> 2U;
 687:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 688:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* matrix multiplication */
 689:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (colCnt > 0U)
 690:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 691:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 692:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 693:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Perform the multiply-accumulates */
 694:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 695:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 696:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 697:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 698:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 699:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 700:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 701:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 702:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 703:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 704:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 705:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 706:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Decrement loop counter */
 707:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           colCnt--;
 708:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 709:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 710:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Loop unrolling: Compute remaining MACs */
 711:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA % 0x4U;
 712:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 713:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #else
 714:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 715:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Initialize cntCnt with number of columns */
 716:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA;
 136              	 .loc 1 716 0
 137 0094 FB8A     	 ldrh r3,[r7,#22]
 138 0096 BB62     	 str r3,[r7,#40]
 717:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 718:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 719:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 720:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (colCnt > 0U)
 139              	 .loc 1 720 0
 140 0098 23E0     	 b .L5
 141              	.L6:
 721:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 722:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* c(m,n) = a(1,1) * b(1,1) + a(1,2) * b(2,1) + .... + a(m,p) * b(p,n) */
 723:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 724:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Perform the multiply-accumulates */
 725:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) *pIn1++ * *pIn2;
 142              	 .loc 1 725 0
 143 009a FB6C     	 ldr r3,[r7,#76]
 144 009c 1A1D     	 adds r2,r3,#4
 145 009e FA64     	 str r2,[r7,#76]
 146 00a0 1B68     	 ldr r3,[r3]
 147 00a2 1846     	 mov r0,r3
 148 00a4 4FEAE071 	 asr r1,r0,#31
 149 00a8 BB6C     	 ldr r3,[r7,#72]
 150 00aa 1B68     	 ldr r3,[r3]
 151 00ac 1A46     	 mov r2,r3
 152 00ae 4FEAE273 	 asr r3,r2,#31
 153 00b2 02FB01FE 	 mul lr,r2,r1
 154 00b6 00FB03F6 	 mul r6,r0,r3
 155 00ba 7644     	 add r6,r6,lr
 156 00bc A0FB0223 	 umull r2,r3,r0,r2
 157 00c0 F118     	 adds r1,r6,r3
 158 00c2 0B46     	 mov r3,r1
 159 00c4 D7E90E01 	 ldrd r0,[r7,#56]
 160 00c8 1218     	 adds r2,r2,r0
 161 00ca 43EB0103 	 adc r3,r3,r1
 162 00ce C7E90E23 	 strd r2,[r7,#56]
 726:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 163              	 .loc 1 726 0
 164 00d2 3B8B     	 ldrh r3,[r7,#24]
 165 00d4 9B00     	 lsls r3,r3,#2
 166 00d6 BA6C     	 ldr r2,[r7,#72]
 167 00d8 1344     	 add r3,r3,r2
 168 00da BB64     	 str r3,[r7,#72]
 727:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 728:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Decrement loop counter */
 729:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           colCnt--;
 169              	 .loc 1 729 0
 170 00dc BB6A     	 ldr r3,[r7,#40]
 171 00de 013B     	 subs r3,r3,#1
 172 00e0 BB62     	 str r3,[r7,#40]
 173              	.L5:
 720:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 174              	 .loc 1 720 0
 175 00e2 BB6A     	 ldr r3,[r7,#40]
 176 00e4 002B     	 cmp r3,#0
 177 00e6 D8D1     	 bne .L6
 730:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 731:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 732:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Convert result from 2.62 to 1.31 format and store in destination buffer */
 733:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         *px++ = (q31_t) (sum >> 31);
 178              	 .loc 1 733 0
 179 00e8 396C     	 ldr r1,[r7,#64]
 180 00ea 0B1D     	 adds r3,r1,#4
 181 00ec 3B64     	 str r3,[r7,#64]
 182 00ee D7E90E23 	 ldrd r2,[r7,#56]
 183 00f2 D40F     	 lsrs r4,r2,#31
 184 00f4 44EA4304 	 orr r4,r4,r3,lsl#1
 185 00f8 DD17     	 asrs r5,r3,#31
 186 00fa 2346     	 mov r3,r4
 187 00fc 0B60     	 str r3,[r1]
 734:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 735:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Decrement column loop counter */
 736:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         col--;
 188              	 .loc 1 736 0
 189 00fe 7B6B     	 ldr r3,[r7,#52]
 190 0100 013B     	 subs r3,r3,#1
 191 0102 7B63     	 str r3,[r7,#52]
 737:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 738:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Update pointer pIn2 to point to starting address of next column */
 739:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pIn2 = pInB + (numColsB - col);
 192              	 .loc 1 739 0
 193 0104 3A8B     	 ldrh r2,[r7,#24]
 194 0106 7B6B     	 ldr r3,[r7,#52]
 195 0108 D31A     	 subs r3,r2,r3
 196 010a 9B00     	 lsls r3,r3,#2
 197 010c 3A6A     	 ldr r2,[r7,#32]
 198 010e 1344     	 add r3,r3,r2
 199 0110 BB64     	 str r3,[r7,#72]
 740:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 741:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       } while (col > 0U);
 200              	 .loc 1 741 0
 201 0112 7B6B     	 ldr r3,[r7,#52]
 202 0114 002B     	 cmp r3,#0
 203 0116 B5D1     	 bne .L7
 742:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 743:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Update pointer pInA to point to starting address of next row */
 744:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       i = i + numColsB;
 204              	 .loc 1 744 0
 205 0118 3B8B     	 ldrh r3,[r7,#24]
 206 011a 3A6B     	 ldr r2,[r7,#48]
 207 011c 1344     	 add r3,r3,r2
 208 011e 3B63     	 str r3,[r7,#48]
 745:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       pInA = pInA + numColsA;
 209              	 .loc 1 745 0
 210 0120 FB8A     	 ldrh r3,[r7,#22]
 211 0122 9B00     	 lsls r3,r3,#2
 212 0124 7A6C     	 ldr r2,[r7,#68]
 213 0126 1344     	 add r3,r3,r2
 214 0128 7B64     	 str r3,[r7,#68]
 746:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 747:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Decrement row loop counter */
 748:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       row--;
 215              	 .loc 1 748 0
 216 012a FB6A     	 ldr r3,[r7,#44]
 217 012c 013B     	 subs r3,r3,#1
 218 012e FB62     	 str r3,[r7,#44]
 749:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 750:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     } while (row > 0U);
 219              	 .loc 1 750 0
 220 0130 FB6A     	 ldr r3,[r7,#44]
 221 0132 002B     	 cmp r3,#0
 222 0134 9CD1     	 bne .L3
 751:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 752:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 753:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SUCCESS;
 223              	 .loc 1 753 0
 224 0136 0023     	 movs r3,#0
 225 0138 87F82730 	 strb r3,[r7,#39]
 226              	.L4:
 754:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 755:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 756:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Return to application */
 757:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   return (status);
 227              	 .loc 1 757 0
 228 013c 97F82730 	 ldrb r3,[r7,#39]
 229 0140 5BB2     	 sxtb r3,r3
 758:../Dave/Generated/CMSIS_DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** }
 230              	 .loc 1 758 0
 231 0142 1846     	 mov r0,r3
 232 0144 5437     	 adds r7,r7,#84
 233              	.LCFI3:
 234              	 .cfi_def_cfa_offset 20
 235 0146 BD46     	 mov sp,r7
 236              	.LCFI4:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 0148 F0BD     	 pop {r4,r5,r6,r7,pc}
 240              	 .cfi_endproc
 241              	.LFE149:
 243 014a 00BF     	 .text
 244              	.Letext0:
 245              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 246              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 247              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 248              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_mult_q31.c
    {standard input}:20     .text.arm_mat_mult_q31:00000000 $t
    {standard input}:25     .text.arm_mat_mult_q31:00000000 arm_mat_mult_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
