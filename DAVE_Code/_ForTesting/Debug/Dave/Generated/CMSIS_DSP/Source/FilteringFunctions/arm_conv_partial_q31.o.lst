   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_partial_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_partial_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_partial_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_partial_q31:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * Title:        arm_conv_partial_q31.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * Description:  Partial convolution of Q31 sequences
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @addtogroup PartialConv
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @brief         Partial convolution of Q31 sequences.
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @param[in]     pSrcA      points to the first input sequence
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @param[in]     srcALen    length of the first input sequence
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @param[in]     pSrcB      points to the second input sequence
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @param[in]     srcBLen    length of the second input sequence
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @param[out]    pDst       points to the location where the output result is written
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @param[in]     firstIndex is the first output sample to start with
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @param[in]     numPoints  is the number of output points to be computed
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @return        execution status
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****                    - \ref ARM_MATH_SUCCESS        : Operation successful
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****                    - \ref ARM_MATH_ARGUMENT_ERROR : requested subset is not in the range [0 srcALen
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   @remark
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****                    Refer to \ref arm_conv_partial_fast_q31() for a faster but less precise implemen
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****  */
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** arm_status arm_conv_partial_q31(
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t * pSrcA,
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         uint32_t srcALen,
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t * pSrcB,
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         uint32_t srcBLen,
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         q31_t * pDst,
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         uint32_t firstIndex,
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         uint32_t numPoints)
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** {
  28              	 .loc 1 65 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 36
  35              	 .cfi_offset 4,-36
  36              	 .cfi_offset 5,-32
  37              	 .cfi_offset 6,-28
  38              	 .cfi_offset 7,-24
  39              	 .cfi_offset 8,-20
  40              	 .cfi_offset 9,-16
  41              	 .cfi_offset 10,-12
  42              	 .cfi_offset 11,-8
  43              	 .cfi_offset 14,-4
  44 0004 9BB0     	 sub sp,sp,#108
  45              	.LCFI1:
  46              	 .cfi_def_cfa_offset 144
  47 0006 00AF     	 add r7,sp,#0
  48              	.LCFI2:
  49              	 .cfi_def_cfa_register 7
  50 0008 7861     	 str r0,[r7,#20]
  51 000a 3961     	 str r1,[r7,#16]
  52 000c FA60     	 str r2,[r7,#12]
  53 000e BB60     	 str r3,[r7,#8]
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #if defined(ARM_MATH_DSP)
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t *pIn1;                                   /* InputA pointer */
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t *pIn2;                                   /* InputB pointer */
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         q31_t *pOut = pDst;                            /* Output pointer */
  54              	 .loc 1 71 0
  55 0010 D7F89030 	 ldr r3,[r7,#144]
  56 0014 FB65     	 str r3,[r7,#92]
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t *px;                                     /* Intermediate inputA pointer */
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t *py;                                     /* Intermediate inputB pointer */
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t *pSrc1, *pSrc2;                          /* Intermediate pointers */
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         q63_t sum;                                     /* Accumulator */
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         uint32_t j, k, count, blkCnt, check;
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         uint32_t blockSize1, blockSize2, blockSize3;    /* Loop counters */
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         arm_status status;                             /* Status of Partial convolution */
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         q63_t acc0, acc1, acc2;                        /* Accumulator */
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         q31_t x0, x1, x2, c0;                          /* Temporary variables */
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #endif
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   /* Check for range of output samples to be calculated */
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
  57              	 .loc 1 86 0
  58 0016 D7F89420 	 ldr r2,[r7,#148]
  59 001a D7F89830 	 ldr r3,[r7,#152]
  60 001e 1A44     	 add r2,r2,r3
  61 0020 B968     	 ldr r1,[r7,#8]
  62 0022 3B69     	 ldr r3,[r7,#16]
  63 0024 0B44     	 add r3,r3,r1
  64 0026 013B     	 subs r3,r3,#1
  65 0028 9A42     	 cmp r2,r3
  66 002a 03D9     	 bls .L2
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   {
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  67              	 .loc 1 89 0
  68 002c FF23     	 movs r3,#255
  69 002e 87F82B30 	 strb r3,[r7,#43]
  70 0032 D3E1     	 b .L3
  71              	.L2:
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   }
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   else
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   {
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* srcB is always made to slide across srcA. */
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     if (srcALen >= srcBLen)
  72              	 .loc 1 96 0
  73 0034 3A69     	 ldr r2,[r7,#16]
  74 0036 BB68     	 ldr r3,[r7,#8]
  75 0038 9A42     	 cmp r2,r3
  76 003a 04D3     	 bcc .L4
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Initialization of inputA pointer */
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       pIn1 = pSrcA;
  77              	 .loc 1 99 0
  78 003c 7B69     	 ldr r3,[r7,#20]
  79 003e 7B66     	 str r3,[r7,#100]
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Initialization of inputB pointer */
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       pIn2 = pSrcB;
  80              	 .loc 1 102 0
  81 0040 FB68     	 ldr r3,[r7,#12]
  82 0042 3B66     	 str r3,[r7,#96]
  83 0044 09E0     	 b .L5
  84              	.L4:
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     else
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Initialization of inputA pointer */
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       pIn1 = pSrcB;
  85              	 .loc 1 107 0
  86 0046 FB68     	 ldr r3,[r7,#12]
  87 0048 7B66     	 str r3,[r7,#100]
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Initialization of inputB pointer */
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       pIn2 = pSrcA;
  88              	 .loc 1 110 0
  89 004a 7B69     	 ldr r3,[r7,#20]
  90 004c 3B66     	 str r3,[r7,#96]
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       j = srcBLen;
  91              	 .loc 1 113 0
  92 004e BB68     	 ldr r3,[r7,#8]
  93 0050 7B62     	 str r3,[r7,#36]
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       srcBLen = srcALen;
  94              	 .loc 1 114 0
  95 0052 3B69     	 ldr r3,[r7,#16]
  96 0054 BB60     	 str r3,[r7,#8]
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       srcALen = j;
  97              	 .loc 1 115 0
  98 0056 7B6A     	 ldr r3,[r7,#36]
  99 0058 3B61     	 str r3,[r7,#16]
 100              	.L5:
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Conditions to check which loopCounter holds
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * the first and last indices of the output samples to be calculated. */
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     check = firstIndex + numPoints;
 101              	 .loc 1 120 0
 102 005a D7F89420 	 ldr r2,[r7,#148]
 103 005e D7F89830 	 ldr r3,[r7,#152]
 104 0062 1344     	 add r3,r3,r2
 105 0064 3B62     	 str r3,[r7,#32]
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
 106              	 .loc 1 121 0
 107 0066 3A6A     	 ldr r2,[r7,#32]
 108 0068 3B69     	 ldr r3,[r7,#16]
 109 006a 9A42     	 cmp r2,r3
 110 006c 03DD     	 ble .L6
 111              	 .loc 1 121 0 is_stmt 0 discriminator 1
 112 006e 3A6A     	 ldr r2,[r7,#32]
 113 0070 3B69     	 ldr r3,[r7,#16]
 114 0072 D31A     	 subs r3,r2,r3
 115 0074 00E0     	 b .L7
 116              	.L6:
 117              	 .loc 1 121 0 discriminator 2
 118 0076 0023     	 movs r3,#0
 119              	.L7:
 120              	 .loc 1 121 0 discriminator 4
 121 0078 FB62     	 str r3,[r7,#44]
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 122              	 .loc 1 122 0 is_stmt 1 discriminator 4
 123 007a D7F89420 	 ldr r2,[r7,#148]
 124 007e 3B69     	 ldr r3,[r7,#16]
 125 0080 013B     	 subs r3,r3,#1
 126 0082 9A42     	 cmp r2,r3
 127 0084 06DD     	 ble .L8
 128              	 .loc 1 122 0 is_stmt 0 discriminator 1
 129 0086 FA6A     	 ldr r2,[r7,#44]
 130 0088 D7F89430 	 ldr r3,[r7,#148]
 131 008c D21A     	 subs r2,r2,r3
 132 008e 3B69     	 ldr r3,[r7,#16]
 133 0090 1344     	 add r3,r3,r2
 134 0092 00E0     	 b .L9
 135              	.L8:
 136              	 .loc 1 122 0 discriminator 2
 137 0094 FB6A     	 ldr r3,[r7,#44]
 138              	.L9:
 139              	 .loc 1 122 0 discriminator 4
 140 0096 FB62     	 str r3,[r7,#44]
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     blockSize1 = ((int32_t) srcBLen - 1) - (int32_t) firstIndex;
 141              	 .loc 1 123 0 is_stmt 1 discriminator 4
 142 0098 BA68     	 ldr r2,[r7,#8]
 143 009a D7F89430 	 ldr r3,[r7,#148]
 144 009e D31A     	 subs r3,r2,r3
 145 00a0 013B     	 subs r3,r3,#1
 146 00a2 3B63     	 str r3,[r7,#48]
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1U)) ? blockSize1 :  numPoints) : 0;
 147              	 .loc 1 124 0 discriminator 4
 148 00a4 3B6B     	 ldr r3,[r7,#48]
 149 00a6 002B     	 cmp r3,#0
 150 00a8 09D0     	 beq .L10
 151              	 .loc 1 124 0 is_stmt 0 discriminator 1
 152 00aa BB68     	 ldr r3,[r7,#8]
 153 00ac 5A1E     	 subs r2,r3,#1
 154 00ae 3B6A     	 ldr r3,[r7,#32]
 155 00b0 9A42     	 cmp r2,r3
 156 00b2 01D2     	 bcs .L11
 157              	 .loc 1 124 0 discriminator 3
 158 00b4 3B6B     	 ldr r3,[r7,#48]
 159 00b6 03E0     	 b .L13
 160              	.L11:
 161              	 .loc 1 124 0 discriminator 4
 162 00b8 D7F89830 	 ldr r3,[r7,#152]
 163 00bc 00E0     	 b .L13
 164              	.L10:
 165              	 .loc 1 124 0 discriminator 2
 166 00be 0023     	 movs r3,#0
 167              	.L13:
 168              	 .loc 1 124 0 discriminator 8
 169 00c0 3B63     	 str r3,[r7,#48]
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) + (int32_t) firstIndex);
 170              	 .loc 1 125 0 is_stmt 1 discriminator 8
 171 00c2 FA6A     	 ldr r2,[r7,#44]
 172 00c4 3B6B     	 ldr r3,[r7,#48]
 173 00c6 1A44     	 add r2,r2,r3
 174 00c8 D7F89430 	 ldr r3,[r7,#148]
 175 00cc 1344     	 add r3,r3,r2
 176 00ce 3A6A     	 ldr r2,[r7,#32]
 177 00d0 D31A     	 subs r3,r2,r3
 178 00d2 FB61     	 str r3,[r7,#28]
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* The function is internally
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * divided into three stages according to the number of multiplications that has to be
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * taken place between inputA samples and inputB samples. In the first stage of the
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * algorithm, the multiplications increase by one for every iteration.
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * In the third stage of the algorithm, the multiplications decrease by one
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * for every iteration. */
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Set the output pointer to point to the firstIndex
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * of the output sample to be calculated. */
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     pOut = pDst + firstIndex;
 179              	 .loc 1 139 0 discriminator 8
 180 00d4 D7F89430 	 ldr r3,[r7,#148]
 181 00d8 9B00     	 lsls r3,r3,#2
 182 00da D7F89020 	 ldr r2,[r7,#144]
 183 00de 1344     	 add r3,r3,r2
 184 00e0 FB65     	 str r3,[r7,#92]
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* --------------------------
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * Initializations of stage1
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * -------------------------*/
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* sum = x[0] * y[0]
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * sum = x[0] * y[1] + x[1] * y[0]
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * ....
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      */
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****        The count variable holds the number of MAC operations performed.
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****        Since the partial convolution starts from firstIndex
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****        Number of Macs to be performed is firstIndex + 1 */
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     count = 1U + firstIndex;
 185              	 .loc 1 155 0 discriminator 8
 186 00e2 D7F89430 	 ldr r3,[r7,#148]
 187 00e6 0133     	 adds r3,r3,#1
 188 00e8 BB63     	 str r3,[r7,#56]
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Working pointer of inputA */
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     px = pIn1;
 189              	 .loc 1 158 0 discriminator 8
 190 00ea 7B6E     	 ldr r3,[r7,#100]
 191 00ec BB65     	 str r3,[r7,#88]
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Working pointer of inputB */
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     pSrc2 = pIn2 + firstIndex;
 192              	 .loc 1 161 0 discriminator 8
 193 00ee D7F89430 	 ldr r3,[r7,#148]
 194 00f2 9B00     	 lsls r3,r3,#2
 195 00f4 3A6E     	 ldr r2,[r7,#96]
 196 00f6 1344     	 add r3,r3,r2
 197 00f8 FB64     	 str r3,[r7,#76]
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     py = pSrc2;
 198              	 .loc 1 162 0 discriminator 8
 199 00fa FB6C     	 ldr r3,[r7,#76]
 200 00fc 7B65     	 str r3,[r7,#84]
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* ------------------------
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * Stage1 process
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * ----------------------*/
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* The first stage starts here */
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     while (blockSize1 > 0U)
 201              	 .loc 1 169 0 discriminator 8
 202 00fe 48E0     	 b .L14
 203              	.L17:
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Accumulator is made zero for every iteration */
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       sum = 0;
 204              	 .loc 1 172 0
 205 0100 4FF00002 	 mov r2,#0
 206 0104 4FF00003 	 mov r3,#0
 207 0108 C7E91023 	 strd r2,[r7,#64]
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       k = count >> 2U;
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       while (k > 0U)
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* x[0] * y[srcBLen - 1] */
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * (*py--);
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* x[1] * y[srcBLen - 2] */
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * (*py--);
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* x[2] * y[srcBLen - 3] */
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * (*py--);
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* x[3] * y[srcBLen - 4] */
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * (*py--);
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Decrement loop counter */
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k--;
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       }
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Loop unrolling: Compute remaining outputs */
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       k = count % 0x4U;
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #else
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Initialize k with number of samples */
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       k = count;
 208              	 .loc 1 203 0
 209 010c BB6B     	 ldr r3,[r7,#56]
 210 010e FB63     	 str r3,[r7,#60]
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       while (k > 0U)
 211              	 .loc 1 207 0
 212 0110 20E0     	 b .L15
 213              	.L16:
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Perform the multiply-accumulate */
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * (*py--);
 214              	 .loc 1 210 0
 215 0112 BB6D     	 ldr r3,[r7,#88]
 216 0114 1A1D     	 adds r2,r3,#4
 217 0116 BA65     	 str r2,[r7,#88]
 218 0118 1B68     	 ldr r3,[r3]
 219 011a 1846     	 mov r0,r3
 220 011c 4FEAE071 	 asr r1,r0,#31
 221 0120 7B6D     	 ldr r3,[r7,#84]
 222 0122 1A1F     	 subs r2,r3,#4
 223 0124 7A65     	 str r2,[r7,#84]
 224 0126 1B68     	 ldr r3,[r3]
 225 0128 1A46     	 mov r2,r3
 226 012a 4FEAE273 	 asr r3,r2,#31
 227 012e 02FB01FE 	 mul lr,r2,r1
 228 0132 00FB03F6 	 mul r6,r0,r3
 229 0136 7644     	 add r6,r6,lr
 230 0138 A0FB0223 	 umull r2,r3,r0,r2
 231 013c F118     	 adds r1,r6,r3
 232 013e 0B46     	 mov r3,r1
 233 0140 D7E91001 	 ldrd r0,[r7,#64]
 234 0144 1218     	 adds r2,r2,r0
 235 0146 43EB0103 	 adc r3,r3,r1
 236 014a C7E91023 	 strd r2,[r7,#64]
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Decrement loop counter */
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k--;
 237              	 .loc 1 213 0
 238 014e FB6B     	 ldr r3,[r7,#60]
 239 0150 013B     	 subs r3,r3,#1
 240 0152 FB63     	 str r3,[r7,#60]
 241              	.L15:
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 242              	 .loc 1 207 0
 243 0154 FB6B     	 ldr r3,[r7,#60]
 244 0156 002B     	 cmp r3,#0
 245 0158 DBD1     	 bne .L16
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       }
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Store the result in the accumulator in the destination buffer. */
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       *pOut++ = (q31_t) (sum >> 31);
 246              	 .loc 1 217 0
 247 015a F96D     	 ldr r1,[r7,#92]
 248 015c 0B1D     	 adds r3,r1,#4
 249 015e FB65     	 str r3,[r7,#92]
 250 0160 D7E91023 	 ldrd r2,[r7,#64]
 251 0164 D00F     	 lsrs r0,r2,#31
 252 0166 3860     	 str r0,[r7]
 253 0168 3868     	 ldr r0,[r7]
 254 016a 40EA4300 	 orr r0,r0,r3,lsl#1
 255 016e 3860     	 str r0,[r7]
 256 0170 DB17     	 asrs r3,r3,#31
 257 0172 7B60     	 str r3,[r7,#4]
 258 0174 3B68     	 ldr r3,[r7]
 259 0176 0B60     	 str r3,[r1]
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       py = ++pSrc2;
 260              	 .loc 1 220 0
 261 0178 FB6C     	 ldr r3,[r7,#76]
 262 017a 0433     	 adds r3,r3,#4
 263 017c FB64     	 str r3,[r7,#76]
 264 017e FB6C     	 ldr r3,[r7,#76]
 265 0180 7B65     	 str r3,[r7,#84]
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       px = pIn1;
 266              	 .loc 1 221 0
 267 0182 7B6E     	 ldr r3,[r7,#100]
 268 0184 BB65     	 str r3,[r7,#88]
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Increment MAC count */
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       count++;
 269              	 .loc 1 224 0
 270 0186 BB6B     	 ldr r3,[r7,#56]
 271 0188 0133     	 adds r3,r3,#1
 272 018a BB63     	 str r3,[r7,#56]
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Decrement loop counter */
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       blockSize1--;
 273              	 .loc 1 227 0
 274 018c 3B6B     	 ldr r3,[r7,#48]
 275 018e 013B     	 subs r3,r3,#1
 276 0190 3B63     	 str r3,[r7,#48]
 277              	.L14:
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 278              	 .loc 1 169 0
 279 0192 3B6B     	 ldr r3,[r7,#48]
 280 0194 002B     	 cmp r3,#0
 281 0196 B3D1     	 bne .L17
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* --------------------------
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * Initializations of stage2
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * ------------------------*/
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * ....
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      */
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Working pointer of inputA */
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     if ((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 282              	 .loc 1 241 0
 283 0198 D7F89420 	 ldr r2,[r7,#148]
 284 019c BB68     	 ldr r3,[r7,#8]
 285 019e D31A     	 subs r3,r2,r3
 286 01a0 0133     	 adds r3,r3,#1
 287 01a2 002B     	 cmp r3,#0
 288 01a4 09DD     	 ble .L18
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       pSrc1 = pIn1 + firstIndex - srcBLen + 1;
 289              	 .loc 1 243 0
 290 01a6 D7F89420 	 ldr r2,[r7,#148]
 291 01aa BB68     	 ldr r3,[r7,#8]
 292 01ac D31A     	 subs r3,r2,r3
 293 01ae 0133     	 adds r3,r3,#1
 294 01b0 9B00     	 lsls r3,r3,#2
 295 01b2 7A6E     	 ldr r2,[r7,#100]
 296 01b4 1344     	 add r3,r3,r2
 297 01b6 3B65     	 str r3,[r7,#80]
 298 01b8 01E0     	 b .L19
 299              	.L18:
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     else
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       pSrc1 = pIn1;
 300              	 .loc 1 247 0
 301 01ba 7B6E     	 ldr r3,[r7,#100]
 302 01bc 3B65     	 str r3,[r7,#80]
 303              	.L19:
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     px = pSrc1;
 304              	 .loc 1 249 0
 305 01be 3B6D     	 ldr r3,[r7,#80]
 306 01c0 BB65     	 str r3,[r7,#88]
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Working pointer of inputB */
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 307              	 .loc 1 252 0
 308 01c2 BB68     	 ldr r3,[r7,#8]
 309 01c4 03F18043 	 add r3,r3,#1073741824
 310 01c8 013B     	 subs r3,r3,#1
 311 01ca 9B00     	 lsls r3,r3,#2
 312 01cc 3A6E     	 ldr r2,[r7,#96]
 313 01ce 1344     	 add r3,r3,r2
 314 01d0 FB64     	 str r3,[r7,#76]
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     py = pSrc2;
 315              	 .loc 1 253 0
 316 01d2 FB6C     	 ldr r3,[r7,#76]
 317 01d4 7B65     	 str r3,[r7,#84]
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* count is index by which the pointer pIn1 to be incremented */
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     count = 0U;
 318              	 .loc 1 256 0
 319 01d6 0023     	 movs r3,#0
 320 01d8 BB63     	 str r3,[r7,#56]
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* -------------------
 259:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * Stage2 process
 260:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * ------------------*/
 261:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 262:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 263:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * So, to loop unroll over blockSize2,
 264:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * srcBLen should be greater than or equal to 4 */
 265:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     if (srcBLen >= 4U)
 321              	 .loc 1 265 0
 322 01da BB68     	 ldr r3,[r7,#8]
 323 01dc 032B     	 cmp r3,#3
 324 01de 4DD9     	 bls .L20
 266:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 267:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 268:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Loop unroll over blkCnt */
 270:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       blkCnt = blockSize2 / 3;
 271:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 272:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       while (blkCnt > 0U)
 273:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 274:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Set all accumulators to zero */
 275:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         acc0 = 0;
 276:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         acc1 = 0;
 277:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         acc2 = 0;
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 279:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* read x[0], x[1] samples */
 280:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         x0 = *px++;
 281:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         x1 = *px++;
 282:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 283:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Apply loop unrolling and compute 3 MACs simultaneously. */
 284:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k = srcBLen / 3;
 285:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 286:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* First part of the processing with loop unrolling.  Compute 3 MACs at a time.
 287:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****          ** a second loop below computes MACs for the remaining 1 to 2 samples. */
 288:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         do
 289:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         {
 290:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Read y[srcBLen - 1] sample */
 291:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           c0 = *(py);
 292:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 293:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Read x[2] sample */
 294:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           x2 = *(px);
 295:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 296:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Perform the multiply-accumulate */
 297:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc0 +=  x[0] * y[srcBLen - 1] */
 298:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc0 += (q63_t) x0 * c0;
 299:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc1 +=  x[1] * y[srcBLen - 1] */
 300:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc1 += (q63_t) x1 * c0;
 301:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc2 +=  x[2] * y[srcBLen - 1] */
 302:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc2 += (q63_t) x2 * c0;
 303:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Read y[srcBLen - 2] sample */
 305:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           c0 = *(py - 1U);
 306:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 307:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Read x[3] sample */
 308:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           x0 = *(px + 1U);
 309:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 310:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Perform the multiply-accumulate */
 311:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc0 +=  x[1] * y[srcBLen - 2] */
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc0 += (q63_t) x1 * c0;
 313:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc1 +=  x[2] * y[srcBLen - 2] */
 314:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc1 += (q63_t) x2 * c0;
 315:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc2 +=  x[3] * y[srcBLen - 2] */
 316:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc2 += (q63_t) x0 * c0;
 317:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 318:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Read y[srcBLen - 3] sample */
 319:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           c0 = *(py - 2U);
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 321:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Read x[4] sample */
 322:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           x1 = *(px + 2U);
 323:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 324:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Perform the multiply-accumulate */
 325:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc0 +=  x[2] * y[srcBLen - 3] */
 326:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc0 += (q63_t) x2 * c0;
 327:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc1 +=  x[3] * y[srcBLen - 2] */
 328:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc1 += (q63_t) x0 * c0;
 329:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc2 +=  x[4] * y[srcBLen - 2] */
 330:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc2 += (q63_t) x1 * c0;
 331:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 332:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 333:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           px += 3U;
 334:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 335:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           py -= 3U;
 336:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 337:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         } while (--k);
 338:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 339:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* If the srcBLen is not a multiple of 3, compute any remaining MACs here.
 340:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****          ** No loop unrolling is used. */
 341:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k = srcBLen - (3 * (srcBLen / 3));
 342:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 343:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         while (k > 0U)
 344:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         {
 345:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Read y[srcBLen - 5] sample */
 346:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           c0 = *py--;
 347:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Read x[7] sample */
 348:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           x2 = *px++;
 349:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 350:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Perform the multiply-accumulates */
 351:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc0 +=  x[4] * y[srcBLen - 5] */
 352:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc0 += (q63_t) x0 * c0;
 353:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc1 +=  x[5] * y[srcBLen - 5] */
 354:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc1 += (q63_t) x1 * c0;
 355:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* acc2 +=  x[6] * y[srcBLen - 5] */
 356:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           acc2 += (q63_t) x2 * c0;
 357:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 358:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Reuse the present samples for the next MAC */
 359:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           x0 = x1;
 360:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           x1 = x2;
 361:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 362:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Decrement the loop counter */
 363:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           k--;
 364:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         }
 365:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 366:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Store the result in the accumulator in the destination buffer. */
 367:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         *pOut++ = (q31_t) (acc0 >> 31);
 368:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         *pOut++ = (q31_t) (acc1 >> 31);
 369:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         *pOut++ = (q31_t) (acc2 >> 31);
 370:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 371:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Increment the pointer pIn1 index, count by 3 */
 372:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         count += 3U;
 373:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 374:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 375:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         px = pSrc1 + count;
 376:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         py = pSrc2;
 377:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 378:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Decrement loop counter */
 379:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         blkCnt--;
 380:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       }
 381:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 382:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Loop unrolling: Compute remaining outputs */
 383:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       blkCnt = blockSize2 - 3 * (blockSize2 / 3);
 384:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 385:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #else
 386:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 387:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Initialize blkCnt with number of samples */
 388:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       blkCnt = blockSize2;
 325              	 .loc 1 388 0
 326 01e0 FB69     	 ldr r3,[r7,#28]
 327 01e2 7B63     	 str r3,[r7,#52]
 389:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 390:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 391:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 392:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       while (blkCnt > 0U)
 328              	 .loc 1 392 0
 329 01e4 46E0     	 b .L21
 330              	.L24:
 393:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 394:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Accumulator is made zero for every iteration */
 395:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum = 0;
 331              	 .loc 1 395 0
 332 01e6 4FF00002 	 mov r2,#0
 333 01ea 4FF00003 	 mov r3,#0
 334 01ee C7E91023 	 strd r2,[r7,#64]
 396:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 397:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 398:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 399:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Loop unrolling: Compute 4 outputs at a time */
 400:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k = srcBLen >> 2U;
 401:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 402:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         while (k > 0U)
 403:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         {
 404:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Perform the multiply-accumulates */
 405:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           sum += (q63_t) *px++ * (*py--);
 406:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           sum += (q63_t) *px++ * (*py--);
 407:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           sum += (q63_t) *px++ * (*py--);
 408:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           sum += (q63_t) *px++ * (*py--);
 409:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 410:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Decrement loop counter */
 411:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           k--;
 412:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         }
 413:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 414:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Loop unrolling: Compute remaining outputs */
 415:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k = srcBLen % 0x4U;
 416:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 417:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #else
 418:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 419:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Initialize blkCnt with number of samples */
 420:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k = srcBLen;
 335              	 .loc 1 420 0
 336 01f2 BB68     	 ldr r3,[r7,#8]
 337 01f4 FB63     	 str r3,[r7,#60]
 421:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 422:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 423:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 424:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         while (k > 0U)
 338              	 .loc 1 424 0
 339 01f6 20E0     	 b .L22
 340              	.L23:
 425:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         {
 426:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Perform the multiply-accumulate */
 427:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           sum += (q63_t) *px++ * *py--;
 341              	 .loc 1 427 0
 342 01f8 BB6D     	 ldr r3,[r7,#88]
 343 01fa 1A1D     	 adds r2,r3,#4
 344 01fc BA65     	 str r2,[r7,#88]
 345 01fe 1B68     	 ldr r3,[r3]
 346 0200 1846     	 mov r0,r3
 347 0202 4FEAE071 	 asr r1,r0,#31
 348 0206 7B6D     	 ldr r3,[r7,#84]
 349 0208 1A1F     	 subs r2,r3,#4
 350 020a 7A65     	 str r2,[r7,#84]
 351 020c 1B68     	 ldr r3,[r3]
 352 020e 1A46     	 mov r2,r3
 353 0210 4FEAE273 	 asr r3,r2,#31
 354 0214 02FB01FE 	 mul lr,r2,r1
 355 0218 00FB03F6 	 mul r6,r0,r3
 356 021c 7644     	 add r6,r6,lr
 357 021e A0FB0223 	 umull r2,r3,r0,r2
 358 0222 F118     	 adds r1,r6,r3
 359 0224 0B46     	 mov r3,r1
 360 0226 D7E91001 	 ldrd r0,[r7,#64]
 361 022a 1218     	 adds r2,r2,r0
 362 022c 43EB0103 	 adc r3,r3,r1
 363 0230 C7E91023 	 strd r2,[r7,#64]
 428:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 429:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Decrement loop counter */
 430:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           k--;
 364              	 .loc 1 430 0
 365 0234 FB6B     	 ldr r3,[r7,#60]
 366 0236 013B     	 subs r3,r3,#1
 367 0238 FB63     	 str r3,[r7,#60]
 368              	.L22:
 424:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         {
 369              	 .loc 1 424 0
 370 023a FB6B     	 ldr r3,[r7,#60]
 371 023c 002B     	 cmp r3,#0
 372 023e DBD1     	 bne .L23
 431:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         }
 432:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 433:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Store the result in the accumulator in the destination buffer. */
 434:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         *pOut++ = (q31_t) (sum >> 31);
 373              	 .loc 1 434 0
 374 0240 F96D     	 ldr r1,[r7,#92]
 375 0242 0B1D     	 adds r3,r1,#4
 376 0244 FB65     	 str r3,[r7,#92]
 377 0246 D7E91023 	 ldrd r2,[r7,#64]
 378 024a 4FEAD27A 	 lsr r10,r2,#31
 379 024e 4AEA430A 	 orr r10,r10,r3,lsl#1
 380 0252 4FEAE37B 	 asr fp,r3,#31
 381 0256 5346     	 mov r3,r10
 382 0258 0B60     	 str r3,[r1]
 435:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 436:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Increment MAC count */
 437:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         count++;
 383              	 .loc 1 437 0
 384 025a BB6B     	 ldr r3,[r7,#56]
 385 025c 0133     	 adds r3,r3,#1
 386 025e BB63     	 str r3,[r7,#56]
 438:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 439:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 440:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         px = pSrc1 + count;
 387              	 .loc 1 440 0
 388 0260 BB6B     	 ldr r3,[r7,#56]
 389 0262 9B00     	 lsls r3,r3,#2
 390 0264 3A6D     	 ldr r2,[r7,#80]
 391 0266 1344     	 add r3,r3,r2
 392 0268 BB65     	 str r3,[r7,#88]
 441:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         py = pSrc2;
 393              	 .loc 1 441 0
 394 026a FB6C     	 ldr r3,[r7,#76]
 395 026c 7B65     	 str r3,[r7,#84]
 442:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 443:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Decrement loop counter */
 444:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         blkCnt--;
 396              	 .loc 1 444 0
 397 026e 7B6B     	 ldr r3,[r7,#52]
 398 0270 013B     	 subs r3,r3,#1
 399 0272 7B63     	 str r3,[r7,#52]
 400              	.L21:
 392:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 401              	 .loc 1 392 0
 402 0274 7B6B     	 ldr r3,[r7,#52]
 403 0276 002B     	 cmp r3,#0
 404 0278 B5D1     	 bne .L24
 405 027a 4CE0     	 b .L25
 406              	.L20:
 445:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       }
 446:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 447:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     else
 448:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 449:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* If the srcBLen is not a multiple of 4,
 450:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****        * the blockSize2 loop cannot be unrolled by 4 */
 451:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       blkCnt = (uint32_t) blockSize2;
 407              	 .loc 1 451 0
 408 027c FB69     	 ldr r3,[r7,#28]
 409 027e 7B63     	 str r3,[r7,#52]
 452:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 453:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       while (blkCnt > 0U)
 410              	 .loc 1 453 0
 411 0280 46E0     	 b .L26
 412              	.L29:
 454:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 455:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Accumulator is made zero for every iteration */
 456:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum = 0;
 413              	 .loc 1 456 0
 414 0282 4FF00002 	 mov r2,#0
 415 0286 4FF00003 	 mov r3,#0
 416 028a C7E91023 	 strd r2,[r7,#64]
 457:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 458:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* srcBLen number of MACS should be performed */
 459:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k = srcBLen;
 417              	 .loc 1 459 0
 418 028e BB68     	 ldr r3,[r7,#8]
 419 0290 FB63     	 str r3,[r7,#60]
 460:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 461:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         while (k > 0U)
 420              	 .loc 1 461 0
 421 0292 20E0     	 b .L27
 422              	.L28:
 462:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         {
 463:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Perform the multiply-accumulate */
 464:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           sum += (q63_t) *px++ * *py--;
 423              	 .loc 1 464 0
 424 0294 BB6D     	 ldr r3,[r7,#88]
 425 0296 1A1D     	 adds r2,r3,#4
 426 0298 BA65     	 str r2,[r7,#88]
 427 029a 1B68     	 ldr r3,[r3]
 428 029c 1846     	 mov r0,r3
 429 029e 4FEAE071 	 asr r1,r0,#31
 430 02a2 7B6D     	 ldr r3,[r7,#84]
 431 02a4 1A1F     	 subs r2,r3,#4
 432 02a6 7A65     	 str r2,[r7,#84]
 433 02a8 1B68     	 ldr r3,[r3]
 434 02aa 1A46     	 mov r2,r3
 435 02ac 4FEAE273 	 asr r3,r2,#31
 436 02b0 02FB01FE 	 mul lr,r2,r1
 437 02b4 00FB03F6 	 mul r6,r0,r3
 438 02b8 7644     	 add r6,r6,lr
 439 02ba A0FB0223 	 umull r2,r3,r0,r2
 440 02be F118     	 adds r1,r6,r3
 441 02c0 0B46     	 mov r3,r1
 442 02c2 D7E91001 	 ldrd r0,[r7,#64]
 443 02c6 1218     	 adds r2,r2,r0
 444 02c8 43EB0103 	 adc r3,r3,r1
 445 02cc C7E91023 	 strd r2,[r7,#64]
 465:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 466:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* Decrement loop counter */
 467:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           k--;
 446              	 .loc 1 467 0
 447 02d0 FB6B     	 ldr r3,[r7,#60]
 448 02d2 013B     	 subs r3,r3,#1
 449 02d4 FB63     	 str r3,[r7,#60]
 450              	.L27:
 461:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         {
 451              	 .loc 1 461 0
 452 02d6 FB6B     	 ldr r3,[r7,#60]
 453 02d8 002B     	 cmp r3,#0
 454 02da DBD1     	 bne .L28
 468:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         }
 469:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 470:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Store the result in the accumulator in the destination buffer. */
 471:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         *pOut++ = (q31_t) (sum >> 31);
 455              	 .loc 1 471 0
 456 02dc F96D     	 ldr r1,[r7,#92]
 457 02de 0B1D     	 adds r3,r1,#4
 458 02e0 FB65     	 str r3,[r7,#92]
 459 02e2 D7E91023 	 ldrd r2,[r7,#64]
 460 02e6 4FEAD278 	 lsr r8,r2,#31
 461 02ea 48EA4308 	 orr r8,r8,r3,lsl#1
 462 02ee 4FEAE379 	 asr r9,r3,#31
 463 02f2 4346     	 mov r3,r8
 464 02f4 0B60     	 str r3,[r1]
 472:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 473:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Increment the MAC count */
 474:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         count++;
 465              	 .loc 1 474 0
 466 02f6 BB6B     	 ldr r3,[r7,#56]
 467 02f8 0133     	 adds r3,r3,#1
 468 02fa BB63     	 str r3,[r7,#56]
 475:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 476:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 477:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         px = pSrc1 + count;
 469              	 .loc 1 477 0
 470 02fc BB6B     	 ldr r3,[r7,#56]
 471 02fe 9B00     	 lsls r3,r3,#2
 472 0300 3A6D     	 ldr r2,[r7,#80]
 473 0302 1344     	 add r3,r3,r2
 474 0304 BB65     	 str r3,[r7,#88]
 478:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         py = pSrc2;
 475              	 .loc 1 478 0
 476 0306 FB6C     	 ldr r3,[r7,#76]
 477 0308 7B65     	 str r3,[r7,#84]
 479:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 480:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Decrement the loop counter */
 481:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         blkCnt--;
 478              	 .loc 1 481 0
 479 030a 7B6B     	 ldr r3,[r7,#52]
 480 030c 013B     	 subs r3,r3,#1
 481 030e 7B63     	 str r3,[r7,#52]
 482              	.L26:
 453:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 483              	 .loc 1 453 0
 484 0310 7B6B     	 ldr r3,[r7,#52]
 485 0312 002B     	 cmp r3,#0
 486 0314 B5D1     	 bne .L29
 487              	.L25:
 482:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       }
 483:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 484:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 485:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 486:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* --------------------------
 487:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * Initializations of stage3
 488:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * -------------------------*/
 489:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 490:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
 491:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
 492:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * ....
 493:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 494:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]
 495:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      */
 496:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 497:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.
 498:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****        The blockSize3 variable holds the number of MAC operations performed */
 499:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     count = srcBLen - 1U;
 488              	 .loc 1 499 0
 489 0316 BB68     	 ldr r3,[r7,#8]
 490 0318 013B     	 subs r3,r3,#1
 491 031a BB63     	 str r3,[r7,#56]
 500:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 501:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Working pointer of inputA */
 502:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1U);
 492              	 .loc 1 502 0
 493 031c 3A69     	 ldr r2,[r7,#16]
 494 031e BB68     	 ldr r3,[r7,#8]
 495 0320 D31A     	 subs r3,r2,r3
 496 0322 0133     	 adds r3,r3,#1
 497 0324 9B00     	 lsls r3,r3,#2
 498 0326 7A6E     	 ldr r2,[r7,#100]
 499 0328 1344     	 add r3,r3,r2
 500 032a 3B65     	 str r3,[r7,#80]
 503:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     px = pSrc1;
 501              	 .loc 1 503 0
 502 032c 3B6D     	 ldr r3,[r7,#80]
 503 032e BB65     	 str r3,[r7,#88]
 504:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 505:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Working pointer of inputB */
 506:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 504              	 .loc 1 506 0
 505 0330 BB68     	 ldr r3,[r7,#8]
 506 0332 03F18043 	 add r3,r3,#1073741824
 507 0336 013B     	 subs r3,r3,#1
 508 0338 9B00     	 lsls r3,r3,#2
 509 033a 3A6E     	 ldr r2,[r7,#96]
 510 033c 1344     	 add r3,r3,r2
 511 033e FB64     	 str r3,[r7,#76]
 507:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     py = pSrc2;
 512              	 .loc 1 507 0
 513 0340 FB6C     	 ldr r3,[r7,#76]
 514 0342 7B65     	 str r3,[r7,#84]
 508:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 509:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* -------------------
 510:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * Stage3 process
 511:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****      * ------------------*/
 512:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 513:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     while (blockSize3 > 0U)
 515              	 .loc 1 513 0
 516 0344 44E0     	 b .L30
 517              	.L33:
 514:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 515:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Accumulator is made zero for every iteration */
 516:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       sum = 0;
 518              	 .loc 1 516 0
 519 0346 4FF00002 	 mov r2,#0
 520 034a 4FF00003 	 mov r3,#0
 521 034e C7E91023 	 strd r2,[r7,#64]
 517:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 518:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 519:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 520:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 521:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       k = count >> 2U;
 522:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 523:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       while (k > 0U)
 524:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 525:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* sum += x[srcALen - srcBLen + 1] * y[srcBLen - 1] */
 526:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * *py--;
 527:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 528:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* sum += x[srcALen - srcBLen + 2] * y[srcBLen - 2] */
 529:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * *py--;
 530:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 531:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* sum += x[srcALen - srcBLen + 3] * y[srcBLen - 3] */
 532:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * *py--;
 533:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 534:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* sum += x[srcALen - srcBLen + 4] * y[srcBLen - 4] */
 535:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * *py--;
 536:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 537:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Decrement loop counter */
 538:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k--;
 539:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       }
 540:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 541:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Loop unrolling: Compute remaining outputs */
 542:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       k = count % 0x4U;
 543:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 544:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #else
 545:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 546:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Initialize blkCnt with number of samples */
 547:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       k = count;
 522              	 .loc 1 547 0
 523 0352 BB6B     	 ldr r3,[r7,#56]
 524 0354 FB63     	 str r3,[r7,#60]
 548:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 549:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 550:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 551:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       while (k > 0U)
 525              	 .loc 1 551 0
 526 0356 20E0     	 b .L31
 527              	.L32:
 552:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 553:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Perform the multiply-accumulate */
 554:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 555:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         sum += (q63_t) *px++ * *py--;
 528              	 .loc 1 555 0
 529 0358 BB6D     	 ldr r3,[r7,#88]
 530 035a 1A1D     	 adds r2,r3,#4
 531 035c BA65     	 str r2,[r7,#88]
 532 035e 1B68     	 ldr r3,[r3]
 533 0360 1846     	 mov r0,r3
 534 0362 4FEAE071 	 asr r1,r0,#31
 535 0366 7B6D     	 ldr r3,[r7,#84]
 536 0368 1A1F     	 subs r2,r3,#4
 537 036a 7A65     	 str r2,[r7,#84]
 538 036c 1B68     	 ldr r3,[r3]
 539 036e 1A46     	 mov r2,r3
 540 0370 4FEAE273 	 asr r3,r2,#31
 541 0374 02FB01FE 	 mul lr,r2,r1
 542 0378 00FB03F6 	 mul r6,r0,r3
 543 037c 7644     	 add r6,r6,lr
 544 037e A0FB0223 	 umull r2,r3,r0,r2
 545 0382 F118     	 adds r1,r6,r3
 546 0384 0B46     	 mov r3,r1
 547 0386 D7E91001 	 ldrd r0,[r7,#64]
 548 038a 1218     	 adds r2,r2,r0
 549 038c 43EB0103 	 adc r3,r3,r1
 550 0390 C7E91023 	 strd r2,[r7,#64]
 556:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 557:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Decrement loop counter */
 558:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         k--;
 551              	 .loc 1 558 0
 552 0394 FB6B     	 ldr r3,[r7,#60]
 553 0396 013B     	 subs r3,r3,#1
 554 0398 FB63     	 str r3,[r7,#60]
 555              	.L31:
 551:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 556              	 .loc 1 551 0
 557 039a FB6B     	 ldr r3,[r7,#60]
 558 039c 002B     	 cmp r3,#0
 559 039e DBD1     	 bne .L32
 559:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       }
 560:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 561:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Store the result in the accumulator in the destination buffer. */
 562:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       *pOut++ = (q31_t) (sum >> 31);
 560              	 .loc 1 562 0
 561 03a0 F96D     	 ldr r1,[r7,#92]
 562 03a2 0B1D     	 adds r3,r1,#4
 563 03a4 FB65     	 str r3,[r7,#92]
 564 03a6 D7E91023 	 ldrd r2,[r7,#64]
 565 03aa D40F     	 lsrs r4,r2,#31
 566 03ac 44EA4304 	 orr r4,r4,r3,lsl#1
 567 03b0 DD17     	 asrs r5,r3,#31
 568 03b2 2346     	 mov r3,r4
 569 03b4 0B60     	 str r3,[r1]
 563:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 564:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 565:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       px = ++pSrc1;
 570              	 .loc 1 565 0
 571 03b6 3B6D     	 ldr r3,[r7,#80]
 572 03b8 0433     	 adds r3,r3,#4
 573 03ba 3B65     	 str r3,[r7,#80]
 574 03bc 3B6D     	 ldr r3,[r7,#80]
 575 03be BB65     	 str r3,[r7,#88]
 566:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       py = pSrc2;
 576              	 .loc 1 566 0
 577 03c0 FB6C     	 ldr r3,[r7,#76]
 578 03c2 7B65     	 str r3,[r7,#84]
 567:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 568:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Decrement MAC count */
 569:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       count--;
 579              	 .loc 1 569 0
 580 03c4 BB6B     	 ldr r3,[r7,#56]
 581 03c6 013B     	 subs r3,r3,#1
 582 03c8 BB63     	 str r3,[r7,#56]
 570:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 571:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Decrement the loop counter */
 572:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       blockSize3--;
 583              	 .loc 1 572 0
 584 03ca FB6A     	 ldr r3,[r7,#44]
 585 03cc 013B     	 subs r3,r3,#1
 586 03ce FB62     	 str r3,[r7,#44]
 587              	.L30:
 513:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 588              	 .loc 1 513 0
 589 03d0 FB6A     	 ldr r3,[r7,#44]
 590 03d2 002B     	 cmp r3,#0
 591 03d4 B7D1     	 bne .L33
 573:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 574:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 575:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 576:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     status = ARM_MATH_SUCCESS;
 592              	 .loc 1 576 0
 593 03d6 0023     	 movs r3,#0
 594 03d8 87F82B30 	 strb r3,[r7,#43]
 595              	.L3:
 577:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   }
 578:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 579:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   /* Return to application */
 580:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   return (status);
 596              	 .loc 1 580 0
 597 03dc 97F82B30 	 ldrb r3,[r7,#43]
 598 03e0 5BB2     	 sxtb r3,r3
 581:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 582:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #else
 583:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** /* alternate version for CM0_FAMILY */
 584:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 585:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t *pIn1 = pSrcA;                           /* InputA pointer */
 586:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   const q31_t *pIn2 = pSrcB;                           /* InputB pointer */
 587:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         q63_t sum;                                     /* Accumulator */
 588:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         uint32_t i, j;                                 /* Loop counters */
 589:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         arm_status status;                             /* Status of Partial convolution */
 590:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 591:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   /* Check for range of output samples to be calculated */
 592:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
 593:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   {
 594:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
 595:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     status = ARM_MATH_ARGUMENT_ERROR;
 596:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   }
 597:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   else
 598:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   {
 599:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Loop to calculate convolution for output length number of values */
 600:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     for (i = firstIndex; i <= (firstIndex + numPoints - 1); i++)
 601:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     {
 602:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Initialize sum with zero to carry on MAC operations */
 603:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       sum = 0;
 604:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 605:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Loop to perform MAC operations according to convolution equation */
 606:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       for (j = 0U; j <= i; j++)
 607:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       {
 608:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         /* Check the array limitations */
 609:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         if (((i - j) < srcBLen) && (j < srcALen))
 610:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         {
 611:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           /* z[i] += x[i-j] * y[j] */
 612:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****           sum += ((q63_t) pIn1[j] * pIn2[i - j]);
 613:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****         }
 614:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       }
 615:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 616:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       /* Store the output in the destination buffer */
 617:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****       pDst[i] = (q31_t) (sum >> 31U);
 618:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     }
 619:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 620:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 621:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****     status = ARM_MATH_SUCCESS;
 622:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   }
 623:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 624:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   /* Return to application */
 625:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c ****   return (status);
 626:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 627:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** #endif /* #if !defined(ARM_MATH_CM0_FAMILY) */
 628:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** 
 629:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q31.c **** }
 599              	 .loc 1 629 0
 600 03e2 1846     	 mov r0,r3
 601 03e4 6C37     	 adds r7,r7,#108
 602              	.LCFI3:
 603              	 .cfi_def_cfa_offset 36
 604 03e6 BD46     	 mov sp,r7
 605              	.LCFI4:
 606              	 .cfi_def_cfa_register 13
 607              	 
 608 03e8 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 609              	 .cfi_endproc
 610              	.LFE149:
 612              	 .text
 613              	.Letext0:
 614              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 615              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 616              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 617              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_partial_q31.c
    {standard input}:20     .text.arm_conv_partial_q31:00000000 $t
    {standard input}:25     .text.arm_conv_partial_q31:00000000 arm_conv_partial_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
