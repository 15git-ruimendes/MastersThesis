   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_lms_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_lms_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_lms_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_lms_q15:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * Title:        arm_lms_q15.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * Description:  Processing function for Q15 LMS filter
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @addtogroup LMS
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @brief         Processing function for Q15 LMS filter.
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @param[in]     S         points to an instance of the Q15 LMS filter structure
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @param[in]     pSrc      points to the block of input data
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @param[in]     pRef      points to the block of reference data
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @param[out]    pOut      points to the block of output data
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @param[out]    pErr      points to the block of error data
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @param[in]     blockSize number of samples to process
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @return        none
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @par           Scaling and Overflow Behavior
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****                    The function is implemented using an internal 64-bit accumulator.
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****                    Both coefficients and state variables are represented in 1.15 format and multipl
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****                    The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 f
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****                    There is no risk of internal overflow with this approach and the full precision 
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****                    After all additions have been performed, the accumulator is truncated to 34.15 f
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****                    Lastly, the accumulator is saturated to yield a result in 1.15 format.
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   @par
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****                    In this filter, filter coefficients are updated for each sample and
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****                    the updation of filter cofficients are saturted.
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****  */
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** void arm_lms_q15(
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   const arm_lms_instance_q15 * S,
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   const q15_t * pSrc,
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t * pRef,
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t * pOut,
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t * pErr,
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         uint32_t blockSize)
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** {
  28              	 .loc 1 69 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 B0B4     	 push {r4,r5,r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 12
  36              	 .cfi_offset 4,-12
  37              	 .cfi_offset 5,-8
  38              	 .cfi_offset 7,-4
  39 0002 9BB0     	 sub sp,sp,#108
  40              	.LCFI1:
  41              	 .cfi_def_cfa_offset 120
  42 0004 00AF     	 add r7,sp,#0
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 7
  45 0006 F860     	 str r0,[r7,#12]
  46 0008 B960     	 str r1,[r7,#8]
  47 000a 7A60     	 str r2,[r7,#4]
  48 000c 3B60     	 str r3,[r7]
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t *pState = S->pState;                     /* State pointer */
  49              	 .loc 1 70 0
  50 000e FB68     	 ldr r3,[r7,#12]
  51 0010 5B68     	 ldr r3,[r3,#4]
  52 0012 7B66     	 str r3,[r7,#100]
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  53              	 .loc 1 71 0
  54 0014 FB68     	 ldr r3,[r7,#12]
  55 0016 9B68     	 ldr r3,[r3,#8]
  56 0018 7B64     	 str r3,[r7,#68]
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t *pStateCurnt;                            /* Points to the current sample of the state
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t *px, *pb;                                /* Temporary pointers for state and coeffici
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t mu = S->mu;                              /* Adaptive factor */
  57              	 .loc 1 74 0
  58 001a FB68     	 ldr r3,[r7,#12]
  59 001c 9B89     	 ldrh r3,[r3,#12]
  60 001e A7F84230 	 strh r3,[r7,#66]
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
  61              	 .loc 1 75 0
  62 0022 FB68     	 ldr r3,[r7,#12]
  63 0024 1B88     	 ldrh r3,[r3]
  64 0026 FB63     	 str r3,[r7,#60]
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         uint32_t tapCnt, blkCnt;                       /* Loop counters */
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q63_t acc;                                     /* Accumulator */
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t e = 0;                                   /* Error of data sample */
  65              	 .loc 1 78 0
  66 0028 0023     	 movs r3,#0
  67 002a 7B87     	 strh r3,[r7,#58]
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q15_t alpha;                                   /* Intermediate constant for taps update */
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q31_t coef;                                    /* Temporary variable for coefficient */
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         q31_t acc_l, acc_h;                            /* Temporary input */
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         int32_t lShift = (15 - (int32_t) S->postShift);       /*  Post shift  */
  68              	 .loc 1 82 0
  69 002c FB68     	 ldr r3,[r7,#12]
  70 002e 1B69     	 ldr r3,[r3,#16]
  71 0030 C3F10F03 	 rsb r3,r3,#15
  72 0034 7B63     	 str r3,[r7,#52]
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****         int32_t uShift = (32 - lShift);
  73              	 .loc 1 83 0
  74 0036 7B6B     	 ldr r3,[r7,#52]
  75 0038 C3F12003 	 rsb r3,r3,#32
  76 003c 3B63     	 str r3,[r7,#48]
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* pStateCurnt points to the location where the new input data should be written */
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   pStateCurnt = &(S->pState[(numTaps - 1U)]);
  77              	 .loc 1 87 0
  78 003e FB68     	 ldr r3,[r7,#12]
  79 0040 5A68     	 ldr r2,[r3,#4]
  80 0042 FB6B     	 ldr r3,[r7,#60]
  81 0044 03F10043 	 add r3,r3,#-2147483648
  82 0048 013B     	 subs r3,r3,#1
  83 004a 5B00     	 lsls r3,r3,#1
  84 004c 1344     	 add r3,r3,r2
  85 004e 3B66     	 str r3,[r7,#96]
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* initialise loop count */
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   blkCnt = blockSize;
  86              	 .loc 1 90 0
  87 0050 FB6F     	 ldr r3,[r7,#124]
  88 0052 3B65     	 str r3,[r7,#80]
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   while (blkCnt > 0U)
  89              	 .loc 1 92 0
  90 0054 9CE0     	 b .L2
  91              	.L7:
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   {
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Copy the new input sample into the state buffer */
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     *pStateCurnt++ = *pSrc++;
  92              	 .loc 1 95 0
  93 0056 3B6E     	 ldr r3,[r7,#96]
  94 0058 9A1C     	 adds r2,r3,#2
  95 005a 3A66     	 str r2,[r7,#96]
  96 005c BA68     	 ldr r2,[r7,#8]
  97 005e 911C     	 adds r1,r2,#2
  98 0060 B960     	 str r1,[r7,#8]
  99 0062 1288     	 ldrh r2,[r2]
 100 0064 1A80     	 strh r2,[r3]
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Initialize pState pointer */
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     px = pState;
 101              	 .loc 1 98 0
 102 0066 7B6E     	 ldr r3,[r7,#100]
 103 0068 FB65     	 str r3,[r7,#92]
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Initialize coefficient pointer */
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     pb = pCoeffs;
 104              	 .loc 1 101 0
 105 006a 7B6C     	 ldr r3,[r7,#68]
 106 006c BB65     	 str r3,[r7,#88]
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Set the accumulator to zero */
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     acc = 0;
 107              	 .loc 1 104 0
 108 006e 4FF00002 	 mov r2,#0
 109 0072 4FF00003 	 mov r3,#0
 110 0076 C7E91223 	 strd r2,[r7,#72]
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     tapCnt = numTaps >> 2U;
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     while (tapCnt > 0U)
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     {
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       /* Perform the multiply-accumulate */
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       /* acc +=  b[N] * x[n-N] + b[N-1] * x[n-N-1] */
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       acc = __SMLALD(read_q15x2_ia (&px), read_q15x2_ia (&pb), acc);
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       acc = __SMLALD(read_q15x2_ia (&px), read_q15x2_ia (&pb), acc);
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       /* Decrement loop counter */
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       tapCnt--;
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     }
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Loop unrolling: Compute remaining taps */
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     tapCnt = numTaps % 0x4U;
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #else
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Initialize tapCnt with number of samples */
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     tapCnt = numTaps;
 111              	 .loc 1 128 0
 112 007a FB6B     	 ldr r3,[r7,#60]
 113 007c 7B65     	 str r3,[r7,#84]
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     while (tapCnt > 0U)
 114              	 .loc 1 132 0
 115 007e 18E0     	 b .L3
 116              	.L4:
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     {
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       /* Perform the multiply-accumulate */
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       acc += (q63_t) (((q31_t) (*px++) * (*pb++)));
 117              	 .loc 1 135 0
 118 0080 FB6D     	 ldr r3,[r7,#92]
 119 0082 9A1C     	 adds r2,r3,#2
 120 0084 FA65     	 str r2,[r7,#92]
 121 0086 1B88     	 ldrh r3,[r3]
 122 0088 1AB2     	 sxth r2,r3
 123 008a BB6D     	 ldr r3,[r7,#88]
 124 008c 991C     	 adds r1,r3,#2
 125 008e B965     	 str r1,[r7,#88]
 126 0090 1B88     	 ldrh r3,[r3]
 127 0092 1BB2     	 sxth r3,r3
 128 0094 03FB02F3 	 mul r3,r3,r2
 129 0098 1A46     	 mov r2,r3
 130 009a 4FEAE273 	 asr r3,r2,#31
 131 009e D7E91201 	 ldrd r0,[r7,#72]
 132 00a2 1218     	 adds r2,r2,r0
 133 00a4 43EB0103 	 adc r3,r3,r1
 134 00a8 C7E91223 	 strd r2,[r7,#72]
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       /* Decrement the loop counter */
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       tapCnt--;
 135              	 .loc 1 138 0
 136 00ac 7B6D     	 ldr r3,[r7,#84]
 137 00ae 013B     	 subs r3,r3,#1
 138 00b0 7B65     	 str r3,[r7,#84]
 139              	.L3:
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     {
 140              	 .loc 1 132 0
 141 00b2 7B6D     	 ldr r3,[r7,#84]
 142 00b4 002B     	 cmp r3,#0
 143 00b6 E3D1     	 bne .L4
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     }
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Calc lower part of acc */
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     acc_l = acc & 0xffffffff;
 144              	 .loc 1 142 0
 145 00b8 BB6C     	 ldr r3,[r7,#72]
 146 00ba FB62     	 str r3,[r7,#44]
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Calc upper part of acc */
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     acc_h = (acc >> 32) & 0xffffffff;
 147              	 .loc 1 145 0
 148 00bc D7E91223 	 ldrd r2,[r7,#72]
 149 00c0 1C00     	 movs r4,r3
 150 00c2 0025     	 movs r5,#0
 151 00c4 2346     	 mov r3,r4
 152 00c6 BB62     	 str r3,[r7,#40]
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Apply shift for lower part of acc and upper part of acc */
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 153              	 .loc 1 148 0
 154 00c8 FA6A     	 ldr r2,[r7,#44]
 155 00ca 7B6B     	 ldr r3,[r7,#52]
 156 00cc 22FA03F3 	 lsr r3,r2,r3
 157 00d0 B96A     	 ldr r1,[r7,#40]
 158 00d2 3A6B     	 ldr r2,[r7,#48]
 159 00d4 01FA02F2 	 lsl r2,r1,r2
 160 00d8 1343     	 orrs r3,r3,r2
 161 00da 1A46     	 mov r2,r3
 162 00dc 4FF00003 	 mov r3,#0
 163 00e0 C7E91223 	 strd r2,[r7,#72]
 164              	.LBB2:
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Converting the result to 1.15 format and saturate the output */
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     acc = __SSAT(acc, 16U);
 165              	 .loc 1 151 0
 166 00e4 BB6C     	 ldr r3,[r7,#72]
 167 00e6 7B62     	 str r3,[r7,#36]
 168 00e8 7B6A     	 ldr r3,[r7,#36]
 169              	
 170 00ea 03F30F03 	 ssat r3,#16,r3
 171              	
 172              	 .thumb
 173 00ee 3B62     	 str r3,[r7,#32]
 174 00f0 3B6A     	 ldr r3,[r7,#32]
 175              	.LBE2:
 176 00f2 1A46     	 mov r2,r3
 177 00f4 4FEAE273 	 asr r3,r2,#31
 178 00f8 C7E91223 	 strd r2,[r7,#72]
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Store the result from accumulator into the destination buffer. */
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     *pOut++ = (q15_t) acc;
 179              	 .loc 1 154 0
 180 00fc 3B68     	 ldr r3,[r7]
 181 00fe 9A1C     	 adds r2,r3,#2
 182 0100 3A60     	 str r2,[r7]
 183 0102 B7F84820 	 ldrh r2,[r7,#72]
 184 0106 1A80     	 strh r2,[r3]
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Compute and store error */
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     e = *pRef++ - (q15_t) acc;
 185              	 .loc 1 157 0
 186 0108 7B68     	 ldr r3,[r7,#4]
 187 010a 9A1C     	 adds r2,r3,#2
 188 010c 7A60     	 str r2,[r7,#4]
 189 010e 1B88     	 ldrh r3,[r3]
 190 0110 9AB2     	 uxth r2,r3
 191 0112 B7F84830 	 ldrh r3,[r7,#72]
 192 0116 D31A     	 subs r3,r2,r3
 193 0118 9BB2     	 uxth r3,r3
 194 011a 7B87     	 strh r3,[r7,#58]
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     *pErr++ = (q15_t) e;
 195              	 .loc 1 158 0
 196 011c BB6F     	 ldr r3,[r7,#120]
 197 011e 9A1C     	 adds r2,r3,#2
 198 0120 BA67     	 str r2,[r7,#120]
 199 0122 7A8F     	 ldrh r2,[r7,#58]
 200 0124 1A80     	 strh r2,[r3]
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Compute alpha i.e. intermediate constant for taps update */
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     alpha = (q15_t) (((q31_t) e * (mu)) >> 15);
 201              	 .loc 1 161 0
 202 0126 B7F93A30 	 ldrsh r3,[r7,#58]
 203 012a B7F94220 	 ldrsh r2,[r7,#66]
 204 012e 02FB03F3 	 mul r3,r2,r3
 205 0132 DB13     	 asrs r3,r3,#15
 206 0134 FB83     	 strh r3,[r7,#30]
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Initialize pState pointer */
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Advance state pointer by 1 for the next sample */
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     px = pState++;
 207              	 .loc 1 165 0
 208 0136 7B6E     	 ldr r3,[r7,#100]
 209 0138 9A1C     	 adds r2,r3,#2
 210 013a 7A66     	 str r2,[r7,#100]
 211 013c FB65     	 str r3,[r7,#92]
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Initialize coefficient pointer */
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     pb = pCoeffs;
 212              	 .loc 1 168 0
 213 013e 7B6C     	 ldr r3,[r7,#68]
 214 0140 BB65     	 str r3,[r7,#88]
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     tapCnt = numTaps >> 2U;
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Update filter coefficients */
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     while (tapCnt > 0U)
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     {
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       coef = (q31_t) *pb + (((q31_t) alpha * (*px++)) >> 15);
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       *pb++ = (q15_t) __SSAT((coef), 16);
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       coef = (q31_t) *pb + (((q31_t) alpha * (*px++)) >> 15);
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       *pb++ = (q15_t) __SSAT((coef), 16);
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       coef = (q31_t) *pb + (((q31_t) alpha * (*px++)) >> 15);
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       *pb++ = (q15_t) __SSAT((coef), 16);
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       coef = (q31_t) *pb + (((q31_t) alpha * (*px++)) >> 15);
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       *pb++ = (q15_t) __SSAT((coef), 16);
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       /* Decrement loop counter */
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       tapCnt--;
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     }
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Loop unrolling: Compute remaining taps */
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     tapCnt = numTaps % 0x4U;
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #else
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Initialize tapCnt with number of samples */
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     tapCnt = numTaps;
 215              	 .loc 1 200 0
 216 0142 FB6B     	 ldr r3,[r7,#60]
 217 0144 7B65     	 str r3,[r7,#84]
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     while (tapCnt > 0U)
 218              	 .loc 1 204 0
 219 0146 1DE0     	 b .L5
 220              	.L6:
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     {
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       /* Perform the multiply-accumulate */
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       coef = (q31_t) *pb + (((q31_t) alpha * (*px++)) >> 15);
 221              	 .loc 1 207 0
 222 0148 BB6D     	 ldr r3,[r7,#88]
 223 014a 1B88     	 ldrh r3,[r3]
 224 014c 1AB2     	 sxth r2,r3
 225 014e B7F91E10 	 ldrsh r1,[r7,#30]
 226 0152 FB6D     	 ldr r3,[r7,#92]
 227 0154 981C     	 adds r0,r3,#2
 228 0156 F865     	 str r0,[r7,#92]
 229 0158 1B88     	 ldrh r3,[r3]
 230 015a 1BB2     	 sxth r3,r3
 231 015c 03FB01F3 	 mul r3,r3,r1
 232 0160 DB13     	 asrs r3,r3,#15
 233 0162 1344     	 add r3,r3,r2
 234 0164 BB61     	 str r3,[r7,#24]
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       *pb++ = (q15_t) __SSAT((coef), 16);
 235              	 .loc 1 208 0
 236 0166 BB6D     	 ldr r3,[r7,#88]
 237 0168 9A1C     	 adds r2,r3,#2
 238 016a BA65     	 str r2,[r7,#88]
 239              	.LBB3:
 240 016c BA69     	 ldr r2,[r7,#24]
 241 016e 7A61     	 str r2,[r7,#20]
 242 0170 7A69     	 ldr r2,[r7,#20]
 243              	
 244 0172 02F30F02 	 ssat r2,#16,r2
 245              	
 246              	 .thumb
 247 0176 3A61     	 str r2,[r7,#16]
 248 0178 3A69     	 ldr r2,[r7,#16]
 249              	.LBE3:
 250 017a 92B2     	 uxth r2,r2
 251 017c 1A80     	 strh r2,[r3]
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       /* Decrement loop counter */
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****       tapCnt--;
 252              	 .loc 1 211 0
 253 017e 7B6D     	 ldr r3,[r7,#84]
 254 0180 013B     	 subs r3,r3,#1
 255 0182 7B65     	 str r3,[r7,#84]
 256              	.L5:
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     {
 257              	 .loc 1 204 0
 258 0184 7B6D     	 ldr r3,[r7,#84]
 259 0186 002B     	 cmp r3,#0
 260 0188 DED1     	 bne .L6
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     }
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Decrement loop counter */
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     blkCnt--;
 261              	 .loc 1 215 0
 262 018a 3B6D     	 ldr r3,[r7,#80]
 263 018c 013B     	 subs r3,r3,#1
 264 018e 3B65     	 str r3,[r7,#80]
 265              	.L2:
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   {
 266              	 .loc 1 92 0
 267 0190 3B6D     	 ldr r3,[r7,#80]
 268 0192 002B     	 cmp r3,#0
 269 0194 7FF45FAF 	 bne .L7
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   }
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* Processing is complete.
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****      Now copy the last numTaps - 1 samples to the start of the state buffer.
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****      This prepares the state buffer for the next function call. */
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* Points to the start of the pState buffer */
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   pStateCurnt = S->pState;
 270              	 .loc 1 223 0
 271 0198 FB68     	 ldr r3,[r7,#12]
 272 019a 5B68     	 ldr r3,[r3,#4]
 273 019c 3B66     	 str r3,[r7,#96]
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* copy data */
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* Loop unrolling: Compute 4 taps at a time. */
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   tapCnt = (numTaps - 1U) >> 2U;
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   while (tapCnt > 0U)
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   {
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     write_q15x2_ia (&pStateCurnt, read_q15x2_ia (&pState));
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     write_q15x2_ia (&pStateCurnt, read_q15x2_ia (&pState));
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Decrement loop counter */
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     tapCnt--;
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   }
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* Loop unrolling: Compute remaining taps */
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   tapCnt = (numTaps - 1U) % 0x4U;
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #else
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   /* Initialize tapCnt with number of samples */
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   tapCnt = (numTaps - 1U);
 274              	 .loc 1 246 0
 275 019e FB6B     	 ldr r3,[r7,#60]
 276 01a0 013B     	 subs r3,r3,#1
 277 01a2 7B65     	 str r3,[r7,#84]
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   while (tapCnt > 0U)
 278              	 .loc 1 250 0
 279 01a4 0AE0     	 b .L8
 280              	.L9:
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   {
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     *pStateCurnt++ = *pState++;
 281              	 .loc 1 252 0
 282 01a6 3B6E     	 ldr r3,[r7,#96]
 283 01a8 9A1C     	 adds r2,r3,#2
 284 01aa 3A66     	 str r2,[r7,#96]
 285 01ac 7A6E     	 ldr r2,[r7,#100]
 286 01ae 911C     	 adds r1,r2,#2
 287 01b0 7966     	 str r1,[r7,#100]
 288 01b2 1288     	 ldrh r2,[r2]
 289 01b4 1A80     	 strh r2,[r3]
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     /* Decrement loop counter */
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****     tapCnt--;
 290              	 .loc 1 255 0
 291 01b6 7B6D     	 ldr r3,[r7,#84]
 292 01b8 013B     	 subs r3,r3,#1
 293 01ba 7B65     	 str r3,[r7,#84]
 294              	.L8:
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   {
 295              	 .loc 1 250 0
 296 01bc 7B6D     	 ldr r3,[r7,#84]
 297 01be 002B     	 cmp r3,#0
 298 01c0 F1D1     	 bne .L9
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c ****   }
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** 
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_lms_q15.c **** }
 299              	 .loc 1 258 0
 300 01c2 6C37     	 adds r7,r7,#108
 301              	.LCFI3:
 302              	 .cfi_def_cfa_offset 12
 303 01c4 BD46     	 mov sp,r7
 304              	.LCFI4:
 305              	 .cfi_def_cfa_register 13
 306              	 
 307 01c6 B0BC     	 pop {r4,r5,r7}
 308              	.LCFI5:
 309              	 .cfi_restore 7
 310              	 .cfi_restore 5
 311              	 .cfi_restore 4
 312              	 .cfi_def_cfa_offset 0
 313 01c8 7047     	 bx lr
 314              	 .cfi_endproc
 315              	.LFE149:
 317 01ca 00BF     	 .text
 318              	.Letext0:
 319              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 320              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 321              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 322              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_lms_q15.c
    {standard input}:20     .text.arm_lms_q15:00000000 $t
    {standard input}:25     .text.arm_lms_q15:00000000 arm_lms_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
