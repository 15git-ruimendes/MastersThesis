   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_fir_interpolate_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_fir_interpolate_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_fir_interpolate_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_fir_interpolate_f32:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Title:        arm_fir_interpolate_f32.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Description:  Floating-point FIR interpolation sequences
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @defgroup FIR_Interpolate Finite Impulse Response (FIR) Interpolator
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   These functions combine an upsampler (zero stuffer) and an FIR filter.
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   They are used in multirate systems for increasing the sample rate of a signal without introducing
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   Conceptually, the functions are equivalent to the block diagram below:
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   \image html FIRInterpolator.gif "Components included in the FIR Interpolator functions"
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   After upsampling by a factor of <code>L</code>, the signal should be filtered by a lowpass filter
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   cutoff frequency of <code>1/L</code> in order to eliminate high frequency copies of the spectrum.
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The user of the function is responsible for providing the filter coefficients.
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The FIR interpolator functions provided in the CMSIS DSP Library combine the upsampler and FIR fi
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The upsampler inserts <code>L-1</code> zeros between each sample.
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   Instead of multiplying by these zero values, the FIR filter is designed to skip them.
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   This leads to an efficient implementation without any wasted effort.
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The functions operate on blocks of input and output data.
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <code>pSrc</code> points to an array of <code>blockSize</code> input values and
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <code>pDst</code> points to an array of <code>blockSize*L</code> output values.
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   The library provides separate functions for Q15, Q31, and floating-point data types.
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par           Algorithm
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The functions use a polyphase filter structure:
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <pre>
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       y[n] = b[0] * x[n] + b[L]   * x[n-1] + ... + b[L*(phaseLength-1)] * x[n-phaseLength+1]
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       y[n+1] = b[1] * x[n] + b[L+1] * x[n-1] + ... + b[L*(phaseLength-1)+1] * x[n-phaseLength+1]
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ...
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       y[n+(L-1)] = b[L-1] * x[n] + b[2*L-1] * x[n-1] + ....+ b[L*(phaseLength-1)+(L-1)] * x[n-phase
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   </pre>
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    This approach is more efficient than straightforward upsample-then-filter algori
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    With this method the computation is reduced by a factor of <code>1/L</code> when
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>pCoeffs</code> points to a coefficient array of size <code>numTaps</code>.
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>numTaps</code> must be a multiple of the interpolation factor <code>L</cod
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    initialization functions.
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Internally, the function divides the FIR filter's impulse response into shorter 
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>phaseLength=numTaps/L</code>.
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Coefficients are stored in time reversed order.
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <pre>
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {b[numTaps-1], b[numTaps-2], b[N-2], ..., b[1], b[0]}
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   </pre>
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>pState</code> points to a state array of size <code>blockSize + phaseLengt
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Samples in the state buffer are stored in the order:
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <pre>
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      {x[n-phaseLength+1], x[n-phaseLength], x[n-phaseLength-1], x[n-phaseLength-2]....x[0], x[1], .
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   </pre>
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The state variables are updated after each block of data is processed, the coeff
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par           Instance Structure
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The coefficients and state variables for a filter are stored together in an inst
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    A separate instance structure must be defined for each filter.
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Coefficient arrays may be shared among several instances while state variable ar
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    There are separate instance structure declarations for each of the 3 supported d
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par           Initialization Functions
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    There is also an associated initialization function for each data type.
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The initialization function performs the following operations:
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    - Sets the values of the internal structure fields.
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    - Zeros out the values in the state buffer.
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    - Checks to make sure that the length of the filter is a multiple of the interpo
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    To do this manually without calling the init function, assign the follow subfiel
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    L (interpolation factor), pCoeffs, phaseLength (numTaps / L), pState. Also set a
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Use of the initialization function is optional.
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    However, if the initialization function is used, then the instance structure can
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    To place an instance structure into a const data section, the instance structure
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    The code below statically initializes each of the 3 different data type filter i
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   <pre>
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       arm_fir_interpolate_instance_f32 S = {L, phaseLength, pCoeffs, pState};
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       arm_fir_interpolate_instance_q31 S = {L, phaseLength, pCoeffs, pState};
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       arm_fir_interpolate_instance_q15 S = {L, phaseLength, pCoeffs, pState};
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   </pre>
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    where <code>L</code> is the interpolation factor; <code>phaseLength=numTaps/L</c
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    length of each of the shorter FIR filters used internally,
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>pCoeffs</code> is the address of the coefficient buffer;
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    <code>pState</code> is the address of the state buffer.
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Be sure to set the values in the state buffer to zeros when doing static initial
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @par           Fixed-Point Behavior
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Care must be taken when using the fixed-point versions of the FIR interpolate fi
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    In particular, the overflow and saturation behavior of the accumulator used in e
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                    Refer to the function specific documentation below for usage guidelines.
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @addtogroup FIR_Interpolate
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @{
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /**
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @brief         Processing function for floating-point FIR interpolator.
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @param[in]     S          points to an instance of the floating-point FIR interpolator structure
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @param[in]     pSrc       points to the block of input data
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @param[out]    pDst       points to the block of output data
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @param[in]     blockSize  number of samples to process
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   @return        none
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #include "CMSIS_DSP/Include/arm_helium_utils.h"
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** static void arm_fir_interpolate2_f32_mve(
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const arm_fir_interpolate_instance_f32 * S,
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t * pSrc,
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t * pDst,
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blockSize)
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** {
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     float32_t *pState = S->pState;  /* State pointer */
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     const float32_t *pCoeffs = S->pCoeffs;    /* Coefficient pointer */
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     float32_t *pStateCurnt;     /* Points to the current sample of the state */
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     const float32_t *ptr1, *ptr2;     /* Temporary pointers for state and coefficient buffers */
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32_t  tapCnt;
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32_t  blkCnt;           /* Loop counters */
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint16_t  phaseLen = S->phaseLength;    /* Length of each polyphase filter component */
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32_t  strides[4] = { 0, 1 * 2, 2 * 2, 3 * 2 };
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32x4_t vec_strides0 = *(uint32x4_t *) strides;
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32x4_t vec_strides1 = vec_strides0 + 1;
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     f32x4_t acc0, acc1;
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * S->pState buffer contains previous frame (phaseLen - 1) samples
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * pStateCurnt points to the location where the new input data should be written
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt = S->pState + (phaseLen - 1U);
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * Total number of intput samples
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt = blockSize;
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * Loop over the blockSize.
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (blkCnt > 0U)
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Copy new input sample into the state buffer
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         *pStateCurnt++ = *pSrc++;
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Initialize state pointer
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr1 = pState;
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 = vdupq_n_f32(0.0f);
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 = vdupq_n_f32(0.0f);
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Initialize coefficient pointer
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 = pCoeffs;
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt = phaseLen >> 2;
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         while (tapCnt > 0U)
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         {
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             f32x4_t vecCoef, vecState;
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             vecState = vldrwq_f32(ptr1);
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             vecCoef = vldrwq_gather_shifted_offset_f32(ptr2, vec_strides1);
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             acc1 = vfmaq_f32(acc1, vecState, vecCoef);
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             vecCoef = vldrwq_gather_shifted_offset_f32(ptr2, vec_strides0);
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             acc0 = vfmaq_f32(acc0, vecState, vecCoef);
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             ptr2 += 4 * 2;
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             ptr1 += 4;
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             /*
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              * Decrement the loop counter
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              */
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             tapCnt--;
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         }
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt = phaseLen & 3;
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         if (tapCnt > 0U)
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         {
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             mve_pred16_t p0 = vctp32q(tapCnt);
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             f32x4_t vecCoef, vecState;
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             vecState = vldrwq_z_f32(ptr1, p0);
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             vecCoef = vldrwq_gather_shifted_offset_z_f32(ptr2, vec_strides1, p0);
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             acc1 = vfmaq_f32(acc1, vecState, vecCoef);
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             vecCoef = vldrwq_gather_shifted_offset_z_f32(ptr2, vec_strides0, p0);
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             acc0 = vfmaq_f32(acc0, vecState, vecCoef);
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         }
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         *pDst++ = vecAddAcrossF32Mve(acc1);
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         *pDst++ = vecAddAcrossF32Mve(acc0);
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Advance the state pointer by 1
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * * to process the next group of interpolation factor number samples
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         pState = pState + 1;
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Decrement the loop counter
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         blkCnt--;
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * Processing is complete.
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * ** Now copy the last phaseLen - 1 samples to the start of the state buffer.
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * ** This prepares the state buffer for the next function call.
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * Points to the start of the state buffer
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt = S->pState;
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt = (phaseLen - 1U) >> 2;
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (blkCnt > 0U)
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         vst1q(pStateCurnt, vldrwq_f32(pState));
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         pState += 4;
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         pStateCurnt += 4;
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         blkCnt--;
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt = (phaseLen - 1U) & 3;
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     if (blkCnt > 0U)
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         mve_pred16_t p0 = vctp32q(blkCnt);
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         vstrwq_p_f32(pStateCurnt, vldrwq_f32(pState), p0);
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** }
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 259:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** void arm_fir_interpolate_f32(
 260:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const arm_fir_interpolate_instance_f32 * S,
 261:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t * pSrc,
 262:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t * pDst,
 263:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blockSize)
 264:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** {
 265:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     float32_t *pState = S->pState;  /* State pointer */
 266:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     const float32_t *pCoeffs = S->pCoeffs;    /* Coefficient pointer */
 267:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     float32_t *pStateCurnt;     /* Points to the current sample of the state */
 268:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     const float32_t *ptr1, *ptr2;     /* Temporary pointers for state and coefficient buffers */
 269:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32_t  tapCnt;
 270:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32_t  i, blkCnt;        /* Loop counters */
 271:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint16_t  phaseLen = S->phaseLength;    /* Length of each polyphase filter component */
 272:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32_t  strides[4] = { 0, 1 * S->L, 2 * S->L, 3 * S->L };
 273:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32_t  stridesM[4] = { 4, 3, 2, 1 };
 274:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32x4_t vec_stridesM = *(uint32x4_t *) stridesM;
 275:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     uint32x4_t vec_strides = *(uint32x4_t *) strides;
 276:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     f32x4_t acc;
 277:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 279:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     if ( S->L == 2 ) {
 280:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         arm_fir_interpolate2_f32_mve(S, pSrc, pDst, blockSize);
 281:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         return;
 282:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 283:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 284:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 285:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * S->pState buffer contains previous frame (phaseLen - 1) samples
 286:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 287:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 288:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * pStateCurnt points to the location where the new input data should be written
 289:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 290:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt = S->pState + (phaseLen - 1U);
 291:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 292:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * Total number of intput samples
 293:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 294:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt = blockSize;
 295:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 296:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * Loop over the blockSize.
 297:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 298:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (blkCnt > 0U)
 299:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 300:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 301:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Copy new input sample into the state buffer
 302:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 303:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         *pStateCurnt++ = *pSrc++;
 304:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 305:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Loop over the Interpolation factor.
 306:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 307:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         i = S->L;
 308:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         while (i > 0U)
 309:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         {
 310:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             /*
 311:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              * Initialize state pointer
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              */
 313:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             ptr1 = pState;
 314:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             if (i >= 4)
 315:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             {
 316:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 float32_t state0, state1, state2, state3;
 317:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 acc = vdupq_n_f32(0.0f);
 318:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 /*
 319:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                  * Initialize coefficient pointer
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                  */
 321:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 ptr2 = pCoeffs + (i - 1U) - 4;
 322:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 tapCnt = phaseLen >> 2;
 323:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 while (tapCnt > 0U)
 324:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 {
 325:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     f32x4_t vecCoef;
 326:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     const float32_t *pCoef = ptr2;
 327:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 328:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     state0 = ptr1[0];
 329:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     state1 = ptr1[1];
 330:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     state2 = ptr1[2];
 331:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     state3 = ptr1[3];
 332:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     ptr1 += 4;
 333:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 334:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_f32(pCoef, vec_stridesM);
 335:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     pCoef += S->L;
 336:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_n_f32(acc, vecCoef, state0);
 337:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 338:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_f32(pCoef, vec_stridesM);
 339:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     pCoef += S->L;
 340:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_n_f32(acc, vecCoef, state1);
 341:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 342:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_f32(pCoef, vec_stridesM);
 343:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     pCoef += S->L;
 344:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_n_f32(acc, vecCoef, state2);
 345:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 346:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_f32(pCoef, vec_stridesM);
 347:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     pCoef += S->L;
 348:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_n_f32(acc, vecCoef, state3);
 349:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 350:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     ptr2 = ptr2 + 4 * S->L;
 351:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     /*
 352:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                      * Decrement the loop counter
 353:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                      */
 354:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     tapCnt--;
 355:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 }
 356:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 357:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 tapCnt = phaseLen & 3;
 358:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 if (tapCnt > 0U)
 359:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 {
 360:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     mve_pred16_t p0 = vctp32q(tapCnt);
 361:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     f32x4_t vecCoef;
 362:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     const float32_t *pCoef = ptr2;
 363:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 364:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     state0 = ptr1[0];
 365:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     state1 = ptr1[1];
 366:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     state2 = ptr1[2];
 367:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     state3 = ptr1[3];
 368:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 369:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_z_f32(pCoef, vec_stridesM, p0);
 370:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     pCoef += S->L;
 371:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_n_f32(acc, vecCoef, state0);
 372:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 373:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_z_f32(pCoef, vec_stridesM, p0);
 374:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     pCoef += S->L;
 375:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_n_f32(acc, vecCoef, state1);
 376:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 377:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_z_f32(pCoef, vec_stridesM, p0);
 378:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     pCoef += S->L;
 379:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_n_f32(acc, vecCoef, state2);
 380:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 381:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_z_f32(pCoef, vec_stridesM, p0);
 382:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     pCoef += S->L;
 383:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_n_f32(acc, vecCoef, state3);
 384:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 }
 385:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 386:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 vst1q(pDst,  acc);
 387:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 pDst += 4;
 388:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 i -= 4;
 389:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             }
 390:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             else
 391:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             {
 392:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 acc = vdupq_n_f32(0.0f);
 393:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 /*
 394:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                  * Initialize coefficient pointer
 395:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                  */
 396:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 ptr2 = pCoeffs + (i - 1U);
 397:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 398:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 tapCnt = phaseLen >> 2;
 399:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 while (tapCnt > 0U)
 400:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 {
 401:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     f32x4_t vecCoef, vecState;
 402:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 403:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecState = vldrwq_f32(ptr1);
 404:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     ptr1 += 4;
 405:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 406:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_f32(ptr2, vec_strides);
 407:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     ptr2 += 4 * S->L;
 408:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_f32(acc, vecState, vecCoef);
 409:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     /*
 410:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                      * Decrement the loop counter
 411:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                      */
 412:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     tapCnt--;
 413:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 }
 414:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 415:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 tapCnt = phaseLen & 3;
 416:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 if (tapCnt > 0U)
 417:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 {
 418:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     mve_pred16_t p0 = vctp32q(tapCnt);
 419:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     f32x4_t vecCoef, vecState;
 420:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 421:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecState = vldrwq_z_f32(ptr1, p0);
 422:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 423:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     vecCoef = vldrwq_gather_shifted_offset_z_f32(ptr2, vec_strides, p0);
 424:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                     acc = vfmaq_f32(acc, vecState, vecCoef);
 425:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 }
 426:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 *pDst++ = vecAddAcrossF32Mve(acc);
 427:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 /*
 428:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                  * Decrement the loop counter
 429:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                  */
 430:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****                 i--;
 431:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****             }
 432:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         }
 433:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 434:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 435:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Advance the state pointer by 1
 436:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * * to process the next group of interpolation factor number samples
 437:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 438:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         pState = pState + 1;
 439:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /*
 440:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Decrement the loop counter
 441:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          */
 442:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         blkCnt--;
 443:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 444:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 445:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 446:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * Processing is complete.
 447:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * ** Now copy the last phaseLen - 1 samples to the start of the state buffer.
 448:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * ** This prepares the state buffer for the next function call.
 449:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 450:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 451:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /*
 452:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * Points to the start of the state buffer
 453:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      */
 454:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt = S->pState;
 455:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt = (phaseLen - 1U) >> 2;
 456:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (blkCnt > 0U)
 457:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 458:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         vst1q(pStateCurnt, vldrwq_f32(pState));
 459:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         pState += 4;
 460:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         pStateCurnt += 4;
 461:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         blkCnt--;
 462:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 463:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt = (phaseLen - 1U) & 3;
 464:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     if (blkCnt > 0U)
 465:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 466:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         mve_pred16_t p0 = vctp32q(blkCnt);
 467:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         vstrwq_p_f32(pStateCurnt, vldrwq_f32(pState), p0);
 468:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 469:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** }
 470:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 471:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
 472:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined(ARM_MATH_NEON)
 473:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** void arm_fir_interpolate_f32(
 474:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const arm_fir_interpolate_instance_f32 * S,
 475:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t * pSrc,
 476:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t * pDst,
 477:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blockSize)
 478:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** {
 479:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pState = S->pState;                 /* State pointer */
 480:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *pCoeffs = S->pCoeffs;         /* Coefficient pointer */
 481:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pStateCurnt;                        /* Points to the current sample of the state */
 482:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *ptr1;                               /* Temporary pointers for state buffer */
 483:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *ptr2;                         /* Temporary pointers for coefficient buffer */
 484:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t sum0;                                /* Accumulators */
 485:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t c0;                              /* Temporary variables to hold state and coefficient v
 486:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t i, blkCnt, j;                         /* Loop counters */
 487:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint16_t phaseLen = S->phaseLength, tapCnt;    /* Length of each polyphase filter component */
 488:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blkCntN4;
 489:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t c1, c2, c3;
 490:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 491:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32x4_t sum0v;
 492:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32x4_t accV0,accV1;
 493:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32x4_t x0v,x1v,x2v,xa,xb;
 494:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32x2_t tempV;
 495:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 496:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* S->pState buffer contains previous frame (phaseLen - 1) samples */
 497:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* pStateCurnt points to the location where the new input data should be written */
 498:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCurnt = S->pState + (phaseLen - 1U);
 499:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 500:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Initialise  blkCnt */
 501:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize >> 3;
 502:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCntN4 = blockSize & 7;
 503:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 504:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling */
 505:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0U)
 506:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 507:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input samples into the state buffer */
 508:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     sum0v = vld1q_f32(pSrc);
 509:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     vst1q_f32(pStateCurnt,sum0v);
 510:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pSrc += 4;
 511:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt += 4;
 512:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 513:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     sum0v = vld1q_f32(pSrc);
 514:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     vst1q_f32(pStateCurnt,sum0v);
 515:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pSrc += 4;
 516:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt += 4;
 517:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 518:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 519:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1U;
 520:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 521:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 522:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = (S->L);
 523:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 524:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
 525:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 526:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 527:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       accV0 = vdupq_n_f32(0.0);
 528:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       accV1 = vdupq_n_f32(0.0);
 529:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 530:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 531:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 532:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 533:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 534:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 535:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 536:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.
 537:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****        ** Repeat until we've computed numTaps-(4*S->L) coefficients. */
 538:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2U;
 539:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      
 540:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x0v = vld1q_f32(ptr1);
 541:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x1v = vld1q_f32(ptr1 + 4);
 542:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   
 543:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 544:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 545:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input samples */
 546:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2v = vld1q_f32(ptr1 + 8);
 547:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 548:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficients */
 549:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 550:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 551:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 552:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV0 = vmlaq_n_f32(accV0,x0v,c0);
 553:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV1 = vmlaq_n_f32(accV1,x1v,c0);
 554:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****        
 555:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficients, inputs and perform multiply-accumulate */
 556:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c1 = *(ptr2 + S->L);
 557:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   
 558:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xa = vextq_f32(x0v,x1v,1);
 559:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xb = vextq_f32(x1v,x2v,1);
 560:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 561:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV0 = vmlaq_n_f32(accV0,xa,c1);
 562:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV1 = vmlaq_n_f32(accV1,xb,c1);
 563:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 564:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficients, inputs and perform multiply-accumulate */
 565:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c2 = *(ptr2 + S->L * 2);
 566:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   
 567:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xa = vextq_f32(x0v,x1v,2);
 568:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xb = vextq_f32(x1v,x2v,2);
 569:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         
 570:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV0 = vmlaq_n_f32(accV0,xa,c2);
 571:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV1 = vmlaq_n_f32(accV1,xb,c2);
 572:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 573:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficients, inputs and perform multiply-accumulate */
 574:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c3 = *(ptr2 + S->L * 3);
 575:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 576:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xa = vextq_f32(x0v,x1v,3);
 577:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         xb = vextq_f32(x1v,x2v,3);
 578:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         
 579:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV0 = vmlaq_n_f32(accV0,xa,c3);
 580:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         accV1 = vmlaq_n_f32(accV1,xb,c3);
 581:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 582:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 583:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 584:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 585:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += 4 * S->L;
 586:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr1 += 4;
 587:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0v = x1v;
 588:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v = x2v;
 589:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 590:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 591:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 592:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 593:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 594:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 595:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4U;
 596:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 597:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x2v = vld1q_f32(ptr1 + 8);
 598:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 599:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       switch (tapCnt)
 600:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 601:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         case 3:
 602:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 603:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,x0v,c0);
 604:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,x1v,c0);
 605:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 606:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 607:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 608:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 609:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xa = vextq_f32(x0v,x1v,1);
 610:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xb = vextq_f32(x1v,x2v,1);
 611:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 612:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,xa,c0);
 613:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,xb,c0);
 614:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 615:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 616:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 617:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 618:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xa = vextq_f32(x0v,x1v,2);
 619:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xb = vextq_f32(x1v,x2v,2);
 620:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              
 621:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,xa,c0);
 622:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,xb,c0);
 623:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 624:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 625:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         break;
 626:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 627:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         case 2:
 628:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 629:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,x0v,c0);
 630:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,x1v,c0);
 631:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 632:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 633:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 634:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 635:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xa = vextq_f32(x0v,x1v,1);
 636:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              xb = vextq_f32(x1v,x2v,1);
 637:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              
 638:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,xa,c0);
 639:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,xb,c0);
 640:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 641:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 642:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         break;
 643:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 644:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         case 1:
 645:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              c0 = *(ptr2);
 646:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV0 = vmlaq_n_f32(accV0,x0v,c0);
 647:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              accV1 = vmlaq_n_f32(accV1,x1v,c0);
 648:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****              ptr2 += S->L;
 649:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 650:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         break;
 651:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 652:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         default:
 653:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         break;
 654:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         
 655:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 656:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 657:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 658:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst = vgetq_lane_f32(accV0, 0);
 659:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + S->L) = vgetq_lane_f32(accV0, 1);
 660:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 2 * S->L) = vgetq_lane_f32(accV0, 2);
 661:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 3 * S->L) = vgetq_lane_f32(accV0, 3);
 662:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 663:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 4 * S->L) = vgetq_lane_f32(accV1, 0);
 664:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 5 * S->L) = vgetq_lane_f32(accV1, 1);
 665:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 6 * S->L) = vgetq_lane_f32(accV1, 2);
 666:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 7 * S->L) = vgetq_lane_f32(accV1, 3);
 667:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 668:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       pDst++;
 669:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 670:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 671:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 672:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 673:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 674:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 675:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 676:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 677:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 678:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 679:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 8;
 680:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 681:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pDst += S->L * 7;
 682:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 683:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 684:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
 685:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 686:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 687:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 688:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** No loop unrolling is used. */
 689:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 690:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCntN4 > 0U)
 691:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 692:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 693:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
 694:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 695:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 696:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1U;
 697:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 698:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 699:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = S->L;
 700:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 701:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
 702:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 703:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 704:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0v = vdupq_n_f32(0.0);
 705:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 706:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 707:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 708:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 709:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 710:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 711:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 712:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.
 713:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****        ** Repeat until we've computed numTaps-(4*S->L) coefficients. */
 714:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2U;
 715:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 716:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 717:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 718:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 719:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v = vsetq_lane_f32(*(ptr2),x1v,0);
 720:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 721:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 722:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 723:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 724:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 725:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 726:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 727:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0v = vld1q_f32(ptr1);
 728:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr1 += 4;
 729:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 730:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 731:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v = vsetq_lane_f32(*(ptr2),x1v,1);
 732:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 733:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 734:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 735:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 736:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 737:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v = vsetq_lane_f32(*(ptr2),x1v,2);
 738:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 739:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 740:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 741:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 742:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 743:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1v = vsetq_lane_f32(*(ptr2),x1v,3);
 744:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 745:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 746:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 747:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 748:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0v = vmlaq_f32(sum0v,x0v,x1v);
 749:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****        
 750:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 751:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 752:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 753:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 754:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tempV = vpadd_f32(vget_low_f32(sum0v),vget_high_f32(sum0v));
 755:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0 = vget_lane_f32(tempV, 0) + vget_lane_f32(tempV, 1);
 756:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 757:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 758:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4U;
 759:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 760:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 761:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 762:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 763:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *(ptr1++) * (*ptr2);
 764:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 765:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 766:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 767:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 768:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 769:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 770:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 771:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 772:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 773:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst++ = sum0;
 774:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 775:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 776:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 777:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 778:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 779:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 780:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 781:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 782:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
 783:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 784:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 1;
 785:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 786:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 787:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCntN4--;
 788:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 789:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 790:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Processing is complete.
 791:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** Now copy the last phaseLen - 1 samples to the satrt of the state buffer.
 792:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** This prepares the state buffer for the next function call. */
 793:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 794:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Points to the start of the state buffer */
 795:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCurnt = S->pState;
 796:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 797:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1U) >> 2U;
 798:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 799:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Copy data */
 800:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
 801:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 802:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     sum0v = vld1q_f32(pState);
 803:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     vst1q_f32(pStateCurnt,sum0v);
 804:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState += 4;
 805:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pStateCurnt += 4;
 806:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 807:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 808:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 809:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 810:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 811:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1U) % 0x04U;
 812:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 813:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* copy data */
 814:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
 815:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 816:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 817:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 818:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 819:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 820:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 821:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 822:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** }
 823:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
 824:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 825:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** void arm_fir_interpolate_f32(
 826:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const arm_fir_interpolate_instance_f32 * S,
 827:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t * pSrc,
 828:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t * pDst,
 829:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t blockSize)
 830:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** {
  28              	 .loc 1 830 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 91B0     	 sub sp,sp,#68
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 72
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
 831:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if (1)
 832:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** //#if !defined(ARM_MATH_CM0_FAMILY)
 833:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 834:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *pState = S->pState;                 /* State pointer */
  47              	 .loc 1 834 0
  48 000e FB68     	 ldr r3,[r7,#12]
  49 0010 9B68     	 ldr r3,[r3,#8]
  50 0012 FB63     	 str r3,[r7,#60]
 835:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
  51              	 .loc 1 835 0
  52 0014 FB68     	 ldr r3,[r7,#12]
  53 0016 5B68     	 ldr r3,[r3,#4]
  54 0018 BB61     	 str r3,[r7,#24]
 836:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *pStateCur;                          /* Points to the current sample of the state
 837:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *ptr1;                               /* Temporary pointer for state buffer */
 838:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *ptr2;                               /* Temporary pointer for coefficient buffer 
 839:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t sum0;                                /* Accumulators */
 840:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t i, blkCnt, tapCnt;                    /* Loop counters */
 841:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t phaseLen = S->phaseLength;            /* Length of each polyphase filter component
  55              	 .loc 1 841 0
  56 001a FB68     	 ldr r3,[r7,#12]
  57 001c 5B88     	 ldrh r3,[r3,#2]
  58 001e 7B61     	 str r3,[r7,#20]
 842:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t j;
 843:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 844:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 845:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t acc0, acc1, acc2, acc3;
 846:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t x0, x1, x2, x3;
 847:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t c0, c1, c2, c3;
 848:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif
 849:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 850:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* S->pState buffer contains previous frame (phaseLen - 1) samples */
 851:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* pStateCur points to the location where the new input data should be written */
 852:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCur = S->pState + (phaseLen - 1U);
  59              	 .loc 1 852 0
  60 0020 FB68     	 ldr r3,[r7,#12]
  61 0022 9A68     	 ldr r2,[r3,#8]
  62 0024 7B69     	 ldr r3,[r7,#20]
  63 0026 03F18043 	 add r3,r3,#1073741824
  64 002a 013B     	 subs r3,r3,#1
  65 002c 9B00     	 lsls r3,r3,#2
  66 002e 1344     	 add r3,r3,r2
  67 0030 BB63     	 str r3,[r7,#56]
 853:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 854:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 855:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 856:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 857:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize >> 2U;
 858:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 859:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0U)
 860:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 861:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 862:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 863:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 864:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 865:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
 866:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 867:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 868:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1U;
 869:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 870:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 871:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = (S->L);
 872:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 873:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
 874:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 875:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 876:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc0 = 0.0f;
 877:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc1 = 0.0f;
 878:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc2 = 0.0f;
 879:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc3 = 0.0f;
 880:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 881:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 882:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 883:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 884:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 885:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 886:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 887:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.
 888:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          Repeat until we've computed numTaps-(4*S->L) coefficients. */
 889:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2U;
 890:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 891:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x0 = *(ptr1++);
 892:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x1 = *(ptr1++);
 893:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       x2 = *(ptr1++);
 894:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 895:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 896:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 897:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 898:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x3 = *(ptr1++);
 899:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 900:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 901:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 902:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 903:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 904:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x0 * c0;
 905:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x1 * c0;
 906:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x2 * c0;
 907:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x3 * c0;
 908:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 909:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 910:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c1 = *(ptr2 + S->L);
 911:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 912:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 913:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 914:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 915:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 916:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x1 * c1;
 917:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x2 * c1;
 918:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x3 * c1;
 919:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x0 * c1;
 920:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 921:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 922:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c2 = *(ptr2 + S->L * 2);
 923:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 924:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 925:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1 = *(ptr1++);
 926:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 927:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 928:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x2 * c2;
 929:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x3 * c2;
 930:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x0 * c2;
 931:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x1 * c2;
 932:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 933:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 934:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c3 = *(ptr2 + S->L * 3);
 935:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 936:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 937:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2 = *(ptr1++);
 938:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 939:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 940:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x3 * c3;
 941:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x0 * c3;
 942:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x1 * c3;
 943:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x2 * c3;
 944:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 945:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 946:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
 947:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
 948:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 949:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += 4 * S->L;
 950:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 951:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement loop counter */
 952:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 953:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 954:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 955:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 956:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4U;
 957:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 958:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 959:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 960:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 961:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x3 = *(ptr1++);
 962:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 963:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 964:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 965:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 966:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 967:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x0 * c0;
 968:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x1 * c0;
 969:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x2 * c0;
 970:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x3 * c0;
 971:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 972:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 973:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 974:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 975:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* update states for next sample processing */
 976:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = x1;
 977:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1 = x2;
 978:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2 = x3;
 979:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 980:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement loop counter */
 981:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 982:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 983:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 984:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 985:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst           ) = acc0;
 986:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst +     S->L) = acc1;
 987:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 2 * S->L) = acc2;
 988:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 3 * S->L) = acc3;
 989:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 990:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       pDst++;
 991:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 992:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 993:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 994:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 995:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement loop counter */
 996:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 997:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 998:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 999:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
1000:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
1001:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 4;
1002:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1003:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pDst += S->L * 3;
1004:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1005:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
1006:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
1007:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
1008:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1009:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling: Compute remaining outputs */
1010:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize % 0x4U;
1011:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1012:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
1013:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1014:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Initialize blkCnt with number of samples */
1015:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize;
  68              	 .loc 1 1015 0
  69 0032 3B68     	 ldr r3,[r7]
  70 0034 7B62     	 str r3,[r7,#36]
1016:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1017:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
1018:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1019:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0U)
  71              	 .loc 1 1019 0
  72 0036 4EE0     	 b .L2
  73              	.L7:
1020:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
1021:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
1022:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
  74              	 .loc 1 1022 0
  75 0038 BB6B     	 ldr r3,[r7,#56]
  76 003a 1A1D     	 adds r2,r3,#4
  77 003c BA63     	 str r2,[r7,#56]
  78 003e BA68     	 ldr r2,[r7,#8]
  79 0040 111D     	 adds r1,r2,#4
  80 0042 B960     	 str r1,[r7,#8]
  81 0044 1268     	 ldr r2,[r2]
  82 0046 1A60     	 str r2,[r3]
1023:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1024:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
1025:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1U;
  83              	 .loc 1 1025 0
  84 0048 0123     	 movs r3,#1
  85 004a FB61     	 str r3,[r7,#28]
1026:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1027:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
1028:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = S->L;
  86              	 .loc 1 1028 0
  87 004c FB68     	 ldr r3,[r7,#12]
  88 004e 1B78     	 ldrb r3,[r3]
  89 0050 BB62     	 str r3,[r7,#40]
1029:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1030:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
  90              	 .loc 1 1030 0
  91 0052 37E0     	 b .L3
  92              	.L6:
1031:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
1032:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
1033:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0 = 0.0f;
  93              	 .loc 1 1033 0
  94 0054 4FF00003 	 mov r3,#0
  95 0058 FB62     	 str r3,[r7,#44]
1034:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1035:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
1036:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
  96              	 .loc 1 1036 0
  97 005a FB6B     	 ldr r3,[r7,#60]
  98 005c 7B63     	 str r3,[r7,#52]
1037:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1038:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
1039:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
  99              	 .loc 1 1039 0
 100 005e FB68     	 ldr r3,[r7,#12]
 101 0060 1B78     	 ldrb r3,[r3]
 102 0062 1A46     	 mov r2,r3
 103 0064 FB69     	 ldr r3,[r7,#28]
 104 0066 D31A     	 subs r3,r2,r3
 105 0068 9B00     	 lsls r3,r3,#2
 106 006a BA69     	 ldr r2,[r7,#24]
 107 006c 1344     	 add r3,r3,r2
 108 006e 3B63     	 str r3,[r7,#48]
1040:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1041:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length.
1042:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          Repeat until we've computed numTaps-(4*S->L) coefficients. */
1043:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1044:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
1045:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1046:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      /* Loop unrolling: Compute 4 outputs at a time */
1047:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2U;
1048:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1049:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
1050:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
1051:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
1052:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
1053:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1054:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
1055:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
1056:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
1057:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
1058:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1059:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
1060:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
1061:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1062:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
1063:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
1064:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1065:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
1066:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
1067:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1068:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement loop counter */
1069:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
1070:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
1071:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1072:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop unrolling: Compute remaining outputs */
1073:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4U;
1074:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1075:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
1076:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1077:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize tapCnt with number of samples */
1078:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen;
 109              	 .loc 1 1078 0
 110 0070 7B69     	 ldr r3,[r7,#20]
 111 0072 3B62     	 str r3,[r7,#32]
1079:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1080:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
1081:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1082:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
 112              	 .loc 1 1082 0
 113 0074 18E0     	 b .L4
 114              	.L5:
1083:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
1084:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
1085:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
 115              	 .loc 1 1085 0
 116 0076 7B6B     	 ldr r3,[r7,#52]
 117 0078 1A1D     	 adds r2,r3,#4
 118 007a 7A63     	 str r2,[r7,#52]
 119 007c 93ED007A 	 flds s14,[r3]
 120 0080 3B6B     	 ldr r3,[r7,#48]
 121 0082 D3ED007A 	 flds s15,[r3]
 122 0086 67EE277A 	 fmuls s15,s14,s15
 123 008a 97ED0B7A 	 flds s14,[r7,#44]
 124 008e 77EE277A 	 fadds s15,s14,s15
 125 0092 C7ED0B7A 	 fsts s15,[r7,#44]
1086:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1087:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.
1088:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,
1089:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
1090:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 126              	 .loc 1 1090 0
 127 0096 FB68     	 ldr r3,[r7,#12]
 128 0098 1B78     	 ldrb r3,[r3]
 129 009a 9B00     	 lsls r3,r3,#2
 130 009c 3A6B     	 ldr r2,[r7,#48]
 131 009e 1344     	 add r3,r3,r2
 132 00a0 3B63     	 str r3,[r7,#48]
1091:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1092:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement loop counter */
1093:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 133              	 .loc 1 1093 0
 134 00a2 3B6A     	 ldr r3,[r7,#32]
 135 00a4 013B     	 subs r3,r3,#1
 136 00a6 3B62     	 str r3,[r7,#32]
 137              	.L4:
1082:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 138              	 .loc 1 1082 0
 139 00a8 3B6A     	 ldr r3,[r7,#32]
 140 00aa 002B     	 cmp r3,#0
 141 00ac E3D1     	 bne .L5
1094:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
1095:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1096:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
1097:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst++ = sum0;
 142              	 .loc 1 1097 0
 143 00ae 7B68     	 ldr r3,[r7,#4]
 144 00b0 1A1D     	 adds r2,r3,#4
 145 00b2 7A60     	 str r2,[r7,#4]
 146 00b4 FA6A     	 ldr r2,[r7,#44]
 147 00b6 1A60     	 str r2,[r3]
1098:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1099:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
1100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 148              	 .loc 1 1100 0
 149 00b8 FB69     	 ldr r3,[r7,#28]
 150 00ba 0133     	 adds r3,r3,#1
 151 00bc FB61     	 str r3,[r7,#28]
1101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
1103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 152              	 .loc 1 1103 0
 153 00be BB6A     	 ldr r3,[r7,#40]
 154 00c0 013B     	 subs r3,r3,#1
 155 00c2 BB62     	 str r3,[r7,#40]
 156              	.L3:
1030:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 157              	 .loc 1 1030 0
 158 00c4 BB6A     	 ldr r3,[r7,#40]
 159 00c6 002B     	 cmp r3,#0
 160 00c8 C4D1     	 bne .L6
1104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
1105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
1107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
1108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 1;
 161              	 .loc 1 1108 0
 162 00ca FB6B     	 ldr r3,[r7,#60]
 163 00cc 0433     	 adds r3,r3,#4
 164 00ce FB63     	 str r3,[r7,#60]
1109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
1111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
 165              	 .loc 1 1111 0
 166 00d0 7B6A     	 ldr r3,[r7,#36]
 167 00d2 013B     	 subs r3,r3,#1
 168 00d4 7B62     	 str r3,[r7,#36]
 169              	.L2:
1019:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 170              	 .loc 1 1019 0
 171 00d6 7B6A     	 ldr r3,[r7,#36]
 172 00d8 002B     	 cmp r3,#0
 173 00da ADD1     	 bne .L7
1112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
1113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Processing is complete.
1115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      Now copy the last phaseLen - 1 samples to the satrt of the state buffer.
1116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      This prepares the state buffer for the next function call. */
1117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Points to the start of the state buffer */
1119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCur = S->pState;
 174              	 .loc 1 1119 0
 175 00dc FB68     	 ldr r3,[r7,#12]
 176 00de 9B68     	 ldr r3,[r3,#8]
 177 00e0 BB63     	 str r3,[r7,#56]
1120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
1122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
1124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1U) >> 2U;
1125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* copy data */
1127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
1128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
1129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
1130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
1131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
1132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
1133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
1135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
1136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
1137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop unrolling: Compute remaining outputs */
1139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1U) % 0x04U;
1140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
1142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Initialize tapCnt with number of samples */
1144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt = (phaseLen - 1U);
 178              	 .loc 1 1144 0
 179 00e2 7B69     	 ldr r3,[r7,#20]
 180 00e4 013B     	 subs r3,r3,#1
 181 00e6 3B62     	 str r3,[r7,#32]
1145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
1147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Copy data */
1149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
 182              	 .loc 1 1149 0
 183 00e8 0AE0     	 b .L8
 184              	.L9:
1150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
1151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
 185              	 .loc 1 1151 0
 186 00ea BB6B     	 ldr r3,[r7,#56]
 187 00ec 1A1D     	 adds r2,r3,#4
 188 00ee BA63     	 str r2,[r7,#56]
 189 00f0 FA6B     	 ldr r2,[r7,#60]
 190 00f2 111D     	 adds r1,r2,#4
 191 00f4 F963     	 str r1,[r7,#60]
 192 00f6 1268     	 ldr r2,[r2]
 193 00f8 1A60     	 str r2,[r3]
1152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
1154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 194              	 .loc 1 1154 0
 195 00fa 3B6A     	 ldr r3,[r7,#32]
 196 00fc 013B     	 subs r3,r3,#1
 197 00fe 3B62     	 str r3,[r7,#32]
 198              	.L8:
1149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 199              	 .loc 1 1149 0
 200 0100 3B6A     	 ldr r3,[r7,#32]
 201 0102 002B     	 cmp r3,#0
 202 0104 F1D1     	 bne .L9
1155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
1156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #else
1158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** /* alternate version for CM0_FAMILY */
1159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *pState = S->pState;                 /* State pointer */
1161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
1162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *pStateCur;                        /* Points to the current sample of the state *
1163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t *ptr1;                               /* Temporary pointer for state buffer */
1164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   const float32_t *ptr2;                               /* Temporary pointer for coefficient buffer 
1165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         float32_t sum0;                                /* Accumulators */
1166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t i, blkCnt, tapCnt;                    /* Loop counters */
1167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         uint32_t phaseLen = S->phaseLength;            /* Length of each polyphase filter component
1168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* S->pState buffer contains previous frame (phaseLen - 1) samples */
1170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* pStateCur points to the location where the new input data should be written */
1171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCur = S->pState + (phaseLen - 1U);
1172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Total number of intput samples */
1174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize;
1175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Loop over the blockSize. */
1177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (blkCnt > 0U)
1178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
1179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
1180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pSrc++;
1181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
1183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = S->L;
1184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     while (i > 0U)
1186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
1187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
1188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0 = 0.0f;
1189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
1191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
1192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
1194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (i - 1U);
1195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length */
1197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen;
1198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       while (tapCnt > 0U)
1200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
1201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
1202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *ptr1++ * *ptr2;
1203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
1205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
1206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
1208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
1209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
1210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
1212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst++ = sum0;
1213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement loop counter */
1215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
1216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
1217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1
1219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
1220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 1;
1221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
1223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
1224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
1225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Processing is complete.
1227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** Now copy the last phaseLen - 1 samples to the start of the state buffer.
1228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** This prepares the state buffer for the next function call. */
1229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Points to the start of the state buffer */
1231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCur = S->pState;
1232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = phaseLen - 1U;
1234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Copy data */
1236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   while (tapCnt > 0U)
1237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
1238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCur++ = *pState++;
1239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement loop counter */
1241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
1242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
1243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** #endif /* #if !defined(ARM_MATH_CM0_FAMILY) */
1245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** 
1246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_interpolate_f32.c **** }
 203              	 .loc 1 1246 0
 204 0106 4437     	 adds r7,r7,#68
 205              	.LCFI3:
 206              	 .cfi_def_cfa_offset 4
 207 0108 BD46     	 mov sp,r7
 208              	.LCFI4:
 209              	 .cfi_def_cfa_register 13
 210              	 
 211 010a 5DF8047B 	 ldr r7,[sp],#4
 212              	.LCFI5:
 213              	 .cfi_restore 7
 214              	 .cfi_def_cfa_offset 0
 215 010e 7047     	 bx lr
 216              	 .cfi_endproc
 217              	.LFE149:
 219              	 .text
 220              	.Letext0:
 221              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 222              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 223              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 224              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_interpolate_f32.c
    {standard input}:20     .text.arm_fir_interpolate_f32:00000000 $t
    {standard input}:25     .text.arm_fir_interpolate_f32:00000000 arm_fir_interpolate_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
