   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_fir_fast_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_fir_fast_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_fir_fast_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_fir_fast_q31:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * Title:        arm_fir_fast_q31.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * Description:  Processing function for the Q31 Fast FIR filter
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @addtogroup FIR
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @brief         Processing function for the Q31 FIR filter (fast version).
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @param[in]     S          points to an instance of the Q31 structure
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @param[in]     pSrc       points to the block of input data
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @param[out]    pDst       points to the block of output data
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @param[in]     blockSize  number of samples to process
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @return        none
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   @par           Scaling and Overflow Behavior
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****                    This function is optimized for speed at the expense of fixed-point precision and
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****                    The result of each 1.31 x 1.31 multiplication is truncated to 2.30 format.
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****                    These intermediate results are added to a 2.30 accumulator.
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****                    Finally, the accumulator is saturated and converted to a 1.31 result.
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****                    The fast version has the same overflow behavior as the standard version and prov
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****                    In order to avoid overflows completely the input signal must be scaled down by l
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  @remark
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****                    Refer to \ref arm_fir_q31() for a slower implementation of this function which u
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****                    Use function \ref arm_fir_init_q31() to initialize the filter structure.
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****  */
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** IAR_ONLY_LOW_OPTIMIZATION_ENTER
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** void arm_fir_fast_q31(
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   const arm_fir_instance_q31 * S,
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   const q31_t * pSrc,
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         q31_t * pDst,
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         uint32_t blockSize)
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** {
  28              	 .loc 1 67 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 6,-20
  38              	 .cfi_offset 7,-16
  39              	 .cfi_offset 8,-12
  40              	 .cfi_offset 9,-8
  41              	 .cfi_offset 14,-4
  42 0004 8FB0     	 sub sp,sp,#60
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 88
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 F860     	 str r0,[r7,#12]
  49 000a B960     	 str r1,[r7,#8]
  50 000c 7A60     	 str r2,[r7,#4]
  51 000e 3B60     	 str r3,[r7]
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         q31_t *pState = S->pState;                     /* State pointer */
  52              	 .loc 1 68 0
  53 0010 FB68     	 ldr r3,[r7,#12]
  54 0012 5B68     	 ldr r3,[r3,#4]
  55 0014 7B63     	 str r3,[r7,#52]
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   const q31_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  56              	 .loc 1 69 0
  57 0016 FB68     	 ldr r3,[r7,#12]
  58 0018 9B68     	 ldr r3,[r3,#8]
  59 001a 7B61     	 str r3,[r7,#20]
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         q31_t *pStateCurnt;                            /* Points to the current sample of the state
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         q31_t *px;                                     /* Temporary pointer for state buffer */
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   const q31_t *pb;                                     /* Temporary pointer for coefficient buffer 
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         q31_t acc0;                                    /* Accumulators */
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
  60              	 .loc 1 74 0
  61 001c FB68     	 ldr r3,[r7,#12]
  62 001e 1B88     	 ldrh r3,[r3]
  63 0020 3B61     	 str r3,[r7,#16]
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         uint32_t i, tapCnt, blkCnt;                    /* Loop counters */
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         q31_t acc1, acc2, acc3;                        /* Accumulators */
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****         q31_t x0, x1, x2, x3, c0;                      /* Temporary variables to hold state and coe
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #endif
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* S->pState points to state array which contains previous frame (numTaps - 1) samples */
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* pStateCurnt points to the location where the new input data should be written */
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   pStateCurnt = &(S->pState[(numTaps - 1U)]);
  64              	 .loc 1 84 0
  65 0022 FB68     	 ldr r3,[r7,#12]
  66 0024 5A68     	 ldr r2,[r3,#4]
  67 0026 3B69     	 ldr r3,[r7,#16]
  68 0028 03F18043 	 add r3,r3,#1073741824
  69 002c 013B     	 subs r3,r3,#1
  70 002e 9B00     	 lsls r3,r3,#2
  71 0030 1344     	 add r3,r3,r2
  72 0032 3B63     	 str r3,[r7,#48]
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Loop unrolling: Compute 4 output values simultaneously.
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****    * The variables acc0 ... acc3 hold output values that are being computed:
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****    *
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****    *    acc0 =  b[numTaps-1] * x[n-numTaps-1] + b[numTaps-2] * x[n-numTaps-2] + b[numTaps-3] * x[n-
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****    *    acc1 =  b[numTaps-1] * x[n-numTaps]   + b[numTaps-2] * x[n-numTaps-1] + b[numTaps-3] * x[n-
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****    *    acc2 =  b[numTaps-1] * x[n-numTaps+1] + b[numTaps-2] * x[n-numTaps]   + b[numTaps-3] * x[n-
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****    *    acc3 =  b[numTaps-1] * x[n-numTaps+2] + b[numTaps-2] * x[n-numTaps+1] + b[numTaps-3] * x[n-
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****    */
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   blkCnt = blockSize >> 2U;
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   while (blkCnt > 0U)
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   {
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Copy 4 new input samples into the state buffer. */
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Set all accumulators to zero */
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     acc0 = 0;
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     acc1 = 0;
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     acc2 = 0;
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     acc3 = 0;
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Initialize state pointer */
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     px = pState;
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Initialize coefficient pointer */
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     pb = pCoeffs;
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Read the first 3 samples from the state buffer:
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****      *  x[n-numTaps], x[n-numTaps-1], x[n-numTaps-2] */
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     x0 = *px++;
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     x1 = *px++;
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     x2 = *px++;
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Loop unrolling. Process 4 taps at a time. */
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     tapCnt = numTaps >> 2U;
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Loop over the number of taps.  Unroll by a factor of 4.
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****        Repeat until we've computed numTaps-4 coefficients. */
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     while (tapCnt > 0U)
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     {
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read the b[numTaps] coefficient */
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *pb;
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read x[n-numTaps-3] sample */
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       x3 = *px;
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* acc0 +=  b[numTaps] * x[n-numTaps] */
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x0, c0);
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* acc1 +=  b[numTaps] * x[n-numTaps-1] */
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x1, c0);
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* acc2 +=  b[numTaps] * x[n-numTaps-2] */
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x2, c0);
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* acc3 +=  b[numTaps] * x[n-numTaps-3] */
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x3, c0);
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read the b[numTaps-1] coefficient */
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *(pb + 1U);
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read x[n-numTaps-4] sample */
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       x0 = *(px + 1U);
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Perform the multiply-accumulates */
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x1, c0);
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x2, c0);
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x3, c0);
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x0, c0);
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read the b[numTaps-2] coefficient */
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *(pb + 2U);
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read x[n-numTaps-5] sample */
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       x1 = *(px + 2U);
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Perform the multiply-accumulates */
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x2, c0);
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x3, c0);
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x0, c0);
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x1, c0);
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read the b[numTaps-3] coefficients */
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *(pb + 3U);
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read x[n-numTaps-6] sample */
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       x2 = *(px + 3U);
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Perform the multiply-accumulates */
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x3, c0);
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x0, c0);
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x1, c0);
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x2, c0);
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* update coefficient pointer */
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       pb += 4U;
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       px += 4U;
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Decrement loop counter */
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       tapCnt--;
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     }
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     tapCnt = numTaps % 0x4U;
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     while (tapCnt > 0U)
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     {
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read coefficients */
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *(pb++);
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Fetch 1 state variable */
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       x3 = *(px++);
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Perform the multiply-accumulates */
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x0, c0);
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x1, c0);
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x2, c0);
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x3, c0);
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Reuse the present sample states for next sample */
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       x0 = x1;
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       x1 = x2;
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       x2 = x3;
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       /* Decrement loop counter */
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       tapCnt--;
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     }
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* The results in the 4 accumulators are in 2.30 format. Convert to 1.31
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****        Then store the 4 outputs in the destination buffer. */
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc0 << 1);
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc1 << 1);
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc2 << 1);
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc3 << 1);
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Advance the state pointer by 4 to process the next group of 4 samples */
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     pState = pState + 4U;
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Decrement loop counter */
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     blkCnt--;
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   }
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Loop unrolling: Compute remaining output samples */
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   blkCnt = blockSize % 0x4U;
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #else
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Initialize blkCnt with number of taps */
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   blkCnt = blockSize;
  73              	 .loc 1 239 0
  74 0034 3B68     	 ldr r3,[r7]
  75 0036 BB61     	 str r3,[r7,#24]
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   while (blkCnt > 0U)
  76              	 .loc 1 243 0
  77 0038 4AE0     	 b .L2
  78              	.L4:
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   {
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Copy one sample at a time into state buffer */
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
  79              	 .loc 1 246 0
  80 003a 3B6B     	 ldr r3,[r7,#48]
  81 003c 1A1D     	 adds r2,r3,#4
  82 003e 3A63     	 str r2,[r7,#48]
  83 0040 BA68     	 ldr r2,[r7,#8]
  84 0042 111D     	 adds r1,r2,#4
  85 0044 B960     	 str r1,[r7,#8]
  86 0046 1268     	 ldr r2,[r2]
  87 0048 1A60     	 str r2,[r3]
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Set the accumulator to zero */
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     acc0 = 0;
  88              	 .loc 1 249 0
  89 004a 0023     	 movs r3,#0
  90 004c 7B62     	 str r3,[r7,#36]
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Initialize state pointer */
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     px = pState;
  91              	 .loc 1 252 0
  92 004e 7B6B     	 ldr r3,[r7,#52]
  93 0050 FB62     	 str r3,[r7,#44]
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Initialize Coefficient pointer */
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     pb = pCoeffs;
  94              	 .loc 1 255 0
  95 0052 7B69     	 ldr r3,[r7,#20]
  96 0054 BB62     	 str r3,[r7,#40]
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     i = numTaps;
  97              	 .loc 1 257 0
  98 0056 3B69     	 ldr r3,[r7,#16]
  99 0058 3B62     	 str r3,[r7,#32]
 100              	.L3:
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 259:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Perform the multiply-accumulates */
 260:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     do
 261:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     {
 262:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, (*px++), (*pb++));
 101              	 .loc 1 262 0 discriminator 1
 102 005a 7B6A     	 ldr r3,[r7,#36]
 103 005c 1A46     	 mov r2,r3
 104 005e 4FEAE273 	 asr r3,r2,#31
 105 0062 1500     	 movs r5,r2
 106 0064 0024     	 movs r4,#0
 107 0066 FB6A     	 ldr r3,[r7,#44]
 108 0068 1A1D     	 adds r2,r3,#4
 109 006a FA62     	 str r2,[r7,#44]
 110 006c 1B68     	 ldr r3,[r3]
 111 006e 1846     	 mov r0,r3
 112 0070 4FEAE071 	 asr r1,r0,#31
 113 0074 BB6A     	 ldr r3,[r7,#40]
 114 0076 1A1D     	 adds r2,r3,#4
 115 0078 BA62     	 str r2,[r7,#40]
 116 007a 1B68     	 ldr r3,[r3]
 117 007c 1A46     	 mov r2,r3
 118 007e 4FEAE273 	 asr r3,r2,#31
 119 0082 02FB01FE 	 mul lr,r2,r1
 120 0086 00FB03F6 	 mul r6,r0,r3
 121 008a 7644     	 add r6,r6,lr
 122 008c A0FB0223 	 umull r2,r3,r0,r2
 123 0090 F118     	 adds r1,r6,r3
 124 0092 0B46     	 mov r3,r1
 125 0094 1219     	 adds r2,r2,r4
 126 0096 43EB0503 	 adc r3,r3,r5
 127 009a 12F10042 	 adds r2,r2,#-2147483648
 128 009e 43F10003 	 adc r3,r3,#0
 129 00a2 9846     	 mov r8,r3
 130 00a4 4FEAE379 	 asr r9,r3,#31
 131 00a8 4346     	 mov r3,r8
 132 00aa 7B62     	 str r3,[r7,#36]
 263:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****       i--;
 133              	 .loc 1 263 0 discriminator 1
 134 00ac 3B6A     	 ldr r3,[r7,#32]
 135 00ae 013B     	 subs r3,r3,#1
 136 00b0 3B62     	 str r3,[r7,#32]
 264:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     } while (i > 0U);
 137              	 .loc 1 264 0 discriminator 1
 138 00b2 3B6A     	 ldr r3,[r7,#32]
 139 00b4 002B     	 cmp r3,#0
 140 00b6 D0D1     	 bne .L3
 265:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 266:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* The result is in 2.30 format. Convert to 1.31
 267:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****        Then store the output in the destination buffer. */
 268:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc0 << 1);
 141              	 .loc 1 268 0
 142 00b8 7B68     	 ldr r3,[r7,#4]
 143 00ba 1A1D     	 adds r2,r3,#4
 144 00bc 7A60     	 str r2,[r7,#4]
 145 00be 7A6A     	 ldr r2,[r7,#36]
 146 00c0 5200     	 lsls r2,r2,#1
 147 00c2 1A60     	 str r2,[r3]
 269:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 270:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Advance state pointer by 1 for the next sample */
 271:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     pState = pState + 1U;
 148              	 .loc 1 271 0
 149 00c4 7B6B     	 ldr r3,[r7,#52]
 150 00c6 0433     	 adds r3,r3,#4
 151 00c8 7B63     	 str r3,[r7,#52]
 272:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 273:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Decrement loop counter */
 274:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     blkCnt--;
 152              	 .loc 1 274 0
 153 00ca BB69     	 ldr r3,[r7,#24]
 154 00cc 013B     	 subs r3,r3,#1
 155 00ce BB61     	 str r3,[r7,#24]
 156              	.L2:
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   {
 157              	 .loc 1 243 0
 158 00d0 BB69     	 ldr r3,[r7,#24]
 159 00d2 002B     	 cmp r3,#0
 160 00d4 B1D1     	 bne .L4
 275:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   }
 276:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 277:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Processing is complete.
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****      Now copy the last numTaps - 1 samples to the start of the state buffer.
 279:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****      This prepares the state buffer for the next function call. */
 280:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 281:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Points to the start of the state buffer */
 282:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   pStateCurnt = S->pState;
 161              	 .loc 1 282 0
 162 00d6 FB68     	 ldr r3,[r7,#12]
 163 00d8 5B68     	 ldr r3,[r3,#4]
 164 00da 3B63     	 str r3,[r7,#48]
 283:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 284:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 285:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 286:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Loop unrolling: Compute 4 taps at a time */
 287:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   tapCnt = (numTaps - 1U) >> 2U;
 288:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 289:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Copy data */
 290:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   while (tapCnt > 0U)
 291:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   {
 292:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pState++;
 293:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pState++;
 294:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pState++;
 295:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pState++;
 296:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 297:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Decrement loop counter */
 298:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     tapCnt--;
 299:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   }
 300:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 301:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Calculate remaining number of copies */
 302:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   tapCnt = (numTaps - 1U) % 0x4U;
 303:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #else
 305:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 306:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Initialize tapCnt with number of taps */
 307:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   tapCnt = (numTaps - 1U);
 165              	 .loc 1 307 0
 166 00dc 3B69     	 ldr r3,[r7,#16]
 167 00de 013B     	 subs r3,r3,#1
 168 00e0 FB61     	 str r3,[r7,#28]
 308:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 309:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 310:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 311:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   /* Copy remaining data */
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   while (tapCnt > 0U)
 169              	 .loc 1 312 0
 170 00e2 0AE0     	 b .L5
 171              	.L6:
 313:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   {
 314:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pState++;
 172              	 .loc 1 314 0
 173 00e4 3B6B     	 ldr r3,[r7,#48]
 174 00e6 1A1D     	 adds r2,r3,#4
 175 00e8 3A63     	 str r2,[r7,#48]
 176 00ea 7A6B     	 ldr r2,[r7,#52]
 177 00ec 111D     	 adds r1,r2,#4
 178 00ee 7963     	 str r1,[r7,#52]
 179 00f0 1268     	 ldr r2,[r2]
 180 00f2 1A60     	 str r2,[r3]
 315:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 316:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     /* Decrement the loop counter */
 317:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****     tapCnt--;
 181              	 .loc 1 317 0
 182 00f4 FB69     	 ldr r3,[r7,#28]
 183 00f6 013B     	 subs r3,r3,#1
 184 00f8 FB61     	 str r3,[r7,#28]
 185              	.L5:
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   {
 186              	 .loc 1 312 0
 187 00fa FB69     	 ldr r3,[r7,#28]
 188 00fc 002B     	 cmp r3,#0
 189 00fe F1D1     	 bne .L6
 318:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c ****   }
 319:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** 
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q31.c **** }
 190              	 .loc 1 320 0
 191 0100 3C37     	 adds r7,r7,#60
 192              	.LCFI3:
 193              	 .cfi_def_cfa_offset 28
 194 0102 BD46     	 mov sp,r7
 195              	.LCFI4:
 196              	 .cfi_def_cfa_register 13
 197              	 
 198 0104 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 199              	 .cfi_endproc
 200              	.LFE149:
 202              	 .text
 203              	.Letext0:
 204              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 205              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 206              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 207              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_fast_q31.c
    {standard input}:20     .text.arm_fir_fast_q31:00000000 $t
    {standard input}:25     .text.arm_fir_fast_q31:00000000 arm_fir_fast_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
