   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_biquad_cascade_df1_32x64_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_biquad_cas_df1_32x64_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_biquad_cas_df1_32x64_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_biquad_cas_df1_32x64_q31:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Title:        arm_biquad_cascade_df1_32x64_q31.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Description:  High precision Q31 Biquad cascade filter processing function
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @defgroup BiquadCascadeDF1_32x64 High Precision Q31 Biquad Cascade Filter
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   This function implements a high precision Biquad cascade filter which operates on
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   Q31 data values.  The filter coefficients are in 1.31 format and the state variables
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   are in 1.63 format.  The double precision state variables reduce quantization noise
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   in the filter and provide a cleaner output.
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   These filters are particularly useful when implementing filters in which the
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   singularities are close to the unit circle.  This is common for low pass or high
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   pass filters with very low cutoff frequencies.
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   The function operates on blocks of input and output data
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   and each call to the function processes <code>blockSize</code> samples through
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   the filter. <code>pSrc</code> and <code>pDst</code> points to input and output arrays
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   containing <code>blockSize</code> Q31 values.
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par           Algorithm
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Each Biquad stage implements a second order filter using the difference equation
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   <pre>
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       y[n] = b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   </pre>
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    A Direct Form I algorithm is used with 5 coefficients and 4 state variables per 
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    \image html Biquad.gif "Single Biquad filter stage"
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Coefficients <code>b0, b1 and b2 </code> multiply the input signal <code>x[n]</c
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Coefficients <code>a1</code> and <code>a2</code> multiply the output signal <cod
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Pay careful attention to the sign of the feedback coefficients.
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Some design tools use the difference equation
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   <pre>
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       y[n] = b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] - a1 * y[n-1] - a2 * y[n-2]
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   </pre>
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    In this case the feedback coefficients <code>a1</code> and <code>a2</code> must 
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Higher order filters are realized as a cascade of second order sections.
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    <code>numStages</code> refers to the number of second order stages used.
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    For example, an 8th order filter would be realized with <code>numStages=4</code>
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    \image html BiquadCascade.gif "8th order filter using a cascade of Biquad stages
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    A 9th order filter would be realized with <code>numStages=5</code> second order 
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    with the coefficients for one of the stages configured as a first order filter
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    (<code>b2=0</code> and <code>a2=0</code>).
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The <code>pState</code> points to state variables array.
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Each Biquad stage has 4 state variables <code>x[n-1], x[n-2], y[n-1],</code> and
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The state variables are arranged in the array as:
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   <pre>
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       {x[n-1], x[n-2], y[n-1], y[n-2]}
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   </pre>
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The 4 state variables for stage 1 are first, then the 4 state variables for stag
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The state array has a total length of <code>4*numStages</code> values of data in
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The state variables are updated after each block of data is processed, the coeff
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par           Instance Structure
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The coefficients and state variables for a filter are stored together in an inst
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    A separate instance structure must be defined for each filter.
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Coefficient arrays may be shared among several instances while state variable ar
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par           Init Function
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    There is also an associated initialization function which performs the following
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    - Sets the values of the internal structure fields.
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    - Zeros out the values in the state buffer.
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    To do this manually without calling the init function, assign the follow subfiel
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    numStages, pCoeffs, postShift, pState. Also set all of the values in pState to z
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Use of the initialization function is optional.
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    However, if the initialization function is used, then the instance structure can
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    To place an instance structure into a const data section, the instance structure
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Set the values in the state buffer to zeros before static initialization.
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    For example, to statically initialize the filter instance structure use
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   <pre>
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       arm_biquad_cas_df1_32x64_ins_q31 S1 = {numStages, pState, pCoeffs, postShift};
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   </pre>
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    where <code>numStages</code> is the number of Biquad stages in the filter;
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    <code>pState</code> is the address of the state buffer;
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    <code>pCoeffs</code> is the address of the coefficient buffer;
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    <code>postShift</code> shift to be applied which is described in detail below.
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par           Fixed-Point Behavior
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Care must be taken while using Biquad Cascade 32x64 filter function.
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Following issues must be considered:
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    - Scaling of coefficients
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    - Filter gain
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    - Overflow and saturation
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Filter coefficients are represented as fractional values and
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    restricted to lie in the range <code>[-1 +1)</code>.
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The processing function has an additional scaling parameter <code>postShift</cod
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    which allows the filter coefficients to exceed the range <code>[+1 -1)</code>.
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    At the output of the filter's accumulator is a shift register which shifts the r
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    \image html BiquadPostshift.gif "Fixed-point Biquad with shift by postShift bits
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    This essentially scales the filter coefficients by <code>2^postShift</code>.
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    For example, to realize the coefficients
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   <pre>
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      {1.5, -0.8, 1.2, 1.6, -0.9}
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   </pre>
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    set the Coefficient array to:
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   <pre>
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      {0.75, -0.4, 0.6, 0.8, -0.45}
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   </pre>
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    and set <code>postShift=1</code>
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The second thing to keep in mind is the gain through the filter.
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The frequency response of a Biquad filter is a function of its coefficients.
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    It is possible for the gain through the filter to exceed 1.0 meaning that the
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    filter increases the amplitude of certain frequencies.
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    This means that an input signal with amplitude < 1.0 may result in an output > 1
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    and these are saturated or overflowed based on the implementation of the filter.
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    To avoid this behavior the filter needs to be scaled down such that its peak gai
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    or the input signal must be scaled down so that the combination of input and fil
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The third item to consider is the overflow and saturation behavior of the fixed-
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    This is described in the function specific documentation below.
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @addtogroup BiquadCascadeDF1_32x64
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @{
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @brief         Processing function for the Q31 Biquad cascade 32x64 filter.
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @param[in]     S         points to an instance of the high precision Q31 Biquad cascade filter
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @param[in]     pSrc      points to the block of input data
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @param[out]    pDst      points to the block of output data
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @param[in]     blockSize number of samples to process
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @return        none
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par           Details
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The function is implemented using an internal 64-bit accumulator.
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    The accumulator has a 2.62 format and maintains full precision of the intermedia
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Thus, if the accumulator result overflows it wraps around rather than clip.
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    In order to avoid overflows completely the input signal must be scaled down by 2
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    After all 5 multiply-accumulates are performed, the 2.62 accumulator is shifted 
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    1.31 format by discarding the low 32 bits.
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   @par
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    Two related functions are provided in the CMSIS DSP library.
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    - \ref arm_biquad_cascade_df1_q31() implements a Biquad cascade with 32-bit coef
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****                    - \ref arm_biquad_cascade_df1_fast_q31() implements a Biquad cascade with 32-bit
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #if defined(ARM_MATH_MVEI)
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #include "CMSIS_DSP/Include/arm_helium_utils.h"
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** void arm_biquad_cas_df1_32x64_q31(
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   const q31_t * pSrc,
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31_t * pDst,
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         uint32_t blockSize)
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** {
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     const q31_t *pIn = pSrc;    /*  input pointer initialization  */
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     q31_t    *pOut = pDst;      /*  output pointer initialization */
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     q63_t    *pState = S->pState;   /*  state pointer initialization  */
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     const q31_t    *pCoeffs = S->pCoeffs; /*  coeff pointer initialization  */
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     q31_t     Xn1, Xn2;         /*  Input Filter state variables        */
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     q63_t     Yn1, Yn2;         /*  Output Filter state variables        */
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     q31_t     b0, b1, b2, a1, a2;   /*  Filter coefficients           */
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     int32_t   shift = (int32_t) S->postShift + 1;   /*  Shift to be applied to the output */
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     uint32_t  sample, stage = S->numStages; /*  loop counters                     */
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     q31x4_t vecCoef, vecIn;
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     q63_t     acc;
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     do
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         uint32_t  i;
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         /*
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          * Reading the coefficients
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          */
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         b0 = *pCoeffs++;
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         b1 = *pCoeffs++;
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         b2 = *pCoeffs++;
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         a1 = *pCoeffs++;
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         a2 = *pCoeffs++;
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         vecCoef[0] = 0;
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         vecCoef[1] = b2;
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         vecCoef[2] = b1;
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         vecCoef[3] = b0;
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         /*
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          * Reading the state values
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          */
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         Xn1 = pState[0];
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         Xn2 = pState[1];
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         Yn1 = pState[2];
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         Yn2 = pState[3];
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         /*
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          * append history with initial samples
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          */
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31_t     hist[6];
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         hist[0] = 0;
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         hist[1] = Xn2;
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         hist[2] = Xn1;
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         hist[3] = pIn[0];
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         hist[4] = pIn[1];
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         hist[5] = pIn[2];
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         const q31_t  *pIn1 = hist;
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31x4_t vecIn0 = *(q31x4_t *) & pIn[0];
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31x4_t vecIn1 = *(q31x4_t *) & pIn[1];
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31x4_t vecIn2 = *(q31x4_t *) & pIn[2];
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         i = 3;
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         do
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         {
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             vecIn = vld1q(pIn1);
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             pIn1 += 1;
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn, vecCoef);
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             /*
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              * Store the output in the destination buffer in 1.31 format.
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              */
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         }
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         while (--i);
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         sample = blockSize - 3;
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         pIn1 = pIn + 3;
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         i = sample / 4;
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         while (i > 0U)
 259:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         {
 260:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 261:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 262:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 263:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 264:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 265:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn0, vecCoef);
 266:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             vecIn = vld1q(pIn1);
 267:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             pIn1 += 1;
 268:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 269:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             /*
 270:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              * Store the output in the destination buffer in 1.31 format.
 271:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              */
 272:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 273:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 274:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 275:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 276:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 277:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn1, vecCoef);
 279:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             vecIn0 = vld1q(pIn1);
 280:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             pIn1 += 1;
 281:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 282:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 283:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 284:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 285:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 286:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 287:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 288:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn2, vecCoef);
 289:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             vecIn1 = vld1q(pIn1);
 290:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             pIn1 += 1;
 291:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 292:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 293:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 294:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 295:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 296:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 297:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 298:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn, vecCoef);
 299:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             vecIn2 = vld1q(pIn1);
 300:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             pIn1 += 1;
 301:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 302:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 303:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             /*
 304:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              * Decrement the loop counter
 305:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              */
 306:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             i--;
 307:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         }
 308:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         /*
 309:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          * save input state
 310:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          */
 311:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         Xn2 = vecIn[2];
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         Xn1 = vecIn[3];
 313:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 314:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         int       loopRemainder = blockSize - 3 - 4 * ((blockSize - 3) / 4);
 315:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         if (loopRemainder == 1)
 316:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         {
 317:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             /*
 318:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              * remainder
 319:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              */
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 321:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 322:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 323:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 324:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn0, vecCoef);
 325:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 326:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 327:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             /*
 328:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              * save input state
 329:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              */
 330:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Xn2 = vecIn0[2];
 331:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Xn1 = vecIn0[3];
 332:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 333:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         }
 334:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         else if (loopRemainder == 2)
 335:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         {
 336:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 337:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 338:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 339:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 340:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn0, vecCoef);
 341:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 342:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 343:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 344:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 345:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 346:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 347:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 348:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn1, vecCoef);
 349:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 350:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 351:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             /*
 352:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              * save input state
 353:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              */
 354:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Xn2 = vecIn1[2];
 355:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Xn1 = vecIn1[3];
 356:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 357:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         }
 358:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         else if (loopRemainder == 3)
 359:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         {
 360:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 361:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 362:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 363:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 364:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn0, vecCoef);
 365:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 366:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 367:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 368:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 369:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 370:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 371:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 372:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn1, vecCoef);
 373:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 374:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 375:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 376:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc = mult32x64(Yn1, a1);
 377:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             acc += mult32x64(Yn2, a2);
 378:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn2 = Yn1;
 379:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = acc;
 380:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = vmlaldavaq(Yn1, vecIn2, vecCoef);
 381:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Yn1 = asrl(Yn1, -shift);
 382:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             *pOut++ = (q31_t) (Yn1 >> 32);
 383:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             /*
 384:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              * save input state
 385:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****              */
 386:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Xn2 = vecIn2[2];
 387:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****             Xn1 = vecIn2[3];
 388:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 389:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         }
 390:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 391:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         /*
 392:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          * The first stage output is given as input to the second stage.
 393:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          */
 394:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         pIn = pDst;
 395:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         /*
 396:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          * Reset to destination buffer working pointer
 397:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          */
 398:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         pOut = pDst;
 399:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         /*
 400:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          * Store the updated state variables back into the pState array
 401:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****          */
 402:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         *pState++ = (q63_t) Xn1;
 403:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         *pState++ = (q63_t) Xn2;
 404:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         *pState++ = Yn1;
 405:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         *pState++ = Yn2;
 406:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 407:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while (--stage);
 408:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** }
 409:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #else
 410:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** void arm_biquad_cas_df1_32x64_q31(
 411:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
 412:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   const q31_t * pSrc,
 413:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31_t * pDst,
 414:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         uint32_t blockSize)
 415:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** {
  28              	 .loc 1 415 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 28
  36              	 .cfi_offset 4,-28
  37              	 .cfi_offset 5,-24
  38              	 .cfi_offset 7,-20
  39              	 .cfi_offset 8,-16
  40              	 .cfi_offset 9,-12
  41              	 .cfi_offset 10,-8
  42              	 .cfi_offset 11,-4
  43 0004 AFB0     	 sub sp,sp,#188
  44              	.LCFI1:
  45              	 .cfi_def_cfa_offset 216
  46 0006 00AF     	 add r7,sp,#0
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 7
  49 0008 F862     	 str r0,[r7,#44]
  50 000a B962     	 str r1,[r7,#40]
  51 000c 7A62     	 str r2,[r7,#36]
  52 000e 3B62     	 str r3,[r7,#32]
 416:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   const q31_t *pIn = pSrc;                             /* input pointer initialization */
  53              	 .loc 1 416 0
  54 0010 BB6A     	 ldr r3,[r7,#40]
  55 0012 C7F8B430 	 str r3,[r7,#180]
 417:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31_t *pOut = pDst;                            /* output pointer initialization */
  56              	 .loc 1 417 0
  57 0016 7B6A     	 ldr r3,[r7,#36]
  58 0018 C7F8B030 	 str r3,[r7,#176]
 418:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q63_t *pState = S->pState;                     /* state pointer initialization */
  59              	 .loc 1 418 0
  60 001c FB6A     	 ldr r3,[r7,#44]
  61 001e 5B68     	 ldr r3,[r3,#4]
  62 0020 C7F8AC30 	 str r3,[r7,#172]
 419:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   const q31_t *pCoeffs = S->pCoeffs;                   /* coeff pointer initialization */
  63              	 .loc 1 419 0
  64 0024 FB6A     	 ldr r3,[r7,#44]
  65 0026 9B68     	 ldr r3,[r3,#8]
  66 0028 C7F8A830 	 str r3,[r7,#168]
 420:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q63_t acc;                                     /* accumulator */
 421:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31_t Xn1, Xn2;                                /* Input Filter state variables */
 422:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q63_t Yn1, Yn2;                                /* Output Filter state variables */
 423:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31_t b0, b1, b2, a1, a2;                      /* Filter coefficients */
 424:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31_t Xn;                                      /* temporary input */
 425:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         int32_t shift = (int32_t) S->postShift + 1;    /* Shift to be applied to the output */
  67              	 .loc 1 425 0
  68 002c FB6A     	 ldr r3,[r7,#44]
  69 002e 1B7B     	 ldrb r3,[r3,#12]
  70 0030 0133     	 adds r3,r3,#1
  71 0032 C7F88430 	 str r3,[r7,#132]
 426:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         uint32_t sample, stage = S->numStages;         /* loop counters */
  72              	 .loc 1 426 0
  73 0036 FB6A     	 ldr r3,[r7,#44]
  74 0038 1B78     	 ldrb r3,[r3]
  75 003a C7F88830 	 str r3,[r7,#136]
 427:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         q31_t acc_l, acc_h;                            /* temporary output */
 428:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         uint32_t uShift = ((uint32_t) S->postShift + 1U);
  76              	 .loc 1 428 0
  77 003e FB6A     	 ldr r3,[r7,#44]
  78 0040 1B7B     	 ldrb r3,[r3,#12]
  79 0042 0133     	 adds r3,r3,#1
  80 0044 C7F88030 	 str r3,[r7,#128]
 429:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****         uint32_t lShift = 32U - uShift;                /* Shift to be applied to the output */
  81              	 .loc 1 429 0
  82 0048 D7F88030 	 ldr r3,[r7,#128]
  83 004c C3F12003 	 rsb r3,r3,#32
  84 0050 FB67     	 str r3,[r7,#124]
  85              	.L6:
 430:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 431:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   do
 432:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   {
 433:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the coefficients */
 434:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b0 = *pCoeffs++;
  86              	 .loc 1 434 0
  87 0052 D7F8A830 	 ldr r3,[r7,#168]
  88 0056 1A1D     	 adds r2,r3,#4
  89 0058 C7F8A820 	 str r2,[r7,#168]
  90 005c 1B68     	 ldr r3,[r3]
  91 005e BB67     	 str r3,[r7,#120]
 435:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b1 = *pCoeffs++;
  92              	 .loc 1 435 0
  93 0060 D7F8A830 	 ldr r3,[r7,#168]
  94 0064 1A1D     	 adds r2,r3,#4
  95 0066 C7F8A820 	 str r2,[r7,#168]
  96 006a 1B68     	 ldr r3,[r3]
  97 006c 7B67     	 str r3,[r7,#116]
 436:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b2 = *pCoeffs++;
  98              	 .loc 1 436 0
  99 006e D7F8A830 	 ldr r3,[r7,#168]
 100 0072 1A1D     	 adds r2,r3,#4
 101 0074 C7F8A820 	 str r2,[r7,#168]
 102 0078 1B68     	 ldr r3,[r3]
 103 007a 3B67     	 str r3,[r7,#112]
 437:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a1 = *pCoeffs++;
 104              	 .loc 1 437 0
 105 007c D7F8A830 	 ldr r3,[r7,#168]
 106 0080 1A1D     	 adds r2,r3,#4
 107 0082 C7F8A820 	 str r2,[r7,#168]
 108 0086 1B68     	 ldr r3,[r3]
 109 0088 FB66     	 str r3,[r7,#108]
 438:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a2 = *pCoeffs++;
 110              	 .loc 1 438 0
 111 008a D7F8A830 	 ldr r3,[r7,#168]
 112 008e 1A1D     	 adds r2,r3,#4
 113 0090 C7F8A820 	 str r2,[r7,#168]
 114 0094 1B68     	 ldr r3,[r3]
 115 0096 BB66     	 str r3,[r7,#104]
 439:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 440:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the state values */
 441:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn1 = (q31_t) (pState[0]);
 116              	 .loc 1 441 0
 117 0098 D7F8AC30 	 ldr r3,[r7,#172]
 118 009c D3E90023 	 ldrd r2,[r3]
 119 00a0 1346     	 mov r3,r2
 120 00a2 C7F8A430 	 str r3,[r7,#164]
 442:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn2 = (q31_t) (pState[1]);
 121              	 .loc 1 442 0
 122 00a6 D7F8AC30 	 ldr r3,[r7,#172]
 123 00aa 0833     	 adds r3,r3,#8
 124 00ac D3E90023 	 ldrd r2,[r3]
 125 00b0 1346     	 mov r3,r2
 126 00b2 C7F8A030 	 str r3,[r7,#160]
 443:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn1 = pState[2];
 127              	 .loc 1 443 0
 128 00b6 D7F8AC30 	 ldr r3,[r7,#172]
 129 00ba D3E90423 	 ldrd r2,[r3,#16]
 130 00be C7E92623 	 strd r2,[r7,#152]
 444:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn2 = pState[3];
 131              	 .loc 1 444 0
 132 00c2 D7F8AC30 	 ldr r3,[r7,#172]
 133 00c6 D3E90623 	 ldrd r2,[r3,#24]
 134 00ca C7E92423 	 strd r2,[r7,#144]
 445:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 446:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 447:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 448:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Apply loop unrolling and compute 4 output values simultaneously. */
 449:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Variable acc hold output value that is being computed and stored in destination buffer
 450:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]
 451:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      */
 452:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 453:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 454:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = blockSize >> 2U;
 455:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 456:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while (sample > 0U)
 457:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 458:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the input */
 459:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 460:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 461:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 462:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 463:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 464:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn * b0;
 465:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 466:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 467:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 * b1;
 468:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 469:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 470:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 * b2;
 471:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 472:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 473:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 474:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 475:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 476:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 477:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 478:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63 , Yn2 variable is reused */
 479:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = acc << shift;
 480:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 481:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 482:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 483:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 484:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 485:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 486:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 487:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 488:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 489:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 490:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 491:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *pOut = acc_h;
 492:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 493:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the second input into Xn2, to reuse the value */
 494:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = *pIn++;
 495:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 496:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 497:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 498:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 499:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn * b1;
 500:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 501:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 502:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 * b0;
 503:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 504:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 505:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 * b2;
 506:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 507:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 508:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a1);
 509:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 510:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 511:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a2);
 512:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 513:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused */
 514:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 515:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 516:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 517:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 518:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 519:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 520:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 521:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 522:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 523:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 524:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 525:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the third input into Xn1, to reuse the value */
 526:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = *pIn++;
 527:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 528:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.31 */
 529:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer. */
 530:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 1U) = acc_h;
 531:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 532:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 533:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 534:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 535:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn1 * b0;
 536:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 537:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 538:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 * b1;
 539:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 540:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 541:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn * b2;
 542:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 543:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 544:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 545:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 546:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 547:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 548:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 549:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn2 variable is reused  */
 550:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = acc << shift;
 551:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 552:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 553:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 554:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 555:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 556:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 557:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 558:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 559:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 560:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 561:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 562:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 2U) = acc_h;
 563:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 564:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the fourth input into Xn, to reuse the value */
 565:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 566:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 567:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 568:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 569:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn * b0;
 570:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 571:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 572:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 * b1;
 573:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 574:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 575:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 * b2;
 576:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 577:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 578:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a1);
 579:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 580:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 581:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a2);
 582:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 583:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused  */
 584:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 585:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 586:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 587:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 588:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 589:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 590:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 591:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 592:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 593:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 594:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 595:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 596:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 3U) = acc_h;
 597:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 598:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Every time after the output is computed state should be updated. */
 599:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The states should be updated as: */
 600:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn2 = Xn1 */
 601:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn1 = Xn  */
 602:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn2 = Yn1 */
 603:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc */
 604:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = Xn1;
 605:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = Xn;
 606:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 607:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* update output pointer */
 608:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       pOut += 4U;
 609:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 610:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* decrement loop counter */
 611:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       sample--;
 612:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 613:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 614:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Loop unrolling: Compute remaining outputs */
 615:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = blockSize & 0x3U;
 616:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 617:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #else
 618:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 619:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Initialize blkCnt with number of samples */
 620:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = blockSize;
 135              	 .loc 1 620 0
 136 00ce 3B6A     	 ldr r3,[r7,#32]
 137 00d0 C7F88C30 	 str r3,[r7,#140]
 621:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 622:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 623:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 624:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while (sample > 0U)
 138              	 .loc 1 624 0
 139 00d4 12E1     	 b .L2
 140              	.L5:
 625:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 626:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the input */
 627:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 141              	 .loc 1 627 0
 142 00d6 D7F8B430 	 ldr r3,[r7,#180]
 143 00da 1A1D     	 adds r2,r3,#4
 144 00dc C7F8B420 	 str r2,[r7,#180]
 145 00e0 1B68     	 ldr r3,[r3]
 146 00e2 7B66     	 str r3,[r7,#100]
 628:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 629:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 630:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 631:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 632:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn * b0;
 147              	 .loc 1 632 0
 148 00e4 7B6E     	 ldr r3,[r7,#100]
 149 00e6 1846     	 mov r0,r3
 150 00e8 4FEAE071 	 asr r1,r0,#31
 151 00ec BB6F     	 ldr r3,[r7,#120]
 152 00ee 1A46     	 mov r2,r3
 153 00f0 4FEAE273 	 asr r3,r2,#31
 154 00f4 02FB01F5 	 mul r5,r2,r1
 155 00f8 00FB03F4 	 mul r4,r0,r3
 156 00fc 2C44     	 add r4,r4,r5
 157 00fe A0FB0223 	 umull r2,r3,r0,r2
 158 0102 E118     	 adds r1,r4,r3
 159 0104 0B46     	 mov r3,r1
 160 0106 C7E91623 	 strd r2,[r7,#88]
 161 010a C7E91623 	 strd r2,[r7,#88]
 633:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 634:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 * b1;
 162              	 .loc 1 634 0
 163 010e D7F8A430 	 ldr r3,[r7,#164]
 164 0112 1846     	 mov r0,r3
 165 0114 4FEAE071 	 asr r1,r0,#31
 166 0118 7B6F     	 ldr r3,[r7,#116]
 167 011a 1A46     	 mov r2,r3
 168 011c 4FEAE273 	 asr r3,r2,#31
 169 0120 02FB01F5 	 mul r5,r2,r1
 170 0124 00FB03F4 	 mul r4,r0,r3
 171 0128 2C44     	 add r4,r4,r5
 172 012a A0FB0223 	 umull r2,r3,r0,r2
 173 012e E118     	 adds r1,r4,r3
 174 0130 0B46     	 mov r3,r1
 175 0132 D7E91601 	 ldrd r0,[r7,#88]
 176 0136 1218     	 adds r2,r2,r0
 177 0138 43EB0103 	 adc r3,r3,r1
 178 013c C7E91623 	 strd r2,[r7,#88]
 635:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 636:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 * b2;
 179              	 .loc 1 636 0
 180 0140 D7F8A030 	 ldr r3,[r7,#160]
 181 0144 1846     	 mov r0,r3
 182 0146 4FEAE071 	 asr r1,r0,#31
 183 014a 3B6F     	 ldr r3,[r7,#112]
 184 014c 1A46     	 mov r2,r3
 185 014e 4FEAE273 	 asr r3,r2,#31
 186 0152 02FB01F5 	 mul r5,r2,r1
 187 0156 00FB03F4 	 mul r4,r0,r3
 188 015a 2C44     	 add r4,r4,r5
 189 015c A0FB0223 	 umull r2,r3,r0,r2
 190 0160 E118     	 adds r1,r4,r3
 191 0162 0B46     	 mov r3,r1
 192 0164 D7E91601 	 ldrd r0,[r7,#88]
 193 0168 1218     	 adds r2,r2,r0
 194 016a 43EB0103 	 adc r3,r3,r1
 195 016e C7E91623 	 strd r2,[r7,#88]
 196 0172 D7E92623 	 ldrd r2,[r7,#152]
 197 0176 C7E91223 	 strd r2,[r7,#72]
 198 017a FB6E     	 ldr r3,[r7,#108]
 199 017c 7B64     	 str r3,[r7,#68]
 200              	.LBB6:
 201              	.LBB7:
 202              	 .file 2 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /******************************************************************************
   2:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @file     arm_math.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @version  V1.7.0
   5:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @date     18. March 2019
   6:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  ******************************************************************************/
   7:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /*
   8:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
  10:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * not use this file except in compliance with the License.
  14:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * You may obtain a copy of the License at
  15:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
  16:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
  18:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * limitations under the License.
  23:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
  24:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
  25:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
  26:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  28:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Introduction
  29:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
  30:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  31:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M and Cortex-A processor 
  33:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * based devices.
  34:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  35:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  36:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Basic math functions
  37:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Fast math functions
  38:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Complex math functions
  39:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Filtering functions
  40:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Matrix functions
  41:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Transform functions
  42:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Motor control functions
  43:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Statistical functions
  44:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Support functions
  45:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Interpolation functions
  46:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Support Vector Machine functions (SVM)
  47:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Bayes classifier functions
  48:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Distance functions
  49:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  50:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library has generally separate functions for operating on 8-bit integers, 16-bit integers,
  51:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  53:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Using the Library
  54:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
  55:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  56:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  58:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Here is the list of pre-built libraries :
  59:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  60:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  61:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  62:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  63:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  64:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  65:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  66:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  67:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  68:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  69:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  70:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  71:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  72:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  73:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  74:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  75:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  76:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  77:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  78:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  79:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  80:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  81:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  82:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  83:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  84:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Examples
  85:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * --------
  86:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  87:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  88:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  89:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Toolchain Support
  90:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
  91:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  92:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library is now tested on Fast Models building with cmake.
  93:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Core M0, M7, A5 are tested.
  94:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * 
  95:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * 
  96:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  97:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Building the Library
  98:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
  99:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
 101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * There is also a work in progress cmake build. The README file is giving more details.
 107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Preprocessor Macros
 109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
 110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Each library project have different preprocessor macros.
 112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_ROUNDING:
 122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_NEON:
 130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * dependent on the compiler and target architecture.
 134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * performances than the scalar versions.
 140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_HELIUM:
 142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * It implies the flags ARM_MATH_MVEF and ARM_MATH_MVEI and ARM_MATH_FLOAT16.
 144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_MVEF:
 146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Select Helium versions of the f32 algorithms.
 148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * It implies ARM_MATH_FLOAT16 and ARM_MATH_MVEI.
 149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_MVEI:
 151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Select Helium versions of the int and fixed point algorithms.
 153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_FLOAT16:
 155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Float16 implementations of some algorithms (Requires MVE extension).
 157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * <hr>
 159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * -----------------------------
 161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |File/Folder                      |Content                                                    
 164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * <hr>
 174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Revision History of CMSIS-DSP
 175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
 176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * operate on individual values and not arrays.
 189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * This set of functions operates on complex data vectors.
 196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * (real, imag, real, imag, ...).
 198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * real values.
 201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * This set of functions provides basic matrix math operations.
 211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * the type
 213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * definition for the floating-point matrix structure is shown
 214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * below:
 215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     typedef struct
 217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     {
 218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     } arm_matrix_instance_f32;
 222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * and the values are arranged in row order.  That is, the
 228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * matrix element (i, j) is stored at:
 229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     pData[i*numCols + j]
 231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * \par Init Functions
 234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There is an associated initialization function for each type of matrix
 235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * data structure.
 236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * \par
 241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * To place the instance structure in a const data
 244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * section, manually initialize the data structure.  For example:
 245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * data array.
 253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * \par Size Checking
 255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * columns. If the size check fails the functions return:
 259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Otherwise the functions return
 263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     ARM_MATH_SUCCESS
 265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The matrix size checking is enabled via the \#define
 268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * within the library project settings.  By default this macro is defined
 272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * and size checking is enabled. By changing the project settings and
 273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupController Controller Functions
 284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupStats Statistics Functions
 288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupSupport Support Functions
 292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupExamples Examples
 303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupSVM SVM Functions
 307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * This set of functions is implementing SVM classification on 2 classes.
 308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The training must be done from scikit-learn. The parameters can be easily
 309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * generated from the scikit-learn object. Some examples are given in
 310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * DSP/Testing/PatternGeneration/SVM.py
 311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * If more than 2 classes are needed, the functions in this folder 
 313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * will have to be used, as building blocks, to do multi-class classification.
 314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * No multi-class classification is provided in this SVM folder.
 316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * 
 317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupBayes Bayesian estimators
 322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Implement the naive gaussian Bayes estimator.
 324:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The training must be done from scikit-learn.
 325:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 326:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The parameters can be easily
 327:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * generated from the scikit-learn object. Some examples are given in
 328:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * DSP/Testing/PatternGeneration/Bayes.py
 329:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 330:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 331:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 332:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupDistance Distance functions
 333:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 334:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Distance functions for use with clustering algorithms.
 335:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There are distance functions for float vectors and boolean vectors.
 336:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 337:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 338:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 339:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 340:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifndef _ARM_MATH_H
 341:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define _ARM_MATH_H
 342:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 343:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef   __cplusplus
 344:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** extern "C"
 345:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 346:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 347:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 348:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /* Compiler specific diagnostic adjustment */
 349:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if   defined ( __CC_ARM )
 350:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 351:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 352:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 353:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __GNUC__ )
 354:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #pragma GCC diagnostic push
 355:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 356:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 357:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 358:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 359:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __ICCARM__ )
 360:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 361:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __TI_ARM__ )
 362:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 363:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __CSMC__ )
 364:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 365:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __TASKING__ )
 366:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 367:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( _MSC_VER )
 368:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 369:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 370:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #error Unknown compiler
 371:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 372:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 373:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 374:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /* Included for instrinsics definitions */
 375:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined (_MSC_VER ) 
 376:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <stdint.h>
 377:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 378:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __STATIC_INLINE static __inline
 379:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 380:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 381:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined (__GNUC_PYTHON__)
 382:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <stdint.h>
 383:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define  __ALIGNED(x) __attribute__((aligned(x)))
 384:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __STATIC_FORCEINLINE static __attribute__((inline))
 385:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __STATIC_INLINE static __attribute__((inline))
 386:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-function"
 387:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #pragma GCC diagnostic ignored "-Wattributes"
 388:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 389:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 390:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include "cmsis_compiler.h"
 391:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 392:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 393:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 394:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 395:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <string.h>
 396:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <math.h>
 397:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <float.h>
 398:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <limits.h>
 399:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 400:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 401:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F64_MAX   ((float64_t)DBL_MAX)
 402:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F32_MAX   ((float32_t)FLT_MAX)
 403:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 404:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 405:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F16_MAX   ((float16_t)FLT_MAX)
 406:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 407:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 408:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F64_MIN   (-DBL_MAX)
 409:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F32_MIN   (-FLT_MAX)
 410:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 411:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 412:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F16_MIN   (-(float16_t)FLT_MAX)
 413:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 414:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 415:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F64_ABSMAX   ((float64_t)DBL_MAX)
 416:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F32_ABSMAX   ((float32_t)FLT_MAX)
 417:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 418:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 419:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F16_ABSMAX   ((float16_t)FLT_MAX)
 420:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 421:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 422:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F64_ABSMIN   ((float64_t)0.0)
 423:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F32_ABSMIN   ((float32_t)0.0)
 424:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 425:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 426:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F16_ABSMIN   ((float16_t)0.0)
 427:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 428:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 429:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q31_MAX   ((q31_t)(0x7FFFFFFFL))
 430:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q15_MAX   ((q15_t)(0x7FFF))
 431:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q7_MAX    ((q7_t)(0x7F))
 432:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q31_MIN   ((q31_t)(0x80000000L))
 433:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q15_MIN   ((q15_t)(0x8000))
 434:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q7_MIN    ((q7_t)(0x80))
 435:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 436:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q31_ABSMAX   ((q31_t)(0x7FFFFFFFL))
 437:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q15_ABSMAX   ((q15_t)(0x7FFF))
 438:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q7_ABSMAX    ((q7_t)(0x7F))
 439:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q31_ABSMIN   ((q31_t)0)
 440:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q15_ABSMIN   ((q15_t)0)
 441:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q7_ABSMIN    ((q7_t)0)
 442:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 443:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /* evaluate ARM DSP feature */
 444:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 445:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_DSP                   1
 446:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 447:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 448:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_NEON)
 449:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <arm_neon.h>
 450:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 451:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 452:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined (ARM_MATH_HELIUM)
 453:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_MVEF
 454:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_FLOAT16
 455:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 456:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 457:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined (ARM_MATH_MVEF)
 458:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_MVEI
 459:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_FLOAT16
 460:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 461:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 462:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined (ARM_MATH_HELIUM) || defined(ARM_MATH_MVEF) || defined(ARM_MATH_MVEI)
 463:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <arm_mve.h>
 464:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 465:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 466:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 467:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 468:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 469:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 470:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 471:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define DELTA_Q31          ((q31_t)(0x100))
 472:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define DELTA_Q15          ((q15_t)0x5)
 473:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define INDEX_MASK         0x0000003F
 474:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifndef PI
 475:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define PI               3.14159265358979f
 476:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 477:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 478:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 479:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 480:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 481:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 482:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 483:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 484:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 485:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 486:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 487:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define TABLE_SPACING_Q15     0x80
 488:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 489:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 490:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 491:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 492:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 493:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 494:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define INPUT_SPACING         0xB60B61
 495:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 496:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 497:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Macros for complex numbers
 498:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 499:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 500:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /* Dimension C vector space */
 501:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define CMPLX_DIM 2
 502:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 503:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 504:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Error status returned by some functions in the library.
 505:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 506:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 507:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef enum
 508:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 509:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 510:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 511:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 512:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 513:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 514:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 515:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 516:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } arm_status;
 517:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 518:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 519:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 520:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 521:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8_t q7_t;
 522:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 523:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 524:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 525:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 526:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16_t q15_t;
 527:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 528:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 529:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 530:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 531:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32_t q31_t;
 532:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 533:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 534:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 535:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 536:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int64_t q63_t;
 537:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 538:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 539:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point type definition.
 540:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 541:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float float32_t;
 542:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 543:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 544:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 64-bit floating-point type definition.
 545:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 546:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef double float64_t;
 547:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 548:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 549:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief vector types
 550:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 551:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_NEON) || defined (ARM_MATH_MVEI)
 552:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 553:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 64-bit fractional 128-bit vector data type in 1.63 format
 554:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 555:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int64x2_t q63x2_t;
 556:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 557:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 558:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector data type in 1.31 format.
 559:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 560:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4_t q31x4_t;
 561:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 562:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 563:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 128-bit vector data type with 16-bit alignement in 1.15 format.
 564:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 565:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef __ALIGNED(2) int16x8_t q15x8_t;
 566:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 567:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  /**
 568:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 128-bit vector data type with 8-bit alignement in 1.7 format.
 569:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 570:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef __ALIGNED(1) int8x16_t q7x16_t;
 571:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 572:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /**
 573:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector pair data type in 1.31 format.
 574:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 575:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4x2_t q31x4x2_t;
 576:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 577:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 578:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector quadruplet data type in 1.31 format.
 579:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 580:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4x4_t q31x4x4_t;
 581:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 582:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 583:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 128-bit vector pair data type in 1.15 format.
 584:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 585:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8x2_t q15x8x2_t;
 586:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 587:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 588:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 128-bit vector quadruplet data type in 1.15 format.
 589:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 590:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8x4_t q15x8x4_t;
 591:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 592:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 593:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 128-bit vector pair data type in 1.7 format.
 594:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 595:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x16x2_t q7x16x2_t;
 596:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 597:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 598:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 128-bit vector quadruplet data type in 1.7 format.
 599:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 600:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    typedef int8x16x4_t q7x16x4_t;
 601:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 602:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 603:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional data type in 9.23 format.
 604:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 605:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32_t q23_t;
 606:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 607:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 608:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector data type in 9.23 format.
 609:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 610:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4_t q23x4_t;
 611:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 612:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 613:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 64-bit status 128-bit vector data type.
 614:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 615:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int64x2_t status64x2_t;
 616:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 617:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 618:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit status 128-bit vector data type.
 619:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 620:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4_t status32x4_t;
 621:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 622:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 623:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit status 128-bit vector data type.
 624:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 625:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8_t status16x8_t;
 626:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 627:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 628:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit status 128-bit vector data type.
 629:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 630:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x16_t status8x16_t;
 631:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 632:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 633:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 634:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 635:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_NEON) || defined(ARM_MATH_MVEF) /* floating point vector*/
 636:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 637:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 128-bit vector type
 638:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 639:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x4_t f32x4_t;
 640:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 641:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 642:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 643:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 128-bit vector data type
 644:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 645:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef __ALIGNED(2) float16x8_t f16x8_t;
 646:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 647:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 648:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 649:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 128-bit vector pair data type
 650:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 651:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x4x2_t f32x4x2_t;
 652:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 653:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 654:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 128-bit vector quadruplet data type
 655:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 656:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x4x4_t f32x4x4_t;
 657:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 658:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 659:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 660:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 128-bit vector pair data type
 661:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 662:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x8x2_t f16x8x2_t;
 663:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 664:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 665:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 128-bit vector quadruplet data type
 666:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 667:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x8x4_t f16x8x4_t;
 668:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 669:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 670:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 671:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit ubiquitous 128-bit vector data type
 672:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 673:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef union _any32x4_t
 674:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 675:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       float32x4_t     f;
 676:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       int32x4_t       i;
 677:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } any32x4_t;
 678:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 679:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 680:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 681:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit ubiquitous 128-bit vector data type
 682:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 683:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef union _any16x8_t
 684:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 685:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       float16x8_t     f;
 686:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       int16x8_t       i;
 687:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } any16x8_t;
 688:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 689:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 690:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 691:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 692:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_NEON)
 693:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 694:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 64-bit vector data type in 1.31 format.
 695:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 696:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x2_t  q31x2_t;
 697:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 698:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 699:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 64-bit vector data type in 1.15 format.
 700:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 701:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef  __ALIGNED(2) int16x4_t q15x4_t;
 702:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 703:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 704:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 64-bit vector data type in 1.7 format.
 705:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 706:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef  __ALIGNED(1) int8x8_t q7x8_t;
 707:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 708:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 709:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit float 64-bit vector data type.
 710:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 711:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x2_t  f32x2_t;
 712:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 713:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 714:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 715:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit float 64-bit vector data type.
 716:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 717:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef  __ALIGNED(2) float16x4_t f16x4_t;
 718:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
 719:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 720:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 721:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 128-bit vector triplet data type
 722:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 723:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x4x3_t f32x4x3_t;
 724:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 725:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 726:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 727:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 128-bit vector triplet data type
 728:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 729:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x8x3_t f16x8x3_t;
 730:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 731:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 732:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 733:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector triplet data type in 1.31 format
 734:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 735:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4x3_t q31x4x3_t;
 736:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 737:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 738:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 128-bit vector triplet data type in 1.15 format
 739:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 740:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8x3_t q15x8x3_t;
 741:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 742:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 743:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 128-bit vector triplet data type in 1.7 format
 744:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 745:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x16x3_t q7x16x3_t;
 746:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 747:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 748:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 64-bit vector pair data type
 749:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 750:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x2x2_t f32x2x2_t;
 751:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 752:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 753:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 64-bit vector triplet data type
 754:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 755:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x2x3_t f32x2x3_t;
 756:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 757:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 758:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 64-bit vector quadruplet data type
 759:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 760:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x2x4_t f32x2x4_t;
 761:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 762:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 763:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 764:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 64-bit vector pair data type
 765:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 766:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x4x2_t f16x4x2_t;
 767:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 768:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 769:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 64-bit vector triplet data type
 770:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 771:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x4x3_t f16x4x3_t;
 772:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 773:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 774:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 64-bit vector quadruplet data type
 775:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 776:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x4x4_t f16x4x4_t;
 777:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
 778:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 779:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 780:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 64-bit vector pair data type in 1.31 format
 781:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 782:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x2x2_t q31x2x2_t;
 783:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 784:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 785:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 64-bit vector triplet data type in 1.31 format
 786:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 787:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x2x3_t q31x2x3_t;
 788:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 789:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 790:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 64-bit vector quadruplet data type in 1.31 format
 791:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 792:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4x3_t q31x2x4_t;
 793:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 794:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 795:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 64-bit vector pair data type in 1.15 format
 796:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 797:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x4x2_t q15x4x2_t;
 798:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 799:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 800:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 64-bit vector triplet data type in 1.15 format
 801:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 802:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x4x2_t q15x4x3_t;
 803:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 804:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 805:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 64-bit vector quadruplet data type in 1.15 format
 806:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 807:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x4x3_t q15x4x4_t;
 808:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 809:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 810:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 64-bit vector pair data type in 1.7 format
 811:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 812:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x8x2_t q7x8x2_t;
 813:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 814:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 815:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 64-bit vector triplet data type in 1.7 format
 816:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 817:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x8x3_t q7x8x3_t;
 818:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 819:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 820:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 64-bit vector quadruplet data type in 1.7 format
 821:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 822:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x8x4_t q7x8x4_t;
 823:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 824:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 825:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit ubiquitous 64-bit vector data type
 826:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 827:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef union _any32x2_t
 828:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 829:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       float32x2_t     f;
 830:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       int32x2_t       i;
 831:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } any32x2_t;
 832:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 833:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 834:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 835:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit ubiquitous 64-bit vector data type
 836:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 837:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef union _any16x4_t
 838:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 839:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       float16x4_t     f;
 840:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       int16x4_t       i;
 841:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } any16x4_t;
 842:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
 843:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 844:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 845:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit status 64-bit vector data type.
 846:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 847:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4_t status32x2_t;
 848:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 849:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 850:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit status 64-bit vector data type.
 851:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 852:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8_t status16x4_t;
 853:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 854:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 855:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit status 64-bit vector data type.
 856:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 857:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x16_t status8x8_t;
 858:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 859:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 860:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 861:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 862:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 863:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 864:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief definition to read/write two 16 bit values.
 865:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @deprecated
 866:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 867:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if   defined ( __CC_ARM )
 868:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 869:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 870:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 871:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __GNUC__ )
 872:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 873:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __ICCARM__ )
 874:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 875:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __TI_ARM__ )
 876:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 877:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __CSMC__ )
 878:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 879:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __TASKING__ )
 880:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 881:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined(_MSC_VER )
 882:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 883:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 884:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #error Unknown compiler
 885:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 886:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 887:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 888:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 889:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 890:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 891:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 892:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define STEP(x) (x) <= 0 ? 0 : 1
 893:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define SQ(x) ((x) * (x))
 894:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 895:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /* SIMD replacement */
 896:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 897:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 898:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 899:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 900:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 901:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
 902:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 903:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 904:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t * pQ15)
 905:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 906:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
 907:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 908:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 909:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, pQ15, 4);
 910:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 911:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val = (pQ15[1] << 16) | (pQ15[0] & 0x0FFFF) ;
 912:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 913:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 914:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   return (val);
 915:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 916:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 917:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 918:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 919:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 920:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
 921:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 922:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 923:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t ** pQ15)
 924:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 925:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
 926:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 927:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 928:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, *pQ15, 4);
 929:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 930:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val = ((*pQ15)[1] << 16) | ((*pQ15)[0] & 0x0FFFF);
 931:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 932:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 933:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *pQ15 += 2;
 934:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  return (val);
 935:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 936:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 937:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 938:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 939:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 940:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
 941:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 942:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 943:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t ** pQ15)
 944:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 945:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
 946:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 947:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 948:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, *pQ15, 4);
 949:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 950:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val = ((*pQ15)[1] << 16) | ((*pQ15)[0] & 0x0FFFF);
 951:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 952:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 953:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   *pQ15 -= 2;
 954:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   return (val);
 955:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 956:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 957:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 958:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 959:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 960:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     value     Q31 value
 961:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        none
 962:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 963:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 964:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t ** pQ15,
 965:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t    value)
 966:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 967:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val = value;
 968:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 969:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (*pQ15, &val, 4);
 970:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 971:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ15)[0] = (val & 0x0FFFF);
 972:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ15)[1] = (val >> 16) & 0x0FFFF;
 973:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 974:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 975:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *pQ15 += 2;
 976:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 977:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 978:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 979:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 980:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 981:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     value     Q31 value
 982:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        none
 983:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 984:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 985:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t * pQ15,
 986:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t   value)
 987:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 988:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val = value;
 989:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 990:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 991:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (pQ15, &val, 4);
 992:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 993:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   pQ15[0] = val & 0x0FFFF;
 994:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   pQ15[1] = val >> 16;
 995:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 996:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 997:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 998:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 999:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
1000:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
1001:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ7       points to input value
1002:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
1003:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
1004:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
1005:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q7_t ** pQ7)
1006:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
1007:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
1008:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1009:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1010:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
1011:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, *pQ7, 4);
1012:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
1013:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val =(((*pQ7)[3] & 0x0FF) << 24)  | (((*pQ7)[2] & 0x0FF) << 16)  | (((*pQ7)[1] & 0x0FF) << 8)  | 
1014:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
1015:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1016:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   *pQ7 += 4;
1017:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1018:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   return (val);
1019:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
1020:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1021:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
1022:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
1023:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ7       points to input value
1024:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
1025:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
1026:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
1027:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q7_t ** pQ7)
1028:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
1029:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
1030:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
1031:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, *pQ7, 4);
1032:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
1033:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val = ((((*pQ7)[3]) & 0x0FF) << 24) | ((((*pQ7)[2]) & 0x0FF) << 16)   | ((((*pQ7)[1]) & 0x0FF) <<
1034:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
1035:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   *pQ7 -= 4;
1036:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1037:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   return (val);
1038:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
1039:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1040:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
1041:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
1042:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ7       points to input value
1043:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     value     Q31 value
1044:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        none
1045:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
1046:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
1047:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q7_t ** pQ7,
1048:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t   value)
1049:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
1050:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val = value;
1051:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
1052:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (*pQ7, &val, 4);
1053:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
1054:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ7)[0] = val & 0x0FF;
1055:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ7)[1] = (val >> 8) & 0x0FF;
1056:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ7)[2] = (val >> 16) & 0x0FF;
1057:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ7)[3] = (val >> 24) & 0x0FF;
1058:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1059:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
1060:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   *pQ7 += 4;
1061:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
1062:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1063:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /*
1064:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1065:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** Normally those kind of definitions are in a compiler file
1066:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** in Core or Core_A.
1067:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1068:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
1069:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
1070:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** systems like Python or Matlab.
1071:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1072:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
1073:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** compiler file in Core or Core_A would not make sense.
1074:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1075:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** */
1076:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined ( _MSC_VER ) || defined(__GNUC_PYTHON__)
1077:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
1078:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1079:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       if (data == 0U) { return 32U; }
1080:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1081:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       uint32_t count = 0U;
1082:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       uint32_t mask = 0x80000000U;
1083:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1084:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       while ((data & mask) == 0U)
1085:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1086:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         count += 1U;
1087:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         mask = mask >> 1U;
1088:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1089:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       return count;
1090:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1091:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1092:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1093:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1094:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
1095:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1096:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1097:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       const int32_t min = -1 - max ;
1098:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       if (val > max)
1099:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         return max;
1101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       else if (val < min)
1103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         return min;
1105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return val;
1108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     if (sat <= 31U)
1113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
1115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       if (val > (int32_t)max)
1116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         return max;
1118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       else if (val < 0)
1120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         return 0U;
1122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return (uint32_t)val;
1125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
1127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifndef ARM_MATH_DSP
1129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief definition to pack two 16 bit values.
1131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
1133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
1134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
1135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
1136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
1137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    /**
1139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief definition to pack four 8 bit values.
1140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
1142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
1143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
1144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
1145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
1146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
1147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
1148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
1149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
1150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
1151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
1152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Clips Q63 to Q31 values.
1156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
1158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q63_t x)
1159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
1161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
1162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Clips Q63 to Q15 values.
1166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q63_to_q15(
1168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q63_t x)
1169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
1171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
1172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Clips Q31 to Q7 values.
1176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q7_t clip_q31_to_q7(
1178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t x)
1179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
1181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
1182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Clips Q31 to Q15 values.
1186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q31_to_q15(
1188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t x)
1189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
1191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
1192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
1196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q63_t mult32x64(
1198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q63_t x,
1199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t y)
1200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 203              	 .loc 2 1201 0
 204 017e D7E91201 	 ldrd r0,[r7,#72]
 205 0182 4FF0FF32 	 mov r2,#-1
 206 0186 4FF00003 	 mov r3,#0
 207 018a 00EA0200 	 and r0,r0,r2
 208 018e 01EA0301 	 and r1,r1,r3
 209 0192 7B6C     	 ldr r3,[r7,#68]
 210 0194 1A46     	 mov r2,r3
 211 0196 4FEAE273 	 asr r3,r2,#31
 212 019a 02FB01F5 	 mul r5,r2,r1
 213 019e 00FB03F4 	 mul r4,r0,r3
 214 01a2 2C44     	 add r4,r4,r5
 215 01a4 A0FB0223 	 umull r2,r3,r0,r2
 216 01a8 E118     	 adds r1,r4,r3
 217 01aa 0B46     	 mov r3,r1
 218 01ac 1900     	 movs r1,r3
 219 01ae 3961     	 str r1,[r7,#16]
 220 01b0 DB17     	 asrs r3,r3,#31
 221 01b2 7B61     	 str r3,[r7,#20]
1202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
 222              	 .loc 2 1202 0
 223 01b4 D7E91223 	 ldrd r2,[r7,#72]
 224 01b8 9A46     	 mov r10,r3
 225 01ba 4FEAE37B 	 asr fp,r3,#31
 226 01be 7B6C     	 ldr r3,[r7,#68]
 227 01c0 1A46     	 mov r2,r3
 228 01c2 4FEAE273 	 asr r3,r2,#31
 229 01c6 02FB0BF0 	 mul r0,r2,fp
 230 01ca 0AFB03F1 	 mul r1,r10,r3
 231 01ce 0144     	 add r1,r1,r0
 232 01d0 AAFB0223 	 umull r2,r3,r10,r2
 233 01d4 1944     	 add r1,r1,r3
 234 01d6 0B46     	 mov r3,r1
1201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
 235              	 .loc 2 1201 0
 236 01d8 D7E90401 	 ldrd r0,[r7,#16]
 237 01dc 8018     	 adds r0,r0,r2
 238 01de 41EB0301 	 adc r1,r1,r3
 239              	.LBE7:
 240              	.LBE6:
 637:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 638:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 241              	 .loc 1 638 0
 242 01e2 D7E91623 	 ldrd r2,[r7,#88]
 243 01e6 1218     	 adds r2,r2,r0
 244 01e8 43EB0103 	 adc r3,r3,r1
 245 01ec C7E91623 	 strd r2,[r7,#88]
 246 01f0 D7E92423 	 ldrd r2,[r7,#144]
 247 01f4 C7E90E23 	 strd r2,[r7,#56]
 248 01f8 BB6E     	 ldr r3,[r7,#104]
 249 01fa 7B63     	 str r3,[r7,#52]
 250              	.LBB8:
 251              	.LBB9:
1201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
 252              	 .loc 2 1201 0
 253 01fc D7E90E01 	 ldrd r0,[r7,#56]
 254 0200 4FF0FF32 	 mov r2,#-1
 255 0204 4FF00003 	 mov r3,#0
 256 0208 00EA0200 	 and r0,r0,r2
 257 020c 01EA0301 	 and r1,r1,r3
 258 0210 7B6B     	 ldr r3,[r7,#52]
 259 0212 1A46     	 mov r2,r3
 260 0214 4FEAE273 	 asr r3,r2,#31
 261 0218 02FB01F5 	 mul r5,r2,r1
 262 021c 00FB03F4 	 mul r4,r0,r3
 263 0220 2C44     	 add r4,r4,r5
 264 0222 A0FB0223 	 umull r2,r3,r0,r2
 265 0226 E118     	 adds r1,r4,r3
 266 0228 0B46     	 mov r3,r1
 267 022a 1900     	 movs r1,r3
 268 022c B960     	 str r1,[r7,#8]
 269 022e DB17     	 asrs r3,r3,#31
 270 0230 FB60     	 str r3,[r7,#12]
 271              	 .loc 2 1202 0
 272 0232 D7E90E23 	 ldrd r2,[r7,#56]
 273 0236 1900     	 movs r1,r3
 274 0238 3960     	 str r1,[r7]
 275 023a DB17     	 asrs r3,r3,#31
 276 023c 7B60     	 str r3,[r7,#4]
 277 023e 7B6B     	 ldr r3,[r7,#52]
 278 0240 1A46     	 mov r2,r3
 279 0242 4FEAE273 	 asr r3,r2,#31
 280 0246 D7E90045 	 ldrd r4,[r7]
 281 024a 2946     	 mov r1,r5
 282 024c 02FB01F0 	 mul r0,r2,r1
 283 0250 2146     	 mov r1,r4
 284 0252 01FB03F1 	 mul r1,r1,r3
 285 0256 0144     	 add r1,r1,r0
 286 0258 2046     	 mov r0,r4
 287 025a A0FB0223 	 umull r2,r3,r0,r2
 288 025e 1944     	 add r1,r1,r3
 289 0260 0B46     	 mov r3,r1
1201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
 290              	 .loc 2 1201 0
 291 0262 D7E90201 	 ldrd r0,[r7,#8]
 292 0266 8018     	 adds r0,r0,r2
 293 0268 41EB0301 	 adc r1,r1,r3
 294              	.LBE9:
 295              	.LBE8:
 639:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 640:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 296              	 .loc 1 640 0
 297 026c D7E91623 	 ldrd r2,[r7,#88]
 298 0270 1218     	 adds r2,r2,r0
 299 0272 43EB0103 	 adc r3,r3,r1
 300 0276 C7E91623 	 strd r2,[r7,#88]
 641:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 642:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Every time after the output is computed state should be updated. */
 643:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The states should be updated as: */
 644:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn2 = Xn1 */
 645:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn1 = Xn  */
 646:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn2 = Yn1 */
 647:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc */
 648:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = Xn1;
 301              	 .loc 1 648 0
 302 027a D7F8A430 	 ldr r3,[r7,#164]
 303 027e C7F8A030 	 str r3,[r7,#160]
 649:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = Xn;
 304              	 .loc 1 649 0
 305 0282 7B6E     	 ldr r3,[r7,#100]
 306 0284 C7F8A430 	 str r3,[r7,#164]
 650:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = Yn1;
 307              	 .loc 1 650 0
 308 0288 D7E92623 	 ldrd r2,[r7,#152]
 309 028c C7E92423 	 strd r2,[r7,#144]
 651:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 652:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused  */
 653:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 310              	 .loc 1 653 0
 311 0290 D7E91623 	 ldrd r2,[r7,#88]
 312 0294 D7F88440 	 ldr r4,[r7,#132]
 313 0298 A4F12001 	 sub r1,r4,#32
 314 029c C4F12000 	 rsb r0,r4,#32
 315 02a0 03FA04F9 	 lsl r9,r3,r4
 316 02a4 02FA01F1 	 lsl r1,r2,r1
 317 02a8 49EA0109 	 orr r9,r9,r1
 318 02ac 22FA00F0 	 lsr r0,r2,r0
 319 02b0 49EA0009 	 orr r9,r9,r0
 320 02b4 02FA04F8 	 lsl r8,r2,r4
 321 02b8 C7E92689 	 strd r8,[r7,#152]
 654:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 655:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 656:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 322              	 .loc 1 656 0
 323 02bc BB6D     	 ldr r3,[r7,#88]
 324 02be 7B65     	 str r3,[r7,#84]
 657:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 658:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 659:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 325              	 .loc 1 659 0
 326 02c0 D7E91623 	 ldrd r2,[r7,#88]
 327 02c4 1B00     	 movs r3,r3
 328 02c6 BB61     	 str r3,[r7,#24]
 329 02c8 0023     	 movs r3,#0
 330 02ca FB61     	 str r3,[r7,#28]
 331 02cc BB69     	 ldr r3,[r7,#24]
 332 02ce 3B65     	 str r3,[r7,#80]
 660:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 661:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 662:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 333              	 .loc 1 662 0
 334 02d0 7A6D     	 ldr r2,[r7,#84]
 335 02d2 FB6F     	 ldr r3,[r7,#124]
 336 02d4 22FA03F1 	 lsr r1,r2,r3
 337 02d8 D7F88020 	 ldr r2,[r7,#128]
 338 02dc 3B6D     	 ldr r3,[r7,#80]
 339 02de 9340     	 lsls r3,r3,r2
 340 02e0 0B43     	 orrs r3,r3,r1
 341 02e2 3B65     	 str r3,[r7,#80]
 663:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 664:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 665:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *pOut++ = acc_h;
 342              	 .loc 1 665 0
 343 02e4 D7F8B020 	 ldr r2,[r7,#176]
 344 02e8 131D     	 adds r3,r2,#4
 345 02ea C7F8B030 	 str r3,[r7,#176]
 346 02ee 3B6D     	 ldr r3,[r7,#80]
 347 02f0 1360     	 str r3,[r2]
 666:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc << shift; */
 667:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 668:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 669:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /*    *pOut++ = (q31_t) (acc >> (32 - shift));  */
 670:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 671:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* decrement loop counter */
 672:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       sample--;
 348              	 .loc 1 672 0
 349 02f2 D7F88C30 	 ldr r3,[r7,#140]
 350 02f6 013B     	 subs r3,r3,#1
 351 02f8 C7F88C30 	 str r3,[r7,#140]
 352              	.L2:
 624:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 353              	 .loc 1 624 0
 354 02fc D7F88C30 	 ldr r3,[r7,#140]
 355 0300 002B     	 cmp r3,#0
 356 0302 7FF4E8AE 	 bne .L5
 673:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 674:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 675:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* The first stage output is given as input to the second stage. */
 676:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pIn = pDst;
 357              	 .loc 1 676 0
 358 0306 7B6A     	 ldr r3,[r7,#36]
 359 0308 C7F8B430 	 str r3,[r7,#180]
 677:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 678:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reset to destination buffer working pointer */
 679:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pOut = pDst;
 360              	 .loc 1 679 0
 361 030c 7B6A     	 ldr r3,[r7,#36]
 362 030e C7F8B030 	 str r3,[r7,#176]
 680:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 681:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  Store the updated state variables back into the pState array */
 682:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn1;
 363              	 .loc 1 682 0
 364 0312 D7F8AC10 	 ldr r1,[r7,#172]
 365 0316 01F10803 	 add r3,r1,#8
 366 031a C7F8AC30 	 str r3,[r7,#172]
 367 031e D7F8A430 	 ldr r3,[r7,#164]
 368 0322 1A46     	 mov r2,r3
 369 0324 4FEAE273 	 asr r3,r2,#31
 370 0328 C1E90023 	 strd r2,[r1]
 683:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn2;
 371              	 .loc 1 683 0
 372 032c D7F8AC10 	 ldr r1,[r7,#172]
 373 0330 01F10803 	 add r3,r1,#8
 374 0334 C7F8AC30 	 str r3,[r7,#172]
 375 0338 D7F8A030 	 ldr r3,[r7,#160]
 376 033c 1A46     	 mov r2,r3
 377 033e 4FEAE273 	 asr r3,r2,#31
 378 0342 C1E90023 	 strd r2,[r1]
 684:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn1;
 379              	 .loc 1 684 0
 380 0346 D7F8AC10 	 ldr r1,[r7,#172]
 381 034a 01F10803 	 add r3,r1,#8
 382 034e C7F8AC30 	 str r3,[r7,#172]
 383 0352 D7E92623 	 ldrd r2,[r7,#152]
 384 0356 C1E90023 	 strd r2,[r1]
 685:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn2;
 385              	 .loc 1 685 0
 386 035a D7F8AC10 	 ldr r1,[r7,#172]
 387 035e 01F10803 	 add r3,r1,#8
 388 0362 C7F8AC30 	 str r3,[r7,#172]
 389 0366 D7E92423 	 ldrd r2,[r7,#144]
 390 036a C1E90023 	 strd r2,[r1]
 686:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 687:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   } while (--stage);
 391              	 .loc 1 687 0
 392 036e D7F88830 	 ldr r3,[r7,#136]
 393 0372 013B     	 subs r3,r3,#1
 394 0374 C7F88830 	 str r3,[r7,#136]
 395 0378 D7F88830 	 ldr r3,[r7,#136]
 396 037c 002B     	 cmp r3,#0
 397 037e 7FF468AE 	 bne .L6
 688:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 689:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** }
 398              	 .loc 1 689 0
 399 0382 BC37     	 adds r7,r7,#188
 400              	.LCFI3:
 401              	 .cfi_def_cfa_offset 28
 402 0384 BD46     	 mov sp,r7
 403              	.LCFI4:
 404              	 .cfi_def_cfa_register 13
 405              	 
 406 0386 BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 407              	.LCFI5:
 408              	 .cfi_restore 11
 409              	 .cfi_restore 10
 410              	 .cfi_restore 9
 411              	 .cfi_restore 8
 412              	 .cfi_restore 7
 413              	 .cfi_restore 5
 414              	 .cfi_restore 4
 415              	 .cfi_def_cfa_offset 0
 416 038a 7047     	 bx lr
 417              	 .cfi_endproc
 418              	.LFE149:
 420              	 .text
 421              	.Letext0:
 422              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 423              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 424              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_biquad_cascade_df1_32x64_q31.c
    {standard input}:20     .text.arm_biquad_cas_df1_32x64_q31:00000000 $t
    {standard input}:25     .text.arm_biquad_cas_df1_32x64_q31:00000000 arm_biquad_cas_df1_32x64_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
