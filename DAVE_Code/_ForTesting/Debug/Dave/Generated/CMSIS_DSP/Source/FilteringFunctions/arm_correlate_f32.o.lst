   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_correlate_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_correlate_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_correlate_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_correlate_f32:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * Title:        arm_correlate_f32.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * Description:  Correlation of floating-point sequences
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @defgroup Corr Correlation
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   Correlation is a mathematical operation that is similar to convolution.
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   As with convolution, correlation uses two signals to produce a third signal.
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   The underlying algorithms in correlation and convolution are identical except that one of the inp
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   Correlation is commonly used to measure the similarity between two signals.
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   It has applications in pattern recognition, cryptanalysis, and searching.
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   The CMSIS library provides correlation functions for Q7, Q15, Q31 and floating-point data types.
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   Fast versions of the Q15 and Q31 functions are also provided.
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @par           Algorithm
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    Let <code>a[n]</code> and <code>b[n]</code> be sequences of length <code>srcALen
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    The convolution of the two signals is denoted by
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   <pre>
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       c[n] = a[n] * b[n]
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   </pre>
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    In correlation, one of the signals is flipped in time
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   <pre>
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****        c[n] = a[n] * b[-n]
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   </pre>
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @par
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    and this is mathematically defined as
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    \image html CorrelateEquation.gif
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @par
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    The <code>pSrcA</code> points to the first input vector of length <code>srcALen<
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    The result <code>c[n]</code> is of length <code>2 * max(srcALen, srcBLen) - 1</c
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    The output result is written to <code>pDst</code> and the calling function must 
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @note
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    The <code>pDst</code> should be initialized to all zeros before being used.
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @par           Fixed-Point Behavior
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    Correlation requires summing up a large number of intermediate products.
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    As such, the Q7, Q15, and Q31 functions run a risk of overflow and saturation.
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    Refer to the function specific documentation below for further details of the pa
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @par           Fast Versions
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    Fast versions are supported for Q31 and Q15.  Cycles for Fast versions are less 
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    the input signals should be scaled down to avoid intermediate overflows.
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @par           Opt Versions
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    Opt versions are supported for Q15 and Q7.  Design uses internal scratch buffer 
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****                    These versions are optimised in cycles and consumes more memory (Scratch memory)
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  */
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** /**
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @addtogroup Corr
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @{
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  */
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** /**
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @brief         Correlation of floating-point sequences.
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @param[in]     pSrcA      points to the first input sequence
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @param[in]     srcALen    length of the first input sequence
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @param[in]     pSrcB      points to the second input sequence
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @param[in]     srcBLen    length of the second input sequence
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @param[out]    pDst       points to the location where the output result is written.  Length 2 * 
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   @return        none
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****  */
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #include "CMSIS_DSP/Include/arm_helium_utils.h"
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #include "CMSIS_DSP/PrivateInclude/arm_vec_filtering.h"
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** void arm_correlate_f32(
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t * pSrcA,
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t srcALen,
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t * pSrcB,
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t srcBLen,
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t * pDst)
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** {
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     const float32_t *pIn1 = pSrcA;    /* inputA pointer               */
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     const float32_t *pIn2 = pSrcB + (srcBLen - 1U);   /* inputB pointer               */
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     const float32_t *pX, *pY;
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     const float32_t *pA, *pB;
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     int32_t   i = 0U, j = 0;    /* loop counters */
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     int32_t   inv = 4U;         /* Reverse order flag */
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     uint32_t  tot = 0U;         /* Length */
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     int32_t   block1, block2, block3;
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     int32_t   incr;
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     tot = ((srcALen + srcBLen) - 2U);
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     if (srcALen > srcBLen)
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * Calculating the number of zeros to be padded to the output
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         j = srcALen - srcBLen;
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * Initialize the pointer after zero padding
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += j;
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     else if (srcALen < srcBLen)
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * Initialization to inputB pointer
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pIn1 = pSrcB;
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * Initialization to the end of inputA pointer
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pIn2 = pSrcA + (srcALen - 1U);
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * Initialisation of the pointer after zero padding
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst = pDst + tot;
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * Swapping the lengths
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         j = srcALen;
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         srcALen = srcBLen;
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         srcBLen = j;
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * Setting the reverse flag
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         inv = -4;
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     block1 = srcBLen - 1;
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     block2 = srcALen - srcBLen + 1;
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     block3 = srcBLen - 1;
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pA = pIn1;
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pB = pIn2;
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     incr = inv / 4;
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     for (i = 0U; i <= block1 - 2; i += 2)
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t  count = i + 1;
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc0;
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc1;
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * compute 2 accumulators per loop
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * size is incrementing for second accumulator
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * Y pointer is decrementing for second accumulator
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pX = pA;
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pY = pB;
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         MVE_INTR_CORR_DUAL_DEC_Y_INC_SIZE_F32(acc0, acc1, pX, pY, count);
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc0;
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc1;
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pB -= 2;
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     for (; i < block1; i++)
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t  count = i + 1;
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc;
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pX = pA;
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pY = pB;
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         MVE_INTR_CORR_SINGLE_F32(acc, pX, pY, count);
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc;
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pB--;
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     for (i = 0U; i <= block2 - 4; i += 4)
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc0;
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc1;
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc2;
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc3;
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pX = pA;
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pY = pB;
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * compute 4 accumulators per loop
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * size is fixed for all accumulators
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * X pointer is incrementing for successive accumulators
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         MVE_INTR_CORR_QUAD_INC_X_FIXED_SIZE_F32(acc0, acc1, acc2, acc3, pX, pY, srcBLen);
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc0;
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc1;
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc2;
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc3;
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pA += 4;
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     for (; i <= block2 - 2; i += 2)
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc0;
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc1;
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pX = pA;
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pY = pB;
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * compute 2 accumulators per loop
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * size is fixed for all accumulators
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * X pointer is incrementing for second accumulator
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         MVE_INTR_CORR_DUAL_INC_X_FIXED_SIZE_F32(acc0, acc1, pX, pY, srcBLen);
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc0;
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc1;
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pA += 2;
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     if (block2 & 1)
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc;
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pX = pA;
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pY = pB;
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         MVE_INTR_CORR_SINGLE_F32(acc, pX, pY, srcBLen);
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc;
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 259:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pA++;
 260:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 261:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 262:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     for (i = block3 - 1; i >= 0; i -= 2)
 263:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 264:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 265:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t  count = (i + 1);
 266:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc0;
 267:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc1;
 268:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 269:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pX = pA;
 270:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pY = pB;
 271:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /*
 272:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * compute 2 accumulators per loop
 273:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * size is decrementing for second accumulator
 274:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          * X pointer is incrementing for second accumulator
 275:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****          */
 276:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         MVE_INTR_CORR_DUAL_INC_X_DEC_SIZE_F32(acc0, acc1, pX, pY, count);
 277:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc0;
 279:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 280:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc1;
 281:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 282:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pA += 2;
 283:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 284:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 285:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     for (; i >= 0; i--)
 286:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 287:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t  count = (i + 1);
 288:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t acc;
 289:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 290:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pX = pA;
 291:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pY = pB;
 292:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         MVE_INTR_CORR_SINGLE_F32(acc, pX, pY, count);
 293:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 294:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         *pDst = acc;
 295:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pDst += incr;
 296:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         pA++;
 297:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 298:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** }
 299:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 300:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 301:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** void arm_correlate_f32(
 302:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t * pSrcA,
 303:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t srcALen,
 304:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t * pSrcB,
 305:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t srcBLen,
 306:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t * pDst)
 307:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** {
  28              	 .loc 1 307 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 95B0     	 sub sp,sp,#84
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 88
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
 308:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 309:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined(ARM_MATH_DSP) && !defined(ARM_MATH_AUTOVECTORIZE)
 310:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   
 311:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t *pIn1;                               /* InputA pointer */
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t *pIn2;                               /* InputB pointer */
 313:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t *pOut = pDst;                        /* Output pointer */
  47              	 .loc 1 313 0
  48 000e BB6D     	 ldr r3,[r7,#88]
  49 0010 7B64     	 str r3,[r7,#68]
 314:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t *px;                                 /* Intermediate inputA pointer */
 315:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t *py;                                 /* Intermediate inputB pointer */
 316:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t *pSrc1;
 317:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t sum;
 318:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t blockSize1, blockSize2, blockSize3;   /* Loop counters */
 319:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t j, k, count, blkCnt;                  /* Loop counters */
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t outBlockSize;                         /* Loop counter */
 321:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         int32_t inc = 1;                               /* Destination address modifier */
  50              	 .loc 1 321 0
  51 0012 0123     	 movs r3,#1
  52 0014 FB61     	 str r3,[r7,#28]
 322:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 323:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 324:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32_t acc0, acc1, acc2, acc3,c0;                    /* Accumulators */
 325:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if !defined(ARM_MATH_NEON)
 326:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32_t x0, x1, x2, x3;                        /* temporary variables for holding input and c
 327:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif
 328:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif
 329:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 330:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
 331:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* srcB is always made to slide across srcA. */
 332:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
 333:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* But CORR(x, y) is reverse of CORR(y, x) */
 334:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer */
 335:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* and the destination pointer modifier, inc is set to -1 */
 336:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* If srcALen > srcBLen, zero pad has to be done to srcB to make the two inputs of same length */
 337:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* But to improve the performance,
 338:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * we assume zeroes in the output instead of zero padding either of the the inputs*/
 339:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* If srcALen > srcBLen,
 340:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * (srcALen - srcBLen) zeroes has to included in the starting of the output buffer */
 341:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* If srcALen < srcBLen,
 342:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * (srcALen - srcBLen) zeroes has to included in the ending of the output buffer */
 343:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   if (srcALen >= srcBLen)
  53              	 .loc 1 343 0
  54 0016 BA68     	 ldr r2,[r7,#8]
  55 0018 3B68     	 ldr r3,[r7]
  56 001a 9A42     	 cmp r2,r3
  57 001c 14D3     	 bcc .L2
 344:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
 345:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialization of inputA pointer */
 346:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pIn1 = pSrcA;
  58              	 .loc 1 346 0
  59 001e FB68     	 ldr r3,[r7,#12]
  60 0020 FB64     	 str r3,[r7,#76]
 347:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 348:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialization of inputB pointer */
 349:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pIn2 = pSrcB;
  61              	 .loc 1 349 0
  62 0022 7B68     	 ldr r3,[r7,#4]
  63 0024 BB64     	 str r3,[r7,#72]
 350:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 351:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Number of output samples is calculated */
 352:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     outBlockSize = (2U * srcALen) - 1U;
  64              	 .loc 1 352 0
  65 0026 BB68     	 ldr r3,[r7,#8]
  66 0028 5B00     	 lsls r3,r3,#1
  67 002a 013B     	 subs r3,r3,#1
  68 002c BB61     	 str r3,[r7,#24]
 353:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 354:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* When srcALen > srcBLen, zero padding has to be done to srcB
 355:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      * to make their lengths equal.
 356:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      * Instead, (outBlockSize - (srcALen + srcBLen - 1))
 357:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      * number of output samples are made zero */
 358:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     j = outBlockSize - (srcALen + (srcBLen - 1U));
  69              	 .loc 1 358 0
  70 002e 3A68     	 ldr r2,[r7]
  71 0030 BB68     	 ldr r3,[r7,#8]
  72 0032 1344     	 add r3,r3,r2
  73 0034 BA69     	 ldr r2,[r7,#24]
  74 0036 D31A     	 subs r3,r2,r3
  75 0038 0133     	 adds r3,r3,#1
  76 003a 7B61     	 str r3,[r7,#20]
 359:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 360:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Updating the pointer position to non zero value */
 361:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pOut += j;
  77              	 .loc 1 361 0
  78 003c 7B69     	 ldr r3,[r7,#20]
  79 003e 9B00     	 lsls r3,r3,#2
  80 0040 7A6C     	 ldr r2,[r7,#68]
  81 0042 1344     	 add r3,r3,r2
  82 0044 7B64     	 str r3,[r7,#68]
  83 0046 16E0     	 b .L3
  84              	.L2:
 362:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
 363:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   else
 364:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
 365:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialization of inputA pointer */
 366:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pIn1 = pSrcB;
  85              	 .loc 1 366 0
  86 0048 7B68     	 ldr r3,[r7,#4]
  87 004a FB64     	 str r3,[r7,#76]
 367:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 368:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialization of inputB pointer */
 369:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pIn2 = pSrcA;
  88              	 .loc 1 369 0
  89 004c FB68     	 ldr r3,[r7,#12]
  90 004e BB64     	 str r3,[r7,#72]
 370:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 371:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* srcBLen is always considered as shorter or equal to srcALen */
 372:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     j = srcBLen;
  91              	 .loc 1 372 0
  92 0050 3B68     	 ldr r3,[r7]
  93 0052 7B61     	 str r3,[r7,#20]
 373:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     srcBLen = srcALen;
  94              	 .loc 1 373 0
  95 0054 BB68     	 ldr r3,[r7,#8]
  96 0056 3B60     	 str r3,[r7]
 374:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     srcALen = j;
  97              	 .loc 1 374 0
  98 0058 7B69     	 ldr r3,[r7,#20]
  99 005a BB60     	 str r3,[r7,#8]
 375:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 376:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* CORR(x, y) = Reverse order(CORR(y, x)) */
 377:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Hence set the destination pointer to point to the last output sample */
 378:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pOut = pDst + ((srcALen + srcBLen) - 2U);
 100              	 .loc 1 378 0
 101 005c BA68     	 ldr r2,[r7,#8]
 102 005e 3B68     	 ldr r3,[r7]
 103 0060 1344     	 add r3,r3,r2
 104 0062 03F18043 	 add r3,r3,#1073741824
 105 0066 023B     	 subs r3,r3,#2
 106 0068 9B00     	 lsls r3,r3,#2
 107 006a BA6D     	 ldr r2,[r7,#88]
 108 006c 1344     	 add r3,r3,r2
 109 006e 7B64     	 str r3,[r7,#68]
 379:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 380:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Destination address modifier is set to -1 */
 381:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     inc = -1;
 110              	 .loc 1 381 0
 111 0070 4FF0FF33 	 mov r3,#-1
 112 0074 FB61     	 str r3,[r7,#28]
 113              	.L3:
 382:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
 383:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 384:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* The function is internally
 385:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * divided into three stages according to the number of multiplications that has to be
 386:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * taken place between inputA samples and inputB samples. In the first stage of the
 387:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * algorithm, the multiplications increase by one for every iteration.
 388:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * In the second stage of the algorithm, srcBLen number of multiplications are done.
 389:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * In the third stage of the algorithm, the multiplications decrease by one
 390:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * for every iteration. */
 391:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 392:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* The algorithm is implemented in three stages.
 393:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      The loop counters of each stage is initiated here. */
 394:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   blockSize1 = srcBLen - 1U;
 114              	 .loc 1 394 0
 115 0076 3B68     	 ldr r3,[r7]
 116 0078 013B     	 subs r3,r3,#1
 117 007a 3B63     	 str r3,[r7,#48]
 395:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   blockSize2 = srcALen - (srcBLen - 1U);
 118              	 .loc 1 395 0
 119 007c BA68     	 ldr r2,[r7,#8]
 120 007e 3B68     	 ldr r3,[r7]
 121 0080 D31A     	 subs r3,r2,r3
 122 0082 0133     	 adds r3,r3,#1
 123 0084 3B61     	 str r3,[r7,#16]
 396:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   blockSize3 = blockSize1;
 124              	 .loc 1 396 0
 125 0086 3B6B     	 ldr r3,[r7,#48]
 126 0088 FB62     	 str r3,[r7,#44]
 397:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 398:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* --------------------------
 399:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * Initializations of stage1
 400:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * -------------------------*/
 401:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 402:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* sum = x[0] * y[srcBlen - 1]
 403:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * sum = x[0] * y[srcBlen-2] + x[1] * y[srcBlen - 1]
 404:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * ....
 405:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * sum = x[0] * y[0] + x[1] * y[1] +...+ x[srcBLen - 1] * y[srcBLen - 1]
 406:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    */
 407:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 408:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* In this stage the MAC operations are increased by 1 for every iteration.
 409:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      The count variable holds the number of MAC operations performed */
 410:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   count = 1U;
 127              	 .loc 1 410 0
 128 008a 0123     	 movs r3,#1
 129 008c 7B62     	 str r3,[r7,#36]
 411:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 412:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Working pointer of inputA */
 413:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   px = pIn1;
 130              	 .loc 1 413 0
 131 008e FB6C     	 ldr r3,[r7,#76]
 132 0090 3B64     	 str r3,[r7,#64]
 414:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 415:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Working pointer of inputB */
 416:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   pSrc1 = pIn2 + (srcBLen - 1U);
 133              	 .loc 1 416 0
 134 0092 3B68     	 ldr r3,[r7]
 135 0094 03F18043 	 add r3,r3,#1073741824
 136 0098 013B     	 subs r3,r3,#1
 137 009a 9B00     	 lsls r3,r3,#2
 138 009c BA6C     	 ldr r2,[r7,#72]
 139 009e 1344     	 add r3,r3,r2
 140 00a0 BB63     	 str r3,[r7,#56]
 417:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   py = pSrc1;
 141              	 .loc 1 417 0
 142 00a2 BB6B     	 ldr r3,[r7,#56]
 143 00a4 FB63     	 str r3,[r7,#60]
 418:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 419:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* ------------------------
 420:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * Stage1 process
 421:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * ----------------------*/
 422:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 423:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* The first stage starts here */
 424:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   while (blockSize1 > 0U)
 144              	 .loc 1 424 0
 145 00a6 33E0     	 b .L4
 146              	.L7:
 425:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
 426:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Accumulator is made zero for every iteration */
 427:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     sum = 0.0f;
 147              	 .loc 1 427 0
 148 00a8 4FF00003 	 mov r3,#0
 149 00ac 7B63     	 str r3,[r7,#52]
 428:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 429:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 430:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 431:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 432:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     k = count >> 2U;
 433:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 434:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined(ARM_MATH_NEON)
 435:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x4_t x,y;
 436:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x4_t res = vdupq_n_f32(0) ;
 437:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x2_t accum = vdup_n_f32(0);
 438:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 439:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (k > 0U)
 440:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 441:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       x = vld1q_f32(px);
 442:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       y = vld1q_f32(py);
 443:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 444:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       res = vmlaq_f32(res,x, y);
 445:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 446:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       px += 4;
 447:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       py += 4;
 448:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 449:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement the loop counter */
 450:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k--;
 451:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 452:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 453:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     accum = vpadd_f32(vget_low_f32(res), vget_high_f32(res));
 454:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     sum += accum[0] + accum[1];
 455:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 456:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     k = count & 0x3;
 457:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 458:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 459:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 460:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (k > 0U)
 461:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 462:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* x[0] * y[srcBLen - 4] */
 463:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 464:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 465:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* x[1] * y[srcBLen - 3] */
 466:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 467:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 468:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* x[2] * y[srcBLen - 2] */
 469:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 470:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 471:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* x[3] * y[srcBLen - 1] */
 472:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 473:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 474:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement loop counter */
 475:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k--;
 476:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 477:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 478:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Loop unrolling: Compute remaining outputs */
 479:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     k = count % 0x4U;
 480:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 481:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 482:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 483:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 484:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialize k with number of samples */
 485:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     k = count;
 150              	 .loc 1 485 0
 151 00ae 7B6A     	 ldr r3,[r7,#36]
 152 00b0 BB62     	 str r3,[r7,#40]
 486:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 487:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON) */
 488:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 489:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (k > 0U)
 153              	 .loc 1 489 0
 154 00b2 14E0     	 b .L5
 155              	.L6:
 490:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 491:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Perform the multiply-accumulate */
 492:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* x[0] * y[srcBLen - 1] */
 493:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 156              	 .loc 1 493 0
 157 00b4 3B6C     	 ldr r3,[r7,#64]
 158 00b6 1A1D     	 adds r2,r3,#4
 159 00b8 3A64     	 str r2,[r7,#64]
 160 00ba 93ED007A 	 flds s14,[r3]
 161 00be FB6B     	 ldr r3,[r7,#60]
 162 00c0 1A1D     	 adds r2,r3,#4
 163 00c2 FA63     	 str r2,[r7,#60]
 164 00c4 D3ED007A 	 flds s15,[r3]
 165 00c8 67EE277A 	 fmuls s15,s14,s15
 166 00cc 97ED0D7A 	 flds s14,[r7,#52]
 167 00d0 77EE277A 	 fadds s15,s14,s15
 168 00d4 C7ED0D7A 	 fsts s15,[r7,#52]
 494:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 495:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement loop counter */
 496:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k--;
 169              	 .loc 1 496 0
 170 00d8 BB6A     	 ldr r3,[r7,#40]
 171 00da 013B     	 subs r3,r3,#1
 172 00dc BB62     	 str r3,[r7,#40]
 173              	.L5:
 489:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 174              	 .loc 1 489 0
 175 00de BB6A     	 ldr r3,[r7,#40]
 176 00e0 002B     	 cmp r3,#0
 177 00e2 E7D1     	 bne .L6
 497:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 498:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 499:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Store the result in the accumulator in the destination buffer. */
 500:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     *pOut = sum;
 178              	 .loc 1 500 0
 179 00e4 7B6C     	 ldr r3,[r7,#68]
 180 00e6 7A6B     	 ldr r2,[r7,#52]
 181 00e8 1A60     	 str r2,[r3]
 501:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Destination pointer is updated according to the address modifier, inc */
 502:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pOut += inc;
 182              	 .loc 1 502 0
 183 00ea FB69     	 ldr r3,[r7,#28]
 184 00ec 9B00     	 lsls r3,r3,#2
 185 00ee 7A6C     	 ldr r2,[r7,#68]
 186 00f0 1344     	 add r3,r3,r2
 187 00f2 7B64     	 str r3,[r7,#68]
 503:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 504:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 505:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     py = pSrc1 - count;
 188              	 .loc 1 505 0
 189 00f4 7B6A     	 ldr r3,[r7,#36]
 190 00f6 9B00     	 lsls r3,r3,#2
 191 00f8 5B42     	 negs r3,r3
 192 00fa BA6B     	 ldr r2,[r7,#56]
 193 00fc 1344     	 add r3,r3,r2
 194 00fe FB63     	 str r3,[r7,#60]
 506:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     px = pIn1;
 195              	 .loc 1 506 0
 196 0100 FB6C     	 ldr r3,[r7,#76]
 197 0102 3B64     	 str r3,[r7,#64]
 507:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 508:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Increment MAC count */
 509:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     count++;
 198              	 .loc 1 509 0
 199 0104 7B6A     	 ldr r3,[r7,#36]
 200 0106 0133     	 adds r3,r3,#1
 201 0108 7B62     	 str r3,[r7,#36]
 510:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 511:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Decrement loop counter */
 512:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     blockSize1--;
 202              	 .loc 1 512 0
 203 010a 3B6B     	 ldr r3,[r7,#48]
 204 010c 013B     	 subs r3,r3,#1
 205 010e 3B63     	 str r3,[r7,#48]
 206              	.L4:
 424:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
 207              	 .loc 1 424 0
 208 0110 3B6B     	 ldr r3,[r7,#48]
 209 0112 002B     	 cmp r3,#0
 210 0114 C8D1     	 bne .L7
 513:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
 514:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 515:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* --------------------------
 516:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * Initializations of stage2
 517:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * ------------------------*/
 518:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 519:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* sum = x[0] * y[0] + x[1] * y[1] +...+ x[srcBLen-1] * y[srcBLen-1]
 520:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * sum = x[1] * y[0] + x[2] * y[1] +...+ x[srcBLen]   * y[srcBLen-1]
 521:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * ....
 522:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * sum = x[srcALen-srcBLen-2] * y[0] + x[srcALen-srcBLen-1] * y[1] +...+ x[srcALen-1] * y[srcBLen
 523:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    */
 524:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 525:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Working pointer of inputA */
 526:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   px = pIn1;
 211              	 .loc 1 526 0
 212 0116 FB6C     	 ldr r3,[r7,#76]
 213 0118 3B64     	 str r3,[r7,#64]
 527:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 528:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Working pointer of inputB */
 529:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   py = pIn2;
 214              	 .loc 1 529 0
 215 011a BB6C     	 ldr r3,[r7,#72]
 216 011c FB63     	 str r3,[r7,#60]
 530:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 531:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* count is index by which the pointer pIn1 to be incremented */
 532:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   count = 0U;
 217              	 .loc 1 532 0
 218 011e 0023     	 movs r3,#0
 219 0120 7B62     	 str r3,[r7,#36]
 533:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 534:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* -------------------
 535:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * Stage2 process
 536:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * ------------------*/
 537:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 538:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 539:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * So, to loop unroll over blockSize2,
 540:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * srcBLen should be greater than or equal to 4 */
 541:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   if (srcBLen >= 4U)
 220              	 .loc 1 541 0
 221 0122 3B68     	 ldr r3,[r7]
 222 0124 032B     	 cmp r3,#3
 223 0126 39D9     	 bls .L8
 542:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
 543:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 544:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 545:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 546:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     blkCnt = blockSize2 >> 2U;
 547:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 548:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined(ARM_MATH_NEON)
 549:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       float32x4_t c;
 550:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       float32x4_t x1v;
 551:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       float32x4_t x2v;
 552:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       float32x4_t x;
 553:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       float32x4_t res = vdupq_n_f32(0) ;
 554:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 555:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 556:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (blkCnt > 0U)
 557:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 558:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Set all accumulators to zero */
 559:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       acc0 = 0.0f;
 560:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       acc1 = 0.0f;
 561:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       acc2 = 0.0f;
 562:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       acc3 = 0.0f;
 563:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 564:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined(ARM_MATH_NEON)
 565:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Compute 4 MACs simultaneously. */
 566:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k = srcBLen >> 2U;
 567:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 568:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       res = vdupq_n_f32(0) ;
 569:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 570:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       x1v = vld1q_f32(px);
 571:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       px += 4;
 572:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       do
 573:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 574:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x2v = vld1q_f32(px);
 575:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         c = vld1q_f32(py);
 576:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 577:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         py += 4;
 578:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 579:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x = x1v;
 580:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         res = vmlaq_n_f32(res,x,c[0]);
 581:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 582:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x = vextq_f32(x1v,x2v,1);
 583:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 584:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         res = vmlaq_n_f32(res,x,c[1]);
 585:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 586:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x = vextq_f32(x1v,x2v,2);
 587:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 588:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 	res = vmlaq_n_f32(res,x,c[2]);
 589:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 590:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x = vextq_f32(x1v,x2v,3);
 591:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 592:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 	res = vmlaq_n_f32(res,x,c[3]);
 593:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 594:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x1v = x2v;
 595:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         px+=4;
 596:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       } while (--k);
 597:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       
 598:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 599:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****        ** No loop unrolling is used. */
 600:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k = srcBLen & 0x3;
 601:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 602:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       while (k > 0U)
 603:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 604:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read y[srcBLen - 5] sample */
 605:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         c0 = *(py++);
 606:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 607:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         res = vmlaq_n_f32(res,x1v,c0);
 608:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 609:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Reuse the present samples for the next MAC */
 610:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x1v[0] = x1v[1];
 611:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x1v[1] = x1v[2];
 612:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x1v[2] = x1v[3];
 613:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 614:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x1v[3] = *(px++);
 615:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 616:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Decrement the loop counter */
 617:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         k--;
 618:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       }
 619:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 620:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       px-=1;
 621:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 622:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       acc0 = res[0];
 623:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       acc1 = res[1];
 624:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       acc2 = res[2];
 625:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       acc3 = res[3];
 626:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 627:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* read x[0], x[1], x[2] samples */
 628:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       x0 = *px++;
 629:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       x1 = *px++;
 630:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       x2 = *px++;
 631:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 632:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Apply loop unrolling and compute 4 MACs simultaneously. */
 633:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k = srcBLen >> 2U;
 634:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 635:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 636:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 637:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       do
 638:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 639:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read y[0] sample */
 640:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         c0 = *(py++);
 641:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read x[3] sample */
 642:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x3 = *(px++);
 643:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 644:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Perform the multiply-accumulate */
 645:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc0 +=  x[0] * y[0] */
 646:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc0 += x0 * c0;
 647:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc1 +=  x[1] * y[0] */
 648:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc1 += x1 * c0;
 649:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc2 +=  x[2] * y[0] */
 650:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc2 += x2 * c0;
 651:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc3 +=  x[3] * y[0] */
 652:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc3 += x3 * c0;
 653:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 654:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read y[1] sample */
 655:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         c0 = *(py++);
 656:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read x[4] sample */
 657:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x0 = *(px++);
 658:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 659:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Perform the multiply-accumulate */
 660:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc0 +=  x[1] * y[1] */
 661:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc0 += x1 * c0;
 662:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc1 +=  x[2] * y[1] */
 663:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc1 += x2 * c0;
 664:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc2 +=  x[3] * y[1] */
 665:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc2 += x3 * c0;
 666:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc3 +=  x[4] * y[1] */
 667:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc3 += x0 * c0;
 668:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 669:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read y[2] sample */
 670:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         c0 = *(py++);
 671:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read x[5] sample */
 672:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x1 = *(px++);
 673:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 674:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Perform the multiply-accumulate */
 675:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc0 +=  x[2] * y[2] */
 676:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc0 += x2 * c0;
 677:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc1 +=  x[3] * y[2] */
 678:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc1 += x3 * c0;
 679:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc2 +=  x[4] * y[2] */
 680:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc2 += x0 * c0;
 681:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc3 +=  x[5] * y[2] */
 682:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc3 += x1 * c0;
 683:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 684:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read y[3] sample */
 685:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         c0 = *(py++);
 686:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read x[6] sample */
 687:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x2 = *(px++);
 688:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 689:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Perform the multiply-accumulate */
 690:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc0 +=  x[3] * y[3] */
 691:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc0 += x3 * c0;
 692:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc1 +=  x[4] * y[3] */
 693:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc1 += x0 * c0;
 694:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc2 +=  x[5] * y[3] */
 695:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc2 += x1 * c0;
 696:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc3 +=  x[6] * y[3] */
 697:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc3 += x2 * c0;
 698:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 699:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       } while (--k);
 700:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 701:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 702:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****        ** No loop unrolling is used. */
 703:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k = srcBLen % 0x4U;
 704:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 705:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       while (k > 0U)
 706:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 707:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read y[4] sample */
 708:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         c0 = *(py++);
 709:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Read x[7] sample */
 710:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x3 = *(px++);
 711:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 712:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Perform the multiply-accumulate */
 713:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc0 +=  x[4] * y[4] */
 714:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc0 += x0 * c0;
 715:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc1 +=  x[5] * y[4] */
 716:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc1 += x1 * c0;
 717:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc2 +=  x[6] * y[4] */
 718:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc2 += x2 * c0;
 719:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* acc3 +=  x[7] * y[4] */
 720:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         acc3 += x3 * c0;
 721:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 722:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Reuse the present samples for the next MAC */
 723:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x0 = x1;
 724:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x1 = x2;
 725:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         x2 = x3;
 726:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 727:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Decrement the loop counter */
 728:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         k--;
 729:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       }
 730:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 731:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 732:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 733:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 734:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       *pOut = acc0;
 735:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Destination pointer is updated according to the address modifier, inc */
 736:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       pOut += inc;
 737:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 738:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       *pOut = acc1;
 739:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       pOut += inc;
 740:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 741:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       *pOut = acc2;
 742:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       pOut += inc;
 743:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 744:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       *pOut = acc3;
 745:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       pOut += inc;
 746:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 747:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Increment the pointer pIn1 index, count by 4 */
 748:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       count += 4U;
 749:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 750:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 751:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       px = pIn1 + count;
 752:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       py = pIn2;
 753:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 754:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement loop counter */
 755:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       blkCnt--;
 756:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 757:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 758:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Loop unrolling: Compute remaining outputs */
 759:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     blkCnt = blockSize2 % 0x4U;
 760:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 761:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 762:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 763:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialize blkCnt with number of samples */
 764:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     blkCnt = blockSize2;
 224              	 .loc 1 764 0
 225 0128 3B69     	 ldr r3,[r7,#16]
 226 012a 3B62     	 str r3,[r7,#32]
 765:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 766:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON) */
 767:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 768:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (blkCnt > 0U)
 227              	 .loc 1 768 0
 228 012c 32E0     	 b .L9
 229              	.L12:
 769:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 770:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Accumulator is made zero for every iteration */
 771:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum = 0.0f;
 230              	 .loc 1 771 0
 231 012e 4FF00003 	 mov r3,#0
 232 0132 7B63     	 str r3,[r7,#52]
 772:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 773:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 774:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 775:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 776:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k = srcBLen >> 2U;
 777:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 778:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined(ARM_MATH_NEON)
 779:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x4_t x,y;
 780:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x4_t res = vdupq_n_f32(0) ;
 781:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x2_t accum = vdup_n_f32(0);
 782:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 783:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (k > 0U)
 784:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 785:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       x = vld1q_f32(px);
 786:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       y = vld1q_f32(py);
 787:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 788:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       res = vmlaq_f32(res,x, y);
 789:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 790:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       px += 4;
 791:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       py += 4;
 792:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement the loop counter */
 793:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k--;
 794:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 795:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 796:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     accum = vpadd_f32(vget_low_f32(res), vget_high_f32(res));
 797:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     sum += accum[0] + accum[1];
 798:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 799:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 800:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****        ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 801:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       while (k > 0U)
 802:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 803:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Perform the multiply-accumulate */
 804:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         sum += *px++ * *py++;
 805:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         sum += *px++ * *py++;
 806:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         sum += *px++ * *py++;
 807:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         sum += *px++ * *py++;
 808:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 809:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Decrement loop counter */
 810:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         k--;
 811:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       }
 812:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 813:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 814:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****        ** No loop unrolling is used. */
 815:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k = srcBLen % 0x4U;
 816:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 817:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 818:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Initialize blkCnt with number of samples */
 819:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k = srcBLen;
 233              	 .loc 1 819 0
 234 0134 3B68     	 ldr r3,[r7]
 235 0136 BB62     	 str r3,[r7,#40]
 820:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 821:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON) */
 822:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 823:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       while (k > 0U)
 236              	 .loc 1 823 0
 237 0138 14E0     	 b .L10
 238              	.L11:
 824:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 825:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Perform the multiply-accumulate */
 826:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         sum += *px++ * *py++;
 239              	 .loc 1 826 0
 240 013a 3B6C     	 ldr r3,[r7,#64]
 241 013c 1A1D     	 adds r2,r3,#4
 242 013e 3A64     	 str r2,[r7,#64]
 243 0140 93ED007A 	 flds s14,[r3]
 244 0144 FB6B     	 ldr r3,[r7,#60]
 245 0146 1A1D     	 adds r2,r3,#4
 246 0148 FA63     	 str r2,[r7,#60]
 247 014a D3ED007A 	 flds s15,[r3]
 248 014e 67EE277A 	 fmuls s15,s14,s15
 249 0152 97ED0D7A 	 flds s14,[r7,#52]
 250 0156 77EE277A 	 fadds s15,s14,s15
 251 015a C7ED0D7A 	 fsts s15,[r7,#52]
 827:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 828:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Decrement the loop counter */
 829:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         k--;
 252              	 .loc 1 829 0
 253 015e BB6A     	 ldr r3,[r7,#40]
 254 0160 013B     	 subs r3,r3,#1
 255 0162 BB62     	 str r3,[r7,#40]
 256              	.L10:
 823:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 257              	 .loc 1 823 0
 258 0164 BB6A     	 ldr r3,[r7,#40]
 259 0166 002B     	 cmp r3,#0
 260 0168 E7D1     	 bne .L11
 830:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       }
 831:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 832:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 833:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       *pOut = sum;
 261              	 .loc 1 833 0
 262 016a 7B6C     	 ldr r3,[r7,#68]
 263 016c 7A6B     	 ldr r2,[r7,#52]
 264 016e 1A60     	 str r2,[r3]
 834:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 835:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Destination pointer is updated according to the address modifier, inc */
 836:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       pOut += inc;
 265              	 .loc 1 836 0
 266 0170 FB69     	 ldr r3,[r7,#28]
 267 0172 9B00     	 lsls r3,r3,#2
 268 0174 7A6C     	 ldr r2,[r7,#68]
 269 0176 1344     	 add r3,r3,r2
 270 0178 7B64     	 str r3,[r7,#68]
 837:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 838:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Increment the pointer pIn1 index, count by 1 */
 839:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       count++;
 271              	 .loc 1 839 0
 272 017a 7B6A     	 ldr r3,[r7,#36]
 273 017c 0133     	 adds r3,r3,#1
 274 017e 7B62     	 str r3,[r7,#36]
 840:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 841:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 842:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       px = pIn1 + count;
 275              	 .loc 1 842 0
 276 0180 7B6A     	 ldr r3,[r7,#36]
 277 0182 9B00     	 lsls r3,r3,#2
 278 0184 FA6C     	 ldr r2,[r7,#76]
 279 0186 1344     	 add r3,r3,r2
 280 0188 3B64     	 str r3,[r7,#64]
 843:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       py = pIn2;
 281              	 .loc 1 843 0
 282 018a BB6C     	 ldr r3,[r7,#72]
 283 018c FB63     	 str r3,[r7,#60]
 844:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 845:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement the loop counter */
 846:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       blkCnt--;
 284              	 .loc 1 846 0
 285 018e 3B6A     	 ldr r3,[r7,#32]
 286 0190 013B     	 subs r3,r3,#1
 287 0192 3B62     	 str r3,[r7,#32]
 288              	.L9:
 768:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 289              	 .loc 1 768 0
 290 0194 3B6A     	 ldr r3,[r7,#32]
 291 0196 002B     	 cmp r3,#0
 292 0198 C9D1     	 bne .L12
 293 019a 38E0     	 b .L13
 294              	.L8:
 847:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 848:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
 849:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   else
 850:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
 851:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* If the srcBLen is not a multiple of 4,
 852:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      * the blockSize2 loop cannot be unrolled by 4 */
 853:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     blkCnt = blockSize2;
 295              	 .loc 1 853 0
 296 019c 3B69     	 ldr r3,[r7,#16]
 297 019e 3B62     	 str r3,[r7,#32]
 854:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 855:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (blkCnt > 0U)
 298              	 .loc 1 855 0
 299 01a0 32E0     	 b .L14
 300              	.L17:
 856:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 857:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Accumulator is made zero for every iteration */
 858:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum = 0.0f;
 301              	 .loc 1 858 0
 302 01a2 4FF00003 	 mov r3,#0
 303 01a6 7B63     	 str r3,[r7,#52]
 859:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 860:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Loop over srcBLen */
 861:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k = srcBLen;
 304              	 .loc 1 861 0
 305 01a8 3B68     	 ldr r3,[r7]
 306 01aa BB62     	 str r3,[r7,#40]
 862:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 863:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       while (k > 0U)
 307              	 .loc 1 863 0
 308 01ac 14E0     	 b .L15
 309              	.L16:
 864:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 865:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Perform the multiply-accumulate */
 866:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         sum += *px++ * *py++;
 310              	 .loc 1 866 0
 311 01ae 3B6C     	 ldr r3,[r7,#64]
 312 01b0 1A1D     	 adds r2,r3,#4
 313 01b2 3A64     	 str r2,[r7,#64]
 314 01b4 93ED007A 	 flds s14,[r3]
 315 01b8 FB6B     	 ldr r3,[r7,#60]
 316 01ba 1A1D     	 adds r2,r3,#4
 317 01bc FA63     	 str r2,[r7,#60]
 318 01be D3ED007A 	 flds s15,[r3]
 319 01c2 67EE277A 	 fmuls s15,s14,s15
 320 01c6 97ED0D7A 	 flds s14,[r7,#52]
 321 01ca 77EE277A 	 fadds s15,s14,s15
 322 01ce C7ED0D7A 	 fsts s15,[r7,#52]
 867:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 868:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* Decrement the loop counter */
 869:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         k--;
 323              	 .loc 1 869 0
 324 01d2 BB6A     	 ldr r3,[r7,#40]
 325 01d4 013B     	 subs r3,r3,#1
 326 01d6 BB62     	 str r3,[r7,#40]
 327              	.L15:
 863:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
 328              	 .loc 1 863 0
 329 01d8 BB6A     	 ldr r3,[r7,#40]
 330 01da 002B     	 cmp r3,#0
 331 01dc E7D1     	 bne .L16
 870:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       }
 871:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 872:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Store the result in the accumulator in the destination buffer. */
 873:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       *pOut = sum;
 332              	 .loc 1 873 0
 333 01de 7B6C     	 ldr r3,[r7,#68]
 334 01e0 7A6B     	 ldr r2,[r7,#52]
 335 01e2 1A60     	 str r2,[r3]
 874:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Destination pointer is updated according to the address modifier, inc */
 875:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       pOut += inc;
 336              	 .loc 1 875 0
 337 01e4 FB69     	 ldr r3,[r7,#28]
 338 01e6 9B00     	 lsls r3,r3,#2
 339 01e8 7A6C     	 ldr r2,[r7,#68]
 340 01ea 1344     	 add r3,r3,r2
 341 01ec 7B64     	 str r3,[r7,#68]
 876:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 877:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Increment the pointer pIn1 index, count by 1 */
 878:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       count++;
 342              	 .loc 1 878 0
 343 01ee 7B6A     	 ldr r3,[r7,#36]
 344 01f0 0133     	 adds r3,r3,#1
 345 01f2 7B62     	 str r3,[r7,#36]
 879:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 880:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 881:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       px = pIn1 + count;
 346              	 .loc 1 881 0
 347 01f4 7B6A     	 ldr r3,[r7,#36]
 348 01f6 9B00     	 lsls r3,r3,#2
 349 01f8 FA6C     	 ldr r2,[r7,#76]
 350 01fa 1344     	 add r3,r3,r2
 351 01fc 3B64     	 str r3,[r7,#64]
 882:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       py = pIn2;
 352              	 .loc 1 882 0
 353 01fe BB6C     	 ldr r3,[r7,#72]
 354 0200 FB63     	 str r3,[r7,#60]
 883:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 884:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement the loop counter */
 885:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       blkCnt--;
 355              	 .loc 1 885 0
 356 0202 3B6A     	 ldr r3,[r7,#32]
 357 0204 013B     	 subs r3,r3,#1
 358 0206 3B62     	 str r3,[r7,#32]
 359              	.L14:
 855:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 360              	 .loc 1 855 0
 361 0208 3B6A     	 ldr r3,[r7,#32]
 362 020a 002B     	 cmp r3,#0
 363 020c C9D1     	 bne .L17
 364              	.L13:
 886:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 887:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
 888:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 889:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 890:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* --------------------------
 891:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * Initializations of stage3
 892:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * -------------------------*/
 893:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 894:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* sum += x[srcALen-srcBLen+1] * y[0] + x[srcALen-srcBLen+2] * y[1] +...+ x[srcALen-1] * y[srcBLe
 895:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * sum += x[srcALen-srcBLen+2] * y[0] + x[srcALen-srcBLen+3] * y[1] +...+ x[srcALen-1] * y[srcBLe
 896:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * ....
 897:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * sum +=  x[srcALen-2] * y[0] + x[srcALen-1] * y[1]
 898:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * sum +=  x[srcALen-1] * y[0]
 899:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    */
 900:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 901:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* In this stage the MAC operations are decreased by 1 for every iteration.
 902:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      The count variable holds the number of MAC operations performed */
 903:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   count = srcBLen - 1U;
 365              	 .loc 1 903 0
 366 020e 3B68     	 ldr r3,[r7]
 367 0210 013B     	 subs r3,r3,#1
 368 0212 7B62     	 str r3,[r7,#36]
 904:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 905:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Working pointer of inputA */
 906:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   pSrc1 = pIn1 + (srcALen - (srcBLen - 1U));
 369              	 .loc 1 906 0
 370 0214 BA68     	 ldr r2,[r7,#8]
 371 0216 3B68     	 ldr r3,[r7]
 372 0218 D31A     	 subs r3,r2,r3
 373 021a 0133     	 adds r3,r3,#1
 374 021c 9B00     	 lsls r3,r3,#2
 375 021e FA6C     	 ldr r2,[r7,#76]
 376 0220 1344     	 add r3,r3,r2
 377 0222 BB63     	 str r3,[r7,#56]
 907:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   px = pSrc1;
 378              	 .loc 1 907 0
 379 0224 BB6B     	 ldr r3,[r7,#56]
 380 0226 3B64     	 str r3,[r7,#64]
 908:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 909:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Working pointer of inputB */
 910:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   py = pIn2;
 381              	 .loc 1 910 0
 382 0228 BB6C     	 ldr r3,[r7,#72]
 383 022a FB63     	 str r3,[r7,#60]
 911:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 912:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* -------------------
 913:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * Stage3 process
 914:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * ------------------*/
 915:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 916:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   while (blockSize3 > 0U)
 384              	 .loc 1 916 0
 385 022c 32E0     	 b .L18
 386              	.L21:
 917:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
 918:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Accumulator is made zero for every iteration */
 919:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     sum = 0.0f;
 387              	 .loc 1 919 0
 388 022e 4FF00003 	 mov r3,#0
 389 0232 7B63     	 str r3,[r7,#52]
 920:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 921:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON)
 922:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 923:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Loop unrolling: Compute 4 outputs at a time */
 924:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     k = count >> 2U;
 925:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 926:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #if defined(ARM_MATH_NEON)
 927:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x4_t x,y;
 928:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x4_t res = vdupq_n_f32(0) ;
 929:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     float32x2_t accum = vdup_n_f32(0);
 930:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 931:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (k > 0U)
 932:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 933:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       x = vld1q_f32(px);
 934:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       y = vld1q_f32(py);
 935:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 936:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       res = vmlaq_f32(res,x, y);
 937:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 938:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       px += 4;
 939:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       py += 4;
 940:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 941:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement the loop counter */
 942:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k--;
 943:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 944:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 945:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     accum = vpadd_f32(vget_low_f32(res), vget_high_f32(res));
 946:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     sum += accum[0] + accum[1];
 947:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 948:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 949:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****      ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 950:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (k > 0U)
 951:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 952:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Perform the multiply-accumulate */
 953:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* sum += x[srcALen - srcBLen + 4] * y[3] */
 954:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 955:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 956:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* sum += x[srcALen - srcBLen + 3] * y[2] */
 957:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 958:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 959:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* sum += x[srcALen - srcBLen + 2] * y[1] */
 960:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 961:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 962:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* sum += x[srcALen - srcBLen + 1] * y[0] */
 963:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 964:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 965:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement loop counter */
 966:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k--;
 967:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 968:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 969:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined (ARM_MATH_NEON) */
 970:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Loop unrolling: Compute remaining outputs */
 971:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     k = count % 0x4U;
 972:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 973:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
 974:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 975:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialize blkCnt with number of samples */
 976:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     k = count;
 390              	 .loc 1 976 0
 391 0234 7B6A     	 ldr r3,[r7,#36]
 392 0236 BB62     	 str r3,[r7,#40]
 977:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 978:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) || defined(ARM_MATH_NEON) */
 979:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 980:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     while (k > 0U)
 393              	 .loc 1 980 0
 394 0238 14E0     	 b .L19
 395              	.L20:
 981:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 982:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Perform the multiply-accumulate */
 983:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       sum += *px++ * *py++;
 396              	 .loc 1 983 0
 397 023a 3B6C     	 ldr r3,[r7,#64]
 398 023c 1A1D     	 adds r2,r3,#4
 399 023e 3A64     	 str r2,[r7,#64]
 400 0240 93ED007A 	 flds s14,[r3]
 401 0244 FB6B     	 ldr r3,[r7,#60]
 402 0246 1A1D     	 adds r2,r3,#4
 403 0248 FA63     	 str r2,[r7,#60]
 404 024a D3ED007A 	 flds s15,[r3]
 405 024e 67EE277A 	 fmuls s15,s14,s15
 406 0252 97ED0D7A 	 flds s14,[r7,#52]
 407 0256 77EE277A 	 fadds s15,s14,s15
 408 025a C7ED0D7A 	 fsts s15,[r7,#52]
 984:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 985:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Decrement loop counter */
 986:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       k--;
 409              	 .loc 1 986 0
 410 025e BB6A     	 ldr r3,[r7,#40]
 411 0260 013B     	 subs r3,r3,#1
 412 0262 BB62     	 str r3,[r7,#40]
 413              	.L19:
 980:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
 414              	 .loc 1 980 0
 415 0264 BB6A     	 ldr r3,[r7,#40]
 416 0266 002B     	 cmp r3,#0
 417 0268 E7D1     	 bne .L20
 987:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
 988:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 989:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Store the result in the accumulator in the destination buffer. */
 990:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     *pOut = sum;
 418              	 .loc 1 990 0
 419 026a 7B6C     	 ldr r3,[r7,#68]
 420 026c 7A6B     	 ldr r2,[r7,#52]
 421 026e 1A60     	 str r2,[r3]
 991:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Destination pointer is updated according to the address modifier, inc */
 992:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pOut += inc;
 422              	 .loc 1 992 0
 423 0270 FB69     	 ldr r3,[r7,#28]
 424 0272 9B00     	 lsls r3,r3,#2
 425 0274 7A6C     	 ldr r2,[r7,#68]
 426 0276 1344     	 add r3,r3,r2
 427 0278 7B64     	 str r3,[r7,#68]
 993:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 994:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Update the inputA and inputB pointers for next MAC calculation */
 995:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     px = ++pSrc1;
 428              	 .loc 1 995 0
 429 027a BB6B     	 ldr r3,[r7,#56]
 430 027c 0433     	 adds r3,r3,#4
 431 027e BB63     	 str r3,[r7,#56]
 432 0280 BB6B     	 ldr r3,[r7,#56]
 433 0282 3B64     	 str r3,[r7,#64]
 996:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     py = pIn2;
 434              	 .loc 1 996 0
 435 0284 BB6C     	 ldr r3,[r7,#72]
 436 0286 FB63     	 str r3,[r7,#60]
 997:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
 998:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Decrement MAC count */
 999:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     count--;
 437              	 .loc 1 999 0
 438 0288 7B6A     	 ldr r3,[r7,#36]
 439 028a 013B     	 subs r3,r3,#1
 440 028c 7B62     	 str r3,[r7,#36]
1000:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1001:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Decrement the loop counter */
1002:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     blockSize3--;
 441              	 .loc 1 1002 0
 442 028e FB6A     	 ldr r3,[r7,#44]
 443 0290 013B     	 subs r3,r3,#1
 444 0292 FB62     	 str r3,[r7,#44]
 445              	.L18:
 916:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
 446              	 .loc 1 916 0
 447 0294 FB6A     	 ldr r3,[r7,#44]
 448 0296 002B     	 cmp r3,#0
 449 0298 C9D1     	 bne .L21
1003:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
1004:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1005:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #else
1006:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** /* alternate version for CM0_FAMILY */
1007:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1008:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t *pIn1 = pSrcA;                       /* inputA pointer */
1009:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   const float32_t *pIn2 = pSrcB + (srcBLen - 1U);      /* inputB pointer */
1010:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         float32_t sum;                                 /* Accumulator */
1011:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t i = 0U, j;                            /* Loop counters */
1012:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t inv = 0U;                             /* Reverse order flag */
1013:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         uint32_t tot = 0U;                             /* Length */
1014:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1015:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* The algorithm implementation is based on the lengths of the inputs. */
1016:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* srcB is always made to slide across srcA. */
1017:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* So srcBLen is always considered as shorter or equal to srcALen */
1018:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* But CORR(x, y) is reverse of CORR(y, x) */
1019:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* So, when srcBLen > srcALen, output pointer is made to point to the end of the output buffer */
1020:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* and a varaible, inv is set to 1 */
1021:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* If lengths are not equal then zero pad has to be done to  make the two
1022:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * inputs of same length. But to improve the performance, we assume zeroes
1023:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * in the output instead of zero padding either of the the inputs*/
1024:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* If srcALen > srcBLen, (srcALen - srcBLen) zeroes has to included in the
1025:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * starting of the output buffer */
1026:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* If srcALen < srcBLen, (srcALen - srcBLen) zeroes has to included in the
1027:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * ending of the output buffer */
1028:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Once the zero padding is done the remaining of the output is calcualted
1029:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****    * using convolution but with the shorter signal time shifted. */
1030:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1031:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Calculate the length of the remaining sequence */
1032:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   tot = ((srcALen + srcBLen) - 2U);
1033:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1034:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   if (srcALen > srcBLen)
1035:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
1036:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Calculating the number of zeros to be padded to the output */
1037:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     j = srcALen - srcBLen;
1038:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1039:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialise the pointer after zero padding */
1040:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pDst += j;
1041:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
1042:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1043:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   else if (srcALen < srcBLen)
1044:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
1045:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialization to inputB pointer */
1046:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pIn1 = pSrcB;
1047:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1048:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialization to the end of inputA pointer */
1049:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pIn2 = pSrcA + (srcALen - 1U);
1050:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1051:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialisation of the pointer after zero padding */
1052:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     pDst = pDst + tot;
1053:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1054:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Swapping the lengths */
1055:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     j = srcALen;
1056:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     srcALen = srcBLen;
1057:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     srcBLen = j;
1058:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1059:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Setting the reverse flag */
1060:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     inv = 1;
1061:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1062:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
1063:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1064:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   /* Loop to calculate convolution for output length number of times */
1065:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   for (i = 0U; i <= tot; i++)
1066:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   {
1067:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Initialize sum with zero to carry out MAC operations */
1068:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     sum = 0.0f;
1069:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1070:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Loop to perform MAC operations according to convolution equation */
1071:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     for (j = 0U; j <= i; j++)
1072:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     {
1073:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       /* Check the array limitations */
1074:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       if ((((i - j) < srcBLen) && (j < srcALen)))
1075:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       {
1076:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         /* z[i] += x[i-j] * y[j] */
1077:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****         sum += pIn1[j] * pIn2[-((int32_t) i - j)];
1078:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       }
1079:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     }
1080:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1081:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     /* Store the output in the destination buffer */
1082:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     if (inv == 1)
1083:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       *pDst-- = sum;
1084:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****     else
1085:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****       *pDst++ = sum;
1086:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c ****   }
1087:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1088:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** #endif /* #if !defined(ARM_MATH_CM0_FAMILY) */
1089:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** 
1090:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_correlate_f32.c **** }
 450              	 .loc 1 1090 0
 451 029a 5437     	 adds r7,r7,#84
 452              	.LCFI3:
 453              	 .cfi_def_cfa_offset 4
 454 029c BD46     	 mov sp,r7
 455              	.LCFI4:
 456              	 .cfi_def_cfa_register 13
 457              	 
 458 029e 5DF8047B 	 ldr r7,[sp],#4
 459              	.LCFI5:
 460              	 .cfi_restore 7
 461              	 .cfi_def_cfa_offset 0
 462 02a2 7047     	 bx lr
 463              	 .cfi_endproc
 464              	.LFE149:
 466              	 .text
 467              	.Letext0:
 468              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 469              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 470              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 471              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_correlate_f32.c
    {standard input}:20     .text.arm_correlate_f32:00000000 $t
    {standard input}:25     .text.arm_correlate_f32:00000000 arm_correlate_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
