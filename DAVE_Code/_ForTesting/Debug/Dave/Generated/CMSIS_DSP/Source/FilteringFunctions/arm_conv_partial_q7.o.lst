   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_conv_partial_q7.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_conv_partial_q7,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_conv_partial_q7
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_conv_partial_q7:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * Title:        arm_conv_partial_q7.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * Description:  Partial convolution of Q7 sequences
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @addtogroup PartialConv
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @brief         Partial convolution of Q7 sequences.
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @param[in]     pSrcA      points to the first input sequence
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @param[in]     srcALen    length of the first input sequence
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @param[in]     pSrcB      points to the second input sequence
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @param[in]     srcBLen    length of the second input sequence
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @param[out]    pDst       points to the location where the output result is written
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @param[in]     firstIndex is the first output sample to start with
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @param[in]     numPoints  is the number of output points to be computed
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @return        execution status
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****                    - \ref ARM_MATH_SUCCESS        : Operation successful
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****                    - \ref ARM_MATH_ARGUMENT_ERROR : requested subset is not in the range [0 srcALen
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   @remark
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****                    Refer to \ref arm_conv_partial_opt_q7() for a faster implementation of this func
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****  */
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** arm_status arm_conv_partial_q7(
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t * pSrcA,
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         uint32_t srcALen,
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t * pSrcB,
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         uint32_t srcBLen,
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         q7_t * pDst,
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         uint32_t firstIndex,
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         uint32_t numPoints)
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** {
  28              	 .loc 1 65 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 9FB0     	 sub sp,sp,#124
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 128
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #if ARM_MATH_DSP
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t *pIn1;                                    /* InputA pointer */
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t *pIn2;                                    /* InputB pointer */
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         q7_t *pOut = pDst;                             /* Output pointer */
  47              	 .loc 1 71 0
  48 000e D7F88030 	 ldr r3,[r7,#128]
  49 0012 FB66     	 str r3,[r7,#108]
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t *px;                                      /* Intermediate inputA pointer */
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t *py;                                      /* Intermediate inputB pointer */
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t *pSrc1, *pSrc2;                           /* Intermediate pointers */
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         q31_t sum;                                     /* Accumulator */
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         uint32_t j, k, count, blkCnt, check;           /* Loop counters */
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         uint32_t blockSize1, blockSize2, blockSize3;    /* Loop counters */
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         arm_status status;                             /* Status of Partial convolution */
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         q31_t acc0, acc1, acc2, acc3;                  /* Accumulator */
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         q31_t input1, input2;                          /* Temporary input variables */
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         q15_t in1, in2;                                /* Temporary input variables */
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         q7_t x0, x1, x2, x3, c0, c1;                   /* Temporary variables to hold state and coe
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #endif
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   /* Check for range of output samples to be calculated */
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
  50              	 .loc 1 88 0
  51 0014 D7F88420 	 ldr r2,[r7,#132]
  52 0018 D7F88830 	 ldr r3,[r7,#136]
  53 001c 1A44     	 add r2,r2,r3
  54 001e 3968     	 ldr r1,[r7]
  55 0020 BB68     	 ldr r3,[r7,#8]
  56 0022 0B44     	 add r3,r3,r1
  57 0024 013B     	 subs r3,r3,#1
  58 0026 9A42     	 cmp r2,r3
  59 0028 03D9     	 bls .L2
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   {
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     status = ARM_MATH_ARGUMENT_ERROR;
  60              	 .loc 1 91 0
  61 002a FF23     	 movs r3,#255
  62 002c 87F84330 	 strb r3,[r7,#67]
  63 0030 7BE1     	 b .L3
  64              	.L2:
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   }
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   else
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   {
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* The algorithm implementation is based on the lengths of the inputs. */
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* srcB is always made to slide across srcA. */
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* So srcBLen is always considered as shorter or equal to srcALen */
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     if (srcALen >= srcBLen)
  65              	 .loc 1 98 0
  66 0032 BA68     	 ldr r2,[r7,#8]
  67 0034 3B68     	 ldr r3,[r7]
  68 0036 9A42     	 cmp r2,r3
  69 0038 04D3     	 bcc .L4
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Initialization of inputA pointer */
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       pIn1 = pSrcA;
  70              	 .loc 1 101 0
  71 003a FB68     	 ldr r3,[r7,#12]
  72 003c 7B67     	 str r3,[r7,#116]
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Initialization of inputB pointer */
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       pIn2 = pSrcB;
  73              	 .loc 1 104 0
  74 003e 7B68     	 ldr r3,[r7,#4]
  75 0040 3B67     	 str r3,[r7,#112]
  76 0042 09E0     	 b .L5
  77              	.L4:
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     else
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Initialization of inputA pointer */
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       pIn1 = pSrcB;
  78              	 .loc 1 109 0
  79 0044 7B68     	 ldr r3,[r7,#4]
  80 0046 7B67     	 str r3,[r7,#116]
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Initialization of inputB pointer */
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       pIn2 = pSrcA;
  81              	 .loc 1 112 0
  82 0048 FB68     	 ldr r3,[r7,#12]
  83 004a 3B67     	 str r3,[r7,#112]
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* srcBLen is always considered as shorter or equal to srcALen */
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       j = srcBLen;
  84              	 .loc 1 115 0
  85 004c 3B68     	 ldr r3,[r7]
  86 004e FB63     	 str r3,[r7,#60]
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       srcBLen = srcALen;
  87              	 .loc 1 116 0
  88 0050 BB68     	 ldr r3,[r7,#8]
  89 0052 3B60     	 str r3,[r7]
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       srcALen = j;
  90              	 .loc 1 117 0
  91 0054 FB6B     	 ldr r3,[r7,#60]
  92 0056 BB60     	 str r3,[r7,#8]
  93              	.L5:
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Conditions to check which loopCounter holds
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * the first and last indices of the output samples to be calculated. */
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     check = firstIndex + numPoints;
  94              	 .loc 1 122 0
  95 0058 D7F88420 	 ldr r2,[r7,#132]
  96 005c D7F88830 	 ldr r3,[r7,#136]
  97 0060 1344     	 add r3,r3,r2
  98 0062 BB63     	 str r3,[r7,#56]
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     blockSize3 = ((int32_t)check > (int32_t)srcALen) ? (int32_t)check - (int32_t)srcALen : 0;
  99              	 .loc 1 123 0
 100 0064 BA6B     	 ldr r2,[r7,#56]
 101 0066 BB68     	 ldr r3,[r7,#8]
 102 0068 9A42     	 cmp r2,r3
 103 006a 03DD     	 ble .L6
 104              	 .loc 1 123 0 is_stmt 0 discriminator 1
 105 006c BA6B     	 ldr r2,[r7,#56]
 106 006e BB68     	 ldr r3,[r7,#8]
 107 0070 D31A     	 subs r3,r2,r3
 108 0072 00E0     	 b .L7
 109              	.L6:
 110              	 .loc 1 123 0 discriminator 2
 111 0074 0023     	 movs r3,#0
 112              	.L7:
 113              	 .loc 1 123 0 discriminator 4
 114 0076 7B64     	 str r3,[r7,#68]
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     blockSize3 = ((int32_t)firstIndex > (int32_t)srcALen - 1) ? blockSize3 - (int32_t)firstIndex + 
 115              	 .loc 1 124 0 is_stmt 1 discriminator 4
 116 0078 D7F88420 	 ldr r2,[r7,#132]
 117 007c BB68     	 ldr r3,[r7,#8]
 118 007e 013B     	 subs r3,r3,#1
 119 0080 9A42     	 cmp r2,r3
 120 0082 06DD     	 ble .L8
 121              	 .loc 1 124 0 is_stmt 0 discriminator 1
 122 0084 7A6C     	 ldr r2,[r7,#68]
 123 0086 D7F88430 	 ldr r3,[r7,#132]
 124 008a D21A     	 subs r2,r2,r3
 125 008c BB68     	 ldr r3,[r7,#8]
 126 008e 1344     	 add r3,r3,r2
 127 0090 00E0     	 b .L9
 128              	.L8:
 129              	 .loc 1 124 0 discriminator 2
 130 0092 7B6C     	 ldr r3,[r7,#68]
 131              	.L9:
 132              	 .loc 1 124 0 discriminator 4
 133 0094 7B64     	 str r3,[r7,#68]
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     blockSize1 = ((int32_t) srcBLen - 1) - (int32_t) firstIndex;
 134              	 .loc 1 125 0 is_stmt 1 discriminator 4
 135 0096 3A68     	 ldr r2,[r7]
 136 0098 D7F88430 	 ldr r3,[r7,#132]
 137 009c D31A     	 subs r3,r2,r3
 138 009e 013B     	 subs r3,r3,#1
 139 00a0 BB64     	 str r3,[r7,#72]
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     blockSize1 = (blockSize1 > 0) ? ((check > (srcBLen - 1U)) ? blockSize1 : numPoints) : 0;
 140              	 .loc 1 126 0 discriminator 4
 141 00a2 BB6C     	 ldr r3,[r7,#72]
 142 00a4 002B     	 cmp r3,#0
 143 00a6 09D0     	 beq .L10
 144              	 .loc 1 126 0 is_stmt 0 discriminator 1
 145 00a8 3B68     	 ldr r3,[r7]
 146 00aa 5A1E     	 subs r2,r3,#1
 147 00ac BB6B     	 ldr r3,[r7,#56]
 148 00ae 9A42     	 cmp r2,r3
 149 00b0 01D2     	 bcs .L11
 150              	 .loc 1 126 0 discriminator 3
 151 00b2 BB6C     	 ldr r3,[r7,#72]
 152 00b4 03E0     	 b .L13
 153              	.L11:
 154              	 .loc 1 126 0 discriminator 4
 155 00b6 D7F88830 	 ldr r3,[r7,#136]
 156 00ba 00E0     	 b .L13
 157              	.L10:
 158              	 .loc 1 126 0 discriminator 2
 159 00bc 0023     	 movs r3,#0
 160              	.L13:
 161              	 .loc 1 126 0 discriminator 8
 162 00be BB64     	 str r3,[r7,#72]
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     blockSize2 = (int32_t) check - ((blockSize3 + blockSize1) + (int32_t) firstIndex);
 163              	 .loc 1 127 0 is_stmt 1 discriminator 8
 164 00c0 7A6C     	 ldr r2,[r7,#68]
 165 00c2 BB6C     	 ldr r3,[r7,#72]
 166 00c4 1A44     	 add r2,r2,r3
 167 00c6 D7F88430 	 ldr r3,[r7,#132]
 168 00ca 1344     	 add r3,r3,r2
 169 00cc BA6B     	 ldr r2,[r7,#56]
 170 00ce D31A     	 subs r3,r2,r3
 171 00d0 7B63     	 str r3,[r7,#52]
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     blockSize2 = (blockSize2 > 0) ? blockSize2 : 0;
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* conv(x,y) at n = x[n] * y[0] + x[n-1] * y[1] + x[n-2] * y[2] + ...+ x[n-N+1] * y[N -1] */
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* The function is internally
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * divided into three stages according to the number of multiplications that has to be
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * taken place between inputA samples and inputB samples. In the first stage of the
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * algorithm, the multiplications increase by one for every iteration.
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * In the second stage of the algorithm, srcBLen number of multiplications are done.
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * In the third stage of the algorithm, the multiplications decrease by one
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * for every iteration. */
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Set the output pointer to point to the firstIndex
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * of the output sample to be calculated. */
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     pOut = pDst + firstIndex;
 172              	 .loc 1 141 0 discriminator 8
 173 00d2 D7F88020 	 ldr r2,[r7,#128]
 174 00d6 D7F88430 	 ldr r3,[r7,#132]
 175 00da 1344     	 add r3,r3,r2
 176 00dc FB66     	 str r3,[r7,#108]
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* --------------------------
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * Initializations of stage1
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * -------------------------*/
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* sum = x[0] * y[0]
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * sum = x[0] * y[1] + x[1] * y[0]
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * ....
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * sum = x[0] * y[srcBlen - 1] + x[1] * y[srcBlen - 2] +...+ x[srcBLen - 1] * y[0]
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      */
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* In this stage the MAC operations are increased by 1 for every iteration.
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****        The count variable holds the number of MAC operations performed.
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****        Since the partial convolution starts from firstIndex
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****        Number of Macs to be performed is firstIndex + 1 */
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     count = 1U + firstIndex;
 177              	 .loc 1 157 0 discriminator 8
 178 00de D7F88430 	 ldr r3,[r7,#132]
 179 00e2 0133     	 adds r3,r3,#1
 180 00e4 3B65     	 str r3,[r7,#80]
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Working pointer of inputA */
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     px = pIn1;
 181              	 .loc 1 160 0 discriminator 8
 182 00e6 7B6F     	 ldr r3,[r7,#116]
 183 00e8 BB66     	 str r3,[r7,#104]
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Working pointer of inputB */
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     pSrc2 = pIn2 + firstIndex;
 184              	 .loc 1 163 0 discriminator 8
 185 00ea 3A6F     	 ldr r2,[r7,#112]
 186 00ec D7F88430 	 ldr r3,[r7,#132]
 187 00f0 1344     	 add r3,r3,r2
 188 00f2 FB65     	 str r3,[r7,#92]
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     py = pSrc2;
 189              	 .loc 1 164 0 discriminator 8
 190 00f4 FB6D     	 ldr r3,[r7,#92]
 191 00f6 7B66     	 str r3,[r7,#100]
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* ------------------------
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * Stage1 process
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * ----------------------*/
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* The first stage starts here */
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     while (blockSize1 > 0U)
 192              	 .loc 1 171 0 discriminator 8
 193 00f8 33E0     	 b .L14
 194              	.L17:
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Accumulator is made zero for every iteration */
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       sum = 0;
 195              	 .loc 1 174 0
 196 00fa 0023     	 movs r3,#0
 197 00fc BB65     	 str r3,[r7,#88]
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       k = count >> 2U;
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       while (k > 0U)
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* x[0] , x[1] */
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in1 = (q15_t) *px++;
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in2 = (q15_t) *px++;
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* y[srcBLen - 1] , y[srcBLen - 2] */
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in1 = (q15_t) *py--;
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in2 = (q15_t) *py--;
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* x[0] * y[srcBLen - 1] */
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* x[1] * y[srcBLen - 2] */
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         sum = __SMLAD(input1, input2, sum);
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* x[2] , x[3] */
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in1 = (q15_t) *px++;
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in2 = (q15_t) *px++;
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* y[srcBLen - 3] , y[srcBLen - 4] */
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in1 = (q15_t) *py--;
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in2 = (q15_t) *py--;
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* x[2] * y[srcBLen - 3] */
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* x[3] * y[srcBLen - 4] */
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         sum = __SMLAD(input1, input2, sum);
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Decrement loop counter */
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k--;
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       }
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Loop unrolling: Compute remaining outputs */
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       k = count % 0x4U;
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #else
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Initialize k with number of samples */
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       k = count;
 198              	 .loc 1 221 0
 199 00fe 3B6D     	 ldr r3,[r7,#80]
 200 0100 7B65     	 str r3,[r7,#84]
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       while (k > 0U)
 201              	 .loc 1 225 0
 202 0102 11E0     	 b .L15
 203              	.L16:
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Perform the multiply-accumulate */
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         sum += ((q31_t) * px++ * *py--);
 204              	 .loc 1 228 0
 205 0104 BB6E     	 ldr r3,[r7,#104]
 206 0106 5A1C     	 adds r2,r3,#1
 207 0108 BA66     	 str r2,[r7,#104]
 208 010a 1B78     	 ldrb r3,[r3]
 209 010c 5AB2     	 sxtb r2,r3
 210 010e 7B6E     	 ldr r3,[r7,#100]
 211 0110 591E     	 subs r1,r3,#1
 212 0112 7966     	 str r1,[r7,#100]
 213 0114 1B78     	 ldrb r3,[r3]
 214 0116 5BB2     	 sxtb r3,r3
 215 0118 03FB02F3 	 mul r3,r3,r2
 216 011c BA6D     	 ldr r2,[r7,#88]
 217 011e 1344     	 add r3,r3,r2
 218 0120 BB65     	 str r3,[r7,#88]
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Decrement loop counter */
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k--;
 219              	 .loc 1 231 0
 220 0122 7B6D     	 ldr r3,[r7,#84]
 221 0124 013B     	 subs r3,r3,#1
 222 0126 7B65     	 str r3,[r7,#84]
 223              	.L15:
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 224              	 .loc 1 225 0
 225 0128 7B6D     	 ldr r3,[r7,#84]
 226 012a 002B     	 cmp r3,#0
 227 012c EAD1     	 bne .L16
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       }
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       *pOut++ = (q7_t) (__SSAT(sum >> 7, 8));
 228              	 .loc 1 235 0
 229 012e FB6E     	 ldr r3,[r7,#108]
 230 0130 5A1C     	 adds r2,r3,#1
 231 0132 FA66     	 str r2,[r7,#108]
 232              	.LBB2:
 233 0134 BA6D     	 ldr r2,[r7,#88]
 234 0136 D211     	 asrs r2,r2,#7
 235 0138 3A63     	 str r2,[r7,#48]
 236 013a 3A6B     	 ldr r2,[r7,#48]
 237              	
 238 013c 02F30702 	 ssat r2,#8,r2
 239              	
 240              	 .thumb
 241 0140 FA62     	 str r2,[r7,#44]
 242 0142 FA6A     	 ldr r2,[r7,#44]
 243              	.LBE2:
 244 0144 D2B2     	 uxtb r2,r2
 245 0146 1A70     	 strb r2,[r3]
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       py = ++pSrc2;
 246              	 .loc 1 238 0
 247 0148 FB6D     	 ldr r3,[r7,#92]
 248 014a 0133     	 adds r3,r3,#1
 249 014c FB65     	 str r3,[r7,#92]
 250 014e FB6D     	 ldr r3,[r7,#92]
 251 0150 7B66     	 str r3,[r7,#100]
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       px = pIn1;
 252              	 .loc 1 239 0
 253 0152 7B6F     	 ldr r3,[r7,#116]
 254 0154 BB66     	 str r3,[r7,#104]
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Increment MAC count */
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       count++;
 255              	 .loc 1 242 0
 256 0156 3B6D     	 ldr r3,[r7,#80]
 257 0158 0133     	 adds r3,r3,#1
 258 015a 3B65     	 str r3,[r7,#80]
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Decrement loop counter */
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       blockSize1--;
 259              	 .loc 1 245 0
 260 015c BB6C     	 ldr r3,[r7,#72]
 261 015e 013B     	 subs r3,r3,#1
 262 0160 BB64     	 str r3,[r7,#72]
 263              	.L14:
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 264              	 .loc 1 171 0
 265 0162 BB6C     	 ldr r3,[r7,#72]
 266 0164 002B     	 cmp r3,#0
 267 0166 C8D1     	 bne .L17
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* --------------------------
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * Initializations of stage2
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * ------------------------*/
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* sum = x[0] * y[srcBLen-1] + x[1] * y[srcBLen-2] +...+ x[srcBLen-1] * y[0]
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * sum = x[1] * y[srcBLen-1] + x[2] * y[srcBLen-2] +...+ x[srcBLen] * y[0]
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * ....
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * sum = x[srcALen-srcBLen-2] * y[srcBLen-1] + x[srcALen] * y[srcBLen-2] +...+ x[srcALen-1] * y
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      */
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Working pointer of inputA */
 259:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     if ((int32_t)firstIndex - (int32_t)srcBLen + 1 > 0)
 268              	 .loc 1 259 0
 269 0168 D7F88420 	 ldr r2,[r7,#132]
 270 016c 3B68     	 ldr r3,[r7]
 271 016e D31A     	 subs r3,r2,r3
 272 0170 0133     	 adds r3,r3,#1
 273 0172 002B     	 cmp r3,#0
 274 0174 08DD     	 ble .L18
 260:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 261:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       pSrc1 = pIn1 + firstIndex - srcBLen + 1;
 275              	 .loc 1 261 0
 276 0176 D7F88420 	 ldr r2,[r7,#132]
 277 017a 3B68     	 ldr r3,[r7]
 278 017c D31A     	 subs r3,r2,r3
 279 017e 0133     	 adds r3,r3,#1
 280 0180 7A6F     	 ldr r2,[r7,#116]
 281 0182 1344     	 add r3,r3,r2
 282 0184 3B66     	 str r3,[r7,#96]
 283 0186 01E0     	 b .L19
 284              	.L18:
 262:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 263:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     else
 264:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 265:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       pSrc1 = pIn1;
 285              	 .loc 1 265 0
 286 0188 7B6F     	 ldr r3,[r7,#116]
 287 018a 3B66     	 str r3,[r7,#96]
 288              	.L19:
 266:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 267:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     px = pSrc1;
 289              	 .loc 1 267 0
 290 018c 3B6E     	 ldr r3,[r7,#96]
 291 018e BB66     	 str r3,[r7,#104]
 268:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 269:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Working pointer of inputB */
 270:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 292              	 .loc 1 270 0
 293 0190 3B68     	 ldr r3,[r7]
 294 0192 013B     	 subs r3,r3,#1
 295 0194 3A6F     	 ldr r2,[r7,#112]
 296 0196 1344     	 add r3,r3,r2
 297 0198 FB65     	 str r3,[r7,#92]
 271:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     py = pSrc2;
 298              	 .loc 1 271 0
 299 019a FB6D     	 ldr r3,[r7,#92]
 300 019c 7B66     	 str r3,[r7,#100]
 272:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 273:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* count is the index by which the pointer pIn1 to be incremented */
 274:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     count = 0U;
 301              	 .loc 1 274 0
 302 019e 0023     	 movs r3,#0
 303 01a0 3B65     	 str r3,[r7,#80]
 275:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 276:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* -------------------
 277:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * Stage2 process
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * ------------------*/
 279:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 280:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Stage2 depends on srcBLen as in this stage srcBLen number of MACS are performed.
 281:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * So, to loop unroll over blockSize2,
 282:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * srcBLen should be greater than or equal to 4 */
 283:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     if (srcBLen >= 4U)
 304              	 .loc 1 283 0
 305 01a2 3B68     	 ldr r3,[r7]
 306 01a4 032B     	 cmp r3,#3
 307 01a6 39D9     	 bls .L20
 284:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 285:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
 286:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 287:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 288:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       blkCnt = ((uint32_t) blockSize2 >> 2U);
 289:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 290:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       while (blkCnt > 0U)
 291:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 292:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Set all accumulators to zero */
 293:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         acc0 = 0;
 294:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         acc1 = 0;
 295:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         acc2 = 0;
 296:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         acc3 = 0;
 297:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 298:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* read x[0], x[1], x[2] samples */
 299:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         x0 = *px++;
 300:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         x1 = *px++;
 301:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         x2 = *px++;
 302:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 303:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 304:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k = srcBLen >> 2U;
 305:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 306:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* First part of the processing with loop unrolling.  Compute 4 MACs at a time.
 307:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****          ** a second loop below computes MACs for the remaining 1 to 3 samples. */
 308:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         do
 309:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         {
 310:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read y[srcBLen - 1] sample */
 311:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           c0 = *py--;
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read y[srcBLen - 2] sample */
 313:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           c1 = *py--;
 314:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 315:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read x[3] sample */
 316:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           x3 = *px++;
 317:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 318:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* x[0] and x[1] are packed */
 319:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) x0;
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) x1;
 321:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 322:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 323:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 324:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* y[srcBLen - 1]   and y[srcBLen - 2] are packed */
 325:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) c0;
 326:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) c1;
 327:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 328:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 329:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 330:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc0 += x[0] * y[srcBLen - 1] + x[1] * y[srcBLen - 2]  */
 331:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc0 = __SMLAD(input1, input2, acc0);
 332:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 333:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* x[1] and x[2] are packed */
 334:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) x1;
 335:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) x2;
 336:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 337:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 338:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 339:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc1 += x[1] * y[srcBLen - 1] + x[2] * y[srcBLen - 2]  */
 340:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc1 = __SMLAD(input1, input2, acc1);
 341:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 342:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* x[2] and x[3] are packed */
 343:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) x2;
 344:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) x3;
 345:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 346:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 347:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 348:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc2 += x[2] * y[srcBLen - 1] + x[3] * y[srcBLen - 2]  */
 349:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc2 = __SMLAD(input1, input2, acc2);
 350:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 351:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read x[4] sample */
 352:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           x0 = *px++;
 353:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 354:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* x[3] and x[4] are packed */
 355:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) x3;
 356:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) x0;
 357:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 358:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 359:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 360:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc3 += x[3] * y[srcBLen - 1] + x[4] * y[srcBLen - 2]  */
 361:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc3 = __SMLAD(input1, input2, acc3);
 362:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 363:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read y[srcBLen - 3] sample */
 364:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           c0 = *py--;
 365:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read y[srcBLen - 4] sample */
 366:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           c1 = *py--;
 367:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 368:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read x[5] sample */
 369:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           x1 = *px++;
 370:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 371:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* x[2] and x[3] are packed */
 372:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) x2;
 373:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) x3;
 374:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 375:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 376:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 377:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* y[srcBLen - 3] and y[srcBLen - 4] are packed */
 378:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) c0;
 379:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) c1;
 380:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 381:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 382:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 383:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc0 += x[2] * y[srcBLen - 3] + x[3] * y[srcBLen - 4]  */
 384:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc0 = __SMLAD(input1, input2, acc0);
 385:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 386:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* x[3] and x[4] are packed */
 387:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) x3;
 388:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) x0;
 389:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 390:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 391:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 392:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc1 += x[3] * y[srcBLen - 3] + x[4] * y[srcBLen - 4]  */
 393:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc1 = __SMLAD(input1, input2, acc1);
 394:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 395:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* x[4] and x[5] are packed */
 396:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) x0;
 397:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) x1;
 398:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 399:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 400:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 401:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc2 += x[4] * y[srcBLen - 3] + x[5] * y[srcBLen - 4]  */
 402:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc2 = __SMLAD(input1, input2, acc2);
 403:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 404:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read x[6] sample */
 405:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           x2 = *px++;
 406:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 407:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* x[5] and x[6] are packed */
 408:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) x1;
 409:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) x2;
 410:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 411:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 412:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 413:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc3 += x[5] * y[srcBLen - 3] + x[6] * y[srcBLen - 4]  */
 414:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc3 = __SMLAD(input1, input2, acc3);
 415:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 416:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         } while (--k);
 417:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 418:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* If the srcBLen is not a multiple of 4, compute any remaining MACs here.
 419:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****          ** No loop unrolling is used. */
 420:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k = srcBLen % 0x4U;
 421:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 422:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         while (k > 0U)
 423:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         {
 424:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read y[srcBLen - 5] sample */
 425:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           c0 = *py--;
 426:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Read x[7] sample */
 427:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           x3 = *px++;
 428:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 429:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Perform the multiply-accumulates */
 430:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc0 +=  x[4] * y[srcBLen - 5] */
 431:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc0 += ((q31_t) x0 * c0);
 432:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc1 +=  x[5] * y[srcBLen - 5] */
 433:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc1 += ((q31_t) x1 * c0);
 434:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc2 +=  x[6] * y[srcBLen - 5] */
 435:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc2 += ((q31_t) x2 * c0);
 436:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* acc3 +=  x[7] * y[srcBLen - 5] */
 437:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           acc3 += ((q31_t) x3 * c0);
 438:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 439:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Reuse the present samples for the next MAC */
 440:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           x0 = x1;
 441:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           x1 = x2;
 442:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           x2 = x3;
 443:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 444:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Decrement the loop counter */
 445:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           k--;
 446:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         }
 447:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 448:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Store the result in the accumulator in the destination buffer. */
 449:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         *pOut++ = (q7_t) (__SSAT(acc0 >> 7, 8));
 450:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         *pOut++ = (q7_t) (__SSAT(acc1 >> 7, 8));
 451:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         *pOut++ = (q7_t) (__SSAT(acc2 >> 7, 8));
 452:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         *pOut++ = (q7_t) (__SSAT(acc3 >> 7, 8));
 453:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 454:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Increment the pointer pIn1 index, count by 4 */
 455:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         count += 4U;
 456:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 457:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 458:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         px = pSrc1 + count;
 459:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         py = pSrc2;
 460:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 461:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Decrement loop counter */
 462:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         blkCnt--;
 463:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       }
 464:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 465:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Loop unrolling: Compute remaining outputs */
 466:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       blkCnt = (uint32_t) blockSize2 % 0x4U;
 467:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 468:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #else
 469:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 470:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Initialize blkCnt with number of samples */
 471:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       blkCnt = blockSize2;
 308              	 .loc 1 471 0
 309 01a8 7B6B     	 ldr r3,[r7,#52]
 310 01aa FB64     	 str r3,[r7,#76]
 472:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 473:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 474:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 475:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       while (blkCnt > 0U)
 311              	 .loc 1 475 0
 312 01ac 32E0     	 b .L21
 313              	.L24:
 476:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 477:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Accumulator is made zero for every iteration */
 478:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         sum = 0;
 314              	 .loc 1 478 0
 315 01ae 0023     	 movs r3,#0
 316 01b0 BB65     	 str r3,[r7,#88]
 479:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 480:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
 481:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 482:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Loop unrolling: Compute 4 outputs at a time */
 483:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k = srcBLen >> 2U;
 484:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 485:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         while (k > 0U)
 486:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         {
 487:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Reading two inputs of SrcA buffer and packing */
 488:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) *px++;
 489:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) *px++;
 490:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 491:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 492:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Reading two inputs of SrcB buffer and packing */
 493:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) *py--;
 494:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) *py--;
 495:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 496:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 497:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Perform the multiply-accumulate */
 498:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           sum = __SMLAD(input1, input2, sum);
 499:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 500:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Reading two inputs of SrcA buffer and packing */
 501:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) *px++;
 502:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) *px++;
 503:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 504:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 505:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Reading two inputs of SrcB buffer and packing */
 506:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in1 = (q15_t) *py--;
 507:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           in2 = (q15_t) *py--;
 508:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 509:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 510:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Perform the multiply-accumulate */
 511:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           sum = __SMLAD(input1, input2, sum);
 512:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 513:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Decrement loop counter */
 514:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           k--;
 515:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         }
 516:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 517:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Loop unrolling: Compute remaining outputs */
 518:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k = srcBLen % 0x4U;
 519:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 520:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #else
 521:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 522:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Initialize blkCnt with number of samples */
 523:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k = srcBLen;
 317              	 .loc 1 523 0
 318 01b2 3B68     	 ldr r3,[r7]
 319 01b4 7B65     	 str r3,[r7,#84]
 524:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 525:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 526:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 527:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         while (k > 0U)
 320              	 .loc 1 527 0
 321 01b6 11E0     	 b .L22
 322              	.L23:
 528:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         {
 529:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Perform the multiply-accumulate */
 530:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           sum += ((q31_t) * px++ * *py--);
 323              	 .loc 1 530 0
 324 01b8 BB6E     	 ldr r3,[r7,#104]
 325 01ba 5A1C     	 adds r2,r3,#1
 326 01bc BA66     	 str r2,[r7,#104]
 327 01be 1B78     	 ldrb r3,[r3]
 328 01c0 5AB2     	 sxtb r2,r3
 329 01c2 7B6E     	 ldr r3,[r7,#100]
 330 01c4 591E     	 subs r1,r3,#1
 331 01c6 7966     	 str r1,[r7,#100]
 332 01c8 1B78     	 ldrb r3,[r3]
 333 01ca 5BB2     	 sxtb r3,r3
 334 01cc 03FB02F3 	 mul r3,r3,r2
 335 01d0 BA6D     	 ldr r2,[r7,#88]
 336 01d2 1344     	 add r3,r3,r2
 337 01d4 BB65     	 str r3,[r7,#88]
 531:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 532:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Decrement loop counter */
 533:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           k--;
 338              	 .loc 1 533 0
 339 01d6 7B6D     	 ldr r3,[r7,#84]
 340 01d8 013B     	 subs r3,r3,#1
 341 01da 7B65     	 str r3,[r7,#84]
 342              	.L22:
 527:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         {
 343              	 .loc 1 527 0
 344 01dc 7B6D     	 ldr r3,[r7,#84]
 345 01de 002B     	 cmp r3,#0
 346 01e0 EAD1     	 bne .L23
 534:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         }
 535:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 536:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Store the result in the accumulator in the destination buffer. */
 537:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         *pOut++ = (q7_t) (__SSAT(sum >> 7, 8));
 347              	 .loc 1 537 0
 348 01e2 FB6E     	 ldr r3,[r7,#108]
 349 01e4 5A1C     	 adds r2,r3,#1
 350 01e6 FA66     	 str r2,[r7,#108]
 351              	.LBB3:
 352 01e8 BA6D     	 ldr r2,[r7,#88]
 353 01ea D211     	 asrs r2,r2,#7
 354 01ec BA62     	 str r2,[r7,#40]
 355 01ee BA6A     	 ldr r2,[r7,#40]
 356              	
 357 01f0 02F30702 	 ssat r2,#8,r2
 358              	
 359              	 .thumb
 360 01f4 7A62     	 str r2,[r7,#36]
 361 01f6 7A6A     	 ldr r2,[r7,#36]
 362              	.LBE3:
 363 01f8 D2B2     	 uxtb r2,r2
 364 01fa 1A70     	 strb r2,[r3]
 538:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 539:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Increment the pointer pIn1 index, count by 1 */
 540:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         count++;
 365              	 .loc 1 540 0
 366 01fc 3B6D     	 ldr r3,[r7,#80]
 367 01fe 0133     	 adds r3,r3,#1
 368 0200 3B65     	 str r3,[r7,#80]
 541:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 542:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 543:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         px = pSrc1 + count;
 369              	 .loc 1 543 0
 370 0202 3A6E     	 ldr r2,[r7,#96]
 371 0204 3B6D     	 ldr r3,[r7,#80]
 372 0206 1344     	 add r3,r3,r2
 373 0208 BB66     	 str r3,[r7,#104]
 544:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         py = pSrc2;
 374              	 .loc 1 544 0
 375 020a FB6D     	 ldr r3,[r7,#92]
 376 020c 7B66     	 str r3,[r7,#100]
 545:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 546:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Decrement loop counter */
 547:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         blkCnt--;
 377              	 .loc 1 547 0
 378 020e FB6C     	 ldr r3,[r7,#76]
 379 0210 013B     	 subs r3,r3,#1
 380 0212 FB64     	 str r3,[r7,#76]
 381              	.L21:
 475:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 382              	 .loc 1 475 0
 383 0214 FB6C     	 ldr r3,[r7,#76]
 384 0216 002B     	 cmp r3,#0
 385 0218 C9D1     	 bne .L24
 386 021a 38E0     	 b .L25
 387              	.L20:
 548:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       }
 549:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 550:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     else
 551:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 552:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* If the srcBLen is not a multiple of 4,
 553:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****        * the blockSize2 loop cannot be unrolled by 4 */
 554:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       blkCnt = (uint32_t) blockSize2;
 388              	 .loc 1 554 0
 389 021c 7B6B     	 ldr r3,[r7,#52]
 390 021e FB64     	 str r3,[r7,#76]
 555:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 556:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       while (blkCnt > 0U)
 391              	 .loc 1 556 0
 392 0220 32E0     	 b .L26
 393              	.L29:
 557:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 558:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Accumulator is made zero for every iteration */
 559:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         sum = 0;
 394              	 .loc 1 559 0
 395 0222 0023     	 movs r3,#0
 396 0224 BB65     	 str r3,[r7,#88]
 560:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 561:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* srcBLen number of MACS should be performed */
 562:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k = srcBLen;
 397              	 .loc 1 562 0
 398 0226 3B68     	 ldr r3,[r7]
 399 0228 7B65     	 str r3,[r7,#84]
 563:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 564:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         while (k > 0U)
 400              	 .loc 1 564 0
 401 022a 11E0     	 b .L27
 402              	.L28:
 565:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         {
 566:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Perform the multiply-accumulate */
 567:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           sum += ((q31_t) * px++ * *py--);
 403              	 .loc 1 567 0
 404 022c BB6E     	 ldr r3,[r7,#104]
 405 022e 5A1C     	 adds r2,r3,#1
 406 0230 BA66     	 str r2,[r7,#104]
 407 0232 1B78     	 ldrb r3,[r3]
 408 0234 5AB2     	 sxtb r2,r3
 409 0236 7B6E     	 ldr r3,[r7,#100]
 410 0238 591E     	 subs r1,r3,#1
 411 023a 7966     	 str r1,[r7,#100]
 412 023c 1B78     	 ldrb r3,[r3]
 413 023e 5BB2     	 sxtb r3,r3
 414 0240 03FB02F3 	 mul r3,r3,r2
 415 0244 BA6D     	 ldr r2,[r7,#88]
 416 0246 1344     	 add r3,r3,r2
 417 0248 BB65     	 str r3,[r7,#88]
 568:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 569:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* Decrement loop counter */
 570:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           k--;
 418              	 .loc 1 570 0
 419 024a 7B6D     	 ldr r3,[r7,#84]
 420 024c 013B     	 subs r3,r3,#1
 421 024e 7B65     	 str r3,[r7,#84]
 422              	.L27:
 564:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         {
 423              	 .loc 1 564 0
 424 0250 7B6D     	 ldr r3,[r7,#84]
 425 0252 002B     	 cmp r3,#0
 426 0254 EAD1     	 bne .L28
 571:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         }
 572:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 573:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Store the result in the accumulator in the destination buffer. */
 574:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         *pOut++ = (q7_t) (__SSAT(sum >> 7, 8));
 427              	 .loc 1 574 0
 428 0256 FB6E     	 ldr r3,[r7,#108]
 429 0258 5A1C     	 adds r2,r3,#1
 430 025a FA66     	 str r2,[r7,#108]
 431              	.LBB4:
 432 025c BA6D     	 ldr r2,[r7,#88]
 433 025e D211     	 asrs r2,r2,#7
 434 0260 3A62     	 str r2,[r7,#32]
 435 0262 3A6A     	 ldr r2,[r7,#32]
 436              	
 437 0264 02F30702 	 ssat r2,#8,r2
 438              	
 439              	 .thumb
 440 0268 FA61     	 str r2,[r7,#28]
 441 026a FA69     	 ldr r2,[r7,#28]
 442              	.LBE4:
 443 026c D2B2     	 uxtb r2,r2
 444 026e 1A70     	 strb r2,[r3]
 575:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 576:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Increment the MAC count */
 577:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         count++;
 445              	 .loc 1 577 0
 446 0270 3B6D     	 ldr r3,[r7,#80]
 447 0272 0133     	 adds r3,r3,#1
 448 0274 3B65     	 str r3,[r7,#80]
 578:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 579:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Update the inputA and inputB pointers for next MAC calculation */
 580:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         px = pSrc1 + count;
 449              	 .loc 1 580 0
 450 0276 3A6E     	 ldr r2,[r7,#96]
 451 0278 3B6D     	 ldr r3,[r7,#80]
 452 027a 1344     	 add r3,r3,r2
 453 027c BB66     	 str r3,[r7,#104]
 581:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         py = pSrc2;
 454              	 .loc 1 581 0
 455 027e FB6D     	 ldr r3,[r7,#92]
 456 0280 7B66     	 str r3,[r7,#100]
 582:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 583:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Decrement the loop counter */
 584:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         blkCnt--;
 457              	 .loc 1 584 0
 458 0282 FB6C     	 ldr r3,[r7,#76]
 459 0284 013B     	 subs r3,r3,#1
 460 0286 FB64     	 str r3,[r7,#76]
 461              	.L26:
 556:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 462              	 .loc 1 556 0
 463 0288 FB6C     	 ldr r3,[r7,#76]
 464 028a 002B     	 cmp r3,#0
 465 028c C9D1     	 bne .L29
 466              	.L25:
 585:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       }
 586:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 587:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 588:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 589:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* --------------------------
 590:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * Initializations of stage3
 591:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * -------------------------*/
 592:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 593:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* sum += x[srcALen-srcBLen+1] * y[srcBLen-1] + x[srcALen-srcBLen+2] * y[srcBLen-2] +...+ x[src
 594:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * sum += x[srcALen-srcBLen+2] * y[srcBLen-1] + x[srcALen-srcBLen+3] * y[srcBLen-2] +...+ x[src
 595:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * ....
 596:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * sum +=  x[srcALen-2] * y[srcBLen-1] + x[srcALen-1] * y[srcBLen-2]
 597:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * sum +=  x[srcALen-1] * y[srcBLen-1]
 598:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      */
 599:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 600:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* In this stage the MAC operations are decreased by 1 for every iteration.
 601:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****        The count variable holds the number of MAC operations performed */
 602:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     count = srcBLen - 1U;
 467              	 .loc 1 602 0
 468 028e 3B68     	 ldr r3,[r7]
 469 0290 013B     	 subs r3,r3,#1
 470 0292 3B65     	 str r3,[r7,#80]
 603:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 604:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Working pointer of inputA */
 605:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     pSrc1 = (pIn1 + srcALen) - (srcBLen - 1U);
 471              	 .loc 1 605 0
 472 0294 BA68     	 ldr r2,[r7,#8]
 473 0296 3B68     	 ldr r3,[r7]
 474 0298 D31A     	 subs r3,r2,r3
 475 029a 0133     	 adds r3,r3,#1
 476 029c 7A6F     	 ldr r2,[r7,#116]
 477 029e 1344     	 add r3,r3,r2
 478 02a0 3B66     	 str r3,[r7,#96]
 606:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     px = pSrc1;
 479              	 .loc 1 606 0
 480 02a2 3B6E     	 ldr r3,[r7,#96]
 481 02a4 BB66     	 str r3,[r7,#104]
 607:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 608:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Working pointer of inputB */
 609:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     pSrc2 = pIn2 + (srcBLen - 1U);
 482              	 .loc 1 609 0
 483 02a6 3B68     	 ldr r3,[r7]
 484 02a8 013B     	 subs r3,r3,#1
 485 02aa 3A6F     	 ldr r2,[r7,#112]
 486 02ac 1344     	 add r3,r3,r2
 487 02ae FB65     	 str r3,[r7,#92]
 610:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     py = pSrc2;
 488              	 .loc 1 610 0
 489 02b0 FB6D     	 ldr r3,[r7,#92]
 490 02b2 7B66     	 str r3,[r7,#100]
 611:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 612:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* -------------------
 613:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * Stage3 process
 614:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****      * ------------------*/
 615:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 616:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     while (blockSize3 > 0U)
 491              	 .loc 1 616 0
 492 02b4 33E0     	 b .L30
 493              	.L33:
 617:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 618:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Accumulator is made zero for every iteration */
 619:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       sum = 0;
 494              	 .loc 1 619 0
 495 02b6 0023     	 movs r3,#0
 496 02b8 BB65     	 str r3,[r7,#88]
 620:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 621:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #if defined (ARM_MATH_LOOPUNROLL)
 622:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 623:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Loop unrolling: Compute 4 outputs at a time */
 624:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       k = count >> 2U;
 625:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 626:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       while (k > 0U)
 627:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 628:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Reading two inputs, x[srcALen - srcBLen + 1] and x[srcALen - srcBLen + 2] of SrcA buffer
 629:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in1 = (q15_t) *px++;
 630:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in2 = (q15_t) *px++;
 631:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 632:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 633:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Reading two inputs, y[srcBLen - 1] and y[srcBLen - 2] of SrcB buffer and packing */
 634:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in1 = (q15_t) *py--;
 635:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in2 = (q15_t) *py--;
 636:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 637:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 638:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* sum += x[srcALen - srcBLen + 1] * y[srcBLen - 1] */
 639:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* sum += x[srcALen - srcBLen + 2] * y[srcBLen - 2] */
 640:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         sum = __SMLAD(input1, input2, sum);
 641:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 642:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Reading two inputs, x[srcALen - srcBLen + 3] and x[srcALen - srcBLen + 4] of SrcA buffer
 643:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in1 = (q15_t) *px++;
 644:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in2 = (q15_t) *px++;
 645:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         input1 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 646:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 647:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Reading two inputs, y[srcBLen - 3] and y[srcBLen - 4] of SrcB buffer and packing */
 648:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in1 = (q15_t) *py--;
 649:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         in2 = (q15_t) *py--;
 650:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         input2 = ((q31_t) in1 & 0x0000FFFF) | ((q31_t) in2 << 16);
 651:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 652:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* sum += x[srcALen - srcBLen + 3] * y[srcBLen - 3] */
 653:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* sum += x[srcALen - srcBLen + 4] * y[srcBLen - 4] */
 654:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         sum = __SMLAD(input1, input2, sum);
 655:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 656:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Decrement loop counter */
 657:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k--;
 658:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       }
 659:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 660:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Loop unrolling: Compute remaining outputs */
 661:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       k = count % 0x4U;
 662:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 663:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #else
 664:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 665:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Initialize blkCnt with number of samples */
 666:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       k = count;
 497              	 .loc 1 666 0
 498 02ba 3B6D     	 ldr r3,[r7,#80]
 499 02bc 7B65     	 str r3,[r7,#84]
 667:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 668:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 669:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 670:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       while (k > 0U)
 500              	 .loc 1 670 0
 501 02be 11E0     	 b .L31
 502              	.L32:
 671:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 672:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Perform the multiply-accumulates */
 673:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* sum +=  x[srcALen-1] * y[srcBLen-1] */
 674:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         sum += ((q31_t) * px++ * *py--);
 503              	 .loc 1 674 0
 504 02c0 BB6E     	 ldr r3,[r7,#104]
 505 02c2 5A1C     	 adds r2,r3,#1
 506 02c4 BA66     	 str r2,[r7,#104]
 507 02c6 1B78     	 ldrb r3,[r3]
 508 02c8 5AB2     	 sxtb r2,r3
 509 02ca 7B6E     	 ldr r3,[r7,#100]
 510 02cc 591E     	 subs r1,r3,#1
 511 02ce 7966     	 str r1,[r7,#100]
 512 02d0 1B78     	 ldrb r3,[r3]
 513 02d2 5BB2     	 sxtb r3,r3
 514 02d4 03FB02F3 	 mul r3,r3,r2
 515 02d8 BA6D     	 ldr r2,[r7,#88]
 516 02da 1344     	 add r3,r3,r2
 517 02dc BB65     	 str r3,[r7,#88]
 675:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 676:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Decrement loop counter */
 677:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         k--;
 518              	 .loc 1 677 0
 519 02de 7B6D     	 ldr r3,[r7,#84]
 520 02e0 013B     	 subs r3,r3,#1
 521 02e2 7B65     	 str r3,[r7,#84]
 522              	.L31:
 670:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 523              	 .loc 1 670 0
 524 02e4 7B6D     	 ldr r3,[r7,#84]
 525 02e6 002B     	 cmp r3,#0
 526 02e8 EAD1     	 bne .L32
 678:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       }
 679:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 680:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Store the result in the accumulator in the destination buffer. */
 681:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       *pOut++ = (q7_t) (__SSAT(sum >> 7, 8));
 527              	 .loc 1 681 0
 528 02ea FB6E     	 ldr r3,[r7,#108]
 529 02ec 5A1C     	 adds r2,r3,#1
 530 02ee FA66     	 str r2,[r7,#108]
 531              	.LBB5:
 532 02f0 BA6D     	 ldr r2,[r7,#88]
 533 02f2 D211     	 asrs r2,r2,#7
 534 02f4 BA61     	 str r2,[r7,#24]
 535 02f6 BA69     	 ldr r2,[r7,#24]
 536              	
 537 02f8 02F30702 	 ssat r2,#8,r2
 538              	
 539              	 .thumb
 540 02fc 7A61     	 str r2,[r7,#20]
 541 02fe 7A69     	 ldr r2,[r7,#20]
 542              	.LBE5:
 543 0300 D2B2     	 uxtb r2,r2
 544 0302 1A70     	 strb r2,[r3]
 682:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 683:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Update the inputA and inputB pointers for next MAC calculation */
 684:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       px = ++pSrc1;
 545              	 .loc 1 684 0
 546 0304 3B6E     	 ldr r3,[r7,#96]
 547 0306 0133     	 adds r3,r3,#1
 548 0308 3B66     	 str r3,[r7,#96]
 549 030a 3B6E     	 ldr r3,[r7,#96]
 550 030c BB66     	 str r3,[r7,#104]
 685:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       py = pSrc2;
 551              	 .loc 1 685 0
 552 030e FB6D     	 ldr r3,[r7,#92]
 553 0310 7B66     	 str r3,[r7,#100]
 686:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 687:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Decrement MAC count */
 688:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       count--;
 554              	 .loc 1 688 0
 555 0312 3B6D     	 ldr r3,[r7,#80]
 556 0314 013B     	 subs r3,r3,#1
 557 0316 3B65     	 str r3,[r7,#80]
 689:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 690:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Decrement the loop counter */
 691:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       blockSize3--;
 558              	 .loc 1 691 0
 559 0318 7B6C     	 ldr r3,[r7,#68]
 560 031a 013B     	 subs r3,r3,#1
 561 031c 7B64     	 str r3,[r7,#68]
 562              	.L30:
 616:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 563              	 .loc 1 616 0
 564 031e 7B6C     	 ldr r3,[r7,#68]
 565 0320 002B     	 cmp r3,#0
 566 0322 C8D1     	 bne .L33
 692:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 693:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 694:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Set status as ARM_MATH_SUCCESS */
 695:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     status = ARM_MATH_SUCCESS;
 567              	 .loc 1 695 0
 568 0324 0023     	 movs r3,#0
 569 0326 87F84330 	 strb r3,[r7,#67]
 570              	.L3:
 696:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   }
 697:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 698:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   /* Return to application */
 699:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   return (status);
 571              	 .loc 1 699 0
 572 032a 97F84330 	 ldrb r3,[r7,#67]
 573 032e 5BB2     	 sxtb r3,r3
 700:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 701:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #else
 702:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** /* alternate version for CM0_FAMILY */
 703:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 704:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t *pIn1 = pSrcA;                            /* InputA pointer */
 705:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   const q7_t *pIn2 = pSrcB;                            /* InputB pointer */
 706:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         q31_t sum;                                     /* Accumulator */
 707:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         uint32_t i, j;                                 /* Loop counters */
 708:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         arm_status status;                             /* Status of Partial convolution */
 709:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 710:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   /* Check for range of output samples to be calculated */
 711:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   if ((firstIndex + numPoints) > ((srcALen + (srcBLen - 1U))))
 712:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   {
 713:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Set status as ARM_MATH_ARGUMENT_ERROR */
 714:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     status = ARM_MATH_ARGUMENT_ERROR;
 715:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   }
 716:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   else
 717:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   {
 718:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Loop to calculate convolution for output length number of values */
 719:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     for (i = firstIndex; i <= (firstIndex + numPoints - 1); i++)
 720:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     {
 721:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Initialize sum with zero to carry on MAC operations */
 722:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       sum = 0;
 723:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 724:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Loop to perform MAC operations according to convolution equation */
 725:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       for (j = 0U; j <= i; j++)
 726:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       {
 727:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         /* Check the array limitations */
 728:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         if (((i - j) < srcBLen) && (j < srcALen))
 729:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         {
 730:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           /* z[i] += x[i-j] * y[j] */
 731:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****           sum += ((q15_t) pIn1[j] * (pIn2[i - j]));
 732:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****         }
 733:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       }
 734:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 735:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       /* Store the output in the destination buffer */
 736:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****       pDst[i] = (q7_t) __SSAT((sum >> 7U), 8U);
 737:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     }
 738:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 739:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     /* Set status as ARM_MATH_SUCCESS */
 740:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****     status = ARM_MATH_SUCCESS;
 741:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   }
 742:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 743:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   /* Return to application */
 744:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c ****   return (status);
 745:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 746:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** #endif /* #if !defined(ARM_MATH_CM0_FAMILY) */
 747:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** 
 748:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_conv_partial_q7.c **** }
 574              	 .loc 1 748 0
 575 0330 1846     	 mov r0,r3
 576 0332 7C37     	 adds r7,r7,#124
 577              	.LCFI3:
 578              	 .cfi_def_cfa_offset 4
 579 0334 BD46     	 mov sp,r7
 580              	.LCFI4:
 581              	 .cfi_def_cfa_register 13
 582              	 
 583 0336 5DF8047B 	 ldr r7,[sp],#4
 584              	.LCFI5:
 585              	 .cfi_restore 7
 586              	 .cfi_def_cfa_offset 0
 587 033a 7047     	 bx lr
 588              	 .cfi_endproc
 589              	.LFE149:
 591              	 .text
 592              	.Letext0:
 593              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 594              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 595              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 596              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_conv_partial_q7.c
    {standard input}:20     .text.arm_conv_partial_q7:00000000 $t
    {standard input}:25     .text.arm_conv_partial_q7:00000000 arm_conv_partial_q7
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
