   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_iir_lattice_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_iir_lattice_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_iir_lattice_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_iir_lattice_f32:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * Title:        arm_iir_lattice_f32.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * Description:  Floating-point IIR Lattice filter processing function
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @defgroup IIR_Lattice Infinite Impulse Response (IIR) Lattice Filters
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   This set of functions implements lattice filters
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   for Q15, Q31 and floating-point data types.  Lattice filters are used in a
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   variety of adaptive filter applications. The filter structure has feedforward and
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   feedback components and the net impulse response is infinite length.
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   The functions operate on blocks
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   of input and output data and each call to the function processes
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   <code>blockSize</code> samples through the filter.  <code>pSrc</code> and
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   <code>pDst</code> point to input and output arrays containing <code>blockSize</code> values.
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par           Algorithm
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    \image html IIRLattice.gif "Infinite Impulse Response Lattice filter"
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   <pre>
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       fN(n)   = x(n)
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       fm-1(n) = fm(n) - km * gm-1(n-1)   for m = N, N-1, ..., 1
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gm(n)   = km * fm-1(n) + gm-1(n-1) for m = N, N-1, ..., 1
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       y(n)    = vN * gN(n) + vN-1 * gN-1(n) + ...+ v0 * g0(n)
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   </pre>
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    <code>pkCoeffs</code> points to array of reflection coefficients of size <code>n
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    Reflection Coefficients are stored in time-reversed order.
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   <pre>
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****      {kN, kN-1, ..., k1}
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   </pre>
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                   <code>pvCoeffs</code> points to the array of ladder coefficients of size <code>(n
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                   Ladder coefficients are stored in time-reversed order.
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   <pre>
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       {vN, vN-1, ..., v0}
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   </pre>
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    <code>pState</code> points to a state array of size <code>numStages + blockSize<
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    The state variables shown in the figure above (the g values) are stored in the <
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    The state variables are updated after each block of data is processed; the coeff
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par           Instance Structure
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    The coefficients and state variables for a filter are stored together in an inst
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    A separate instance structure must be defined for each filter.
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    Coefficient arrays may be shared among several instances while state variable ar
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    There are separate instance structure declarations for each of the 3 supported d
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par           Initialization Functions
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    There is also an associated initialization function for each data type.
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    The initialization function performs the following operations:
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    - Sets the values of the internal structure fields.
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    - Zeros out the values in the state buffer.
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    To do this manually without calling the init function, assign the follow subfiel
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    numStages, pkCoeffs, pvCoeffs, pState. Also set all of the values in pState to z
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    Use of the initialization function is optional.
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    However, if the initialization function is used, then the instance structure can
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    To place an instance structure into a const data section, the instance structure
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    Set the values in the state buffer to zeros and then manually initialize the ins
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   <pre>
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       arm_iir_lattice_instance_f32 S = {numStages, pState, pkCoeffs, pvCoeffs};
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       arm_iir_lattice_instance_q31 S = {numStages, pState, pkCoeffs, pvCoeffs};
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       arm_iir_lattice_instance_q15 S = {numStages, pState, pkCoeffs, pvCoeffs};
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   </pre>
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    where <code>numStages</code> is the number of stages in the filter; <code>pState
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    <code>pkCoeffs</code> points to array of the reflection coefficients; <code>pvCo
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @par           Fixed-Point Behavior
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    Care must be taken when using the fixed-point versions of the IIR lattice filter
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    In particular, the overflow and saturation behavior of the accumulator used in e
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****                    Refer to the function specific documentation below for usage guidelines.
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  */
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** /**
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @addtogroup IIR_Lattice
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @{
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  */
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** /**
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @brief         Processing function for the floating-point IIR lattice filter.
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @param[in]     S          points to an instance of the floating-point IIR lattice structure
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @param[in]     pSrc       points to the block of input data
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @param[out]    pDst       points to the block of output data
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @param[in]     blockSize  number of samples to process
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   @return        none
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****  */
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** void arm_iir_lattice_f32(
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   const arm_iir_lattice_instance_f32 * S,
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   const float32_t * pSrc,
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t * pDst,
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         uint32_t blockSize)
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** {       
  28              	 .loc 1 126 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 93B0     	 sub sp,sp,#76
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 80
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t *pState = S->pState;                   /* State pointer */
  47              	 .loc 1 127 0
  48 000e FB68     	 ldr r3,[r7,#12]
  49 0010 5B68     	 ldr r3,[r3,#4]
  50 0012 7B64     	 str r3,[r7,#68]
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t *pStateCur;                            /* State current pointer */
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t acc;                                   /* Accumlator */
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t fnext1, fnext2, gcurr1, gnext;         /* Temporary variables for lattice stages 
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t *px1, *px2, *pk, *pv;                  /* Temporary pointers for state and coef *
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         uint32_t numStages = S->numStages;               /* Number of stages */
  51              	 .loc 1 132 0
  52 0014 FB68     	 ldr r3,[r7,#12]
  53 0016 1B88     	 ldrh r3,[r3]
  54 0018 FB61     	 str r3,[r7,#28]
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         uint32_t blkCnt, tapCnt;                         /* Temporary variables for counts */
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t gcurr2;                                /* Temporary variables for lattice stages 
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t k1, k2;
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****         float32_t v1, v2, v3, v4;
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #endif
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   /* initialise loop count */
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   blkCnt = blockSize;
  55              	 .loc 1 142 0
  56 001a 3B68     	 ldr r3,[r7]
  57 001c 7B62     	 str r3,[r7,#36]
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   /* Sample processing */
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   while (blkCnt > 0U)
  58              	 .loc 1 145 0
  59 001e 6EE0     	 b .L2
  60              	.L5:
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   {
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Read Sample from input buffer */
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* fN(n) = x(n) */
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     fnext2 = *pSrc++;
  61              	 .loc 1 149 0
  62 0020 BB68     	 ldr r3,[r7,#8]
  63 0022 1A1D     	 adds r2,r3,#4
  64 0024 BA60     	 str r2,[r7,#8]
  65 0026 1B68     	 ldr r3,[r3]
  66 0028 BB63     	 str r3,[r7,#56]
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Initialize Ladder coeff pointer */
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     pv = &S->pvCoeffs[0];
  67              	 .loc 1 152 0
  68 002a FB68     	 ldr r3,[r7,#12]
  69 002c DB68     	 ldr r3,[r3,#12]
  70 002e BB62     	 str r3,[r7,#40]
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Initialize Reflection coeff pointer */
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     pk = &S->pkCoeffs[0];
  71              	 .loc 1 155 0
  72 0030 FB68     	 ldr r3,[r7,#12]
  73 0032 9B68     	 ldr r3,[r3,#8]
  74 0034 FB62     	 str r3,[r7,#44]
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Initialize state read pointer */
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     px1 = pState;
  75              	 .loc 1 158 0
  76 0036 7B6C     	 ldr r3,[r7,#68]
  77 0038 7B63     	 str r3,[r7,#52]
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Initialize state write pointer */
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     px2 = pState;
  78              	 .loc 1 161 0
  79 003a 7B6C     	 ldr r3,[r7,#68]
  80 003c 3B63     	 str r3,[r7,#48]
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Set accumulator to zero */
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     acc = 0.0;
  81              	 .loc 1 164 0
  82 003e 4FF00003 	 mov r3,#0
  83 0042 FB63     	 str r3,[r7,#60]
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Loop unrolling: Compute 4 taps at a time. */
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     tapCnt = (numStages) >> 2U;
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     while (tapCnt > 0U)
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     {
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* Read gN-1(n-1) from state buffer */
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gcurr1 = *px1;
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* read reflection coefficient kN */
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       k1 = *pk;
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* fN-1(n) = fN(n) - kN * gN-1(n-1) */
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       fnext1 = fnext2 - (k1 * gcurr1);
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* read ladder coefficient vN */
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       v1 = *pv;
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* read next reflection coefficient kN-1 */
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       k2 = *(pk + 1U);
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* Read gN-2(n-1) from state buffer */
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gcurr2 = *(px1 + 1U);
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* read next ladder coefficient vN-1 */
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       v2 = *(pv + 1U);
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* fN-2(n) = fN-1(n) - kN-1 * gN-2(n-1) */
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       fnext2 = fnext1 - (k2 * gcurr2);
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* gN(n)   = kN * fN-1(n) + gN-1(n-1) */
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gnext = gcurr1 + (k1 * fnext1);
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* read reflection coefficient kN-2 */
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       k1 = *(pk + 2U);
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* write gN(n) into state for next sample processing */
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       *px2++ = gnext;
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* Read gN-3(n-1) from state buffer */
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gcurr1 = *(px1 + 2U);
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* y(n) += gN(n) * vN  */
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       acc += (gnext * v1);
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* fN-3(n) = fN-2(n) - kN-2 * gN-3(n-1) */
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       fnext1 = fnext2 - (k1 * gcurr1);
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* gN-1(n)   = kN-1 * fN-2(n) + gN-2(n-1) */
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gnext = gcurr2 + (k2 * fnext2);
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* Read gN-4(n-1) from state buffer */
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gcurr2 = *(px1 + 3U);
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* y(n) += gN-1(n) * vN-1  */
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       acc += (gnext * v2);
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* read reflection coefficient kN-3 */
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       k2 = *(pk + 3U);
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* write gN-1(n) into state for next sample processing */
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       *px2++ = gnext;
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* fN-4(n) = fN-3(n) - kN-3 * gN-4(n-1) */
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       fnext2 = fnext1 - (k2 * gcurr2);
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* gN-2(n) = kN-2 * fN-3(n) + gN-3(n-1) */
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gnext = gcurr1 + (k1 * fnext1);
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* read ladder coefficient vN-2 */
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       v3 = *(pv + 2U);
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* y(n) += gN-2(n) * vN-2  */
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       acc += (gnext * v3);
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* write gN-2(n) into state for next sample processing */
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       *px2++ = gnext;
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* update pointer */
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       pk += 4U;
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* gN-3(n) = kN-3 * fN-4(n) + gN-4(n-1) */
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gnext = (fnext2 * k2) + gcurr2;
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* read next ladder coefficient vN-3 */
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       v4 = *(pv + 3U);
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* y(n) += gN-4(n) * vN-4  */
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       acc += (gnext * v4);
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* write gN-3(n) into state for next sample processing */
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       *px2++ = gnext;
 259:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 260:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* update pointers */
 261:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       px1 += 4U;
 262:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       pv += 4U;
 263:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 264:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* Decrement loop counter */
 265:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       tapCnt--;
 266:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     }
 267:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 268:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Loop unrolling: Compute remaining taps */
 269:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     tapCnt = numStages % 0x4U;
 270:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 271:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #else
 272:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 273:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Initialize tapCnt with number of samples */
 274:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     tapCnt = numStages;
  84              	 .loc 1 274 0
  85 0044 FB69     	 ldr r3,[r7,#28]
  86 0046 3B62     	 str r3,[r7,#32]
 275:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 276:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 277:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     while (tapCnt > 0U)
  87              	 .loc 1 278 0
  88 0048 39E0     	 b .L3
  89              	.L4:
 279:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     {
 280:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gcurr1 = *px1++;
  90              	 .loc 1 280 0
  91 004a 7B6B     	 ldr r3,[r7,#52]
  92 004c 1A1D     	 adds r2,r3,#4
  93 004e 7A63     	 str r2,[r7,#52]
  94 0050 1B68     	 ldr r3,[r3]
  95 0052 BB61     	 str r3,[r7,#24]
 281:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* Process sample for last taps */
 282:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       fnext1 = fnext2 - ((*pk) * gcurr1);
  96              	 .loc 1 282 0
  97 0054 FB6A     	 ldr r3,[r7,#44]
  98 0056 93ED007A 	 flds s14,[r3]
  99 005a D7ED067A 	 flds s15,[r7,#24]
 100 005e 67EE277A 	 fmuls s15,s14,s15
 101 0062 97ED0E7A 	 flds s14,[r7,#56]
 102 0066 77EE677A 	 fsubs s15,s14,s15
 103 006a C7ED057A 	 fsts s15,[r7,#20]
 283:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       gnext = (fnext1 * (*pk++)) + gcurr1;
 104              	 .loc 1 283 0
 105 006e FB6A     	 ldr r3,[r7,#44]
 106 0070 1A1D     	 adds r2,r3,#4
 107 0072 FA62     	 str r2,[r7,#44]
 108 0074 93ED007A 	 flds s14,[r3]
 109 0078 D7ED057A 	 flds s15,[r7,#20]
 110 007c 27EE277A 	 fmuls s14,s14,s15
 111 0080 D7ED067A 	 flds s15,[r7,#24]
 112 0084 77EE277A 	 fadds s15,s14,s15
 113 0088 C7ED047A 	 fsts s15,[r7,#16]
 284:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* Output samples for last taps */
 285:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       acc += (gnext * (*pv++));
 114              	 .loc 1 285 0
 115 008c BB6A     	 ldr r3,[r7,#40]
 116 008e 1A1D     	 adds r2,r3,#4
 117 0090 BA62     	 str r2,[r7,#40]
 118 0092 93ED007A 	 flds s14,[r3]
 119 0096 D7ED047A 	 flds s15,[r7,#16]
 120 009a 67EE277A 	 fmuls s15,s14,s15
 121 009e 97ED0F7A 	 flds s14,[r7,#60]
 122 00a2 77EE277A 	 fadds s15,s14,s15
 123 00a6 C7ED0F7A 	 fsts s15,[r7,#60]
 286:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       *px2++ = gnext;
 124              	 .loc 1 286 0
 125 00aa 3B6B     	 ldr r3,[r7,#48]
 126 00ac 1A1D     	 adds r2,r3,#4
 127 00ae 3A63     	 str r2,[r7,#48]
 128 00b0 3A69     	 ldr r2,[r7,#16]
 129 00b2 1A60     	 str r2,[r3]
 287:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       fnext2 = fnext1;
 130              	 .loc 1 287 0
 131 00b4 7B69     	 ldr r3,[r7,#20]
 132 00b6 BB63     	 str r3,[r7,#56]
 288:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 289:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       /* Decrement loop counter */
 290:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****       tapCnt--;
 133              	 .loc 1 290 0
 134 00b8 3B6A     	 ldr r3,[r7,#32]
 135 00ba 013B     	 subs r3,r3,#1
 136 00bc 3B62     	 str r3,[r7,#32]
 137              	.L3:
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     {
 138              	 .loc 1 278 0
 139 00be 3B6A     	 ldr r3,[r7,#32]
 140 00c0 002B     	 cmp r3,#0
 141 00c2 C2D1     	 bne .L4
 291:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     }
 292:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 293:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* y(n) += g0(n) * v0 */
 294:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     acc += (fnext2 * (*pv));
 142              	 .loc 1 294 0
 143 00c4 BB6A     	 ldr r3,[r7,#40]
 144 00c6 93ED007A 	 flds s14,[r3]
 145 00ca D7ED0E7A 	 flds s15,[r7,#56]
 146 00ce 67EE277A 	 fmuls s15,s14,s15
 147 00d2 97ED0F7A 	 flds s14,[r7,#60]
 148 00d6 77EE277A 	 fadds s15,s14,s15
 149 00da C7ED0F7A 	 fsts s15,[r7,#60]
 295:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 296:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     *px2++ = fnext2;
 150              	 .loc 1 296 0
 151 00de 3B6B     	 ldr r3,[r7,#48]
 152 00e0 1A1D     	 adds r2,r3,#4
 153 00e2 3A63     	 str r2,[r7,#48]
 154 00e4 BA6B     	 ldr r2,[r7,#56]
 155 00e6 1A60     	 str r2,[r3]
 297:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 298:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* write out into pDst */
 299:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     *pDst++ = acc;
 156              	 .loc 1 299 0
 157 00e8 7B68     	 ldr r3,[r7,#4]
 158 00ea 1A1D     	 adds r2,r3,#4
 159 00ec 7A60     	 str r2,[r7,#4]
 160 00ee FA6B     	 ldr r2,[r7,#60]
 161 00f0 1A60     	 str r2,[r3]
 300:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 301:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Advance the state pointer by 4 to process the next group of 4 samples */
 302:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     pState = pState + 1U;
 162              	 .loc 1 302 0
 163 00f2 7B6C     	 ldr r3,[r7,#68]
 164 00f4 0433     	 adds r3,r3,#4
 165 00f6 7B64     	 str r3,[r7,#68]
 303:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 304:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Decrement loop counter */
 305:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     blkCnt--;
 166              	 .loc 1 305 0
 167 00f8 7B6A     	 ldr r3,[r7,#36]
 168 00fa 013B     	 subs r3,r3,#1
 169 00fc 7B62     	 str r3,[r7,#36]
 170              	.L2:
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   {
 171              	 .loc 1 145 0
 172 00fe 7B6A     	 ldr r3,[r7,#36]
 173 0100 002B     	 cmp r3,#0
 174 0102 8DD1     	 bne .L5
 306:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   }
 307:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 308:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   /* Processing is complete. Now copy last S->numStages samples to start of the buffer
 309:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****      for the preperation of next frame process */
 310:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 311:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   /* Points to the start of the state buffer */
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   pStateCur = &S->pState[0];
 175              	 .loc 1 312 0
 176 0104 FB68     	 ldr r3,[r7,#12]
 177 0106 5B68     	 ldr r3,[r3,#4]
 178 0108 3B64     	 str r3,[r7,#64]
 313:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   pState = &S->pState[blockSize];
 179              	 .loc 1 313 0
 180 010a FB68     	 ldr r3,[r7,#12]
 181 010c 5A68     	 ldr r2,[r3,#4]
 182 010e 3B68     	 ldr r3,[r7]
 183 0110 9B00     	 lsls r3,r3,#2
 184 0112 1344     	 add r3,r3,r2
 185 0114 7B64     	 str r3,[r7,#68]
 314:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 315:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   /* Copy data */
 316:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 317:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 318:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   /* Loop unrolling: Compute 4 taps at a time. */
 319:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   tapCnt = numStages >> 2U;
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 321:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   while (tapCnt > 0U)
 322:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   {
 323:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     *pStateCur++ = *pState++;
 324:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     *pStateCur++ = *pState++;
 325:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     *pStateCur++ = *pState++;
 326:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     *pStateCur++ = *pState++;
 327:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 328:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Decrement loop counter */
 329:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     tapCnt--;
 330:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   }
 331:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 332:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   /* Loop unrolling: Compute remaining taps */
 333:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   tapCnt = numStages % 0x4U;
 334:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 335:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #else
 336:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 337:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   /* Initialize blkCnt with number of samples */
 338:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   tapCnt = numStages;
 186              	 .loc 1 338 0
 187 0116 FB69     	 ldr r3,[r7,#28]
 188 0118 3B62     	 str r3,[r7,#32]
 339:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 340:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 341:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 342:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   while (tapCnt > 0U)
 189              	 .loc 1 342 0
 190 011a 0AE0     	 b .L6
 191              	.L7:
 343:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   {
 344:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     *pStateCur++ = *pState++;
 192              	 .loc 1 344 0
 193 011c 3B6C     	 ldr r3,[r7,#64]
 194 011e 1A1D     	 adds r2,r3,#4
 195 0120 3A64     	 str r2,[r7,#64]
 196 0122 7A6C     	 ldr r2,[r7,#68]
 197 0124 111D     	 adds r1,r2,#4
 198 0126 7964     	 str r1,[r7,#68]
 199 0128 1268     	 ldr r2,[r2]
 200 012a 1A60     	 str r2,[r3]
 345:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 346:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     /* Decrement loop counter */
 347:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****     tapCnt--;
 201              	 .loc 1 347 0
 202 012c 3B6A     	 ldr r3,[r7,#32]
 203 012e 013B     	 subs r3,r3,#1
 204 0130 3B62     	 str r3,[r7,#32]
 205              	.L6:
 342:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   {
 206              	 .loc 1 342 0
 207 0132 3B6A     	 ldr r3,[r7,#32]
 208 0134 002B     	 cmp r3,#0
 209 0136 F1D1     	 bne .L7
 348:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c ****   }
 349:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** 
 350:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_iir_lattice_f32.c **** }
 210              	 .loc 1 350 0
 211 0138 4C37     	 adds r7,r7,#76
 212              	.LCFI3:
 213              	 .cfi_def_cfa_offset 4
 214 013a BD46     	 mov sp,r7
 215              	.LCFI4:
 216              	 .cfi_def_cfa_register 13
 217              	 
 218 013c 5DF8047B 	 ldr r7,[sp],#4
 219              	.LCFI5:
 220              	 .cfi_restore 7
 221              	 .cfi_def_cfa_offset 0
 222 0140 7047     	 bx lr
 223              	 .cfi_endproc
 224              	.LFE149:
 226 0142 00BF     	 .text
 227              	.Letext0:
 228              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 229              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 230              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 231              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_iir_lattice_f32.c
    {standard input}:20     .text.arm_iir_lattice_f32:00000000 $t
    {standard input}:25     .text.arm_iir_lattice_f32:00000000 arm_iir_lattice_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
