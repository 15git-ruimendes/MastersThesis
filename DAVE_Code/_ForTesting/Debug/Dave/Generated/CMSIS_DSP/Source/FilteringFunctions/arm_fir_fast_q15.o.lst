   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_fir_fast_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_fir_fast_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_fir_fast_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_fir_fast_q15:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c"
   1:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * Title:        arm_fir_fast_q15.c
   4:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * Description:  Q15 Fast FIR filter processing function
   5:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @ingroup groupFilters
  33:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @addtogroup FIR
  37:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @brief         Processing function for the Q15 FIR filter (fast version).
  42:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @param[in]     S          points to an instance of the Q15 FIR filter structure
  43:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @param[in]     pSrc       points to the block of input data
  44:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @param[out]    pDst       points to the block of output data
  45:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @param[in]     blockSize  number of samples to process
  46:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @return        none
  47:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  48:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @par           Scaling and Overflow Behavior
  49:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****                    This fast version uses a 32-bit accumulator with 2.30 format.
  50:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****                    The accumulator maintains full precision of the intermediate multiplication resu
  51:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****                    Thus, if the accumulator result overflows it wraps around and distorts the resul
  52:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****                    In order to avoid overflows completely the input signal must be scaled down by l
  53:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****                    The 2.30 accumulator is then truncated to 2.15 format and saturated to yield the
  54:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  55:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   @remark
  56:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****                    Refer to \ref arm_fir_q15() for a slower implementation of this function which u
  57:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****                    Use function \ref arm_fir_init_q15() to initialize the filter structure.
  58:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****  */
  59:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  60:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** void arm_fir_fast_q15(
  61:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   const arm_fir_instance_q15 * S,
  62:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   const q15_t * pSrc,
  63:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         q15_t * pDst,
  64:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         uint32_t blockSize)
  65:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** {
  28              	 .loc 1 65 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 91B0     	 sub sp,sp,#68
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 72
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
  66:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         q15_t *pState = S->pState;                     /* State pointer */
  47              	 .loc 1 66 0
  48 000e FB68     	 ldr r3,[r7,#12]
  49 0010 5B68     	 ldr r3,[r3,#4]
  50 0012 FB63     	 str r3,[r7,#60]
  67:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   const q15_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  51              	 .loc 1 67 0
  52 0014 FB68     	 ldr r3,[r7,#12]
  53 0016 9B68     	 ldr r3,[r3,#8]
  54 0018 3B62     	 str r3,[r7,#32]
  68:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         q15_t *pStateCurnt;                            /* Points to the current sample of the state
  69:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         q15_t *px;                                     /* Temporary pointer for state buffer */
  70:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   const q15_t *pb;                                     /* Temporary pointer for coefficient buffer 
  71:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         q31_t acc0;                                    /* Accumulators */
  72:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filt
  55              	 .loc 1 72 0
  56 001a FB68     	 ldr r3,[r7,#12]
  57 001c 1B88     	 ldrh r3,[r3]
  58 001e FB61     	 str r3,[r7,#28]
  73:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         uint32_t tapCnt, blkCnt;                       /* Loop counters */
  74:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  75:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
  76:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         q31_t acc1, acc2, acc3;                        /* Accumulators */
  77:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****         q31_t x0, x1, x2, c0;                          /* Temporary variables to hold state and coe
  78:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif
  79:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  80:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* S->pState points to state array which contains previous frame (numTaps - 1) samples */
  81:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* pStateCurnt points to the location where the new input data should be written */
  82:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   pStateCurnt = &(S->pState[(numTaps - 1U)]);
  59              	 .loc 1 82 0
  60 0020 FB68     	 ldr r3,[r7,#12]
  61 0022 5A68     	 ldr r2,[r3,#4]
  62 0024 FB69     	 ldr r3,[r7,#28]
  63 0026 03F10043 	 add r3,r3,#-2147483648
  64 002a 013B     	 subs r3,r3,#1
  65 002c 5B00     	 lsls r3,r3,#1
  66 002e 1344     	 add r3,r3,r2
  67 0030 BB63     	 str r3,[r7,#56]
  83:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  84:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
  85:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  86:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Loop unrolling: Compute 4 output values simultaneously.
  87:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****    * The variables acc0 ... acc3 hold output values that are being computed:
  88:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****    *
  89:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****    *    acc0 =  b[numTaps-1] * x[n-numTaps-1] + b[numTaps-2] * x[n-numTaps-2] + b[numTaps-3] * x[n-
  90:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****    *    acc1 =  b[numTaps-1] * x[n-numTaps]   + b[numTaps-2] * x[n-numTaps-1] + b[numTaps-3] * x[n-
  91:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****    *    acc2 =  b[numTaps-1] * x[n-numTaps+1] + b[numTaps-2] * x[n-numTaps]   + b[numTaps-3] * x[n-
  92:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****    *    acc3 =  b[numTaps-1] * x[n-numTaps+2] + b[numTaps-2] * x[n-numTaps+1] + b[numTaps-3] * x[n-
  93:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****    */
  94:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   blkCnt = blockSize >> 2U;
  95:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
  96:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   while (blkCnt > 0U)
  97:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   {
  98:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Copy 4 new input samples into the state buffer. */
  99:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pSrc++;
 100:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pSrc++;
 101:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pSrc++;
 102:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pSrc++;
 103:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 104:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Set all accumulators to zero */
 105:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     acc0 = 0;
 106:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     acc1 = 0;
 107:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     acc2 = 0;
 108:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     acc3 = 0;
 109:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 110:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Typecast q15_t pointer to q31_t pointer for state reading in q31_t */
 111:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     px = pState;
 112:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 113:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Typecast q15_t pointer to q31_t pointer for coefficient reading in q31_t */
 114:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     pb = pCoeffs;
 115:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 116:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Read the first two samples from the state buffer:  x[n-N], x[n-N-1] */
 117:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     x0 = read_q15x2_ia (&px);
 118:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 119:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Read the third and forth samples from the state buffer: x[n-N-2], x[n-N-3] */
 120:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     x2 = read_q15x2_ia (&px);
 121:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 122:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Loop over the number of taps.  Unroll by a factor of 4.
 123:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****        Repeat until we've computed numTaps-(numTaps%4) coefficients. */
 124:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     tapCnt = numTaps >> 2U;
 125:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 126:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     while (tapCnt > 0U)
 127:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     {
 128:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Read the first two coefficients using SIMD:  b[N] and b[N-1] coefficients */
 129:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       c0 = read_q15x2_ia ((q15_t **) &pb);
 130:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 131:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* acc0 +=  b[N] * x[n-N] + b[N-1] * x[n-N-1] */
 132:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc0 = __SMLAD(x0, c0, acc0);
 133:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 134:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* acc2 +=  b[N] * x[n-N-2] + b[N-1] * x[n-N-3] */
 135:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc2 = __SMLAD(x2, c0, acc2);
 136:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 137:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* pack  x[n-N-1] and x[n-N-2] */
 138:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 139:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x2, x0, 0);
 140:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #else
 141:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x0, x2, 0);
 142:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif
 143:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 144:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Read state x[n-N-4], x[n-N-5] */
 145:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x0 = read_q15x2_ia (&px);
 146:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 147:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* acc1 +=  b[N] * x[n-N-1] + b[N-1] * x[n-N-2] */
 148:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc1 = __SMLADX(x1, c0, acc1);
 149:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 150:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* pack  x[n-N-3] and x[n-N-4] */
 151:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 152:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x0, x2, 0);
 153:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #else
 154:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x2, x0, 0);
 155:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif
 156:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 157:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* acc3 +=  b[N] * x[n-N-3] + b[N-1] * x[n-N-4] */
 158:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc3 = __SMLADX(x1, c0, acc3);
 159:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 160:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Read coefficients b[N-2], b[N-3] */
 161:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       c0 = read_q15x2_ia ((q15_t **) &pb);
 162:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* acc0 +=  b[N-2] * x[n-N-2] + b[N-3] * x[n-N-3] */
 164:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc0 = __SMLAD(x2, c0, acc0);
 165:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 166:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Read state x[n-N-6], x[n-N-7] with offset */
 167:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x2 = read_q15x2_ia (&px);
 168:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 169:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* acc2 +=  b[N-2] * x[n-N-4] + b[N-3] * x[n-N-5] */
 170:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc2 = __SMLAD(x0, c0, acc2);
 171:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 172:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* acc1 +=  b[N-2] * x[n-N-3] + b[N-3] * x[n-N-4] */
 173:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc1 = __SMLADX(x1, c0, acc1);
 174:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 175:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* pack  x[n-N-5] and x[n-N-6] */
 176:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 177:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x2, x0, 0);
 178:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #else
 179:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x0, x2, 0);
 180:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif
 181:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 182:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* acc3 +=  b[N-2] * x[n-N-5] + b[N-3] * x[n-N-6] */
 183:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc3 = __SMLADX(x1, c0, acc3);
 184:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 185:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Decrement tap count */
 186:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       tapCnt--;
 187:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     }
 188:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 189:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps.
 190:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****        This is always be 2 taps since the filter length is even. */
 191:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     if ((numTaps & 0x3U) != 0U)
 192:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     {
 193:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Read last two coefficients */
 194:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       c0 = read_q15x2_ia ((q15_t **) &pb);
 195:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 196:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Perform the multiply-accumulates */
 197:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc0 = __SMLAD(x0, c0, acc0);
 198:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc2 = __SMLAD(x2, c0, acc2);
 199:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 200:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* pack state variables */
 201:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 202:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x2, x0, 0);
 203:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #else
 204:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x0, x2, 0);
 205:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif
 206:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 207:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Read last state variables */
 208:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x0 = read_q15x2 (px);
 209:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 210:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Perform the multiply-accumulates */
 211:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc1 = __SMLADX(x1, c0, acc1);
 212:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 213:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* pack state variables */
 214:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 215:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x0, x2, 0);
 216:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #else
 217:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       x1 = __PKHBT(x2, x0, 0);
 218:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif
 219:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 220:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       /* Perform the multiply-accumulates */
 221:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc3 = __SMLADX(x1, c0, acc3);
 222:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     }
 223:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 224:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* The results in the 4 accumulators are in 2.30 format. Convert to 1.15 with saturation.
 225:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****        Then store the 4 outputs in the destination buffer. */
 226:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 227:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     write_q15x2_ia (&pDst, __PKHBT(__SSAT((acc0 >> 15), 16), __SSAT((acc1 >> 15), 16), 16));
 228:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     write_q15x2_ia (&pDst, __PKHBT(__SSAT((acc2 >> 15), 16), __SSAT((acc3 >> 15), 16), 16));
 229:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #else
 230:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     write_q15x2_ia (&pDst, __PKHBT(__SSAT((acc1 >> 15), 16), __SSAT((acc0 >> 15), 16), 16));
 231:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     write_q15x2_ia (&pDst, __PKHBT(__SSAT((acc3 >> 15), 16), __SSAT((acc2 >> 15), 16), 16));
 232:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif /* #ifndef ARM_MATH_BIG_ENDIAN */
 233:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 234:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Advance the state pointer by 4 to process the next group of 4 samples */
 235:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     pState = pState + 4U;
 236:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 237:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Decrement loop counter */
 238:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     blkCnt--;
 239:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   }
 240:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 241:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Loop unrolling: Compute remaining output samples */
 242:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   blkCnt = blockSize % 0x4U;
 243:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 244:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #else
 245:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 246:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Initialize blkCnt with number of taps */
 247:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   blkCnt = blockSize;
  68              	 .loc 1 247 0
  69 0032 3B68     	 ldr r3,[r7]
  70 0034 7B62     	 str r3,[r7,#36]
 248:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 249:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 250:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   while (blkCnt > 0U)
  71              	 .loc 1 251 0
  72 0036 47E0     	 b .L2
  73              	.L4:
 252:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   {
 253:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Copy two samples into state buffer */
 254:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pSrc++;
  74              	 .loc 1 254 0
  75 0038 BB6B     	 ldr r3,[r7,#56]
  76 003a 9A1C     	 adds r2,r3,#2
  77 003c BA63     	 str r2,[r7,#56]
  78 003e BA68     	 ldr r2,[r7,#8]
  79 0040 911C     	 adds r1,r2,#2
  80 0042 B960     	 str r1,[r7,#8]
  81 0044 1288     	 ldrh r2,[r2]
  82 0046 1A80     	 strh r2,[r3]
 255:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 256:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Set the accumulator to zero */
 257:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     acc0 = 0;
  83              	 .loc 1 257 0
  84 0048 0023     	 movs r3,#0
  85 004a FB62     	 str r3,[r7,#44]
 258:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 259:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Use SIMD to hold states and coefficients */
 260:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     px = pState;
  86              	 .loc 1 260 0
  87 004c FB6B     	 ldr r3,[r7,#60]
  88 004e 7B63     	 str r3,[r7,#52]
 261:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     pb = pCoeffs;
  89              	 .loc 1 261 0
  90 0050 3B6A     	 ldr r3,[r7,#32]
  91 0052 3B63     	 str r3,[r7,#48]
 262:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 263:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     tapCnt = numTaps >> 1U;
  92              	 .loc 1 263 0
  93 0054 FB69     	 ldr r3,[r7,#28]
  94 0056 5B08     	 lsrs r3,r3,#1
  95 0058 BB62     	 str r3,[r7,#40]
  96              	.L3:
 264:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 265:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     do
 266:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     {
 267:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       acc0 += (q31_t) *px++ * *pb++;
  97              	 .loc 1 267 0 discriminator 1
  98 005a 7B6B     	 ldr r3,[r7,#52]
  99 005c 9A1C     	 adds r2,r3,#2
 100 005e 7A63     	 str r2,[r7,#52]
 101 0060 1B88     	 ldrh r3,[r3]
 102 0062 1AB2     	 sxth r2,r3
 103 0064 3B6B     	 ldr r3,[r7,#48]
 104 0066 991C     	 adds r1,r3,#2
 105 0068 3963     	 str r1,[r7,#48]
 106 006a 1B88     	 ldrh r3,[r3]
 107 006c 1BB2     	 sxth r3,r3
 108 006e 03FB02F3 	 mul r3,r3,r2
 109 0072 FA6A     	 ldr r2,[r7,#44]
 110 0074 1344     	 add r3,r3,r2
 111 0076 FB62     	 str r3,[r7,#44]
 268:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 	  acc0 += (q31_t) *px++ * *pb++;
 112              	 .loc 1 268 0 discriminator 1
 113 0078 7B6B     	 ldr r3,[r7,#52]
 114 007a 9A1C     	 adds r2,r3,#2
 115 007c 7A63     	 str r2,[r7,#52]
 116 007e 1B88     	 ldrh r3,[r3]
 117 0080 1AB2     	 sxth r2,r3
 118 0082 3B6B     	 ldr r3,[r7,#48]
 119 0084 991C     	 adds r1,r3,#2
 120 0086 3963     	 str r1,[r7,#48]
 121 0088 1B88     	 ldrh r3,[r3]
 122 008a 1BB2     	 sxth r3,r3
 123 008c 03FB02F3 	 mul r3,r3,r2
 124 0090 FA6A     	 ldr r2,[r7,#44]
 125 0092 1344     	 add r3,r3,r2
 126 0094 FB62     	 str r3,[r7,#44]
 269:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 270:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****       tapCnt--;
 127              	 .loc 1 270 0 discriminator 1
 128 0096 BB6A     	 ldr r3,[r7,#40]
 129 0098 013B     	 subs r3,r3,#1
 130 009a BB62     	 str r3,[r7,#40]
 271:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     }
 272:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     while (tapCnt > 0U);
 131              	 .loc 1 272 0 discriminator 1
 132 009c BB6A     	 ldr r3,[r7,#40]
 133 009e 002B     	 cmp r3,#0
 134 00a0 DBD1     	 bne .L3
 273:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 274:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* The result is in 2.30 format. Convert to 1.15 with saturation.
 275:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****        Then store the output in the destination buffer. */
 276:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pDst++ = (q15_t) (__SSAT((acc0 >> 15), 16));
 135              	 .loc 1 276 0
 136 00a2 7B68     	 ldr r3,[r7,#4]
 137 00a4 9A1C     	 adds r2,r3,#2
 138 00a6 7A60     	 str r2,[r7,#4]
 139              	.LBB2:
 140 00a8 FA6A     	 ldr r2,[r7,#44]
 141 00aa D213     	 asrs r2,r2,#15
 142 00ac BA61     	 str r2,[r7,#24]
 143 00ae BA69     	 ldr r2,[r7,#24]
 144              	
 145 00b0 02F30F02 	 ssat r2,#16,r2
 146              	
 147              	 .thumb
 148 00b4 7A61     	 str r2,[r7,#20]
 149 00b6 7A69     	 ldr r2,[r7,#20]
 150              	.LBE2:
 151 00b8 92B2     	 uxth r2,r2
 152 00ba 1A80     	 strh r2,[r3]
 277:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 278:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Advance state pointer by 1 for the next sample */
 279:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     pState = pState + 1U;
 153              	 .loc 1 279 0
 154 00bc FB6B     	 ldr r3,[r7,#60]
 155 00be 0233     	 adds r3,r3,#2
 156 00c0 FB63     	 str r3,[r7,#60]
 280:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 281:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Decrement loop counter */
 282:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     blkCnt--;
 157              	 .loc 1 282 0
 158 00c2 7B6A     	 ldr r3,[r7,#36]
 159 00c4 013B     	 subs r3,r3,#1
 160 00c6 7B62     	 str r3,[r7,#36]
 161              	.L2:
 251:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   {
 162              	 .loc 1 251 0
 163 00c8 7B6A     	 ldr r3,[r7,#36]
 164 00ca 002B     	 cmp r3,#0
 165 00cc B4D1     	 bne .L4
 283:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   }
 284:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 285:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Processing is complete.
 286:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****      Now copy the last numTaps - 1 samples to the start of the state buffer.
 287:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****      This prepares the state buffer for the next function call. */
 288:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 289:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Points to the start of the state buffer */
 290:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   pStateCurnt = S->pState;
 166              	 .loc 1 290 0
 167 00ce FB68     	 ldr r3,[r7,#12]
 168 00d0 5B68     	 ldr r3,[r3,#4]
 169 00d2 BB63     	 str r3,[r7,#56]
 291:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 292:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 293:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 294:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Loop unrolling: Compute 4 taps at a time */
 295:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   tapCnt = (numTaps - 1U) >> 2U;
 296:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 297:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Copy data */
 298:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   while (tapCnt > 0U)
 299:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   {
 300:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pState++;
 301:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pState++;
 302:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pState++;
 303:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pState++;
 304:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 305:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Decrement loop counter */
 306:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     tapCnt--;
 307:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   }
 308:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 309:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Calculate remaining number of copies */
 310:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   tapCnt = (numTaps - 1U) % 0x4U;
 311:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 312:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #else
 313:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 314:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Initialize tapCnt with number of taps */
 315:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   tapCnt = (numTaps - 1U);
 170              	 .loc 1 315 0
 171 00d4 FB69     	 ldr r3,[r7,#28]
 172 00d6 013B     	 subs r3,r3,#1
 173 00d8 BB62     	 str r3,[r7,#40]
 316:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 317:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 318:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 319:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   /* Copy remaining data */
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   while (tapCnt > 0U)
 174              	 .loc 1 320 0
 175 00da 0AE0     	 b .L5
 176              	.L6:
 321:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   {
 322:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     *pStateCurnt++ = *pState++;
 177              	 .loc 1 322 0
 178 00dc BB6B     	 ldr r3,[r7,#56]
 179 00de 9A1C     	 adds r2,r3,#2
 180 00e0 BA63     	 str r2,[r7,#56]
 181 00e2 FA6B     	 ldr r2,[r7,#60]
 182 00e4 911C     	 adds r1,r2,#2
 183 00e6 F963     	 str r1,[r7,#60]
 184 00e8 1288     	 ldrh r2,[r2]
 185 00ea 1A80     	 strh r2,[r3]
 323:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 324:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     /* Decrement loop counter */
 325:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****     tapCnt--;
 186              	 .loc 1 325 0
 187 00ec BB6A     	 ldr r3,[r7,#40]
 188 00ee 013B     	 subs r3,r3,#1
 189 00f0 BB62     	 str r3,[r7,#40]
 190              	.L5:
 320:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   {
 191              	 .loc 1 320 0
 192 00f2 BB6A     	 ldr r3,[r7,#40]
 193 00f4 002B     	 cmp r3,#0
 194 00f6 F1D1     	 bne .L6
 326:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c ****   }
 327:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** 
 328:../Dave/Generated/CMSIS_DSP/Source/FilteringFunctions/arm_fir_fast_q15.c **** }
 195              	 .loc 1 328 0
 196 00f8 4437     	 adds r7,r7,#68
 197              	.LCFI3:
 198              	 .cfi_def_cfa_offset 4
 199 00fa BD46     	 mov sp,r7
 200              	.LCFI4:
 201              	 .cfi_def_cfa_register 13
 202              	 
 203 00fc 5DF8047B 	 ldr r7,[sp],#4
 204              	.LCFI5:
 205              	 .cfi_restore 7
 206              	 .cfi_def_cfa_offset 0
 207 0100 7047     	 bx lr
 208              	 .cfi_endproc
 209              	.LFE149:
 211 0102 00BF     	 .text
 212              	.Letext0:
 213              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 214              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 215              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 216              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_fast_q15.c
    {standard input}:20     .text.arm_fir_fast_q15:00000000 $t
    {standard input}:25     .text.arm_fir_fast_q15:00000000 arm_fir_fast_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
