   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_pid_init_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_pid_init_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_pid_init_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_pid_init_f32:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c"
   1:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * Title:        arm_pid_init_f32.c
   4:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * Description:  Floating-point PID Control initialization function
   5:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   @addtogroup PID
  33:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   @{
  34:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  */
  35:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  36:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** /**
  37:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   @brief         Initialization function for the floating-point PID Control.
  38:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   @param[in,out] S               points to an instance of the PID structure
  39:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   @param[in]     resetStateFlag
  40:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****                    - value = 0: no change in state
  41:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****                    - value = 1: reset state
  42:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   @return        none
  43:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  44:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   @par           Details
  45:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****                    The <code>resetStateFlag</code> specifies whether to set state to zero or not. \
  46:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****                    The function computes the structure fields: <code>A0</code>, <code>A1</code> <co
  47:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****                    using the proportional gain( \c Kp), integral gain( \c Ki) and derivative gain( 
  48:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****                    also sets the state variables to all zeros.
  49:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****  */
  50:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  51:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** void arm_pid_init_f32(
  52:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   arm_pid_instance_f32 * S,
  53:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   int32_t resetStateFlag)
  54:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** {
  28              	 .loc 1 54 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 3960     	 str r1,[r7]
  55:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   /* Derived coefficient A0 */
  56:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   S->A0 = S->Kp + S->Ki + S->Kd;
  45              	 .loc 1 56 0
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c 93ED067A 	 flds s14,[r3,#24]
  48 0010 7B68     	 ldr r3,[r7,#4]
  49 0012 D3ED077A 	 flds s15,[r3,#28]
  50 0016 37EE277A 	 fadds s14,s14,s15
  51 001a 7B68     	 ldr r3,[r7,#4]
  52 001c D3ED087A 	 flds s15,[r3,#32]
  53 0020 77EE277A 	 fadds s15,s14,s15
  54 0024 7B68     	 ldr r3,[r7,#4]
  55 0026 C3ED007A 	 fsts s15,[r3]
  57:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  58:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   /* Derived coefficient A1 */
  59:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   S->A1 = (-S->Kp) - ((float32_t) 2.0f * S->Kd);
  56              	 .loc 1 59 0
  57 002a 7B68     	 ldr r3,[r7,#4]
  58 002c D3ED067A 	 flds s15,[r3,#24]
  59 0030 B1EE677A 	 fnegs s14,s15
  60 0034 7B68     	 ldr r3,[r7,#4]
  61 0036 D3ED087A 	 flds s15,[r3,#32]
  62 003a 77EEA77A 	 fadds s15,s15,s15
  63 003e 77EE677A 	 fsubs s15,s14,s15
  64 0042 7B68     	 ldr r3,[r7,#4]
  65 0044 C3ED017A 	 fsts s15,[r3,#4]
  60:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  61:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   /* Derived coefficient A2 */
  62:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   S->A2 = S->Kd;
  66              	 .loc 1 62 0
  67 0048 7B68     	 ldr r3,[r7,#4]
  68 004a 1A6A     	 ldr r2,[r3,#32]
  69 004c 7B68     	 ldr r3,[r7,#4]
  70 004e 9A60     	 str r2,[r3,#8]
  63:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  64:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   /* Check whether state needs reset or not */
  65:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   if (resetStateFlag)
  71              	 .loc 1 65 0
  72 0050 3B68     	 ldr r3,[r7]
  73 0052 002B     	 cmp r3,#0
  74 0054 06D0     	 beq .L1
  66:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   {
  67:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****     /* Reset state to zero, The size will be always 3 samples */
  68:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****     memset(S->state, 0, 3U * sizeof(float32_t));
  75              	 .loc 1 68 0
  76 0056 7B68     	 ldr r3,[r7,#4]
  77 0058 0C33     	 adds r3,r3,#12
  78 005a 1846     	 mov r0,r3
  79 005c 0021     	 movs r1,#0
  80 005e 0C22     	 movs r2,#12
  81 0060 FFF7FEFF 	 bl memset
  82              	.L1:
  69:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c ****   }
  70:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** 
  71:../Dave/Generated/CMSIS_DSP/Source/ControllerFunctions/arm_pid_init_f32.c **** }
  83              	 .loc 1 71 0
  84 0064 0837     	 adds r7,r7,#8
  85              	.LCFI3:
  86              	 .cfi_def_cfa_offset 8
  87 0066 BD46     	 mov sp,r7
  88              	.LCFI4:
  89              	 .cfi_def_cfa_register 13
  90              	 
  91 0068 80BD     	 pop {r7,pc}
  92              	 .cfi_endproc
  93              	.LFE149:
  95 006a 00BF     	 .text
  96              	.Letext0:
  97              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
  98              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
  99              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 100              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_pid_init_f32.c
    {standard input}:20     .text.arm_pid_init_f32:00000000 $t
    {standard input}:25     .text.arm_pid_init_f32:00000000 arm_pid_init_f32
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
