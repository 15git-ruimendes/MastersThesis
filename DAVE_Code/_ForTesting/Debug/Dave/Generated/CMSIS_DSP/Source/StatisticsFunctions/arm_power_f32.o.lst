   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_power_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_power_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_power_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_power_f32:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c"
   1:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Title:        arm_power_f32.c
   4:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Description:  Sum of the squares of the elements of a floating-point vector
   5:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @ingroup groupStats
  33:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @defgroup power Power
  37:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  38:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   Calculates the sum of the squares of the elements in the input vector.
  39:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   The underlying algorithm is used:
  40:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   <pre>
  42:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****       Result = pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + pSrc[2] * pSrc[2] + ... + pSrc[blockSize-1] 
  43:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   </pre>
  44:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  45:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   There are separate functions for floating point, Q31, Q15, and Q7 data types.
  46:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  47:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  48:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** /**
  49:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @addtogroup power
  50:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @{
  51:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  52:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  53:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** /**
  54:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @brief         Sum of the squares of the elements of a floating-point vector.
  55:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @param[in]     pSrc       points to the input vector
  56:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @param[in]     blockSize  number of samples in input vector
  57:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @param[out]    pResult    sum of the squares value returned here
  58:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   @return        none
  59:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****  */
  60:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
  61:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  62:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #include "CMSIS_DSP/Include/arm_helium_utils.h"
  63:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  64:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** void arm_power_f32(
  65:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   const float32_t * pSrc,
  66:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   uint32_t blockSize,
  67:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32_t * pResult)
  68:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** {
  69:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     uint32_t        blkCnt;     /* loop counters */
  70:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     f32x4_t         vecSrc;
  71:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     f32x4_t         sumVec = vdupq_n_f32(0.0f);
  72:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     float32_t       sum = 0.0f;
  73:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     float32_t in;
  74:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  75:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Compute 4 outputs at a time */
  76:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt = blockSize >> 2U;
  77:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     while (blkCnt > 0U)
  78:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     {
  79:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         vecSrc = vldrwq_f32(pSrc);
  80:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         /*
  81:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****          * sum lanes
  82:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****          */
  83:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         sumVec = vfmaq(sumVec, vecSrc, vecSrc);
  84:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  85:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         blkCnt --;
  86:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         pSrc += 4;
  87:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     }
  88:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum = vecAddAcrossF32Mve(sumVec);
  89:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
  90:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /*
  91:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****      * tail
  92:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****      */
  93:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt = blockSize & 0x3;
  94:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     while (blkCnt > 0U)
  95:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     {
  96:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****       /* C = A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1] */
  97:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   
  98:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****       /* Compute Power and store result in a temporary variable, sum. */
  99:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****       in = *pSrc++;
 100:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****       sum += in * in;
 101:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   
 102:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****       /* Decrement loop counter */
 103:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****       blkCnt--;
 104:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     }
 105:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     *pResult = sum;
 107:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** }
 108:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #else
 109:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #if defined(ARM_MATH_NEON) && !defined(ARM_MATH_AUTOVECTORIZE)
 110:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** void arm_power_f32(
 111:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   const float32_t * pSrc,
 112:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   uint32_t blockSize,
 113:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32_t * pResult)
 114:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** {
 115:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32_t sum = 0.0f;                          /* accumulator */
 116:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32_t in;                                  /* Temporary variable to store input value */
 117:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   uint32_t blkCnt;                               /* loop counter */
 118:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32x4_t sumV = vdupq_n_f32(0.0f);                          /* Temporary result storage */
 120:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32x2_t sumV2;
 121:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   float32x4_t inV;
 122:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize >> 2U;
 124:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 125:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Compute 4 outputs at a time.
 126:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 127:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0U)
 128:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
 129:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
 130:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and then store the result in a temporary variable, sum. */
 131:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     inV = vld1q_f32(pSrc);
 132:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sumV = vmlaq_f32(sumV, inV, inV);
 133:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     pSrc += 4;
 134:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 135:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
 136:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 137:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   }
 138:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   sumV2 = vpadd_f32(vget_low_f32(sumV),vget_high_f32(sumV));
 139:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   sum = vget_lane_f32(sumV2, 0) + vget_lane_f32(sumV2, 1);
 140:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 141:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 142:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****    ** No loop unrolling is used. */
 143:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize % 0x4U;
 144:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 145:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0U)
 146:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
 147:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
 148:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* compute power and then store the result in a temporary variable, sum. */
 149:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 150:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 151:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 152:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
 153:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 154:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   }
 155:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 156:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Store the result to the destination */
 157:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   *pResult = sum;
 158:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** }
 159:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #else
 160:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** void arm_power_f32(
 161:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   const float32_t * pSrc,
 162:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         uint32_t blockSize,
 163:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         float32_t * pResult)
 164:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** {
  28              	 .loc 1 164 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 89B0     	 sub sp,sp,#36
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 40
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
 165:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
 166:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         float32_t sum = 0.0f;                          /* Temporary result storage */
  46              	 .loc 1 166 0
  47 000c 4FF00003 	 mov r3,#0
  48 0010 BB61     	 str r3,[r7,#24]
 167:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****         float32_t in;                                  /* Temporary variable to store input value *
 168:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 169:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) && !defined(ARM_MATH_AUTOVECTORIZE)
 170:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 171:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 172:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize >> 2U;
 173:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 174:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0U)
 175:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
 176:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1] */
 177:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 178:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and store result in a temporary variable, sum. */
 179:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 180:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 181:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 182:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 183:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 184:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 185:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 186:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 187:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 188:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 189:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 190:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 191:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Decrement loop counter */
 192:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 193:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   }
 194:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 195:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 196:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize % 0x4U;
 197:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 198:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #else
 199:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 200:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Initialize blkCnt with number of samples */
 201:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize;
  49              	 .loc 1 201 0
  50 0012 BB68     	 ldr r3,[r7,#8]
  51 0014 FB61     	 str r3,[r7,#28]
 202:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 203:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 204:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 205:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   while (blkCnt > 0U)
  52              	 .loc 1 205 0
  53 0016 13E0     	 b .L2
  54              	.L3:
 206:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
 207:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1] */
 208:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 209:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and store result in a temporary variable, sum. */
 210:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  55              	 .loc 1 210 0
  56 0018 FB68     	 ldr r3,[r7,#12]
  57 001a 1A1D     	 adds r2,r3,#4
  58 001c FA60     	 str r2,[r7,#12]
  59 001e 1B68     	 ldr r3,[r3]
  60 0020 7B61     	 str r3,[r7,#20]
 211:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  61              	 .loc 1 211 0
  62 0022 97ED057A 	 flds s14,[r7,#20]
  63 0026 D7ED057A 	 flds s15,[r7,#20]
  64 002a 67EE277A 	 fmuls s15,s14,s15
  65 002e 97ED067A 	 flds s14,[r7,#24]
  66 0032 77EE277A 	 fadds s15,s14,s15
  67 0036 C7ED067A 	 fsts s15,[r7,#24]
 212:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 213:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     /* Decrement loop counter */
 214:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
  68              	 .loc 1 214 0
  69 003a FB69     	 ldr r3,[r7,#28]
  70 003c 013B     	 subs r3,r3,#1
  71 003e FB61     	 str r3,[r7,#28]
  72              	.L2:
 205:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   {
  73              	 .loc 1 205 0
  74 0040 FB69     	 ldr r3,[r7,#28]
  75 0042 002B     	 cmp r3,#0
  76 0044 E8D1     	 bne .L3
 215:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   }
 216:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** 
 217:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   /* Store result to destination */
 218:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c ****   *pResult = sum;
  77              	 .loc 1 218 0
  78 0046 7B68     	 ldr r3,[r7,#4]
  79 0048 BA69     	 ldr r2,[r7,#24]
  80 004a 1A60     	 str r2,[r3]
 219:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_f32.c **** }
  81              	 .loc 1 219 0
  82 004c 2437     	 adds r7,r7,#36
  83              	.LCFI3:
  84              	 .cfi_def_cfa_offset 4
  85 004e BD46     	 mov sp,r7
  86              	.LCFI4:
  87              	 .cfi_def_cfa_register 13
  88              	 
  89 0050 5DF8047B 	 ldr r7,[sp],#4
  90              	.LCFI5:
  91              	 .cfi_restore 7
  92              	 .cfi_def_cfa_offset 0
  93 0054 7047     	 bx lr
  94              	 .cfi_endproc
  95              	.LFE149:
  97 0056 00BF     	 .text
  98              	.Letext0:
  99              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 100              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 101              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 102              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_power_f32.c
    {standard input}:20     .text.arm_power_f32:00000000 $t
    {standard input}:25     .text.arm_power_f32:00000000 arm_power_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
