   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_power_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_power_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_power_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_power_q31:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c"
   1:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * Title:        arm_power_q31.c
   4:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * Description:  Sum of the squares of the elements of a Q31 vector
   5:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @ingroup groupStats
  33:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @addtogroup power
  37:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @brief         Sum of the squares of the elements of a Q31 vector.
  42:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @param[in]     pSrc       points to the input vector
  43:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @param[in]     blockSize  number of samples in input vector
  44:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @param[out]    pResult    sum of the squares value returned here
  45:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @return        none
  46:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   @par           Scaling and Overflow Behavior
  48:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****                    The function is implemented using a 64-bit internal accumulator.
  49:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****                    The input is represented in 1.31 format.
  50:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****                    Intermediate multiplication yields a 2.62 format, and this
  51:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****                    result is truncated to 2.48 format by discarding the lower 14 bits.
  52:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****                    The 2.48 result is then added without saturation to a 64-bit accumulator in 16.4
  53:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****                    With 15 guard bits in the accumulator, there is no risk of overflow, and the
  54:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****                    full precision of the intermediate multiplication is preserved.
  55:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****                    Finally, the return result is in 16.48 format.
  56:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****  */
  57:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** #if defined(ARM_MATH_MVEI)
  58:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** void arm_power_q31(
  59:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   const q31_t * pSrc,
  60:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         uint32_t blockSize,
  61:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         q63_t * pResult)
  62:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** {
  63:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     uint32_t     blkCnt;           /* loop counters */
  64:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     q31x4_t     vecSrc;
  65:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     q63_t       sum = 0LL;
  66:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     q31_t       in;
  67:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  68:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     /* Compute 4 outputs at a time */
  69:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     blkCnt = blockSize >> 2U;
  70:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     while (blkCnt > 0U)
  71:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     {
  72:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         vecSrc = vldrwq_s32(pSrc);
  73:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         /*
  74:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****          * sum lanes
  75:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****          */
  76:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         sum = vrmlaldavhaq(sum, vecSrc, vecSrc);
  77:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  78:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         blkCnt --;
  79:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         pSrc += 4;
  80:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     }
  81:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  82:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     /*
  83:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****      * tail
  84:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****      */
  85:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     blkCnt = blockSize & 0x3;
  86:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     while (blkCnt > 0U)
  87:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     {
  88:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****        /* C = A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1] */
  89:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  90:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****        /* Compute Power and store result in a temporary variable, sum. */
  91:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****        in = *pSrc++;
  92:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****        sum += ((q63_t) in * in) >> 8;
  93:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  94:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****        /* Decrement loop counter */
  95:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****        blkCnt--;
  96:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     }
  97:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
  98:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     *pResult = asrl(sum, 6);
  99:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** }
 100:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** #else
 101:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** void arm_power_q31(
 102:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   const q31_t * pSrc,
 103:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         uint32_t blockSize,
 104:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         q63_t * pResult)
 105:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** {
  28              	 .loc 1 105 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 20
  35              	 .cfi_offset 4,-20
  36              	 .cfi_offset 5,-16
  37              	 .cfi_offset 6,-12
  38              	 .cfi_offset 7,-8
  39              	 .cfi_offset 14,-4
  40 0002 8BB0     	 sub sp,sp,#44
  41              	.LCFI1:
  42              	 .cfi_def_cfa_offset 64
  43 0004 00AF     	 add r7,sp,#0
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 7
  46 0006 F860     	 str r0,[r7,#12]
  47 0008 B960     	 str r1,[r7,#8]
  48 000a 7A60     	 str r2,[r7,#4]
 106:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
 107:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         q63_t sum = 0;                                 /* Temporary result storage */
  49              	 .loc 1 107 0
  50 000c 4FF00002 	 mov r2,#0
  51 0010 4FF00003 	 mov r3,#0
  52 0014 C7E90623 	 strd r2,[r7,#24]
 108:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****         q31_t in;                                      /* Temporary variable to store input value *
 109:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 110:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 111:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 112:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 113:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   blkCnt = blockSize >> 2U;
 114:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 115:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   while (blkCnt > 0U)
 116:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   {
 117:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     /* C = A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1] */
 118:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 119:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     /* Compute Power then shift intermediate results by 14 bits to maintain 16.48 format and store 
 120:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
 121:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14U;
 122:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 123:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
 124:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14U;
 125:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
 127:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14U;
 128:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 129:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
 130:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14U;
 131:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 132:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     /* Decrement loop counter */
 133:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     blkCnt--;
 134:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   }
 135:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 136:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   /* Loop unrolling: Compute remaining outputs */
 137:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   blkCnt = blockSize % 0x4U;
 138:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 139:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** #else
 140:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 141:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   /* Initialize blkCnt with number of samples */
 142:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   blkCnt = blockSize;
  53              	 .loc 1 142 0
  54 0018 BB68     	 ldr r3,[r7,#8]
  55 001a 7B62     	 str r3,[r7,#36]
 143:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 144:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 145:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 146:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   while (blkCnt > 0U)
  56              	 .loc 1 146 0
  57 001c 23E0     	 b .L2
  58              	.L3:
 147:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   {
 148:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     /* C = A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1] */
 149:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 150:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     /* Compute Power and store result in a temporary variable, sum. */
 151:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
  59              	 .loc 1 151 0
  60 001e FB68     	 ldr r3,[r7,#12]
  61 0020 1A1D     	 adds r2,r3,#4
  62 0022 FA60     	 str r2,[r7,#12]
  63 0024 1B68     	 ldr r3,[r3]
  64 0026 7B61     	 str r3,[r7,#20]
 152:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14U;
  65              	 .loc 1 152 0
  66 0028 7B69     	 ldr r3,[r7,#20]
  67 002a 1846     	 mov r0,r3
  68 002c 4FEAE071 	 asr r1,r0,#31
  69 0030 7B69     	 ldr r3,[r7,#20]
  70 0032 1A46     	 mov r2,r3
  71 0034 4FEAE273 	 asr r3,r2,#31
  72 0038 02FB01FE 	 mul lr,r2,r1
  73 003c 00FB03F6 	 mul r6,r0,r3
  74 0040 7644     	 add r6,r6,lr
  75 0042 A0FB0223 	 umull r2,r3,r0,r2
  76 0046 F118     	 adds r1,r6,r3
  77 0048 0B46     	 mov r3,r1
  78 004a 940B     	 lsrs r4,r2,#14
  79 004c 44EA8344 	 orr r4,r4,r3,lsl#18
  80 0050 9D13     	 asrs r5,r3,#14
  81 0052 D7E90623 	 ldrd r2,[r7,#24]
  82 0056 1219     	 adds r2,r2,r4
  83 0058 43EB0503 	 adc r3,r3,r5
  84 005c C7E90623 	 strd r2,[r7,#24]
 153:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 154:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     /* Decrement loop counter */
 155:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****     blkCnt--;
  85              	 .loc 1 155 0
  86 0060 7B6A     	 ldr r3,[r7,#36]
  87 0062 013B     	 subs r3,r3,#1
  88 0064 7B62     	 str r3,[r7,#36]
  89              	.L2:
 146:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   {
  90              	 .loc 1 146 0
  91 0066 7B6A     	 ldr r3,[r7,#36]
  92 0068 002B     	 cmp r3,#0
  93 006a D8D1     	 bne .L3
 156:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   }
 157:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** 
 158:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   /* Store results in 16.48 format */
 159:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c ****   *pResult = sum;
  94              	 .loc 1 159 0
  95 006c 7968     	 ldr r1,[r7,#4]
  96 006e D7E90623 	 ldrd r2,[r7,#24]
  97 0072 C1E90023 	 strd r2,[r1]
 160:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_power_q31.c **** }
  98              	 .loc 1 160 0
  99 0076 2C37     	 adds r7,r7,#44
 100              	.LCFI3:
 101              	 .cfi_def_cfa_offset 20
 102 0078 BD46     	 mov sp,r7
 103              	.LCFI4:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 007a F0BD     	 pop {r4,r5,r6,r7,pc}
 107              	 .cfi_endproc
 108              	.LFE149:
 110              	 .text
 111              	.Letext0:
 112              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 113              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 114              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 115              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_power_q31.c
    {standard input}:20     .text.arm_power_q31:00000000 $t
    {standard input}:25     .text.arm_power_q31:00000000 arm_power_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
