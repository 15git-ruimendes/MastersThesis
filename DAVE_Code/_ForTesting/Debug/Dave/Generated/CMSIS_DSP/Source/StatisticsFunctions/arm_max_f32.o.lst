   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_max_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_max_f32,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_max_f32
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_max_f32:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c"
   1:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * Title:        arm_max_f32.c
   4:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * Description:  Maximum value of a floating-point vector
   5:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #if (defined(ARM_MATH_NEON) || defined(ARM_MATH_MVEF)) && !defined(ARM_MATH_AUTOVECTORIZE)
  31:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #include <limits.h>
  32:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #endif
  33:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  34:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** /**
  35:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @ingroup groupStats
  36:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  */
  37:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  38:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** /**
  39:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @defgroup Max Maximum
  40:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   Computes the maximum value of an array of data.
  42:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   The function returns both the maximum value and its position within the array.
  43:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   There are separate functions for floating-point, Q31, Q15, and Q7 data types.
  44:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  */
  45:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  46:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** /**
  47:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @addtogroup Max
  48:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @{
  49:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  */
  50:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  51:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** /**
  52:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @brief         Maximum value of a floating-point vector.
  53:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @param[in]     pSrc       points to the input vector
  54:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @param[in]     blockSize  number of samples in input vector
  55:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @param[out]    pResult    maximum value returned here
  56:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @param[out]    pIndex     index of maximum value returned here
  57:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   @return        none
  58:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  */
  59:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  60:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
  61:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** void arm_max_f32(
  62:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   const float32_t * pSrc,
  63:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32_t blockSize,
  64:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   float32_t * pResult,
  65:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32_t * pIndex)
  66:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** {
  67:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     uint32_t blkCnt; 
  68:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     f32x4_t vecSrc;
  69:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     f32x4_t curExtremValVec = vdupq_n_f32(F32_MIN);
  70:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     float32_t maxValue = F32_MIN;
  71:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     uint32_t idx = blockSize;
  72:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     uint32x4_t indexVec;
  73:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     uint32x4_t curExtremIdxVec;
  74:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     uint32_t curIdx = 0;
  75:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     mve_pred16_t p0;
  76:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     float32_t tmp;
  77:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  78:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     indexVec = vidupq_wb_u32(&curIdx, 1);
  80:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     curExtremIdxVec = vdupq_n_u32(0);
  81:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  82:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /* Compute 4 outputs at a time */
  83:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     blkCnt = blockSize >> 2U;
  84:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     while (blkCnt > 0U)
  85:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     {
  86:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         vecSrc = vldrwq_f32(pSrc);
  87:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /*
  88:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****          * Get current max per lane and current index per lane
  89:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****          * when a max is selected
  90:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****          */
  91:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         p0 = vcmpgeq(vecSrc, curExtremValVec);
  92:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         curExtremValVec = vpselq(vecSrc, curExtremValVec, p0);
  93:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         curExtremIdxVec = vpselq(indexVec, curExtremIdxVec, p0);
  94:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  95:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         indexVec = vidupq_wb_u32(&curIdx, 1);
  96:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
  97:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         pSrc += 4;
  98:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* Decrement the loop counter */
  99:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         blkCnt--;
 100:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     }
 101:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 102:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 103:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /*
 104:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****      * Get max value across the vector
 105:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****      */
 106:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     maxValue = vmaxnmvq(maxValue, curExtremValVec);
 107:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /*
 108:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****      * set index for lower values to max possible index
 109:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****      */
 110:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     p0 = vcmpgeq(curExtremValVec, maxValue);
 111:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     indexVec = vpselq(curExtremIdxVec, vdupq_n_u32(blockSize), p0);
 112:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /*
 113:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****      * Get min index which is thus for a max value
 114:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****      */
 115:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     idx = vminvq(idx, indexVec);
 116:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 117:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /* Tail */
 118:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     blkCnt = blockSize & 0x3;
 119:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 120:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     while (blkCnt > 0U)
 121:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     {
 122:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       /* Initialize tmp to the next consecutive values one by one */
 123:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       tmp = *pSrc++;
 124:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 125:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       /* compare for the maximum value */
 126:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       if (maxValue < tmp)
 127:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       {
 128:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* Update the maximum value and it's index */
 129:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         maxValue = tmp;
 130:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         idx = blockSize - blkCnt;
 131:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       }
 132:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 133:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       /* Decrement loop counter */
 134:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       blkCnt--;
 135:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     }
 136:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 137:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /*
 138:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****      * Save result
 139:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****      */
 140:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     *pIndex = idx;
 141:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     *pResult = maxValue;
 142:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** }
 143:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 144:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #else
 145:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #if defined(ARM_MATH_NEON) && !defined(ARM_MATH_AUTOVECTORIZE)
 146:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** void arm_max_f32(
 147:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   const float32_t * pSrc,
 148:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32_t blockSize,
 149:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   float32_t * pResult,
 150:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32_t * pIndex)
 151:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** {
 152:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   float32_t maxVal1, out;               /* Temporary variables to store the output value. */
 153:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32_t blkCnt, outIndex;              /* loop counter */
 154:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 155:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   float32x4_t outV, srcV;
 156:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   float32x2_t outV2;
 157:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 158:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32x4_t idxV;
 159:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32x4_t maxIdx;
 160:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   static const uint32_t indexInit[4]={4,5,6,7};
 161:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   static const uint32_t countVInit[4]={0,1,2,3};
 162:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32x4_t index;
 164:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32x4_t delta;
 165:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32x4_t countV;
 166:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   uint32x2_t countV2;
 167:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 168:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   maxIdx = vdupq_n_u32(ULONG_MAX);
 169:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   delta = vdupq_n_u32(4);
 170:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   index = vld1q_u32(indexInit);
 171:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   countV = vld1q_u32(countVInit);
 172:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 173:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 174:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Initialise the index value to zero. */
 175:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   outIndex = 0U;
 176:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 177:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Load first input value that act as reference value for comparison */
 178:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   if (blockSize <= 3)
 179:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   {
 180:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       out = *pSrc++;
 181:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 182:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       blkCnt = blockSize - 1;
 183:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 184:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       while (blkCnt > 0U)
 185:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       {
 186:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* Initialize maxVal to the next consecutive values one by one */
 187:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         maxVal1 = *pSrc++;
 188:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 189:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* compare for the maximum value */
 190:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         if (out < maxVal1)
 191:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         {
 192:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****           /* Update the maximum value and it's index */
 193:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****           out = maxVal1;
 194:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****           outIndex = blockSize - blkCnt;
 195:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         }
 196:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 197:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* Decrement the loop counter */
 198:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         blkCnt--;
 199:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       }
 200:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   }
 201:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   else
 202:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   {
 203:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outV = vld1q_f32(pSrc);
 204:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       pSrc += 4;
 205:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****  
 206:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       /* Compute 4 outputs at a time */
 207:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       blkCnt = (blockSize - 4 ) >> 2U;
 208:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 209:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       while (blkCnt > 0U)
 210:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       {
 211:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         srcV = vld1q_f32(pSrc);
 212:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         pSrc += 4;
 213:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 214:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         idxV = vcgtq_f32(srcV, outV);
 215:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         outV = vbslq_f32(idxV, srcV, outV );
 216:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         countV = vbslq_u32(idxV, index,countV );
 217:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 218:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         index = vaddq_u32(index,delta);
 219:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 220:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* Decrement the loop counter */
 221:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         blkCnt--;
 222:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       }
 223:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 224:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outV2 = vpmax_f32(vget_low_f32(outV),vget_high_f32(outV));
 225:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outV2 = vpmax_f32(outV2,outV2);
 226:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       out = vget_lane_f32(outV2, 0);
 227:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 228:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       idxV = vceqq_f32(outV, vdupq_n_f32(out));
 229:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       countV = vbslq_u32(idxV, countV,maxIdx);
 230:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       
 231:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       countV2 = vpmin_u32(vget_low_u32(countV),vget_high_u32(countV));
 232:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       countV2 = vpmin_u32(countV2,countV2);
 233:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outIndex = vget_lane_u32(countV2,0); 
 234:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 235:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       /* if (blockSize - 1U) is not multiple of 4 */
 236:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       blkCnt = (blockSize - 4 ) % 4U;
 237:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 238:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       while (blkCnt > 0U)
 239:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       {
 240:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* Initialize maxVal to the next consecutive values one by one */
 241:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         maxVal1 = *pSrc++;
 242:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 243:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* compare for the maximum value */
 244:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         if (out < maxVal1)
 245:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         {
 246:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****           /* Update the maximum value and it's index */
 247:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****           out = maxVal1;
 248:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****           outIndex = blockSize - blkCnt ;
 249:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         }
 250:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 251:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         /* Decrement the loop counter */
 252:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         blkCnt--;
 253:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       }
 254:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     
 255:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       
 256:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   }
 257:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 258:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Store the maximum value and it's index into destination pointers */
 259:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   *pResult = out;
 260:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   *pIndex = outIndex;
 261:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** }
 262:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #else
 263:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** void arm_max_f32(
 264:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   const float32_t * pSrc,
 265:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         uint32_t blockSize,
 266:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         float32_t * pResult,
 267:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         uint32_t * pIndex)
 268:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** {
  28              	 .loc 1 268 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 89B0     	 sub sp,sp,#36
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 40
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
 269:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         float32_t maxVal, out;                         /* Temporary variables to store the output v
 270:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         uint32_t blkCnt, outIndex;                     /* Loop counter */
 271:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 272:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) && !defined(ARM_MATH_AUTOVECTORIZE)
 273:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****         uint32_t index;                                /* index of maximum value */
 274:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #endif
 275:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 276:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Initialise index value to zero. */
 277:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   outIndex = 0U;
  47              	 .loc 1 277 0
  48 000e 0023     	 movs r3,#0
  49 0010 7B61     	 str r3,[r7,#20]
 278:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 279:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Load first input value that act as reference value for comparision */
 280:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   out = *pSrc++;
  50              	 .loc 1 280 0
  51 0012 FB68     	 ldr r3,[r7,#12]
  52 0014 1A1D     	 adds r2,r3,#4
  53 0016 FA60     	 str r2,[r7,#12]
  54 0018 1B68     	 ldr r3,[r3]
  55 001a FB61     	 str r3,[r7,#28]
 281:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 282:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) && !defined(ARM_MATH_AUTOVECTORIZE)
 283:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Initialise index of maximum value. */
 284:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   index = 0U;
 285:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 286:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 287:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   blkCnt = (blockSize - 1U) >> 2U;
 288:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 289:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   while (blkCnt > 0U)
 290:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   {
 291:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /* Initialize maxVal to next consecutive values one by one */
 292:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     maxVal = *pSrc++;
 293:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 294:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /* compare for the maximum value */
 295:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     if (out < maxVal)
 296:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     {
 297:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       /* Update the maximum value and it's index */
 298:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       out = maxVal;
 299:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outIndex = index + 1U;
 300:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     }
 301:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 302:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     maxVal = *pSrc++;
 303:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     if (out < maxVal)
 304:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     {
 305:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       out = maxVal;
 306:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outIndex = index + 2U;
 307:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     }
 308:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 309:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     maxVal = *pSrc++;
 310:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     if (out < maxVal)
 311:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     {
 312:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       out = maxVal;
 313:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outIndex = index + 3U;
 314:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     }
 315:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 316:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     maxVal = *pSrc++;
 317:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     if (out < maxVal)
 318:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     {
 319:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       out = maxVal;
 320:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outIndex = index + 4U;
 321:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     }
 322:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 323:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     index += 4U;
 324:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 325:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /* Decrement loop counter */
 326:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     blkCnt--;
 327:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   }
 328:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 329:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 330:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   blkCnt = (blockSize - 1U) % 4U;
 331:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 332:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #else
 333:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 334:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Initialize blkCnt with number of samples */
 335:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   blkCnt = (blockSize - 1U);
  56              	 .loc 1 335 0
  57 001c BB68     	 ldr r3,[r7,#8]
  58 001e 013B     	 subs r3,r3,#1
  59 0020 BB61     	 str r3,[r7,#24]
 336:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 337:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 338:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 339:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   while (blkCnt > 0U)
  60              	 .loc 1 339 0
  61 0022 16E0     	 b .L2
  62              	.L5:
 340:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   {
 341:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /* Initialize maxVal to the next consecutive values one by one */
 342:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     maxVal = *pSrc++;
  63              	 .loc 1 342 0
  64 0024 FB68     	 ldr r3,[r7,#12]
  65 0026 1A1D     	 adds r2,r3,#4
  66 0028 FA60     	 str r2,[r7,#12]
  67 002a 1B68     	 ldr r3,[r3]
  68 002c 3B61     	 str r3,[r7,#16]
 343:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 344:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /* compare for the maximum value */
 345:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     if (out < maxVal)
  69              	 .loc 1 345 0
  70 002e 97ED077A 	 flds s14,[r7,#28]
  71 0032 D7ED047A 	 flds s15,[r7,#16]
  72 0036 B4EEE77A 	 fcmpes s14,s15
  73 003a F1EE10FA 	 fmstat
  74 003e 05D5     	 bpl .L3
 346:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     {
 347:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       /* Update the maximum value and it's index */
 348:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       out = maxVal;
  75              	 .loc 1 348 0
  76 0040 3B69     	 ldr r3,[r7,#16]
  77 0042 FB61     	 str r3,[r7,#28]
 349:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****       outIndex = blockSize - blkCnt;
  78              	 .loc 1 349 0
  79 0044 BA68     	 ldr r2,[r7,#8]
  80 0046 BB69     	 ldr r3,[r7,#24]
  81 0048 D31A     	 subs r3,r2,r3
  82 004a 7B61     	 str r3,[r7,#20]
  83              	.L3:
 350:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     }
 351:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 352:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     /* Decrement loop counter */
 353:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****     blkCnt--;
  84              	 .loc 1 353 0
  85 004c BB69     	 ldr r3,[r7,#24]
  86 004e 013B     	 subs r3,r3,#1
  87 0050 BB61     	 str r3,[r7,#24]
  88              	.L2:
 339:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   {
  89              	 .loc 1 339 0
  90 0052 BB69     	 ldr r3,[r7,#24]
  91 0054 002B     	 cmp r3,#0
  92 0056 E5D1     	 bne .L5
 354:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   }
 355:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** 
 356:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   /* Store the maximum value and it's index into destination pointers */
 357:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   *pResult = out;
  93              	 .loc 1 357 0
  94 0058 7B68     	 ldr r3,[r7,#4]
  95 005a FA69     	 ldr r2,[r7,#28]
  96 005c 1A60     	 str r2,[r3]
 358:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c ****   *pIndex = outIndex;
  97              	 .loc 1 358 0
  98 005e 3B68     	 ldr r3,[r7]
  99 0060 7A69     	 ldr r2,[r7,#20]
 100 0062 1A60     	 str r2,[r3]
 359:../Dave/Generated/CMSIS_DSP/Source/StatisticsFunctions/arm_max_f32.c **** }
 101              	 .loc 1 359 0
 102 0064 2437     	 adds r7,r7,#36
 103              	.LCFI3:
 104              	 .cfi_def_cfa_offset 4
 105 0066 BD46     	 mov sp,r7
 106              	.LCFI4:
 107              	 .cfi_def_cfa_register 13
 108              	 
 109 0068 5DF8047B 	 ldr r7,[sp],#4
 110              	.LCFI5:
 111              	 .cfi_restore 7
 112              	 .cfi_def_cfa_offset 0
 113 006c 7047     	 bx lr
 114              	 .cfi_endproc
 115              	.LFE149:
 117 006e 00BF     	 .text
 118              	.Letext0:
 119              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 120              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 121              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 122              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_max_f32.c
    {standard input}:20     .text.arm_max_f32:00000000 $t
    {standard input}:25     .text.arm_max_f32:00000000 arm_max_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
