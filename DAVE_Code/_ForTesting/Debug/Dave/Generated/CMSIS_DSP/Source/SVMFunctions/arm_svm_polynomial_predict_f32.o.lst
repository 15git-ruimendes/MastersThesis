   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_svm_polynomial_predict_f32.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_exponent_f32,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_exponent_f32:
  25              	.LFB120:
  26              	 .file 1 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /******************************************************************************
   2:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @file     arm_math.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
   4:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @version  V1.7.0
   5:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @date     18. March 2019
   6:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  ******************************************************************************/
   7:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /*
   8:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
  10:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * not use this file except in compliance with the License.
  14:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * You may obtain a copy of the License at
  15:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
  16:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
  18:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * limitations under the License.
  23:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
  24:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
  25:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
  26:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  28:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Introduction
  29:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
  30:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  31:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M and Cortex-A processor 
  33:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * based devices.
  34:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  35:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  36:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Basic math functions
  37:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Fast math functions
  38:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Complex math functions
  39:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Filtering functions
  40:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Matrix functions
  41:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Transform functions
  42:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Motor control functions
  43:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Statistical functions
  44:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Support functions
  45:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Interpolation functions
  46:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Support Vector Machine functions (SVM)
  47:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Bayes classifier functions
  48:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - Distance functions
  49:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  50:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library has generally separate functions for operating on 8-bit integers, 16-bit integers,
  51:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  52:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  53:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Using the Library
  54:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
  55:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  56:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  57:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  58:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Here is the list of pre-built libraries :
  59:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  60:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  61:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  62:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  63:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  64:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  65:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  66:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  67:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  68:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  69:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  70:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  71:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  72:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  73:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  74:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  75:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  76:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  77:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  78:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  79:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  80:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  81:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  82:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  83:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  84:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Examples
  85:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * --------
  86:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  87:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  88:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  89:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Toolchain Support
  90:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
  91:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  92:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library is now tested on Fast Models building with cmake.
  93:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Core M0, M7, A5 are tested.
  94:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * 
  95:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * 
  96:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
  97:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Building the Library
  98:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
  99:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
 101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - arm_cortexM_math.uvprojx
 102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * There is also a work in progress cmake build. The README file is giving more details.
 107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Preprocessor Macros
 109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
 110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Each library project have different preprocessor macros.
 112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_ROUNDING:
 122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
 128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_NEON:
 130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * dependent on the compiler and target architecture.
 134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * performances than the scalar versions.
 140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_HELIUM:
 142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * It implies the flags ARM_MATH_MVEF and ARM_MATH_MVEI and ARM_MATH_FLOAT16.
 144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_MVEF:
 146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Select Helium versions of the f32 algorithms.
 148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * It implies ARM_MATH_FLOAT16 and ARM_MATH_MVEI.
 149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_MVEI:
 151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Select Helium versions of the int and fixed point algorithms.
 153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * - ARM_MATH_FLOAT16:
 155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Float16 implementations of some algorithms (Requires MVE extension).
 157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * <hr>
 159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * -----------------------------
 161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |File/Folder                      |Content                                                    
 164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    *
 173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * <hr>
 174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Revision History of CMSIS-DSP
 175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * ------------
 176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * operate on individual values and not arrays.
 189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * This set of functions operates on complex data vectors.
 196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * (real, imag, real, imag, ...).
 198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * real values.
 201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * This set of functions provides basic matrix math operations.
 211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * the type
 213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * definition for the floating-point matrix structure is shown
 214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * below:
 215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     typedef struct
 217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     {
 218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     } arm_matrix_instance_f32;
 222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * and the values are arranged in row order.  That is, the
 228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * matrix element (i, j) is stored at:
 229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     pData[i*numCols + j]
 231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * \par Init Functions
 234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There is an associated initialization function for each type of matrix
 235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * data structure.
 236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * \par
 241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * To place the instance structure in a const data
 244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * section, manually initialize the data structure.  For example:
 245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * data array.
 253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * \par Size Checking
 255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * columns. If the size check fails the functions return:
 259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Otherwise the functions return
 263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     ARM_MATH_SUCCESS
 265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The matrix size checking is enabled via the \#define
 268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * <pre>
 269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * </pre>
 271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * within the library project settings.  By default this macro is defined
 272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * and size checking is enabled. By changing the project settings and
 273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupController Controller Functions
 284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupStats Statistics Functions
 288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupSupport Support Functions
 292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupExamples Examples
 303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupSVM SVM Functions
 307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * This set of functions is implementing SVM classification on 2 classes.
 308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The training must be done from scikit-learn. The parameters can be easily
 309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * generated from the scikit-learn object. Some examples are given in
 310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * DSP/Testing/PatternGeneration/SVM.py
 311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * If more than 2 classes are needed, the functions in this folder 
 313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * will have to be used, as building blocks, to do multi-class classification.
 314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * No multi-class classification is provided in this SVM folder.
 316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * 
 317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupBayes Bayesian estimators
 322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Implement the naive gaussian Bayes estimator.
 324:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The training must be done from scikit-learn.
 325:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 326:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * The parameters can be easily
 327:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * generated from the scikit-learn object. Some examples are given in
 328:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * DSP/Testing/PatternGeneration/Bayes.py
 329:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 330:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 331:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 332:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @defgroup groupDistance Distance functions
 333:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 334:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * Distance functions for use with clustering algorithms.
 335:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * There are distance functions for float vectors and boolean vectors.
 336:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
 337:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 338:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 339:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 340:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifndef _ARM_MATH_H
 341:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define _ARM_MATH_H
 342:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 343:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef   __cplusplus
 344:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** extern "C"
 345:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 346:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 347:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 348:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /* Compiler specific diagnostic adjustment */
 349:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if   defined ( __CC_ARM )
 350:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 351:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 352:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 353:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __GNUC__ )
 354:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #pragma GCC diagnostic push
 355:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 356:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 357:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 358:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 359:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __ICCARM__ )
 360:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 361:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __TI_ARM__ )
 362:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 363:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __CSMC__ )
 364:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 365:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __TASKING__ )
 366:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 367:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( _MSC_VER )
 368:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 369:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 370:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #error Unknown compiler
 371:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 372:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 373:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 374:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /* Included for instrinsics definitions */
 375:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined (_MSC_VER ) 
 376:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <stdint.h>
 377:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 378:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __STATIC_INLINE static __inline
 379:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 380:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 381:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined (__GNUC_PYTHON__)
 382:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <stdint.h>
 383:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define  __ALIGNED(x) __attribute__((aligned(x)))
 384:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __STATIC_FORCEINLINE static __attribute__((inline))
 385:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __STATIC_INLINE static __attribute__((inline))
 386:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-function"
 387:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #pragma GCC diagnostic ignored "-Wattributes"
 388:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 389:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 390:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include "cmsis_compiler.h"
 391:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 392:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 393:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 394:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 395:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <string.h>
 396:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <math.h>
 397:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <float.h>
 398:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <limits.h>
 399:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 400:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 401:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F64_MAX   ((float64_t)DBL_MAX)
 402:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F32_MAX   ((float32_t)FLT_MAX)
 403:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 404:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 405:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F16_MAX   ((float16_t)FLT_MAX)
 406:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 407:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 408:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F64_MIN   (-DBL_MAX)
 409:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F32_MIN   (-FLT_MAX)
 410:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 411:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 412:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F16_MIN   (-(float16_t)FLT_MAX)
 413:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 414:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 415:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F64_ABSMAX   ((float64_t)DBL_MAX)
 416:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F32_ABSMAX   ((float32_t)FLT_MAX)
 417:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 418:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 419:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F16_ABSMAX   ((float16_t)FLT_MAX)
 420:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 421:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 422:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F64_ABSMIN   ((float64_t)0.0)
 423:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F32_ABSMIN   ((float32_t)0.0)
 424:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 425:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 426:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define F16_ABSMIN   ((float16_t)0.0)
 427:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 428:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 429:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q31_MAX   ((q31_t)(0x7FFFFFFFL))
 430:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q15_MAX   ((q15_t)(0x7FFF))
 431:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q7_MAX    ((q7_t)(0x7F))
 432:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q31_MIN   ((q31_t)(0x80000000L))
 433:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q15_MIN   ((q15_t)(0x8000))
 434:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q7_MIN    ((q7_t)(0x80))
 435:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 436:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q31_ABSMAX   ((q31_t)(0x7FFFFFFFL))
 437:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q15_ABSMAX   ((q15_t)(0x7FFF))
 438:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q7_ABSMAX    ((q7_t)(0x7F))
 439:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q31_ABSMIN   ((q31_t)0)
 440:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q15_ABSMIN   ((q15_t)0)
 441:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define Q7_ABSMIN    ((q7_t)0)
 442:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 443:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /* evaluate ARM DSP feature */
 444:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 445:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_DSP                   1
 446:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 447:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 448:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_NEON)
 449:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <arm_neon.h>
 450:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 451:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 452:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined (ARM_MATH_HELIUM)
 453:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_MVEF
 454:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_FLOAT16
 455:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 456:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 457:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined (ARM_MATH_MVEF)
 458:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_MVEI
 459:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define ARM_MATH_FLOAT16
 460:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 461:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 462:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined (ARM_MATH_HELIUM) || defined(ARM_MATH_MVEF) || defined(ARM_MATH_MVEI)
 463:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #include <arm_mve.h>
 464:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 465:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 466:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 467:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 468:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 469:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 470:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 471:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define DELTA_Q31          ((q31_t)(0x100))
 472:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define DELTA_Q15          ((q15_t)0x5)
 473:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define INDEX_MASK         0x0000003F
 474:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifndef PI
 475:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define PI               3.14159265358979f
 476:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 477:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 478:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 479:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 480:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 481:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 482:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 483:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 484:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 485:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 486:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 487:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define TABLE_SPACING_Q15     0x80
 488:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 489:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 490:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 491:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 492:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 493:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 494:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define INPUT_SPACING         0xB60B61
 495:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 496:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 497:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Macros for complex numbers
 498:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 499:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 500:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /* Dimension C vector space */
 501:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define CMPLX_DIM 2
 502:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 503:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 504:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Error status returned by some functions in the library.
 505:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 506:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 507:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef enum
 508:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 509:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 510:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 511:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 512:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 513:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 514:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 515:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 516:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } arm_status;
 517:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 518:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 519:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 520:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 521:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8_t q7_t;
 522:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 523:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 524:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 525:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 526:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16_t q15_t;
 527:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 528:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 529:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 530:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 531:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32_t q31_t;
 532:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 533:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 534:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 535:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 536:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int64_t q63_t;
 537:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 538:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 539:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point type definition.
 540:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 541:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float float32_t;
 542:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 543:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 544:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 64-bit floating-point type definition.
 545:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 546:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef double float64_t;
 547:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 548:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 549:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief vector types
 550:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 551:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_NEON) || defined (ARM_MATH_MVEI)
 552:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 553:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 64-bit fractional 128-bit vector data type in 1.63 format
 554:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 555:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int64x2_t q63x2_t;
 556:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 557:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 558:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector data type in 1.31 format.
 559:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 560:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4_t q31x4_t;
 561:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 562:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 563:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 128-bit vector data type with 16-bit alignement in 1.15 format.
 564:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 565:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef __ALIGNED(2) int16x8_t q15x8_t;
 566:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 567:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  /**
 568:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 128-bit vector data type with 8-bit alignement in 1.7 format.
 569:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 570:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef __ALIGNED(1) int8x16_t q7x16_t;
 571:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 572:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /**
 573:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector pair data type in 1.31 format.
 574:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 575:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4x2_t q31x4x2_t;
 576:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 577:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 578:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector quadruplet data type in 1.31 format.
 579:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 580:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4x4_t q31x4x4_t;
 581:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 582:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 583:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 128-bit vector pair data type in 1.15 format.
 584:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 585:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8x2_t q15x8x2_t;
 586:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 587:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 588:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 128-bit vector quadruplet data type in 1.15 format.
 589:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 590:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8x4_t q15x8x4_t;
 591:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 592:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 593:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 128-bit vector pair data type in 1.7 format.
 594:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 595:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x16x2_t q7x16x2_t;
 596:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 597:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 598:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 128-bit vector quadruplet data type in 1.7 format.
 599:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 600:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    typedef int8x16x4_t q7x16x4_t;
 601:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 602:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 603:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional data type in 9.23 format.
 604:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 605:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32_t q23_t;
 606:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 607:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 608:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector data type in 9.23 format.
 609:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 610:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4_t q23x4_t;
 611:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 612:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 613:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 64-bit status 128-bit vector data type.
 614:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 615:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int64x2_t status64x2_t;
 616:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 617:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 618:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit status 128-bit vector data type.
 619:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 620:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4_t status32x4_t;
 621:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 622:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 623:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit status 128-bit vector data type.
 624:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 625:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8_t status16x8_t;
 626:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 627:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 628:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit status 128-bit vector data type.
 629:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 630:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x16_t status8x16_t;
 631:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 632:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 633:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 634:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 635:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_NEON) || defined(ARM_MATH_MVEF) /* floating point vector*/
 636:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 637:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 128-bit vector type
 638:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 639:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x4_t f32x4_t;
 640:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 641:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 642:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 643:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 128-bit vector data type
 644:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 645:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef __ALIGNED(2) float16x8_t f16x8_t;
 646:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 647:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 648:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 649:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 128-bit vector pair data type
 650:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 651:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x4x2_t f32x4x2_t;
 652:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 653:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 654:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 128-bit vector quadruplet data type
 655:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 656:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x4x4_t f32x4x4_t;
 657:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 658:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 659:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 660:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 128-bit vector pair data type
 661:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 662:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x8x2_t f16x8x2_t;
 663:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 664:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 665:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 128-bit vector quadruplet data type
 666:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 667:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x8x4_t f16x8x4_t;
 668:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 669:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 670:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 671:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit ubiquitous 128-bit vector data type
 672:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 673:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef union _any32x4_t
 674:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 675:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       float32x4_t     f;
 676:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       int32x4_t       i;
 677:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } any32x4_t;
 678:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 679:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 680:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 681:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit ubiquitous 128-bit vector data type
 682:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 683:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef union _any16x8_t
 684:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 685:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       float16x8_t     f;
 686:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       int16x8_t       i;
 687:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } any16x8_t;
 688:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 689:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 690:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 691:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 692:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_NEON)
 693:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 694:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 64-bit vector data type in 1.31 format.
 695:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 696:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x2_t  q31x2_t;
 697:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 698:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 699:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 64-bit vector data type in 1.15 format.
 700:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 701:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef  __ALIGNED(2) int16x4_t q15x4_t;
 702:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 703:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 704:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 64-bit vector data type in 1.7 format.
 705:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 706:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef  __ALIGNED(1) int8x8_t q7x8_t;
 707:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 708:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 709:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit float 64-bit vector data type.
 710:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 711:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x2_t  f32x2_t;
 712:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 713:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 714:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 715:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit float 64-bit vector data type.
 716:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 717:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef  __ALIGNED(2) float16x4_t f16x4_t;
 718:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
 719:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 720:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 721:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 128-bit vector triplet data type
 722:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 723:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x4x3_t f32x4x3_t;
 724:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 725:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 726:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 727:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 128-bit vector triplet data type
 728:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 729:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x8x3_t f16x8x3_t;
 730:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 731:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 732:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 733:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 128-bit vector triplet data type in 1.31 format
 734:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 735:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4x3_t q31x4x3_t;
 736:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 737:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 738:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 128-bit vector triplet data type in 1.15 format
 739:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 740:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8x3_t q15x8x3_t;
 741:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 742:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 743:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 128-bit vector triplet data type in 1.7 format
 744:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 745:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x16x3_t q7x16x3_t;
 746:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 747:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 748:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 64-bit vector pair data type
 749:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 750:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x2x2_t f32x2x2_t;
 751:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 752:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 753:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 64-bit vector triplet data type
 754:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 755:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x2x3_t f32x2x3_t;
 756:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 757:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 758:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit floating-point 64-bit vector quadruplet data type
 759:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 760:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float32x2x4_t f32x2x4_t;
 761:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 762:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 763:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 764:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 64-bit vector pair data type
 765:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 766:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x4x2_t f16x4x2_t;
 767:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 768:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 769:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 64-bit vector triplet data type
 770:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 771:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x4x3_t f16x4x3_t;
 772:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 773:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 774:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit floating-point 64-bit vector quadruplet data type
 775:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 776:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef float16x4x4_t f16x4x4_t;
 777:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
 778:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 779:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 780:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 64-bit vector pair data type in 1.31 format
 781:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 782:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x2x2_t q31x2x2_t;
 783:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 784:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 785:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 64-bit vector triplet data type in 1.31 format
 786:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 787:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x2x3_t q31x2x3_t;
 788:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 789:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 790:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit fractional 64-bit vector quadruplet data type in 1.31 format
 791:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 792:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4x3_t q31x2x4_t;
 793:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 794:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 795:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 64-bit vector pair data type in 1.15 format
 796:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 797:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x4x2_t q15x4x2_t;
 798:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 799:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 800:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 64-bit vector triplet data type in 1.15 format
 801:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 802:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x4x2_t q15x4x3_t;
 803:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 804:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 805:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit fractional 64-bit vector quadruplet data type in 1.15 format
 806:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 807:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x4x3_t q15x4x4_t;
 808:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 809:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 810:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 64-bit vector pair data type in 1.7 format
 811:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 812:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x8x2_t q7x8x2_t;
 813:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 814:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 815:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 64-bit vector triplet data type in 1.7 format
 816:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 817:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x8x3_t q7x8x3_t;
 818:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 819:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 820:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit fractional 64-bit vector quadruplet data type in 1.7 format
 821:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 822:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x8x4_t q7x8x4_t;
 823:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 824:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 825:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit ubiquitous 64-bit vector data type
 826:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 827:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef union _any32x2_t
 828:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 829:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       float32x2_t     f;
 830:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       int32x2_t       i;
 831:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } any32x2_t;
 832:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 833:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined(ARM_MATH_FLOAT16)
 834:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 835:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit ubiquitous 64-bit vector data type
 836:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 837:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef union _any16x4_t
 838:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
 839:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       float16x4_t     f;
 840:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       int16x4_t       i;
 841:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   } any16x4_t;
 842:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
 843:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 844:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 845:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 32-bit status 64-bit vector data type.
 846:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 847:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int32x4_t status32x2_t;
 848:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 849:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 850:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 16-bit status 64-bit vector data type.
 851:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 852:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int16x8_t status16x4_t;
 853:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 854:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
 855:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief 8-bit status 64-bit vector data type.
 856:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
 857:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   typedef int8x16_t status8x8_t;
 858:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 859:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 860:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 861:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 862:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 863:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 864:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief definition to read/write two 16 bit values.
 865:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @deprecated
 866:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 867:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if   defined ( __CC_ARM )
 868:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 869:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 870:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 871:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __GNUC__ )
 872:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 873:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __ICCARM__ )
 874:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 875:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __TI_ARM__ )
 876:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 877:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __CSMC__ )
 878:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 879:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined ( __TASKING__ )
 880:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 881:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #elif defined(_MSC_VER )
 882:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __SIMD32_TYPE int32_t
 883:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 884:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #error Unknown compiler
 885:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 886:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 887:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 888:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 889:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 890:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 891:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 892:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define STEP(x) (x) <= 0 ? 0 : 1
 893:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #define SQ(x) ((x) * (x))
 894:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 895:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /* SIMD replacement */
 896:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 897:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 898:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 899:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 900:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 901:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
 902:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 903:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 904:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t * pQ15)
 905:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 906:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
 907:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 908:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 909:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, pQ15, 4);
 910:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 911:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val = (pQ15[1] << 16) | (pQ15[0] & 0x0FFFF) ;
 912:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 913:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 914:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   return (val);
 915:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 916:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 917:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 918:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 919:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 920:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
 921:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 922:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 923:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t ** pQ15)
 924:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 925:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
 926:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 927:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 928:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, *pQ15, 4);
 929:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 930:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val = ((*pQ15)[1] << 16) | ((*pQ15)[0] & 0x0FFFF);
 931:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 932:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 933:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *pQ15 += 2;
 934:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  return (val);
 935:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 936:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 937:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 938:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 939:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 940:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
 941:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 942:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 943:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t ** pQ15)
 944:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 945:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
 946:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 947:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 948:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, *pQ15, 4);
 949:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 950:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val = ((*pQ15)[1] << 16) | ((*pQ15)[0] & 0x0FFFF);
 951:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 952:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 953:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   *pQ15 -= 2;
 954:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   return (val);
 955:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 956:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 957:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 958:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 959:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 960:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     value     Q31 value
 961:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        none
 962:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 963:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 964:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t ** pQ15,
 965:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t    value)
 966:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 967:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val = value;
 968:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 969:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (*pQ15, &val, 4);
 970:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 971:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ15)[0] = (val & 0x0FFFF);
 972:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ15)[1] = (val >> 16) & 0x0FFFF;
 973:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 974:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 975:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *pQ15 += 2;
 976:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 977:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 978:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
 979:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 980:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ15      points to input value
 981:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     value     Q31 value
 982:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        none
 983:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
 984:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 985:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q15_t * pQ15,
 986:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t   value)
 987:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
 988:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val = value;
 989:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 990:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
 991:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (pQ15, &val, 4);
 992:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
 993:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   pQ15[0] = val & 0x0FFFF;
 994:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   pQ15[1] = val >> 16;
 995:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
 996:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
 997:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 998:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
 999:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
1000:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
1001:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ7       points to input value
1002:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
1003:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
1004:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
1005:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q7_t ** pQ7)
1006:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
1007:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
1008:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1009:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1010:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
1011:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, *pQ7, 4);
1012:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
1013:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val =(((*pQ7)[3] & 0x0FF) << 24)  | (((*pQ7)[2] & 0x0FF) << 16)  | (((*pQ7)[1] & 0x0FF) << 8)  | 
1014:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
1015:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1016:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   *pQ7 += 4;
1017:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1018:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   return (val);
1019:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
1020:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1021:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
1022:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
1023:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ7       points to input value
1024:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        Q31 value
1025:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
1026:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
1027:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q7_t ** pQ7)
1028:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
1029:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val;
1030:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
1031:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (&val, *pQ7, 4);
1032:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
1033:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   val = ((((*pQ7)[3]) & 0x0FF) << 24) | ((((*pQ7)[2]) & 0x0FF) << 16)   | ((((*pQ7)[1]) & 0x0FF) <<
1034:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif 
1035:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   *pQ7 -= 4;
1036:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1037:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   return (val);
1038:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
1039:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1040:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
1041:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
1042:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     pQ7       points to input value
1043:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @param[in]     value     Q31 value
1044:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   @return        none
1045:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
1046:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
1047:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q7_t ** pQ7,
1048:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t   value)
1049:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
1050:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t val = value;
1051:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifdef __ARM_FEATURE_UNALIGNED
1052:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   memcpy (*pQ7, &val, 4);
1053:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
1054:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ7)[0] = val & 0x0FF;
1055:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ7)[1] = (val >> 8) & 0x0FF;
1056:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ7)[2] = (val >> 16) & 0x0FF;
1057:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   (*pQ7)[3] = (val >> 24) & 0x0FF;
1058:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1059:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
1060:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   *pQ7 += 4;
1061:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
1062:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1063:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /*
1064:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1065:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** Normally those kind of definitions are in a compiler file
1066:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** in Core or Core_A.
1067:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1068:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
1069:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
1070:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** systems like Python or Matlab.
1071:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1072:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
1073:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** compiler file in Core or Core_A would not make sense.
1074:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1075:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** */
1076:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #if defined ( _MSC_VER ) || defined(__GNUC_PYTHON__)
1077:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
1078:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1079:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       if (data == 0U) { return 32U; }
1080:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1081:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       uint32_t count = 0U;
1082:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       uint32_t mask = 0x80000000U;
1083:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1084:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       while ((data & mask) == 0U)
1085:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1086:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         count += 1U;
1087:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         mask = mask >> 1U;
1088:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1089:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       return count;
1090:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1091:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1092:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
1093:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1094:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
1095:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1096:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
1097:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       const int32_t min = -1 - max ;
1098:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       if (val > max)
1099:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         return max;
1101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       else if (val < min)
1103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         return min;
1105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return val;
1108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
1111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     if (sat <= 31U)
1113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
1115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       if (val > (int32_t)max)
1116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         return max;
1118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       else if (val < 0)
1120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       {
1121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         return 0U;
1122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       }
1123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return (uint32_t)val;
1125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
1127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifndef ARM_MATH_DSP
1129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief definition to pack two 16 bit values.
1131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
1133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
1134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
1135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
1136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
1137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    /**
1139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief definition to pack four 8 bit values.
1140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
1142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
1143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
1144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
1145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
1146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #else
1147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
1148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
1149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
1150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
1151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** #endif
1152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Clips Q63 to Q31 values.
1156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
1158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q63_t x)
1159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
1161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
1162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Clips Q63 to Q15 values.
1166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q63_to_q15(
1168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q63_t x)
1169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
1171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
1172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Clips Q31 to Q7 values.
1176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q7_t clip_q31_to_q7(
1178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t x)
1179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
1181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
1182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Clips Q31 to Q15 values.
1186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q31_to_q15(
1188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t x)
1189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
1191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
1192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
1196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE q63_t mult32x64(
1198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q63_t x,
1199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   q31_t y)
1200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
1202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
1203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
1207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q31(
1209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         q31_t in,
1210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         q31_t * dst,
1211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   const q31_t * pRecipTable)
1212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     q31_t out;
1214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     uint32_t tempVal;
1215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     uint32_t index, i;
1216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     uint32_t signBits;
1217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     if (in > 0)
1219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
1221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     else
1223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
1225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* Convert input sample to 1.31 format */
1228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     in = (in << signBits);
1229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* calculation of index for initial approximated Val */
1231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     index = (uint32_t)(in >> 24);
1232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     index = (index & INDEX_MASK);
1233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* 1.31 with exp 1 */
1235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     out = pRecipTable[index];
1236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* calculation of reciprocal value */
1238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* running approximation for two iterations */
1239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     for (i = 0U; i < 2U; i++)
1240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
1242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
1243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       /*      1.31 with exp 1 */
1244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
1245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
1246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* write output */
1249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     *dst = out;
1250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* return num of signbits of out = 1/in value */
1252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return (signBits + 1U);
1253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   /**
1257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
1258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****    */
1259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q15(
1260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         q15_t in,
1261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         q15_t * dst,
1262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   const q15_t * pRecipTable)
1263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   {
1264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     q15_t out = 0;
1265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     uint32_t tempVal = 0;
1266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     uint32_t index = 0, i = 0;
1267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     uint32_t signBits = 0;
1268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     if (in > 0)
1270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
1272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     else
1274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
1276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* Convert input sample to 1.15 format */
1279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     in = (in << signBits);
1280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* calculation of index for initial approximated Val */
1282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     index = (uint32_t)(in >>  8);
1283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     index = (index & INDEX_MASK);
1284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /*      1.15 with exp 1  */
1286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     out = pRecipTable[index];
1287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* calculation of reciprocal value */
1289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* running approximation for two iterations */
1290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     for (i = 0U; i < 2U; i++)
1291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
1293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       tempVal = 0x7FFFu - tempVal;
1294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       /*      1.15 with exp 1 */
1295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
1296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
1297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* write output */
1300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     *dst = out;
1301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     /* return num of signbits of out = 1/in value */
1303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return (signBits + 1);
1304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****   }
1305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** 
1306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** /**
1307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @brief Integer exponentiation
1308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @param[in]    x           value
1309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @param[in]    nb          integer exponent >= 1
1310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  * @return x^nb
1311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  *
1312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****  */
1313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** __STATIC_INLINE float32_t arm_exponent_f32(float32_t x, int32_t nb)
1314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** {
  27              	 .loc 1 1314 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 87ED010A 	 fsts s0,[r7,#4]
  43 000a 3860     	 str r0,[r7]
1315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     float32_t r = x;
  44              	 .loc 1 1315 0
  45 000c 7B68     	 ldr r3,[r7,#4]
  46 000e FB60     	 str r3,[r7,#12]
1316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     nb --;
  47              	 .loc 1 1316 0
  48 0010 3B68     	 ldr r3,[r7]
  49 0012 013B     	 subs r3,r3,#1
  50 0014 3B60     	 str r3,[r7]
1317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     while(nb > 0)
  51              	 .loc 1 1317 0
  52 0016 0AE0     	 b .L2
  53              	.L3:
1318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     {
1319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         r = r * x;
  54              	 .loc 1 1319 0
  55 0018 97ED037A 	 flds s14,[r7,#12]
  56 001c D7ED017A 	 flds s15,[r7,#4]
  57 0020 67EE277A 	 fmuls s15,s14,s15
  58 0024 C7ED037A 	 fsts s15,[r7,#12]
1320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****         nb--;
  59              	 .loc 1 1320 0
  60 0028 3B68     	 ldr r3,[r7]
  61 002a 013B     	 subs r3,r3,#1
  62 002c 3B60     	 str r3,[r7]
  63              	.L2:
1317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     while(nb > 0)
  64              	 .loc 1 1317 0
  65 002e 3B68     	 ldr r3,[r7]
  66 0030 002B     	 cmp r3,#0
  67 0032 F1DC     	 bgt .L3
1321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     }
1322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h ****     return(r);
  68              	 .loc 1 1322 0
  69 0034 FB68     	 ldr r3,[r7,#12]
  70 0036 07EE903A 	 fmsr s15,r3
1323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include\arm_math.h **** }
  71              	 .loc 1 1323 0
  72 003a B0EE670A 	 fcpys s0,s15
  73 003e 1437     	 adds r7,r7,#20
  74              	.LCFI3:
  75              	 .cfi_def_cfa_offset 4
  76 0040 BD46     	 mov sp,r7
  77              	.LCFI4:
  78              	 .cfi_def_cfa_register 13
  79              	 
  80 0042 5DF8047B 	 ldr r7,[sp],#4
  81              	.LCFI5:
  82              	 .cfi_restore 7
  83              	 .cfi_def_cfa_offset 0
  84 0046 7047     	 bx lr
  85              	 .cfi_endproc
  86              	.LFE120:
  88              	 .section .text.arm_svm_polynomial_predict_f32,"ax",%progbits
  89              	 .align 2
  90              	 .global arm_svm_polynomial_predict_f32
  91              	 .thumb
  92              	 .thumb_func
  94              	arm_svm_polynomial_predict_f32:
  95              	.LFB149:
  96              	 .file 2 "../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c"
   1:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * Title:        arm_svm_polynomial_predict_f32.c
   4:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * Description:  SVM Polynomial Classifier
   5:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  *
   7:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * Target Processor: Cortex-M and Cortex-A cores
   8:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * -------------------------------------------------------------------- */
   9:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** /*
  10:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  11:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  *
  12:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  13:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  15:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * not use this file except in compliance with the License.
  16:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * You may obtain a copy of the License at
  17:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  *
  18:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  19:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  21:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  22:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  23:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * See the License for the specific language governing permissions and
  24:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * limitations under the License.
  25:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  */
  26:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  27:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  28:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #include <limits.h>
  29:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #include <math.h>
  30:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #if defined(ARM_MATH_NEON) && !defined(ARM_MATH_AUTOVECTORIZE)
  32:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #include "CMSIS_DSP/Include/arm_vec_math.h"
  33:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #endif
  34:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * @addtogroup groupSVM
  37:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * @{
  38:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** /**
  42:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * @brief SVM polynomial prediction
  43:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * @param[in]    S          Pointer to an instance of the polynomial SVM structure.
  44:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * @param[in]    in         Pointer to input vector
  45:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * @param[out]   pResult    Decision value
  46:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  * @return none.
  47:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  *
  48:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****  */
  49:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  50:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
  51:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  52:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #include "CMSIS_DSP/Include/arm_helium_utils.h"
  53:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #include "CMSIS_DSP/Include/arm_vec_math.h"
  54:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  55:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** void arm_svm_polynomial_predict_f32(
  56:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const arm_svm_polynomial_instance_f32 *S,
  57:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t * in,
  58:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     int32_t * pResult)
  59:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** {
  60:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /* inlined Matrix x Vector function interleaved with dot prod */
  61:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     uint32_t        numRows = S->nbOfSupportVectors;
  62:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     uint32_t        numCols = S->vectorDimension;
  63:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pSupport = S->supportVectors;
  64:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pSrcA = pSupport;
  65:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pInA0;
  66:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pInA1;
  67:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     uint32_t         row;
  68:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     uint32_t         blkCnt;     /* loop counters */
  69:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pDualCoef = S->dualCoefficients;
  70:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32_t       sum = S->intercept;
  71:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     f32x4_t         vSum = vdupq_n_f32(0.0f);
  72:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  73:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     row = numRows;
  74:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  75:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     /*
  76:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****      * compute 4 rows in parrallel
  77:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****      */
  78:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     while (row >= 4) {
  79:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         const float32_t *pInA2, *pInA3;
  80:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         float32_t const *pSrcA0Vec, *pSrcA1Vec, *pSrcA2Vec, *pSrcA3Vec, *pInVec;
  81:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         f32x4_t         vecIn, acc0, acc1, acc2, acc3;
  82:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         float32_t const *pSrcVecPtr = in;
  83:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
  84:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
  85:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Initialize the pointers to 4 consecutive MatrixA rows
  86:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
  87:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInA0 = pSrcA;
  88:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInA1 = pInA0 + numCols;
  89:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInA2 = pInA1 + numCols;
  90:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInA3 = pInA2 + numCols;
  91:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
  92:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Initialize the vector pointer
  93:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
  94:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInVec = pSrcVecPtr;
  95:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
  96:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * reset accumulators
  97:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
  98:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         acc0 = vdupq_n_f32(0.0f);
  99:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         acc1 = vdupq_n_f32(0.0f);
 100:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         acc2 = vdupq_n_f32(0.0f);
 101:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         acc3 = vdupq_n_f32(0.0f);
 102:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 103:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA0Vec = pInA0;
 104:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA1Vec = pInA1;
 105:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA2Vec = pInA2;
 106:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA3Vec = pInA3;
 107:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 108:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = numCols >> 2;
 109:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         while (blkCnt > 0U) {
 110:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             f32x4_t         vecA;
 111:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 112:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecIn = vld1q(pInVec);
 113:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pInVec += 4;
 114:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vld1q(pSrcA0Vec);
 115:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSrcA0Vec += 4;
 116:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc0 = vfmaq(acc0, vecIn, vecA);
 117:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vld1q(pSrcA1Vec);
 118:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSrcA1Vec += 4;
 119:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc1 = vfmaq(acc1, vecIn, vecA);
 120:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vld1q(pSrcA2Vec);
 121:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSrcA2Vec += 4;
 122:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc2 = vfmaq(acc2, vecIn, vecA);
 123:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vld1q(pSrcA3Vec);
 124:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSrcA3Vec += 4;
 125:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc3 = vfmaq(acc3, vecIn, vecA);
 126:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 127:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             blkCnt--;
 128:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 129:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 130:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * tail
 131:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * (will be merged thru tail predication)
 132:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 133:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = numCols & 3;
 134:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         if (blkCnt > 0U) {
 135:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             mve_pred16_t    p0 = vctp32q(blkCnt);
 136:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             f32x4_t         vecA;
 137:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 138:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecIn = vldrwq_z_f32(pInVec, p0);
 139:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vldrwq_z_f32(pSrcA0Vec, p0);
 140:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc0 = vfmaq(acc0, vecIn, vecA);
 141:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vldrwq_z_f32(pSrcA1Vec, p0);
 142:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc1 = vfmaq(acc1, vecIn, vecA);
 143:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vldrwq_z_f32(pSrcA2Vec, p0);
 144:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc2 = vfmaq(acc2, vecIn, vecA);
 145:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vldrwq_z_f32(pSrcA3Vec, p0);
 146:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc3 = vfmaq(acc3, vecIn, vecA);
 147:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 148:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 149:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Sum the partial parts
 150:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 151:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         f32x4_t         vtmp = vuninitializedq_f32();
 152:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vtmp = vsetq_lane(vecAddAcrossF32Mve(acc0), vtmp, 0);
 153:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vtmp = vsetq_lane(vecAddAcrossF32Mve(acc1), vtmp, 1);
 154:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vtmp = vsetq_lane(vecAddAcrossF32Mve(acc2), vtmp, 2);
 155:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vtmp = vsetq_lane(vecAddAcrossF32Mve(acc3), vtmp, 3);
 156:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 157:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vSum = vfmaq_f32(vSum, vld1q(pDualCoef),
 158:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****                              arm_vec_exponent_f32
 159:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****                              (vaddq_n_f32(vmulq_n_f32(vtmp, S->gamma), S->coef0), S->degree));
 160:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         
 161:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pDualCoef += 4;
 162:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA += numCols * 4;
 164:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 165:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Decrement the row loop counter
 166:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 167:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         row -= 4;
 168:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     }
 169:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 170:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     /*
 171:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****      * compute 2 rows in parrallel
 172:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****      */
 173:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     if (row >= 2) {
 174:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         float32_t const *pSrcA0Vec, *pSrcA1Vec, *pInVec;
 175:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         f32x4_t         vecIn, acc0, acc1;
 176:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         float32_t const *pSrcVecPtr = in;
 177:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 178:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 179:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Initialize the pointers to 2 consecutive MatrixA rows
 180:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 181:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInA0 = pSrcA;
 182:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInA1 = pInA0 + numCols;
 183:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 184:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Initialize the vector pointer
 185:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 186:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInVec = pSrcVecPtr;
 187:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 188:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * reset accumulators
 189:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 190:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         acc0 = vdupq_n_f32(0.0f);
 191:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         acc1 = vdupq_n_f32(0.0f);
 192:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA0Vec = pInA0;
 193:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA1Vec = pInA1;
 194:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 195:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = numCols >> 2;
 196:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         while (blkCnt > 0U) {
 197:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             f32x4_t         vecA;
 198:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 199:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecIn = vld1q(pInVec);
 200:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pInVec += 4;
 201:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vld1q(pSrcA0Vec);
 202:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSrcA0Vec += 4;
 203:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc0 = vfmaq(acc0, vecIn, vecA);
 204:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vld1q(pSrcA1Vec);
 205:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSrcA1Vec += 4;
 206:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc1 = vfmaq(acc1, vecIn, vecA);
 207:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 208:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             blkCnt--;
 209:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 210:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 211:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * tail
 212:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * (will be merged thru tail predication)
 213:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 214:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = numCols & 3;
 215:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         if (blkCnt > 0U) {
 216:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             mve_pred16_t    p0 = vctp32q(blkCnt);
 217:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             f32x4_t         vecA;
 218:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 219:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecIn = vldrwq_z_f32(pInVec, p0);
 220:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vldrwq_z_f32(pSrcA0Vec, p0);
 221:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc0 = vfmaq(acc0, vecIn, vecA);
 222:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vldrwq_z_f32(pSrcA1Vec, p0);
 223:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc1 = vfmaq(acc1, vecIn, vecA);
 224:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 225:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 226:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Sum the partial parts
 227:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 228:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         f32x4_t         vtmp = vuninitializedq_f32();
 229:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vtmp = vsetq_lane(vecAddAcrossF32Mve(acc0), vtmp, 0);
 230:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vtmp = vsetq_lane(vecAddAcrossF32Mve(acc1), vtmp, 1);
 231:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 232:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vSum = vfmaq_m_f32(vSum, vld1q(pDualCoef),
 233:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****                              arm_vec_exponent_f32
 234:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****                              (vaddq_n_f32(vmulq_n_f32(vtmp, S->gamma), S->coef0), S->degree), 
 235:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****                              vctp32q(2));
 236:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         
 237:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pDualCoef += 2;
 238:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA += numCols * 2;
 239:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         row -= 2;
 240:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     }
 241:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 242:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     if (row >= 1) {
 243:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         f32x4_t         vecIn, acc0;
 244:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         float32_t const *pSrcA0Vec, *pInVec;
 245:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         float32_t const *pSrcVecPtr = in;
 246:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 247:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Initialize the pointers to last MatrixA row
 248:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 249:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInA0 = pSrcA;
 250:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 251:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Initialize the vector pointer
 252:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 253:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pInVec = pSrcVecPtr;
 254:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 255:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * reset accumulators
 256:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 257:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         acc0 = vdupq_n_f32(0.0f);
 258:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 259:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSrcA0Vec = pInA0;
 260:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 261:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = numCols >> 2;
 262:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         while (blkCnt > 0U) {
 263:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             f32x4_t         vecA;
 264:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 265:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecIn = vld1q(pInVec);
 266:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pInVec += 4;
 267:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vld1q(pSrcA0Vec);
 268:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSrcA0Vec += 4;
 269:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc0 = vfmaq(acc0, vecIn, vecA);
 270:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 271:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             blkCnt--;
 272:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 273:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 274:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * tail
 275:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * (will be merged thru tail predication)
 276:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 277:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = numCols & 3;
 278:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         if (blkCnt > 0U) {
 279:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             mve_pred16_t    p0 = vctp32q(blkCnt);
 280:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             f32x4_t         vecA;
 281:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 282:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecIn = vldrwq_z_f32(pInVec, p0);
 283:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vecA = vldrwq_z_f32(pSrcA0Vec, p0);
 284:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             acc0 = vfmaq(acc0, vecIn, vecA);
 285:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 286:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         /*
 287:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          * Sum the partial parts
 288:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****          */
 289:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         f32x4_t         vtmp = vuninitializedq_f32();
 290:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vtmp = vsetq_lane(vecAddAcrossF32Mve(acc0), vtmp, 0);
 291:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vSum = vfmaq_m_f32(vSum, vld1q(pDualCoef),
 292:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****                              arm_vec_exponent_f32
 293:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****                              (vaddq_n_f32(vmulq_n_f32(vtmp, S->gamma), S->coef0), S->degree), 
 294:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****                              vctp32q(1));
 295:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     }
 296:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     sum += vecAddAcrossF32Mve(vSum);
 297:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 298:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     
 299:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     *pResult = S->classes[STEP(sum)];
 300:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** }
 301:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 302:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #else
 303:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #if defined(ARM_MATH_NEON)
 304:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** void arm_svm_polynomial_predict_f32(
 305:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const arm_svm_polynomial_instance_f32 *S,
 306:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t * in,
 307:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     int32_t * pResult)
 308:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** {
 309:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32_t sum = S->intercept;
 310:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****    
 311:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32_t dot;
 312:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32x4_t dotV; 
 313:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 314:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32x4_t accuma,accumb,accumc,accumd,accum;
 315:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32x2_t accum2;
 316:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32x4_t vec1;
 317:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32x4_t coef0 = vdupq_n_f32(S->coef0);
 318:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 319:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32x4_t vec2,vec2a,vec2b,vec2c,vec2d;
 320:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 321:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     uint32_t blkCnt;   
 322:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     uint32_t vectorBlkCnt;   
 323:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 324:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pIn = in;
 325:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 326:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pSupport = S->supportVectors;
 327:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 328:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pSupporta = S->supportVectors;
 329:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pSupportb;
 330:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pSupportc;
 331:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pSupportd;
 332:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 333:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     pSupportb = pSupporta + S->vectorDimension;
 334:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     pSupportc = pSupportb + S->vectorDimension;
 335:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     pSupportd = pSupportc + S->vectorDimension;
 336:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 337:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pDualCoefs = S->dualCoefficients;
 338:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 339:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     vectorBlkCnt = S->nbOfSupportVectors >> 2;
 340:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     while (vectorBlkCnt > 0U)
 341:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     {
 342:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accuma = vdupq_n_f32(0);
 343:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accumb = vdupq_n_f32(0);
 344:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accumc = vdupq_n_f32(0);
 345:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accumd = vdupq_n_f32(0);
 346:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 347:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pIn = in;
 348:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 349:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = S->vectorDimension >> 2;
 350:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         while (blkCnt > 0U)
 351:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         {
 352:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         
 353:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vec1 = vld1q_f32(pIn);
 354:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vec2a = vld1q_f32(pSupporta);
 355:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vec2b = vld1q_f32(pSupportb);
 356:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vec2c = vld1q_f32(pSupportc);
 357:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vec2d = vld1q_f32(pSupportd);
 358:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 359:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pIn += 4;
 360:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSupporta += 4;
 361:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSupportb += 4;
 362:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSupportc += 4;
 363:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSupportd += 4;
 364:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 365:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             accuma = vmlaq_f32(accuma, vec1,vec2a);
 366:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             accumb = vmlaq_f32(accumb, vec1,vec2b);
 367:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             accumc = vmlaq_f32(accumc, vec1,vec2c);
 368:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             accumd = vmlaq_f32(accumd, vec1,vec2d);
 369:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 370:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             blkCnt -- ;
 371:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 372:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accum2 = vpadd_f32(vget_low_f32(accuma),vget_high_f32(accuma));
 373:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dotV = vsetq_lane_f32(vget_lane_f32(accum2, 0) + vget_lane_f32(accum2, 1),dotV,0);
 374:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 375:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accum2 = vpadd_f32(vget_low_f32(accumb),vget_high_f32(accumb));
 376:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dotV = vsetq_lane_f32(vget_lane_f32(accum2, 0) + vget_lane_f32(accum2, 1),dotV,1);
 377:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 378:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accum2 = vpadd_f32(vget_low_f32(accumc),vget_high_f32(accumc));
 379:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dotV = vsetq_lane_f32(vget_lane_f32(accum2, 0) + vget_lane_f32(accum2, 1),dotV,2);
 380:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 381:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accum2 = vpadd_f32(vget_low_f32(accumd),vget_high_f32(accumd));
 382:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dotV = vsetq_lane_f32(vget_lane_f32(accum2, 0) + vget_lane_f32(accum2, 1),dotV,3);
 383:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 384:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 385:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = S->vectorDimension & 3;
 386:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         while (blkCnt > 0U)
 387:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         {
 388:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             dotV = vsetq_lane_f32(vgetq_lane_f32(dotV,0) + *pIn * *pSupporta++, dotV,0);
 389:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             dotV = vsetq_lane_f32(vgetq_lane_f32(dotV,1) + *pIn * *pSupportb++, dotV,1);
 390:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             dotV = vsetq_lane_f32(vgetq_lane_f32(dotV,2) + *pIn * *pSupportc++, dotV,2);
 391:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             dotV = vsetq_lane_f32(vgetq_lane_f32(dotV,3) + *pIn * *pSupportd++, dotV,3);
 392:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 393:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pIn++;
 394:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 395:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             blkCnt -- ;
 396:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 397:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 398:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vec1 = vld1q_f32(pDualCoefs);
 399:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pDualCoefs += 4; 
 400:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 401:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         // To vectorize later
 402:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dotV = vmulq_n_f32(dotV, S->gamma);
 403:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dotV = vaddq_f32(dotV, coef0);
 404:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 405:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dotV = arm_vec_exponent_f32(dotV,S->degree);
 406:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 407:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accum = vmulq_f32(vec1,dotV);
 408:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accum2 = vpadd_f32(vget_low_f32(accum),vget_high_f32(accum));
 409:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         sum += vget_lane_f32(accum2, 0) + vget_lane_f32(accum2, 1);
 410:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 411:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSupporta += 3*S->vectorDimension;
 412:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSupportb += 3*S->vectorDimension;
 413:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSupportc += 3*S->vectorDimension;
 414:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pSupportd += 3*S->vectorDimension;
 415:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 416:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vectorBlkCnt -- ;
 417:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     }
 418:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 419:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     pSupport = pSupporta;
 420:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     vectorBlkCnt = S->nbOfSupportVectors & 3;
 421:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 422:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     while (vectorBlkCnt > 0U)
 423:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     {
 424:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accum = vdupq_n_f32(0);
 425:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dot = 0.0f;
 426:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         pIn = in;
 427:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 428:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = S->vectorDimension >> 2;
 429:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         while (blkCnt > 0U)
 430:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         {
 431:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         
 432:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vec1 = vld1q_f32(pIn);
 433:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             vec2 = vld1q_f32(pSupport);
 434:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pIn += 4;
 435:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             pSupport += 4;
 436:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 437:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             accum = vmlaq_f32(accum, vec1,vec2);
 438:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 439:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             blkCnt -- ;
 440:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 441:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         accum2 = vpadd_f32(vget_low_f32(accum),vget_high_f32(accum));
 442:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dot = vget_lane_f32(accum2, 0) + vget_lane_f32(accum2, 1);
 443:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 444:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 445:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         blkCnt = S->vectorDimension & 3;
 446:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         while (blkCnt > 0U)
 447:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         {
 448:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             dot = dot + *pIn++ * *pSupport++;
 449:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 450:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             blkCnt -- ;
 451:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 452:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 453:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         sum += *pDualCoefs++ * arm_exponent_f32(S->gamma * dot + S->coef0, S->degree);
 454:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         vectorBlkCnt -- ;
 455:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     }
 456:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 457:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     *pResult=S->classes[STEP(sum)];
 458:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** }
 459:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** #else
 460:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** void arm_svm_polynomial_predict_f32(
 461:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const arm_svm_polynomial_instance_f32 *S,
 462:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t * in,
 463:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     int32_t * pResult)
 464:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** {
  97              	 .loc 2 464 0
  98              	 .cfi_startproc
  99              	 
 100              	 
 101 0000 80B5     	 push {r7,lr}
 102              	.LCFI6:
 103              	 .cfi_def_cfa_offset 8
 104              	 .cfi_offset 7,-8
 105              	 .cfi_offset 14,-4
 106 0002 2DED028B 	 fstmfdd sp!,{d8}
 107              	.LCFI7:
 108              	 .cfi_def_cfa_offset 16
 109              	 .cfi_offset 80,-16
 110              	 .cfi_offset 81,-12
 111 0006 8AB0     	 sub sp,sp,#40
 112              	.LCFI8:
 113              	 .cfi_def_cfa_offset 56
 114 0008 00AF     	 add r7,sp,#0
 115              	.LCFI9:
 116              	 .cfi_def_cfa_register 7
 117 000a F860     	 str r0,[r7,#12]
 118 000c B960     	 str r1,[r7,#8]
 119 000e 7A60     	 str r2,[r7,#4]
 465:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32_t sum=S->intercept;
 120              	 .loc 2 465 0
 121 0010 FB68     	 ldr r3,[r7,#12]
 122 0012 9B68     	 ldr r3,[r3,#8]
 123 0014 7B62     	 str r3,[r7,#36]
 466:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     float32_t dot=0;
 124              	 .loc 2 466 0
 125 0016 4FF00003 	 mov r3,#0
 126 001a 3B62     	 str r3,[r7,#32]
 467:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     uint32_t i,j;
 468:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     const float32_t *pSupport = S->supportVectors;
 127              	 .loc 2 468 0
 128 001c FB68     	 ldr r3,[r7,#12]
 129 001e 1B69     	 ldr r3,[r3,#16]
 130 0020 7B61     	 str r3,[r7,#20]
 469:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 470:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     for(i=0; i < S->nbOfSupportVectors; i++)
 131              	 .loc 2 470 0
 132 0022 0023     	 movs r3,#0
 133 0024 FB61     	 str r3,[r7,#28]
 134 0026 47E0     	 b .L6
 135              	.L9:
 471:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     {
 472:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         dot=0;
 136              	 .loc 2 472 0
 137 0028 4FF00003 	 mov r3,#0
 138 002c 3B62     	 str r3,[r7,#32]
 473:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         for(j=0; j < S->vectorDimension; j++)
 139              	 .loc 2 473 0
 140 002e 0023     	 movs r3,#0
 141 0030 BB61     	 str r3,[r7,#24]
 142 0032 15E0     	 b .L7
 143              	.L8:
 474:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         {
 475:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****             dot = dot + in[j]* *pSupport++;
 144              	 .loc 2 475 0 discriminator 3
 145 0034 BB69     	 ldr r3,[r7,#24]
 146 0036 9B00     	 lsls r3,r3,#2
 147 0038 BA68     	 ldr r2,[r7,#8]
 148 003a 1344     	 add r3,r3,r2
 149 003c 93ED007A 	 flds s14,[r3]
 150 0040 7B69     	 ldr r3,[r7,#20]
 151 0042 1A1D     	 adds r2,r3,#4
 152 0044 7A61     	 str r2,[r7,#20]
 153 0046 D3ED007A 	 flds s15,[r3]
 154 004a 67EE277A 	 fmuls s15,s14,s15
 155 004e 97ED087A 	 flds s14,[r7,#32]
 156 0052 77EE277A 	 fadds s15,s14,s15
 157 0056 C7ED087A 	 fsts s15,[r7,#32]
 473:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         for(j=0; j < S->vectorDimension; j++)
 158              	 .loc 2 473 0 discriminator 3
 159 005a BB69     	 ldr r3,[r7,#24]
 160 005c 0133     	 adds r3,r3,#1
 161 005e BB61     	 str r3,[r7,#24]
 162              	.L7:
 473:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         for(j=0; j < S->vectorDimension; j++)
 163              	 .loc 2 473 0 is_stmt 0 discriminator 1
 164 0060 FB68     	 ldr r3,[r7,#12]
 165 0062 5A68     	 ldr r2,[r3,#4]
 166 0064 BB69     	 ldr r3,[r7,#24]
 167 0066 9A42     	 cmp r2,r3
 168 0068 E4D8     	 bhi .L8
 476:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         }
 477:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****         sum += S->dualCoefficients[i] * arm_exponent_f32(S->gamma * dot + S->coef0, S->degree);
 169              	 .loc 2 477 0 is_stmt 1 discriminator 2
 170 006a FB68     	 ldr r3,[r7,#12]
 171 006c DA68     	 ldr r2,[r3,#12]
 172 006e FB69     	 ldr r3,[r7,#28]
 173 0070 9B00     	 lsls r3,r3,#2
 174 0072 1344     	 add r3,r3,r2
 175 0074 93ED008A 	 flds s16,[r3]
 176 0078 FB68     	 ldr r3,[r7,#12]
 177 007a 93ED087A 	 flds s14,[r3,#32]
 178 007e D7ED087A 	 flds s15,[r7,#32]
 179 0082 27EE277A 	 fmuls s14,s14,s15
 180 0086 FB68     	 ldr r3,[r7,#12]
 181 0088 D3ED077A 	 flds s15,[r3,#28]
 182 008c 77EE277A 	 fadds s15,s14,s15
 183 0090 FB68     	 ldr r3,[r7,#12]
 184 0092 9B69     	 ldr r3,[r3,#24]
 185 0094 B0EE670A 	 fcpys s0,s15
 186 0098 1846     	 mov r0,r3
 187 009a FFF7FEFF 	 bl arm_exponent_f32
 188 009e F0EE407A 	 fcpys s15,s0
 189 00a2 68EE277A 	 fmuls s15,s16,s15
 190 00a6 97ED097A 	 flds s14,[r7,#36]
 191 00aa 77EE277A 	 fadds s15,s14,s15
 192 00ae C7ED097A 	 fsts s15,[r7,#36]
 470:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     {
 193              	 .loc 2 470 0 discriminator 2
 194 00b2 FB69     	 ldr r3,[r7,#28]
 195 00b4 0133     	 adds r3,r3,#1
 196 00b6 FB61     	 str r3,[r7,#28]
 197              	.L6:
 470:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     {
 198              	 .loc 2 470 0 is_stmt 0 discriminator 1
 199 00b8 FB68     	 ldr r3,[r7,#12]
 200 00ba 1A68     	 ldr r2,[r3]
 201 00bc FB69     	 ldr r3,[r7,#28]
 202 00be 9A42     	 cmp r2,r3
 203 00c0 B2D8     	 bhi .L9
 478:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     }
 479:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** 
 480:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c ****     *pResult=S->classes[STEP(sum)];
 204              	 .loc 2 480 0 is_stmt 1
 205 00c2 FB68     	 ldr r3,[r7,#12]
 206 00c4 5A69     	 ldr r2,[r3,#20]
 207 00c6 D7ED097A 	 flds s15,[r7,#36]
 208 00ca F5EEC07A 	 fcmpezs s15
 209 00ce F1EE10FA 	 fmstat
 210 00d2 94BF     	 ite ls
 211 00d4 0123     	 movls r3,#1
 212 00d6 0023     	 movhi r3,#0
 213 00d8 DBB2     	 uxtb r3,r3
 214 00da 83F00103 	 eor r3,r3,#1
 215 00de DBB2     	 uxtb r3,r3
 216 00e0 9B00     	 lsls r3,r3,#2
 217 00e2 1344     	 add r3,r3,r2
 218 00e4 1A68     	 ldr r2,[r3]
 219 00e6 7B68     	 ldr r3,[r7,#4]
 220 00e8 1A60     	 str r2,[r3]
 481:../Dave/Generated/CMSIS_DSP/Source/SVMFunctions/arm_svm_polynomial_predict_f32.c **** }
 221              	 .loc 2 481 0
 222 00ea 2837     	 adds r7,r7,#40
 223              	.LCFI10:
 224              	 .cfi_def_cfa_offset 16
 225 00ec BD46     	 mov sp,r7
 226              	.LCFI11:
 227              	 .cfi_def_cfa_register 13
 228              	 
 229 00ee BDEC028B 	 fldmfdd sp!,{d8}
 230              	.LCFI12:
 231              	 .cfi_restore 80
 232              	 .cfi_restore 81
 233              	 .cfi_def_cfa_offset 8
 234 00f2 80BD     	 pop {r7,pc}
 235              	 .cfi_endproc
 236              	.LFE149:
 238              	 .text
 239              	.Letext0:
 240              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 241              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 242              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_svm_polynomial_predict_f32.c
    {standard input}:20     .text.arm_exponent_f32:00000000 $t
    {standard input}:24     .text.arm_exponent_f32:00000000 arm_exponent_f32
    {standard input}:89     .text.arm_svm_polynomial_predict_f32:00000000 $t
    {standard input}:94     .text.arm_svm_polynomial_predict_f32:00000000 arm_svm_polynomial_predict_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
