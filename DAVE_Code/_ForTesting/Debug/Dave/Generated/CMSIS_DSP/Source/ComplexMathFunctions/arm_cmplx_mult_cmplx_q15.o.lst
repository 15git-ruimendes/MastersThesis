   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_mult_cmplx_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_mult_cmplx_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_mult_cmplx_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_mult_cmplx_q15:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c"
   1:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Title:        arm_cmplx_mult_cmplx_q15.c
   4:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Description:  Q15 complex-by-complex multiplication
   5:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @addtogroup CmplxByCmplxMult
  37:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @brief         Q15 complex-by-complex multiplication.
  42:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @param[in]     pSrcA       points to first input vector
  43:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @param[in]     pSrcB       points to second input vector
  44:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @param[out]    pDst        points to output vector
  45:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @param[in]     numSamples  number of samples in each vector
  46:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @return        none
  47:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  48:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   @par           Scaling and Overflow Behavior
  49:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****                    The function implements 1.15 by 1.15 multiplications and finally output is conve
  50:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  51:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  52:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #if defined(ARM_MATH_MVEI)
  53:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  54:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** void arm_cmplx_mult_cmplx_q15(
  55:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   const q15_t * pSrcA,
  56:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   const q15_t * pSrcB,
  57:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****         q15_t * pDst,
  58:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****         uint32_t numSamples)
  59:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** {
  60:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   uint32_t blkCnt;           /* loop counters */
  61:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   uint32_t blockSize = numSamples * CMPLX_DIM;  /* loop counters */
  62:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t a, b, c, d;  
  63:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  64:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15x8_t vecA;
  65:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15x8_t vecB;
  66:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15x8_t vecDst;
  67:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  68:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = blockSize >> 3;
  69:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (blkCnt > 0U)
  70:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
  71:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       vecA = vld1q(pSrcA);
  72:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       vecB = vld1q(pSrcB);
  73:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
  74:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       vecDst = vqdmlsdhq_s16(vuninitializedq_s16(), vecA, vecB);
  75:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
  76:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       vecDst = vqdmladhxq_s16(vecDst, vecA, vecB);
  77:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  78:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       vecDst = vshrq(vecDst, 2);
  79:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  80:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       vst1q(pDst, vecDst);
  81:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  82:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       blkCnt --;
  83:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       pSrcA += 8;
  84:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       pSrcB += 8;
  85:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       pDst += 8;
  86:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   };
  87:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  88:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /*
  89:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****    * tail
  90:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****    */
  91:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = (blockSize & 7) >> 1;
  92:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (blkCnt > 0U)
  93:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
  94:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i    ] = A[2 * i] * B[2 * i    ] - A[2 * i + 1] * B[2 * i + 1]. */
  95:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i    ]. */
  96:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  97:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
  98:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
  99:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 100:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 101:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 102:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store result in 3.13 format in destination buffer. */
 103:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17) );
 104:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17) );
 105:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 106:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement loop counter */
 107:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 108:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 109:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** }
 110:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #else
 111:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** void arm_cmplx_mult_cmplx_q15(
 112:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   const q15_t * pSrcA,
 113:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   const q15_t * pSrcB,
 114:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****         q15_t * pDst,
 115:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****         uint32_t numSamples)
 116:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** {
  28              	 .loc 1 116 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 89B0     	 sub sp,sp,#36
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 40
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
 117:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
 118:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****         q15_t a, b, c, d;                              /* Temporary variables */
 119:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 120:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 121:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 122:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 123:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples >> 2U;
 124:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 125:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (blkCnt > 0U)
 126:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 127:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i    ] = A[2 * i] * B[2 * i    ] - A[2 * i + 1] * B[2 * i + 1]. */
 128:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i    ]. */
 129:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 130:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 131:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 132:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 133:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 134:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store result in 3.13 format in destination buffer. */
 135:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17) );
 136:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17) );
 137:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 138:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 139:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 140:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 141:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 142:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17) );
 143:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17) );
 144:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 145:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 146:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 147:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 148:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 149:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17) );
 150:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17) );
 151:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 152:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 153:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 154:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 155:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 156:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17) );
 157:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17) );
 158:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 159:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement loop counter */
 160:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 161:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 162:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Loop unrolling: Compute remaining outputs */
 164:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples % 0x4U;
 165:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 166:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #else
 167:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 168:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Initialize blkCnt with number of samples */
 169:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples;
  47              	 .loc 1 169 0
  48 000e 3B68     	 ldr r3,[r7]
  49 0010 FB61     	 str r3,[r7,#28]
 170:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 171:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 172:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 173:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (blkCnt > 0U)
  50              	 .loc 1 173 0
  51 0012 44E0     	 b .L2
  52              	.L3:
 174:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 175:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i    ] = A[2 * i] * B[2 * i    ] - A[2 * i + 1] * B[2 * i + 1]. */
 176:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i    ]. */
 177:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
  53              	 .loc 1 178 0
  54 0014 FB68     	 ldr r3,[r7,#12]
  55 0016 9A1C     	 adds r2,r3,#2
  56 0018 FA60     	 str r2,[r7,#12]
  57 001a 1B88     	 ldrh r3,[r3]
  58 001c 7B83     	 strh r3,[r7,#26]
 179:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
  59              	 .loc 1 179 0
  60 001e FB68     	 ldr r3,[r7,#12]
  61 0020 9A1C     	 adds r2,r3,#2
  62 0022 FA60     	 str r2,[r7,#12]
  63 0024 1B88     	 ldrh r3,[r3]
  64 0026 3B83     	 strh r3,[r7,#24]
 180:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
  65              	 .loc 1 180 0
  66 0028 BB68     	 ldr r3,[r7,#8]
  67 002a 9A1C     	 adds r2,r3,#2
  68 002c BA60     	 str r2,[r7,#8]
  69 002e 1B88     	 ldrh r3,[r3]
  70 0030 FB82     	 strh r3,[r7,#22]
 181:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
  71              	 .loc 1 181 0
  72 0032 BB68     	 ldr r3,[r7,#8]
  73 0034 9A1C     	 adds r2,r3,#2
  74 0036 BA60     	 str r2,[r7,#8]
  75 0038 1B88     	 ldrh r3,[r3]
  76 003a BB82     	 strh r3,[r7,#20]
 182:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 183:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store result in 3.13 format in destination buffer. */
 184:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17) );
  77              	 .loc 1 184 0
  78 003c 7B68     	 ldr r3,[r7,#4]
  79 003e 9A1C     	 adds r2,r3,#2
  80 0040 7A60     	 str r2,[r7,#4]
  81 0042 B7F91A20 	 ldrsh r2,[r7,#26]
  82 0046 B7F91610 	 ldrsh r1,[r7,#22]
  83 004a 01FB02F2 	 mul r2,r1,r2
  84 004e 5214     	 asrs r2,r2,#17
  85 0050 91B2     	 uxth r1,r2
  86 0052 B7F91820 	 ldrsh r2,[r7,#24]
  87 0056 B7F91400 	 ldrsh r0,[r7,#20]
  88 005a 00FB02F2 	 mul r2,r0,r2
  89 005e 5214     	 asrs r2,r2,#17
  90 0060 92B2     	 uxth r2,r2
  91 0062 8A1A     	 subs r2,r1,r2
  92 0064 92B2     	 uxth r2,r2
  93 0066 92B2     	 uxth r2,r2
  94 0068 1A80     	 strh r2,[r3]
 185:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ = (q15_t) ( (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17) );
  95              	 .loc 1 185 0
  96 006a 7B68     	 ldr r3,[r7,#4]
  97 006c 9A1C     	 adds r2,r3,#2
  98 006e 7A60     	 str r2,[r7,#4]
  99 0070 B7F91A20 	 ldrsh r2,[r7,#26]
 100 0074 B7F91410 	 ldrsh r1,[r7,#20]
 101 0078 01FB02F2 	 mul r2,r1,r2
 102 007c 5214     	 asrs r2,r2,#17
 103 007e 91B2     	 uxth r1,r2
 104 0080 B7F91820 	 ldrsh r2,[r7,#24]
 105 0084 B7F91600 	 ldrsh r0,[r7,#22]
 106 0088 00FB02F2 	 mul r2,r0,r2
 107 008c 5214     	 asrs r2,r2,#17
 108 008e 92B2     	 uxth r2,r2
 109 0090 0A44     	 add r2,r2,r1
 110 0092 92B2     	 uxth r2,r2
 111 0094 92B2     	 uxth r2,r2
 112 0096 1A80     	 strh r2,[r3]
 186:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 187:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement loop counter */
 188:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 113              	 .loc 1 188 0
 114 0098 FB69     	 ldr r3,[r7,#28]
 115 009a 013B     	 subs r3,r3,#1
 116 009c FB61     	 str r3,[r7,#28]
 117              	.L2:
 173:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 118              	 .loc 1 173 0
 119 009e FB69     	 ldr r3,[r7,#28]
 120 00a0 002B     	 cmp r3,#0
 121 00a2 B7D1     	 bne .L3
 189:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 190:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 191:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** }
 122              	 .loc 1 191 0
 123 00a4 2437     	 adds r7,r7,#36
 124              	.LCFI3:
 125              	 .cfi_def_cfa_offset 4
 126 00a6 BD46     	 mov sp,r7
 127              	.LCFI4:
 128              	 .cfi_def_cfa_register 13
 129              	 
 130 00a8 5DF8047B 	 ldr r7,[sp],#4
 131              	.LCFI5:
 132              	 .cfi_restore 7
 133              	 .cfi_def_cfa_offset 0
 134 00ac 7047     	 bx lr
 135              	 .cfi_endproc
 136              	.LFE149:
 138 00ae 00BF     	 .text
 139              	.Letext0:
 140              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 141              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 142              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 143              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_cmplx_q15.c
    {standard input}:20     .text.arm_cmplx_mult_cmplx_q15:00000000 $t
    {standard input}:25     .text.arm_cmplx_mult_cmplx_q15:00000000 arm_cmplx_mult_cmplx_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
