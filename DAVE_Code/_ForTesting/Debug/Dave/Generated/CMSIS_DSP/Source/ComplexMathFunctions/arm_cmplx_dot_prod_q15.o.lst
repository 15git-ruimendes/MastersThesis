   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_dot_prod_q15.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_dot_prod_q15,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_dot_prod_q15
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_dot_prod_q15:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c"
   1:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * Title:        arm_cmplx_dot_prod_q15.c
   4:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * Description:  Processing function for the Q15 Complex Dot product
   5:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @addtogroup cmplx_dot_prod
  37:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @brief         Q15 complex dot product.
  42:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @param[in]     pSrcA       points to the first input vector
  43:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @param[in]     pSrcB       points to the second input vector
  44:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @param[in]     numSamples  number of samples in each vector
  45:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @param[out]    realResult  real part of the result returned here
  46:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @param[out]    imagResult  imaginary part of the result returned her
  47:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @return        none
  48:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  49:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   @par           Scaling and Overflow Behavior
  50:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****                    The function is implemented using an internal 64-bit accumulator.
  51:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****                    The intermediate 1.15 by 1.15 multiplications are performed with full precision 
  52:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****                    These are accumulated in a 64-bit accumulator with 34.30 precision.
  53:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****                    As a final step, the accumulators are converted to 8.24 format.
  54:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****                    The return results <code>realResult</code> and <code>imagResult</code> are in 8.
  55:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  */
  56:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  57:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #if defined(ARM_MATH_MVEI)
  58:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** void arm_cmplx_dot_prod_q15(
  59:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   const q15_t * pSrcA,
  60:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   const q15_t * pSrcB,
  61:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         uint32_t numSamples,
  62:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         q31_t * realResult,
  63:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         q31_t * imagResult)
  64:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** {
  65:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  66:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   uint32_t blockSize = numSamples * CMPLX_DIM;  /* loop counters */
  67:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   uint32_t blkCnt;
  68:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q15_t a0,b0,c0,d0;
  69:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  70:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q63_t accReal = 0LL; q63_t accImag = 0LL;
  71:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q15x8_t vecSrcA, vecSrcB;
  72:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  73:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  74:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  75:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* should give more freedom to generate stall free code */
  76:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   vecSrcA = vld1q(pSrcA);
  77:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   vecSrcB = vld1q(pSrcB);
  78:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   pSrcA += 8;
  79:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   pSrcB += 8;
  80:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  81:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Compute 4 complex samples at a time */
  82:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   blkCnt = blockSize >> 3;
  83:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   while (blkCnt > 0U) 
  84:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
  85:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       q15x8_t vecSrcC, vecSrcD;
  86:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  87:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       accReal = vmlsldavaq(accReal, vecSrcA, vecSrcB);
  88:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       vecSrcC = vld1q(pSrcA);
  89:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       pSrcA += 8;
  90:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  91:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       accImag = vmlaldavaxq(accImag, vecSrcA, vecSrcB);
  92:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       vecSrcD = vld1q(pSrcB);
  93:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       pSrcB += 8;
  94:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  95:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       accReal = vmlsldavaq(accReal, vecSrcC, vecSrcD);
  96:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       vecSrcA = vld1q(pSrcA);
  97:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       pSrcA += 8;
  98:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  99:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       accImag = vmlaldavaxq(accImag, vecSrcC, vecSrcD);
 100:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       vecSrcB = vld1q(pSrcB);
 101:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       pSrcB += 8;
 102:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       /*
 103:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****        * Decrement the blockSize loop counter
 104:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****        */
 105:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       blkCnt--;
 106:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   }
 107:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 108:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Tail */
 109:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   pSrcA -= 8;
 110:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   pSrcB -= 8; 
 111:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 112:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   blkCnt = (blockSize & 7) >> 1;
 113:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   
 114:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   while (blkCnt > 0U)
 115:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
 116:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     a0 = *pSrcA++;
 117:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     b0 = *pSrcA++;
 118:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     c0 = *pSrcB++;
 119:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     d0 = *pSrcB++;
 120:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 121:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     accReal += (q31_t)a0 * c0;
 122:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     accImag += (q31_t)a0 * d0;
 123:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     accReal -= (q31_t)b0 * d0;
 124:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     accImag += (q31_t)b0 * c0;
 125:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 126:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     /* Decrement loop counter */
 127:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     blkCnt--;
 128:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   }
 129:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 130:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Store real and imaginary result in 8.24 format  */
 131:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Convert real data in 34.30 to 8.24 by 6 right shifts */
 132:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   *realResult = (q31_t) (accReal >> 6);
 133:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Convert imaginary data in 34.30 to 8.24 by 6 right shifts */
 134:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   *imagResult = (q31_t) (accImag >> 6);
 135:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** }
 136:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #else
 137:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** void arm_cmplx_dot_prod_q15(
 138:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   const q15_t * pSrcA,
 139:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   const q15_t * pSrcB,
 140:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         uint32_t numSamples,
 141:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         q31_t * realResult,
 142:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         q31_t * imagResult)
 143:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** {
  28              	 .loc 1 143 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 2DE9B003 	 push {r4,r5,r7,r8,r9}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 20
  36              	 .cfi_offset 4,-20
  37              	 .cfi_offset 5,-16
  38              	 .cfi_offset 7,-12
  39              	 .cfi_offset 8,-8
  40              	 .cfi_offset 9,-4
  41 0004 8DB0     	 sub sp,sp,#52
  42              	.LCFI1:
  43              	 .cfi_def_cfa_offset 72
  44 0006 00AF     	 add r7,sp,#0
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 7
  47 0008 F860     	 str r0,[r7,#12]
  48 000a B960     	 str r1,[r7,#8]
  49 000c 7A60     	 str r2,[r7,#4]
  50 000e 3B60     	 str r3,[r7]
 144:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         uint32_t blkCnt;                               /* Loop counter */
 145:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         q63_t real_sum = 0, imag_sum = 0;              /* Temporary result variables */
  51              	 .loc 1 145 0
  52 0010 4FF00002 	 mov r2,#0
  53 0014 4FF00003 	 mov r3,#0
  54 0018 C7E90823 	 strd r2,[r7,#32]
  55 001c 4FF00002 	 mov r2,#0
  56 0020 4FF00003 	 mov r3,#0
  57 0024 C7E90623 	 strd r2,[r7,#24]
 146:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****         q15_t a0,b0,c0,d0;
 147:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 148:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #if defined (ARM_MATH_LOOPUNROLL)
 149:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 150:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   blkCnt = numSamples >> 2U;
 151:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 152:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   while (blkCnt > 0U)
 153:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
 154:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     a0 = *pSrcA++;
 155:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     b0 = *pSrcA++;
 156:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     c0 = *pSrcB++;
 157:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     d0 = *pSrcB++;
 158:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 159:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum += (q31_t)a0 * c0;
 160:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)a0 * d0;
 161:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum -= (q31_t)b0 * d0;
 162:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)b0 * c0;
 163:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 164:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     a0 = *pSrcA++;
 165:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     b0 = *pSrcA++;
 166:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     c0 = *pSrcB++;
 167:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     d0 = *pSrcB++;
 168:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 169:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum += (q31_t)a0 * c0;
 170:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)a0 * d0;
 171:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum -= (q31_t)b0 * d0;
 172:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)b0 * c0;
 173:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 174:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     a0 = *pSrcA++;
 175:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     b0 = *pSrcA++;
 176:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     c0 = *pSrcB++;
 177:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     d0 = *pSrcB++;
 178:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 179:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum += (q31_t)a0 * c0;
 180:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)a0 * d0;
 181:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum -= (q31_t)b0 * d0;
 182:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)b0 * c0;
 183:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 184:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     a0 = *pSrcA++;
 185:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     b0 = *pSrcA++;
 186:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     c0 = *pSrcB++;
 187:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     d0 = *pSrcB++;
 188:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 189:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum += (q31_t)a0 * c0;
 190:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)a0 * d0;
 191:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum -= (q31_t)b0 * d0;
 192:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)b0 * c0;
 193:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 194:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     /* Decrement loop counter */
 195:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     blkCnt--;
 196:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   }
 197:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 198:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Loop unrolling: Compute remaining outputs */
 199:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   blkCnt = numSamples % 0x4U;
 200:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 201:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #else
 202:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 203:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Initialize blkCnt with number of samples */
 204:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   blkCnt = numSamples;
  58              	 .loc 1 204 0
  59 0028 7B68     	 ldr r3,[r7,#4]
  60 002a FB62     	 str r3,[r7,#44]
 205:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 206:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 207:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 208:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   while (blkCnt > 0U)
  61              	 .loc 1 208 0
  62 002c 56E0     	 b .L2
  63              	.L3:
 209:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
 210:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     a0 = *pSrcA++;
  64              	 .loc 1 210 0
  65 002e FB68     	 ldr r3,[r7,#12]
  66 0030 9A1C     	 adds r2,r3,#2
  67 0032 FA60     	 str r2,[r7,#12]
  68 0034 1B88     	 ldrh r3,[r3]
  69 0036 FB82     	 strh r3,[r7,#22]
 211:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     b0 = *pSrcA++;
  70              	 .loc 1 211 0
  71 0038 FB68     	 ldr r3,[r7,#12]
  72 003a 9A1C     	 adds r2,r3,#2
  73 003c FA60     	 str r2,[r7,#12]
  74 003e 1B88     	 ldrh r3,[r3]
  75 0040 BB82     	 strh r3,[r7,#20]
 212:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     c0 = *pSrcB++;
  76              	 .loc 1 212 0
  77 0042 BB68     	 ldr r3,[r7,#8]
  78 0044 9A1C     	 adds r2,r3,#2
  79 0046 BA60     	 str r2,[r7,#8]
  80 0048 1B88     	 ldrh r3,[r3]
  81 004a 7B82     	 strh r3,[r7,#18]
 213:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     d0 = *pSrcB++;
  82              	 .loc 1 213 0
  83 004c BB68     	 ldr r3,[r7,#8]
  84 004e 9A1C     	 adds r2,r3,#2
  85 0050 BA60     	 str r2,[r7,#8]
  86 0052 1B88     	 ldrh r3,[r3]
  87 0054 3B82     	 strh r3,[r7,#16]
 214:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 215:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum += (q31_t)a0 * c0;
  88              	 .loc 1 215 0
  89 0056 B7F91630 	 ldrsh r3,[r7,#22]
  90 005a B7F91220 	 ldrsh r2,[r7,#18]
  91 005e 02FB03F3 	 mul r3,r2,r3
  92 0062 1A46     	 mov r2,r3
  93 0064 4FEAE273 	 asr r3,r2,#31
  94 0068 D7E90801 	 ldrd r0,[r7,#32]
  95 006c 1218     	 adds r2,r2,r0
  96 006e 43EB0103 	 adc r3,r3,r1
  97 0072 C7E90823 	 strd r2,[r7,#32]
 216:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)a0 * d0;
  98              	 .loc 1 216 0
  99 0076 B7F91630 	 ldrsh r3,[r7,#22]
 100 007a B7F91020 	 ldrsh r2,[r7,#16]
 101 007e 02FB03F3 	 mul r3,r2,r3
 102 0082 1A46     	 mov r2,r3
 103 0084 4FEAE273 	 asr r3,r2,#31
 104 0088 D7E90601 	 ldrd r0,[r7,#24]
 105 008c 1218     	 adds r2,r2,r0
 106 008e 43EB0103 	 adc r3,r3,r1
 107 0092 C7E90623 	 strd r2,[r7,#24]
 217:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     real_sum -= (q31_t)b0 * d0;
 108              	 .loc 1 217 0
 109 0096 B7F91430 	 ldrsh r3,[r7,#20]
 110 009a B7F91020 	 ldrsh r2,[r7,#16]
 111 009e 02FB03F3 	 mul r3,r2,r3
 112 00a2 1A46     	 mov r2,r3
 113 00a4 4FEAE273 	 asr r3,r2,#31
 114 00a8 D7E90801 	 ldrd r0,[r7,#32]
 115 00ac 821A     	 subs r2,r0,r2
 116 00ae 61EB0303 	 sbc r3,r1,r3
 117 00b2 C7E90823 	 strd r2,[r7,#32]
 218:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     imag_sum += (q31_t)b0 * c0;
 118              	 .loc 1 218 0
 119 00b6 B7F91430 	 ldrsh r3,[r7,#20]
 120 00ba B7F91220 	 ldrsh r2,[r7,#18]
 121 00be 02FB03F3 	 mul r3,r2,r3
 122 00c2 1A46     	 mov r2,r3
 123 00c4 4FEAE273 	 asr r3,r2,#31
 124 00c8 D7E90601 	 ldrd r0,[r7,#24]
 125 00cc 1218     	 adds r2,r2,r0
 126 00ce 43EB0103 	 adc r3,r3,r1
 127 00d2 C7E90623 	 strd r2,[r7,#24]
 219:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 220:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     /* Decrement loop counter */
 221:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****     blkCnt--;
 128              	 .loc 1 221 0
 129 00d6 FB6A     	 ldr r3,[r7,#44]
 130 00d8 013B     	 subs r3,r3,#1
 131 00da FB62     	 str r3,[r7,#44]
 132              	.L2:
 208:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
 133              	 .loc 1 208 0
 134 00dc FB6A     	 ldr r3,[r7,#44]
 135 00de 002B     	 cmp r3,#0
 136 00e0 A5D1     	 bne .L3
 222:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   }
 223:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 224:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Store real and imaginary result in 8.24 format  */
 225:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Convert real data in 34.30 to 8.24 by 6 right shifts */
 226:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   *realResult = (q31_t) (real_sum >> 6);
 137              	 .loc 1 226 0
 138 00e2 D7E90823 	 ldrd r2,[r7,#32]
 139 00e6 4FEA9218 	 lsr r8,r2,#6
 140 00ea 48EA8368 	 orr r8,r8,r3,lsl#26
 141 00ee 4FEAA319 	 asr r9,r3,#6
 142 00f2 4246     	 mov r2,r8
 143 00f4 3B68     	 ldr r3,[r7]
 144 00f6 1A60     	 str r2,[r3]
 227:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Convert imaginary data in 34.30 to 8.24 by 6 right shifts */
 228:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   *imagResult = (q31_t) (imag_sum >> 6);
 145              	 .loc 1 228 0
 146 00f8 D7E90623 	 ldrd r2,[r7,#24]
 147 00fc 9409     	 lsrs r4,r2,#6
 148 00fe 44EA8364 	 orr r4,r4,r3,lsl#26
 149 0102 9D11     	 asrs r5,r3,#6
 150 0104 2246     	 mov r2,r4
 151 0106 BB6C     	 ldr r3,[r7,#72]
 152 0108 1A60     	 str r2,[r3]
 229:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** }
 153              	 .loc 1 229 0
 154 010a 3437     	 adds r7,r7,#52
 155              	.LCFI3:
 156              	 .cfi_def_cfa_offset 20
 157 010c BD46     	 mov sp,r7
 158              	.LCFI4:
 159              	 .cfi_def_cfa_register 13
 160              	 
 161 010e BDE8B003 	 pop {r4,r5,r7,r8,r9}
 162              	.LCFI5:
 163              	 .cfi_restore 9
 164              	 .cfi_restore 8
 165              	 .cfi_restore 7
 166              	 .cfi_restore 5
 167              	 .cfi_restore 4
 168              	 .cfi_def_cfa_offset 0
 169 0112 7047     	 bx lr
 170              	 .cfi_endproc
 171              	.LFE149:
 173              	 .text
 174              	.Letext0:
 175              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 176              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 177              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 178              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_dot_prod_q15.c
    {standard input}:20     .text.arm_cmplx_dot_prod_q15:00000000 $t
    {standard input}:25     .text.arm_cmplx_dot_prod_q15:00000000 arm_cmplx_dot_prod_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
