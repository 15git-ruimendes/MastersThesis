   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "arm_cmplx_mag_squared_q31.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.arm_cmplx_mag_squared_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_cmplx_mag_squared_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_cmplx_mag_squared_q31:
  26              	.LFB149:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c"
   1:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /* ----------------------------------------------------------------------
   2:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Project:      CMSIS DSP Library
   3:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Title:        arm_cmplx_mag_squared_q31.c
   4:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Description:  Q31 complex magnitude squared
   5:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
   6:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * $Date:        18. March 2019
   7:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * $Revision:    V1.6.0
   8:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
   9:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Target Processor: Cortex-M cores
  10:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * -------------------------------------------------------------------- */
  11:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /*
  12:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  14:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  16:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * not use this file except in compliance with the License.
  18:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * You may obtain a copy of the License at
  19:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  20:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  22:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * See the License for the specific language governing permissions and
  26:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * limitations under the License.
  27:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  */
  28:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  29:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  30:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  31:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /**
  32:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @ingroup groupCmplxMath
  33:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  */
  34:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  35:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /**
  36:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @addtogroup cmplx_mag_squared
  37:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @{
  38:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  */
  39:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  40:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /**
  41:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @brief         Q31 complex magnitude squared.
  42:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @param[in]     pSrc        points to input vector
  43:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @param[out]    pDst        points to output vector
  44:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @param[in]     numSamples  number of samples in each vector
  45:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @return        none
  46:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   @par           Scaling and Overflow Behavior
  48:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****                    The function implements 1.31 by 1.31 multiplications and finally output is conve
  49:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****                    Input down scaling is not required.
  50:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #if defined(ARM_MATH_MVEI)
  53:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  54:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** void arm_cmplx_mag_squared_q31(
  55:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   const q31_t * pSrc,
  56:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         q31_t * pDst,
  57:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         uint32_t numSamples)
  58:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** {
  59:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     int32_t blockSize = numSamples;  /* loop counters */
  60:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     uint32_t  blkCnt;           /* loop counters */
  61:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     q31x4x2_t vecSrc;
  62:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     q31x4_t vReal, vImag;
  63:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     q31x4_t vMagSq;
  64:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     q31_t real, imag;                              /* Temporary input variables */
  65:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     q31_t acc0, acc1;                              /* Accumulators */
  66:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  67:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* Compute 4 complex samples at a time */
  68:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     blkCnt = blockSize >> 2;
  69:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     while (blkCnt > 0U)
  70:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     {
  71:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         vecSrc = vld2q(pSrc);
  72:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         vReal = vmulhq(vecSrc.val[0], vecSrc.val[0]);
  73:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         vImag = vmulhq(vecSrc.val[1], vecSrc.val[1]);
  74:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         vMagSq = vqaddq(vReal, vImag);
  75:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         vMagSq = vshrq(vMagSq, 1);
  76:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  77:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         vst1q(pDst, vMagSq);
  78:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  79:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         pSrc += 8;
  80:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         pDst += 4;
  81:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         /*
  82:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****          * Decrement the blkCnt loop counter
  83:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****          * Advance vector source and destination pointers
  84:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****          */
  85:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         blkCnt --;
  86:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     } 
  87:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  88:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* Tail */
  89:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     blkCnt = blockSize & 3;
  90:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     while (blkCnt > 0U)
  91:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     {
  92:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
  93:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   
  94:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       real = *pSrc++;
  95:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       imag = *pSrc++;
  96:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       acc0 = (q31_t) (((q63_t) real * real) >> 33);
  97:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
  98:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   
  99:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       /* store result in 3.29 format in destination buffer. */
 100:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       *pDst++ = acc0 + acc1;
 101:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   
 102:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       /* Decrement loop counter */
 103:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****       blkCnt--;
 104:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     }
 105:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** }
 106:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 107:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #else
 108:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** void arm_cmplx_mag_squared_q31(
 109:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   const q31_t * pSrc,
 110:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         q31_t * pDst,
 111:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         uint32_t numSamples)
 112:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** {
  28              	 .loc 1 112 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 6,-20
  38              	 .cfi_offset 7,-16
  39              	 .cfi_offset 8,-12
  40              	 .cfi_offset 9,-8
  41              	 .cfi_offset 14,-4
  42 0004 8BB0     	 sub sp,sp,#44
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 72
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 F860     	 str r0,[r7,#12]
  49 000a B960     	 str r1,[r7,#8]
  50 000c 7A60     	 str r2,[r7,#4]
 113:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
 114:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         q31_t real, imag;                              /* Temporary input variables */
 115:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****         q31_t acc0, acc1;                              /* Accumulators */
 116:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 117:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 118:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 119:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 120:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   blkCnt = numSamples >> 2U;
 121:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 122:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   while (blkCnt > 0U)
 123:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   {
 124:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 125:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
 127:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
 128:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 129:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 130:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* store the result in 3.29 format in the destination buffer. */
 131:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 132:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 133:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
 134:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
 135:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 136:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 137:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 138:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 139:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
 140:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
 141:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 142:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 143:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 144:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 145:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
 146:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
 147:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 148:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 149:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 150:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 151:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* Decrement loop counter */
 152:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     blkCnt--;
 153:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   }
 154:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   /* Loop unrolling: Compute remaining outputs */
 156:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   blkCnt = numSamples % 0x4U;
 157:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 158:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #else
 159:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 160:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   /* Initialize blkCnt with number of samples */
 161:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   blkCnt = numSamples;
  51              	 .loc 1 161 0
  52 000e 7B68     	 ldr r3,[r7,#4]
  53 0010 7B62     	 str r3,[r7,#36]
 162:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 163:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 164:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 165:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   while (blkCnt > 0U)
  54              	 .loc 1 165 0
  55 0012 3FE0     	 b .L2
  56              	.L3:
 166:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   {
 167:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 168:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 169:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
  57              	 .loc 1 169 0
  58 0014 FB68     	 ldr r3,[r7,#12]
  59 0016 1A1D     	 adds r2,r3,#4
  60 0018 FA60     	 str r2,[r7,#12]
  61 001a 1B68     	 ldr r3,[r3]
  62 001c 3B62     	 str r3,[r7,#32]
 170:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
  63              	 .loc 1 170 0
  64 001e FB68     	 ldr r3,[r7,#12]
  65 0020 1A1D     	 adds r2,r3,#4
  66 0022 FA60     	 str r2,[r7,#12]
  67 0024 1B68     	 ldr r3,[r3]
  68 0026 FB61     	 str r3,[r7,#28]
 171:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
  69              	 .loc 1 171 0
  70 0028 3B6A     	 ldr r3,[r7,#32]
  71 002a 1846     	 mov r0,r3
  72 002c 4FEAE071 	 asr r1,r0,#31
  73 0030 3B6A     	 ldr r3,[r7,#32]
  74 0032 1A46     	 mov r2,r3
  75 0034 4FEAE273 	 asr r3,r2,#31
  76 0038 02FB01FE 	 mul lr,r2,r1
  77 003c 00FB03F6 	 mul r6,r0,r3
  78 0040 7644     	 add r6,r6,lr
  79 0042 A0FB0223 	 umull r2,r3,r0,r2
  80 0046 F118     	 adds r1,r6,r3
  81 0048 0B46     	 mov r3,r1
  82 004a 5C10     	 asrs r4,r3,#1
  83 004c DD17     	 asrs r5,r3,#31
  84 004e 2346     	 mov r3,r4
  85 0050 BB61     	 str r3,[r7,#24]
 172:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
  86              	 .loc 1 172 0
  87 0052 FB69     	 ldr r3,[r7,#28]
  88 0054 1846     	 mov r0,r3
  89 0056 4FEAE071 	 asr r1,r0,#31
  90 005a FB69     	 ldr r3,[r7,#28]
  91 005c 1A46     	 mov r2,r3
  92 005e 4FEAE273 	 asr r3,r2,#31
  93 0062 02FB01FE 	 mul lr,r2,r1
  94 0066 00FB03F6 	 mul r6,r0,r3
  95 006a 7644     	 add r6,r6,lr
  96 006c A0FB0223 	 umull r2,r3,r0,r2
  97 0070 F118     	 adds r1,r6,r3
  98 0072 0B46     	 mov r3,r1
  99 0074 4FEA6308 	 asr r8,r3,#1
 100 0078 4FEAE379 	 asr r9,r3,#31
 101 007c 4346     	 mov r3,r8
 102 007e 7B61     	 str r3,[r7,#20]
 173:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 174:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* store result in 3.29 format in destination buffer. */
 175:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 103              	 .loc 1 175 0
 104 0080 BB68     	 ldr r3,[r7,#8]
 105 0082 1A1D     	 adds r2,r3,#4
 106 0084 BA60     	 str r2,[r7,#8]
 107 0086 B969     	 ldr r1,[r7,#24]
 108 0088 7A69     	 ldr r2,[r7,#20]
 109 008a 0A44     	 add r2,r2,r1
 110 008c 1A60     	 str r2,[r3]
 176:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 177:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* Decrement loop counter */
 178:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     blkCnt--;
 111              	 .loc 1 178 0
 112 008e 7B6A     	 ldr r3,[r7,#36]
 113 0090 013B     	 subs r3,r3,#1
 114 0092 7B62     	 str r3,[r7,#36]
 115              	.L2:
 165:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   {
 116              	 .loc 1 165 0
 117 0094 7B6A     	 ldr r3,[r7,#36]
 118 0096 002B     	 cmp r3,#0
 119 0098 BCD1     	 bne .L3
 179:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   }
 180:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 181:../Dave/Generated/CMSIS_DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** }
 120              	 .loc 1 181 0
 121 009a 2C37     	 adds r7,r7,#44
 122              	.LCFI3:
 123              	 .cfi_def_cfa_offset 28
 124 009c BD46     	 mov sp,r7
 125              	.LCFI4:
 126              	 .cfi_def_cfa_register 13
 127              	 
 128 009e BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 129              	 .cfi_endproc
 130              	.LFE149:
 132 00a2 00BF     	 .text
 133              	.Letext0:
 134              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 135              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 136              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 137              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mag_squared_q31.c
    {standard input}:20     .text.arm_cmplx_mag_squared_q31:00000000 $t
    {standard input}:25     .text.arm_cmplx_mag_squared_q31:00000000 arm_cmplx_mag_squared_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
