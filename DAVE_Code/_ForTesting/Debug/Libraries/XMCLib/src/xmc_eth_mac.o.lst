   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_eth_mac.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ETH_MAC_Reset,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ETH_MAC_Reset:
  25              	.LFB133:
  26              	 .file 1 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc_eth_mac.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
   2:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
   3:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @file xmc_eth_mac.h
   4:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @date 2019-12-16
   5:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
   6:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @cond
   7:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *****************************************************************************
   8:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  10:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * All rights reserved.
  12:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  13:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  15:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Permission is hereby granted, free of charge, to any person or organization
  16:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * obtaining a copy of the software and accompanying documentation covered by
  17:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * do so, all subject to the following:
  21:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  22:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The copyright notices in the Software and this entire statement, including
  23:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the above license grant, this restriction and the following disclaimer,
  24:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * must be included in all copies of the Software, in whole or in part, and
  25:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * all derivative works of the Software, unless such copies or derivative
  26:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * works are solely in the form of machine-executable object code generated by
  27:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * a source language processor.
  28:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  29:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * DEALINGS IN THE SOFTWARE.
  36:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  37:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * To improve the quality of the software, users are encouraged to share
  38:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * at XMCSupport@infineon.com.
  40:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *****************************************************************************
  41:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  42:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Change History
  43:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * --------------
  44:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  45:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2015-06-20:
  46:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Initial
  47:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  48:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-04-25:
  49:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Change XMC_ETH_MAC_BUF_SIZE to 1524 to allow for Tagged MAC frame format
  50:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  51:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-05-19:
  52:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_GetTxBuffer() and XMC_ETH_MAC_GetRxBuffer()
  53:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_SetTxBufferSize()
  54:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  55:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-06-08:
  56:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_IsRxDescriptorOwnedByDma()
  57:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  58:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-02-25:
  59:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - XMC_ETH_MAC_SetPortControl() fixed compilation warning
  60:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  61:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-02:
  62:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_InitPTPEx()
  63:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_SetPTPTime()
  64:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_UpdateAddend()
  65:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  66:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-11:
  67:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_EnablePTPAlarm() and XMC_ETH_MAC_DisablePTPAlarm
  68:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  69:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-17:
  70:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed ordering of PTP nanoseconds and seconds in XMC_ETH_MAC_DMA_DESC_t
  71:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  72:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-08-07:
  73:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_TIMESTAMP_STATUS_t
  74:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  75:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-09-27:
  76:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_InitEx()
  77:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - XMC_ETH_MAC_SetAddressEx(), XMC_ETH_MAC_GetAddressEx() and XMC_ETH_MAC_SetAddressPerfectFi
  78:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  79:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2018-06-21:
  80:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Changed definition of XMC_ETH_MAC_DMA_DESC_t declaring its fields volatile
  81:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  82:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2018-08-08:
  83:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed XMC_ETH_MAC_SetVLANTag() which now accepts a 32bit tag parameter that allows setting
  84:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  85:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2019-12-16:
  86:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed addr parameter qualifier for XMC_ETH_MAC_SetAddressEx()
  87:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_IsTxDescriptorOwnedByDmaEx()
  88:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_GetCurrentTxDescIndex(), XMC_ETH_MAC_GetCurrentRxDescIndex()
  89:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_GetTxBufferEx(), XMC_ETH_MAC_SetTxBuffer(), XMC_ETH_MAC_SetTxBufferEx()
  90:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_SetRxBuffer(), XMC_ETH_MAC_SetRxBufferEx()
  91:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_SetTxBufferSizeEx()
  92:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  93:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2020-11-12:
  94:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed XMC_ETH_MAC_GetAddress()
  95:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 
  96:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @endcond
  97:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
  98:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  99:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup XMClib XMC Peripheral Library
 101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @{
 102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup ETH_MAC
 106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @brief Ethernet Low level driver for XMC4000 microcontroller family.
 107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The Ethernet MAC (ETH) is a major communication peripheral that supports 10/100
 109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MBit/s data transfer rates in compliance with the IEEE 802.3-2002 standard. The ETH
 110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * may be used to implement internet connected applications using IPv4 and IPv6. The
 111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH also includes support for IEEE1588 time synchronisation to allow implementation
 112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * of Real Time Ethernet protocols.
 113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The XMC_ETH_MAC low level driver provides functions to configure and initialize
 115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the ETH_MAC hardware peripheral.
 116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @{
 117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #ifndef XMC_ETH_MAC_H
 120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_H
 121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * HEADER FILES
 124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_common.h"
 127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (ETH0)
 129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_eth_mac_map.h"
 131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MACROS
 134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_BUF_SIZE           (1524)     /**< ETH MAC buffer size */
 137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_PHY_MAX_RETRIES    (0xffffUL) /**< Maximum retries */
 138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_WAKEUP_REGISTER_LENGTH (8U)       /**< Remote wakeup frame reg length */
 139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * TDES0 Descriptor TX Packet Control/Status
 142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IC   (0x40000000U) /**< Interrupt on competition */
 145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LS   (0x20000000U) /**< Last segment */
 146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FS   (0x10000000U) /**< First segment */
 147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DC   (0x08000000U) /**< Disable CRC */
 148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DP   (0x04000000U) /**< Disable pad */
 149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSE (0x02000000U) /**< Transmit time stamp enable */
 150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CIC  (0x00C00000U) /**< Checksum insertion control */
 151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TER  (0x00200000U) /**< Transmit end of ring */
 152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TCH  (0x00100000U) /**< Second address chained */
 153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSS (0x00020000U) /**< Transmit time stamp status */
 154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IHE  (0x00010000U) /**< IP header error */
 155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ES   (0x00008000U) /**< Error summary */
 156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_JT   (0x00004000U) /**< Jabber timeout */
 157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FF   (0x00002000U) /**< Frame flushed */
 158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IPE  (0x00001000U) /**< IP payload error */
 159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LOC  (0x00000800U) /**< Loss of carrier */
 160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_NC   (0x00000400U) /**< No carrier */
 161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LC   (0x00000200U) /**< Late collision */
 162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_EC   (0x00000100U) /**< Excessive collision */
 163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_VF   (0x00000080U) /**< VLAN frame */
 164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CC   (0x00000078U) /**< Collision count */
 165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ED   (0x00000004U) /**< Excessive deferral */
 166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_UF   (0x00000002U) /**< Underflow error */
 167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DB   (0x00000001U) /**< Deferred bit */
 168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * RDES0 Descriptor RX Packet Status
 171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_AFM  (0x40000000U) /**< Destination address filter fail */
 174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FL   (0x3FFF0000U) /**< Frame length mask */
 175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ES   (0x00008000U) /**< Error summary */
 176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DE   (0x00004000U) /**< Descriptor error */
 177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_SAF  (0x00002000U) /**< Source address filter fail */
 178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LE   (0x00001000U) /**< Length error */
 179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OE   (0x00000800U) /**< Overflow error */
 180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_VLAN (0x00000400U) /**< VLAN tag */
 181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FS   (0x00000200U) /**< First descriptor */
 182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LS   (0x00000100U) /**< Last descriptor */
 183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_TSA  (0x00000080U) /**< Timestamp available */
 184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LC   (0x00000040U) /**< Late collision */
 185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FT   (0x00000020U) /**< Frame type */
 186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RWT  (0x00000010U) /**< Receive watchdog timeout */
 187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RE   (0x00000008U) /**< Receive error */
 188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DBE  (0x00000004U) /**< Dribble bit error */
 189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_CE   (0x00000002U) /**< CRC error */
 190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ESA  (0x00000001U) /**< Extended Status/Rx MAC address */
 191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ENUMS
 194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Ethernet MAC status return values
 198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_STATUS
 200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_OK    = 0U, /**< Driver accepted application request */
 202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_STATUS_t;
 205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Transmission frame
 208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TX_FRAME
 210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_FRAGMENT  = 0x1U, /**< Indicate frame fragment */
 212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_EVENT     = 0x2U, /**< Generate event when frame is transmitted */
 213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_TIMESTAMP = 0x4U  /**< Capture frame time stamp */
 214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TX_FRAME_t;
 215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC event
 218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_EVENT
 220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_PMT = ETH_INTERRUPT_MASK_PMTIM_Msk << 16,        /**< Power management event */
 222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TIMESTAMP = ETH_INTERRUPT_MASK_TSIM_Msk << 16,   /**< Time stamp event */
 223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_RECEIVE = ETH_STATUS_ERI_Msk,              /**< Early receive */
 224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_BUS_ERROR = ETH_STATUS_FBI_Msk,                  /**< Bus error */
 225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_TRANSMIT = ETH_STATUS_ETI_Msk,             /**< Early transmit */
 226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT = ETH_STATUS_RWT_Msk,   /**< Receive watchdog time-out
 227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED = ETH_STATUS_RPS_Msk,    /**< Receive process stopped *
 228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE = ETH_STATUS_RU_Msk,  /**< Receive buffer unavailabl
 229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE = ETH_STATUS_RI_Msk,                     /**< Receive event */
 230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW = ETH_STATUS_UNF_Msk,         /**< Transmit underflow */
 231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW = ETH_STATUS_OVF_Msk,           /**< Receive overflow */
 232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT = ETH_STATUS_TJT_Msk,    /**< Transmit jabber time-out 
 233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE = ETH_STATUS_TU_Msk, /**< Transmit buffer unavailab
 234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED = ETH_STATUS_TPS_Msk,   /**< Transmit process stopped 
 235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT = ETH_STATUS_TI_Msk                     /**< Transmit event */
 236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_EVENT_t;
 237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Link interface
 240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_INTERFACE
 242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_MII, /**< Link interface: Media independent interface */
 244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_RMII /**< Link interface: Reduced media independent interface */
 245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_INTERFACE_t;
 246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH link status
 249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_STATUS
 251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_DOWN, /**< Link status down */
 253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_UP    /**< Link status up */
 254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_STATUS_t;
 255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH link speed
 258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_SPEED
 260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_10M  = 0UL << ETH_MAC_CONFIGURATION_FES_Pos, /**< Link speed: 10M */
 262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_100M = 1UL << ETH_MAC_CONFIGURATION_FES_Pos  /**< Link speed: 100M */
 263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_SPEED_t;
 264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH duplex settings (full/half?)
 267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_DUPLEX
 269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_HALF = 0UL << ETH_MAC_CONFIGURATION_DM_Pos, /**< Half duplex */
 271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_FULL = 1UL << ETH_MAC_CONFIGURATION_DM_Pos  /**< Full duplex */
 272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_DUPLEX_t;
 273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MAC address filter
 276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_ADDR_FILTER
 278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE0 = 0x01000000UL, /**< Address filter mask: byte 0 */
 280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE1 = 0x02000000UL, /**< Address filter mask: byte 1 */
 281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE2 = 0x04000000UL, /**< Address filter mask: byte 2 */
 282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE3 = 0x08000000UL, /**< Address filter mask: byte 3 */
 283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE4 = 0x10000000UL, /**< Address filter mask: byte 4 */
 284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE5 = 0x20000000UL, /**< Address filter mask: byte 5 */
 285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_SA         = 0x40000000UL  /**< Address filter SA */
 286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_ADDR_FILTER_t;
 287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Power management events that triggers a PMT interrupt
 290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_PMT_EVENT
 292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_WAKEUP_FRAME         = ETH_PMT_CONTROL_STATUS_RWKPKTEN_Msk,  /**< Wakeup
 294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_MAGIC_PACKET         = ETH_PMT_CONTROL_STATUS_MGKPKTEN_Msk,  /**< Magic 
 295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_UNICAST_FRAME_FILTER = ETH_PMT_CONTROL_STATUS_GLBLUCAST_Msk  /**< Unicas
 296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PMT_EVENT_t;
 297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp configuration enable
 301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_CONFIG
 303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE = ETH_TIMESTAMP_CONTROL_TSCFUPDT_Msk,             /**< F
 305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_TS_INTERRUPT = ETH_TIMESTAMP_CONTROL_TSTRIG_Msk,       /**< T
 306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_ALL_FRAMES = ETH_TIMESTAMP_CONTROL_TSENALL_Msk,        /**< E
 307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTPV2 = ETH_TIMESTAMP_CONTROL_TSVER2ENA_Msk,           /**< P
 308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_ETHERNET = ETH_TIMESTAMP_CONTROL_TSIPENA_Msk, /**< P
 309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV6 = ETH_TIMESTAMP_CONTROL_TSIPV6ENA_Msk,   /**< P
 310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV4 = ETH_TIMESTAMP_CONTROL_TSIPV4ENA_Msk,   /**< P
 311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_MAC_ADDRESS_FILTER = ETH_TIMESTAMP_CONTROL_TSENMACADDR_Msk /*
 312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_CONFIG_t;
 313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp status
 316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_STATUS
 318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_SECONDS_OVERFLOW = ETH_TIMESTAMP_STATUS_TSSOVF_Msk,           /**< I
 320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIME_REACHED = ETH_TIMESTAMP_STATUS_TSTARGT_Msk,       /**< I
 321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIMER_ERROR = ETH_TIMESTAMP_STATUS_TSTRGTERR_Msk,      /**< S
 322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_STATUS_t;
 323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 324:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 325:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 326:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * DATA STRUCTURES
 327:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 328:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 329:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard start */
 330:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 331:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma push
 332:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma anon_unions
 333:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 334:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma warning 586
 335:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 336:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 337:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 338:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC port control
 339:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 340:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef union XMC_ETH_MAC_PORT_CTRL
 341:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 342:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   struct
 343:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   {
 344:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ETH_MAC_PORT_CTRL_RXD0_t) */
 345:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ETH_MAC_PORT_CTRL_RXD1_t) */
 346:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd2: 2;     /**< Receive data bit 2 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD2_t) */
 347:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd3: 2;     /**< Receive data bit 3 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD3_t) */
 348:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_rmii: 2; /**< RMII: Continuous 50 MHz reference clock.
 349:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                MII: Receive clock, 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/s
 350:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                (::XMC_ETH_MAC_PORT_CTRL_CLK_RMII_t) */
 351:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs_dv: 2;   /**< RMII: carrier sense/RX_Data valid. MII: RX_Data valid (::XMC_ETH_MAC
 352:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs: 2;      /**< Carrier sense for only MII (::XMC_ETH_MAC_PORT_CTRL_CRS_t) */
 353:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxer: 2;     /**< Receive error (::XMC_ETH_MAC_PORT_CTRL_RXER_t) */
 354:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t col: 2;      /**< Collision Detect for only MII (::XMC_ETH_MAC_PORT_CTRL_COL_t) */
 355:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_tx: 2;   /**< Transmit clock (only MII), 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/
 356:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 357:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mdio: 2;     /**< Bidirectional, push-pull management data I/O line (::XMC_ETH_MAC_POR
 358:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 359:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mode: 1;     /**< RMII or MII (::XMC_ETH_MAC_PORT_CTRL_MODE_t) */
 360:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   };
 361:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 362:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t raw;
 363:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PORT_CTRL_t;
 364:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 365:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 366:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC DMA descriptor
 367:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 368:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_DMA_DESC
 369:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 370:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t status;                 /**< DMA descriptor status */
 371:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t length;                 /**< Descriptor length */
 372:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t buffer1;                /**< Buffer 1 */
 373:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t buffer2;                /**< Buffer 2 */
 374:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t extended_status;        /**< Extended status */
 375:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t reserved;               /**< Reserved */
 376:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t time_stamp_nanoseconds; /**< Time stamp low */
 377:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t time_stamp_seconds;     /**< Time stamp high */
 378:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_DMA_DESC_t;
 379:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 380:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 381:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time
 382:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 383:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_TIME
 384:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 385:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t seconds;                 /**< Seconds */
 386:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   int32_t nanoseconds;              /**< Nanoseconds */
 387:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIME_t;
 388:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 389:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 390:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH driver structure
 391:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 392:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC
 393:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 394:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   ETH_GLOBAL_TypeDef *regs;        /**< ETH module 0 (now, we have a single ETH module) */
 395:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint64_t address;              /**< MAC address */
 396:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc; /**< DMA descriptor: RX */
 397:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc; /**< DMA descriptor: TX */
 398:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *rx_buf;                /**< RX buffer */
 399:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *tx_buf;                /**< TX buffer */
 400:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *frame_end;              /**< End of assembled frame fragments */
 401:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_rx_buf;              /**< How many RX descriptors? */
 402:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_tx_buf;              /**< How many TX descriptors? */
 403:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_index;                /**< Transmit descriptor index */
 404:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t rx_index;                /**< Receive descriptor index */
 405:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_ts_index;             /**< Transmit time-stamp descriptor index */
 406:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_t;
 407:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 408:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard end */
 409:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 410:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma pop
 411:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 412:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma warning restore
 413:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 414:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 415:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 416:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * API PROTOTYPES
 417:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 418:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 419:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #ifdef __cplusplus
 420:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** extern "C" {
 421:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 422:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 423:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 424:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 425:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t Initialization status
 426:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 427:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 428:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral <br>
 429:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 430:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 431:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 432:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 433:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 434:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac);
 435:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 436:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 437:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 438:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 439:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 440:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 441:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral. <br>
 442:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Required when initializing the PHY, to deliver the clocks to the MAC, before MAC is reseted.
 443:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \note The module needs to be enabled before using XMC_ETH_MAC_Enable() <br>
 444:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 445:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 446:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 447:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 448:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 449:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitEx(XMC_ETH_MAC_t *const eth_mac);
 450:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 451:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 452:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 453:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 454:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 455:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 456:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the RX DMA descriptors <br>
 457:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 458:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 459:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the RX descriptors in a chained configuration. It sets
 460:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 461:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 462:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 463:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 464:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 465:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 466:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 467:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 468:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 469:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the TX DMA descriptors <br>
 470:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 471:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 472:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the TX descriptors in a chained configuration. It sets
 473:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 474:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 475:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 476:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 477:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 478:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 479:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 480:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 481:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 482:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable the Ethernet MAC peripheral <br>
 483:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 484:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 485:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function de-asserts the peripheral reset.
 486:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 487:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac);
 488:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 489:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 490:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 491:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 492:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 493:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 494:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable the Ethernet MAC peripheral <br>
 495:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 496:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 497:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function asserts the peripheral reset.
 498:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 499:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac);
 500:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 501:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 502:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 503:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 504:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 505:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 506:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Reset the ETH MAC peripheral <br>
 507:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 508:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 509:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the ETH MAC peripheral. It blocks until reset.
 510:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 511:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_Reset(XMC_ETH_MAC_t *const eth_mac)
 512:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
  27              	 .loc 1 512 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 513:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->BUS_MODE |= (uint32_t)ETH_BUS_MODE_SWR_Msk;
  43              	 .loc 1 513 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1B68     	 ldr r3,[r3]
  46 000c 7A68     	 ldr r2,[r7,#4]
  47 000e 1268     	 ldr r2,[r2]
  48 0010 02F58052 	 add r2,r2,#4096
  49 0014 1268     	 ldr r2,[r2]
  50 0016 42F00102 	 orr r2,r2,#1
  51 001a 03F58053 	 add r3,r3,#4096
  52 001e 1A60     	 str r2,[r3]
 514:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   while ((eth_mac->regs->BUS_MODE & (uint32_t)ETH_BUS_MODE_SWR_Msk) != 0U)
  53              	 .loc 1 514 0
  54 0020 00BF     	 nop
  55              	.L2:
  56              	 .loc 1 514 0 is_stmt 0 discriminator 1
  57 0022 7B68     	 ldr r3,[r7,#4]
  58 0024 1B68     	 ldr r3,[r3]
  59 0026 03F58053 	 add r3,r3,#4096
  60 002a 1B68     	 ldr r3,[r3]
  61 002c 03F00103 	 and r3,r3,#1
  62 0030 002B     	 cmp r3,#0
  63 0032 F6D1     	 bne .L2
 515:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   {
 516:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   }
 517:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
  64              	 .loc 1 517 0 is_stmt 1
  65 0034 0C37     	 adds r7,r7,#12
  66              	.LCFI3:
  67              	 .cfi_def_cfa_offset 4
  68 0036 BD46     	 mov sp,r7
  69              	.LCFI4:
  70              	 .cfi_def_cfa_register 13
  71              	 
  72 0038 5DF8047B 	 ldr r7,[sp],#4
  73              	.LCFI5:
  74              	 .cfi_restore 7
  75              	 .cfi_def_cfa_offset 0
  76 003c 7047     	 bx lr
  77              	 .cfi_endproc
  78              	.LFE133:
  80 003e 00BF     	 .section .text.XMC_ETH_MAC_SetAddress,"ax",%progbits
  81              	 .align 2
  82              	 .thumb
  83              	 .thumb_func
  85              	XMC_ETH_MAC_SetAddress:
  86              	.LFB135:
 518:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 519:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 520:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 521:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 522:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 523:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param data The destination to which the read data needs to be copied to
 524:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 525:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 526:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 527:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Read a PHY register <br>
 528:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 529:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 530:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 531:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 532:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 533:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t re
 534:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 535:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 536:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 537:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 538:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 539:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param data The data to write
 540:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 541:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 542:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 543:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Write a PHY register <br>
 544:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 545:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 546:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially writes the data and polls
 547:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the busy bit until it is no longer busy.
 548:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 549:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t r
 550:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 551:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 552:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 553:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param port_ctrl Port control configuration
 554:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 555:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 556:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 557:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set port control configuration <br>
 558:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 559:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 560:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the port control by writing the configuration into the
 561:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * CON register.
 562:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 563:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \note
 564:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MII Mode is only available in:
 565:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4500 LQFP144 and BGA144 packages
 566:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4700 LQFP144 and BGA196 packages
 567:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4800 LQFP144 and BGA196 packages
 568:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 569:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 570:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetPortControl(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_POR
 571:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 572:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_UNUSED_ARG(eth_mac);
 573:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   ETH0_CON->CON = (uint32_t)port_ctrl.raw;
 574:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 575:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 576:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 577:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 578:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 579:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 580:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 581:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set management clock divider <br>
 582:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 583:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 584:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the management clock divider by writing to the GMII_ADDRESS
 585:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * register.
 586:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 587:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac);
 588:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 589:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 590:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 591:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addr The MAC address to set
 592:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 593:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 594:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 595:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set MAC address <br>
 596:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 597:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 598:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the MAC address by writing to the MAC_ADDRESS0_HIGH and
 599:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MAC_ADDRESS0_LOW registers.
 600:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 601:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetAddress(XMC_ETH_MAC_t *const eth_mac, uint64_t addr)
 602:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
  87              	 .loc 1 602 0
  88              	 .cfi_startproc
  89              	 
  90              	 
  91              	 
  92 0000 B0B4     	 push {r4,r5,r7}
  93              	.LCFI6:
  94              	 .cfi_def_cfa_offset 12
  95              	 .cfi_offset 4,-12
  96              	 .cfi_offset 5,-8
  97              	 .cfi_offset 7,-4
  98 0002 85B0     	 sub sp,sp,#20
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 32
 101 0004 00AF     	 add r7,sp,#0
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 7
 104 0006 F860     	 str r0,[r7,#12]
 105 0008 C7E90023 	 strd r2,[r7]
 603:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_HIGH = (uint32_t)(addr >> 32);
 106              	 .loc 1 603 0
 107 000c FB68     	 ldr r3,[r7,#12]
 108 000e 1968     	 ldr r1,[r3]
 109 0010 D7E90023 	 ldrd r2,[r7]
 110 0014 1C00     	 movs r4,r3
 111 0016 0025     	 movs r5,#0
 112 0018 2346     	 mov r3,r4
 113 001a 0B64     	 str r3,[r1,#64]
 604:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_LOW = (uint32_t)addr;
 114              	 .loc 1 604 0
 115 001c FB68     	 ldr r3,[r7,#12]
 116 001e 1B68     	 ldr r3,[r3]
 117 0020 3A68     	 ldr r2,[r7]
 118 0022 5A64     	 str r2,[r3,#68]
 605:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 119              	 .loc 1 605 0
 120 0024 1437     	 adds r7,r7,#20
 121              	.LCFI9:
 122              	 .cfi_def_cfa_offset 12
 123 0026 BD46     	 mov sp,r7
 124              	.LCFI10:
 125              	 .cfi_def_cfa_register 13
 126              	 
 127 0028 B0BC     	 pop {r4,r5,r7}
 128              	.LCFI11:
 129              	 .cfi_restore 7
 130              	 .cfi_restore 5
 131              	 .cfi_restore 4
 132              	 .cfi_def_cfa_offset 0
 133 002a 7047     	 bx lr
 134              	 .cfi_endproc
 135              	.LFE135:
 137              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 138              	 .align 2
 139              	 .thumb
 140              	 .thumb_func
 142              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 143              	.LFB217:
 144              	 .file 2 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc4_scu.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @date 2019-02-18
   4:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *****************************************************************************
   7:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.
  11:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  14:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * do so, all subject to the following:
  20:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  21:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * a source language processor.
  27:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  28:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *****************************************************************************
  40:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  41:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Change History
  42:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * --------------
  43:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  44:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  45:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  46:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  47:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  48:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  49:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  50:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  51:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  52:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  53:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  54:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  55:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent,
  56:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  57:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  58:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  59:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  60:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  61:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  62:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks
  63:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  64:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  65:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  66:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  67:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(),
  68:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  69:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  70:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(),
  71:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  72:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  73:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  74:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  75:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  76:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  77:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  79:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  80:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  81:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  82:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  83:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2019-02-18:
  84:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fix conditional definition of XMC_SCU_PARITY_t elements
  85:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
  86:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
  87:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_SetParityWriteValue(uint8_t val)
  88:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_PARITY_GetParityReadValue(void)
  89:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  90:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2020-11-11:
  91:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Change making declaration of functions XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature()
  92:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  93:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @endcond
  94:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  95:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  96:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
  97:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  98:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  99:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
 102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
 105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
 107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
 110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * MACROS
 120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose.
 215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP
 218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */
 222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */
 223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */
 224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */
 225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */
 235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */
 249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENDS2_Msk)
 250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */
 251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU1_Msk)
 254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENU2_Msk)
 257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */
 262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENECAT0_Msk)
 275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ECAT_MEM = SCU_PARITY_PEEN_PEENECAT0_Msk, /**< ECAT0 SRAM parity error trap. */
 276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register.
 299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */
 316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */
 317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */
 318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */
 319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */
 320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */
 321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 324:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 325:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 326:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 327:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 328:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 329:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 330:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 331:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 332:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 333:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */
 334:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 335:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 336:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 337:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 338:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 339:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 340:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 341:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 342:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 343:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 344:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 345:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 346:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 347:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 348:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 349:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 350:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 351:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 352:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 353:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 354:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 355:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 356:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 357:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 358:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 359:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 360:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 361:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 362:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 363:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 364:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 365:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 366:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 367:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 368:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 369:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 370:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)
 371:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 372:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 373:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 374:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 375:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 376:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 377:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 378:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 379:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 380:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 381:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 382:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 383:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 384:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 385:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 386:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 387:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 388:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 389:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 390:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 391:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 392:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 393:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 394:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 395:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 396:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 397:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 398:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 399:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 400:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 401:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 402:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 403:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 404:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 405:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 406:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 407:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 408:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 409:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 410:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 411:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 412:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 413:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 414:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 415:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 416:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 417:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 418:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 419:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 420:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 421:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 422:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 423:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 424:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 425:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 426:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 427:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 428:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating.
 429:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 430:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 431:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 432:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 433:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 434:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 435:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 436:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 437:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 438:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 439:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 440:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 441:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 442:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 443:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 444:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 445:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 446:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 447:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 448:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 449:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 450:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 451:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 452:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 453:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 454:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 455:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 456:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 457:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 458:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 459:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 460:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 461:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 462:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 463:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 464:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 465:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 466:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 467:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 468:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 469:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 470:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 471:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 472:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)
 473:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 474:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 475:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 476:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 477:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 478:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 479:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 480:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 481:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 482:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 483:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 484:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 485:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 486:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 487:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 488:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 489:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 490:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 491:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 492:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 493:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 494:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 495:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 496:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 497:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 498:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 499:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 500:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 501:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 502:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 503:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 504:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 505:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 506:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 507:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 508:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 509:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 510:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register.
 511:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 512:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 513:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 514:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 515:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 516:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 517:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 518:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 519:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 520:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 521:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 522:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 523:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register.
 524:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 525:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 526:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 527:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 528:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 529:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 530:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 531:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 532:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 533:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 534:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 535:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 536:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 537:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock.
 538:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 539:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 540:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 541:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 542:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 543:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 544:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 545:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 546:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 547:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 548:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 549:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 550:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 551:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 552:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 553:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 554:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 555:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 556:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 557:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 558:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 559:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 560:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 561:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock.
 562:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 563:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 564:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 565:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 566:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock
 567:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 568:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock
 569:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 570:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 571:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 572:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 573:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 574:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 575:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 576:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 577:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 578:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 579:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 580:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 581:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 582:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 583:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 584:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 585:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 586:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 587:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 588:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 589:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 590:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 591:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 592:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 593:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 594:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 595:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 596:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 597:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 598:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 599:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 600:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 601:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 602:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 603:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 604:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 605:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 606:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 607:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 608:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 609:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 610:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 611:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 612:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 613:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock
 614:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 615:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 616:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 617:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 618:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 619:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 620:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 621:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 622:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 623:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 624:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 625:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 626:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 627:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration:
 628:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 629:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 630:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 631:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 632:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 633:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 634:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 635:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 636:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 637:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 638:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE
 639:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 640:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 641:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 642:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 643:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 644:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 645:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 646:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 647:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 648:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 649:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 650:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 651:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 652:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 653:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 654:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 655:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 656:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 657:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 658:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 659:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 660:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 661:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 662:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 663:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 664:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 665:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 666:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 667:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 668:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 669:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 670:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 671:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 672:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 673:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled.
 674:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 675:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 676:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 677:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 678:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  state.
 679:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 680:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 681:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 682:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 683:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 684:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 685:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 686:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 687:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 688:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 689:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 690:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 691:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 692:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 693:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 694:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 695:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 696:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 697:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 698:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 699:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 700:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 701:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 702:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 703:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 704:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 705:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 706:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 707:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 708:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 709:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 710:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 711:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 712:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 713:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 714:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped.
 715:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 716:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 717:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled.
 718:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 719:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 720:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 721:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 722:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 723:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 724:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 725:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 726:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 727:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 728:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 729:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 730:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 731:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 732:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 733:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 734:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 735:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 736:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 737:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 738:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 739:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 740:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 741:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 742:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 743:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 744:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 745:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 746:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 747:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 748:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 749:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 750:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 751:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 752:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 753:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 754:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 755:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 756:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 757:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 758:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 759:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 760:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 761:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 762:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 763:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control
 764:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 765:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 766:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 767:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 768:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 769:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 770:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 771:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 772:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 773:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 774:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 775:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 776:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 777:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 778:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 779:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 780:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 781:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 782:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 783:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 784:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 785:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 786:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 787:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 788:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 789:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 790:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 791:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 792:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 793:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 794:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   */
 795:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 796:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 797:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin.
 798:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 799:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 800:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin.
 801:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 802:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 803:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 804:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 805:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 806:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 807:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 808:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 809:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 810:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 811:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 812:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 813:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 814:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 815:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 816:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 817:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 818:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 819:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 820:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 821:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 822:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 823:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 824:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 825:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 826:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 827:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 828:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 829:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 830:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 831:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 832:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 833:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 834:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 835:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 836:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 837:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 838:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 839:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 840:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 841:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 842:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 843:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 844:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 845:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 846:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 847:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 848:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 849:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 850:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 851:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 852:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 853:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 854:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 855:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 856:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 857:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 858:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 859:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 860:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 861:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 862:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 863:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 864:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 865:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 866:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 867:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 868:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 869:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 870:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 871:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 872:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 873:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 874:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 875:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 876:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 877:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 878:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 879:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 880:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 881:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 882:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 883:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 884:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 885:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 886:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 887:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 888:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 889:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 890:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 891:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 892:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 893:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 894:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 895:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 896:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 897:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 898:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 899:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 900:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 901:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 902:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 903:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 904:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 905:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 906:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 907:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 908:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 909:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 910:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 911:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 912:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 913:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 914:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 915:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 916:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 917:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 918:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 919:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 920:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 921:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 922:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 923:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired
 924:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 925:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 926:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 927:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 928:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 929:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 930:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 931:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 932:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 933:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 934:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 935:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 936:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 937:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 938:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 939:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 940:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 941:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 942:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 943:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 944:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 945:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 946:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 947:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 948:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 949:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 950:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 951:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 952:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 953:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 954:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 955:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 956:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 957:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 958:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 959:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 960:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 961:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 962:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 963:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 964:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 965:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 966:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 967:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 968:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 969:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 970:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 971:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** extern "C" {
 972:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 973:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 974:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 975:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 976:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 977:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 978:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 979:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 980:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 981:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 982:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 983:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 984:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 985:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 986:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 987:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 988:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 989:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 990:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 991:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 992:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
 993:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 994:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 995:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 996:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 997:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 998:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 999:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1000:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1001:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1002:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1003:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
1004:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
1005:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1006:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
1007:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1008:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
1009:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1010:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1011:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1012:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1013:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1014:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
1015:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
1016:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1017:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1018:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1019:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1020:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1021:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1022:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1023:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1024:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1025:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1026:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1027:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1028:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1030:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1031:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1032:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1033:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1034:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1035:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1036:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1037:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1038:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1039:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1041:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1042:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1044:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1045:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1046:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1047:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1048:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1049:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1050:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1051:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1052:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1053:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1054:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1055:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1056:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1057:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1058:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1059:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1060:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1061:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1062:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result.
1063:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1064:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1065:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1066:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1067:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1068:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1069:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1070:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1071:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1072:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1073:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1074:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1075:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1076:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1077:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1078:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1079:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1080:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1081:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1082:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n
1083:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1084:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1085:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1086:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1087:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1088:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1089:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1090:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1091:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1092:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1093:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1094:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1095:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1096:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1097:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1098:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1099:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC41) || (UC_SERIES == XMC42) || (UC_SERIES == XMC44))
1148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in
1157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note Only available in XMC44, XMC42 and XMC41 series
1202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain.
1289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface.
1291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain.
1311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface.
1313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple
1323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1324:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1325:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1326:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1327:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1328:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1329:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the
1330:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1331:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1332:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1333:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1334:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1335:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1336:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1337:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1338:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1339:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple
1340:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1341:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1342:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1343:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1344:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1345:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1346:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1347:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1348:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1349:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1350:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1351:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1352:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1353:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1354:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1355:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1356:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1357:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1358:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1359:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1360:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1361:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the
1362:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1363:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1364:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1365:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1366:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1367:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1368:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1369:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1370:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1371:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1372:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1373:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1374:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1375:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1376:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1377:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit
1378:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1379:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1380:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1381:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1382:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1383:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1384:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1385:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1386:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1387:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1388:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1389:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1390:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1391:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1392:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1393:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced.
1394:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time.
1395:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1396:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1397:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1398:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1399:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1400:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1401:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1402:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1403:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1404:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1405:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1406:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1407:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1408:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1409:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1410:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1411:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1412:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1413:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1414:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1415:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1416:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1417:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);
1418:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1419:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1420:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1421:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1422:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1423:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1424:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1425:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1426:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1427:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1428:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API.
1429:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1430:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1431:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1432:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1433:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1434:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1436:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1437:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1438:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1439:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1440:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1441:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1442:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1444:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1446:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1448:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1449:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1450:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1451:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1452:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1453:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1454:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1455:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1456:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1457:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1458:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1459:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1460:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1461:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1462:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1463:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1464:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1465:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1466:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1467:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1468:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1469:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1470:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1471:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1472:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1473:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1474:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1475:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1476:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1477:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1478:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1479:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1480:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1481:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1482:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1483:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1484:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1485:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1486:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1487:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1488:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1489:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1490:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1491:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1492:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1493:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state.
1494:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1495:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1496:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1497:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1498:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1499:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1500:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1501:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1502:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1503:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1504:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1505:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1506:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1507:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1508:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1509:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1510:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to
1511:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1512:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the
1513:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors
1514:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1515:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1516:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1517:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1518:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1519:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1520:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1521:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1522:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1523:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1524:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1525:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1526:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1527:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1528:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1529:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1530:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1531:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1532:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1533:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1534:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1535:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1536:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1537:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1538:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1539:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1540:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1541:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1542:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1543:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1544:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1545:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1546:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1547:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1548:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1549:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1550:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1551:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1552:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1553:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1554:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1555:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1556:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1557:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1558:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1559:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1560:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1561:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1562:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1563:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1564:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1565:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1566:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1567:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1568:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1569:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1570:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1571:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1572:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1573:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1574:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1575:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1576:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1577:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1578:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1579:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1580:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1581:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1582:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1583:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1584:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1585:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1586:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1587:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1588:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1589:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1590:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1591:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1592:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1593:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1594:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1595:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1596:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1597:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1598:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1599:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the
1600:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1601:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1602:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1603:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1604:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1605:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);
1606:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1607:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1608:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1609:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity logic should be overriden.\n
1610:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple
1611:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1612:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1613:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1614:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1615:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1616:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable access to parity bits of SRAM modules for various types of peripherals.
1617:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enable direct write to parity bits using value selected using XMC_SCU_PARITY_SetParityWriteValue
1618:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1619:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_SetParityWriteValue() \n\n\n
1620:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1621:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1622:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_OverrideParityBitLogic(uint32_t memory)
1623:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1624:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->MCHKCON = memory;
1625:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1626:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1627:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1628:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity test has to be enabled.\n
1629:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type.
1630:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Only a single memory type should be specified.
1631:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1632:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1633:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1634:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1635:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects parity test output from a memory instance that can be inspected using XMC_SCU_PARITY_Get
1636:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetParityReadValue() \n\n\n
1638:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1639:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1640:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SelectMemoryTest(const XMC_SCU_PARITY_t memory)
1641:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1642:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTSR = memory;
1643:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1644:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1645:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1646:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param write_value parity bits value stored with next write access\n
1647:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1648:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1650:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits corresponding to the next write access are sele
1652:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1653:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1654:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1655:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1656:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1657:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_PARITY_SetParityWriteValue(uint8_t write_value)
1658:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1659:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_PARITY->PMTPR = ((write_value << SCU_PARITY_PMTPR_PWR_Pos) & SCU_PARITY_PMTPR_PWR_Msk);
1660:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1661:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1662:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1663:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return parity bits generated during last read access
1664:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1665:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1666:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * For each byte of a memory module the parity bits generated during the most recent read access ca
1667:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1668:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1669:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_OverrideParityBitLogic() \n\n\n
1670:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1671:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1672:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint8_t XMC_SCU_PARITY_GetParityReadValue(void)
1673:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1674:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return ((SCU_PARITY->PMTPR & SCU_PARITY_PMTPR_PRD_Msk) >> SCU_PARITY_PMTPR_PRD_Pos);
1675:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1676:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1677:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1678:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1679:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1680:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1681:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1682:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1683:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1684:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1685:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1686:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1687:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1688:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1689:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1690:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1691:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1692:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1693:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1694:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1695:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1696:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1697:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1698:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1699:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1700:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1701:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1702:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1703:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1704:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1705:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1706:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1707:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1708:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1709:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1710:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1711:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1712:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1713:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1714:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1715:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1716:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1717:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1718:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1719:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1720:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1721:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1722:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1723:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1724:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1725:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register.
1726:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1727:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1728:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1729:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1730:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1731:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1732:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1733:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1734:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1735:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1736:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1737:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1738:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1739:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1740:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1741:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1742:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1743:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1744:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1745:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency.
1746:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1747:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1748:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1749:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1750:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1751:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1752:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1753:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1754:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1755:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1756:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1757:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1758:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1759:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1760:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1761:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1762:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1763:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1764:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1765:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1766:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1767:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1768:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1769:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1770:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1771:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1772:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1773:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1774:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1775:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1776:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1777:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1778:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1779:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1780:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1781:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1782:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1783:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1784:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1785:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1786:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1787:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1788:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1789:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1790:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1791:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1792:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1793:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1794:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1795:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1796:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1797:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1798:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1799:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1800:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
1801:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1802:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1803:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1804:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1805:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1806:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1807:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1808:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1809:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1810:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1811:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1812:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1813:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1814:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1815:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1816:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1817:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1818:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1819:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1821:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1822:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1823:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1824:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1825:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1826:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1827:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1828:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1829:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1830:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1831:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1832:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1833:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1834:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on
1835:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1836:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1837:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1838:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1839:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1840:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1841:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
1842:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1843:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1844:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1845:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1846:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1847:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1848:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1849:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1850:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1851:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1852:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1853:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1854:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1855:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1856:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1857:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1858:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1859:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1860:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1861:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1862:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1863:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1864:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1865:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1866:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1867:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1868:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1869:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1870:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1871:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1872:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1873:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1874:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1875:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1876:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1877:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1878:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1879:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1880:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1881:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1882:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1883:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1884:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1885:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1886:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1887:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1888:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1889:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1890:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1891:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1892:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1893:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1894:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1895:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1896:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1897:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1898:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
1899:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1900:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1901:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1902:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1903:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1904:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1905:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1906:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1907:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1908:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1909:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1910:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1911:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1912:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1913:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1914:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1915:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1916:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1917:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1918:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1919:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1920:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1921:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1922:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1923:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1924:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1925:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1926:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1927:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1928:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1929:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1930:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1931:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1932:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1933:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1934:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1935:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1936:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1937:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1938:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1939:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1940:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1941:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1942:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1943:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1944:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1945:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1946:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1947:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1948:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1949:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1950:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1951:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1952:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1953:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1954:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1955:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1956:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1957:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1958:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1959:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1960:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1961:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1962:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1963:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1964:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1965:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1966:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1967:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1968:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1969:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
1970:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
1971:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
1972:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1973:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1974:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1975:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1976:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1977:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1978:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1979:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1980:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1981:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1982:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1983:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1984:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1985:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1986:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1987:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1988:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1989:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1990:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1991:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
1992:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1993:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1994:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1995:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1996:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1997:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1998:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1999:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
2000:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
2001:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
2003:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2004:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
2005:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2006:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
2007:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2008:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2009:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2010:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2011:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2012:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
2013:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2014:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2015:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2016:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2017:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2018:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2019:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2020:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
2021:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
2022:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2023:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
2024:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2025:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
2026:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2027:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
2028:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****                        ((uint32_t)source);
2029:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2030:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2031:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2032:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
2033:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
2034:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
2035:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
2036:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2037:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2038:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
2039:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
2040:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2041:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
2042:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2043:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
2044:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2045:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
2046:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2047:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2048:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2049:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2050:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2051:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
2052:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
2053:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2054:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2055:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2056:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2057:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
2058:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is
2059:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
2060:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2061:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2062:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2063:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
2064:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2065:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2066:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
2067:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
2068:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2069:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2070:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
2071:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
2072:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2073:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2074:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2075:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
2076:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2077:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
2078:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2079:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2080:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2081:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2082:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
2083:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
2084:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
2085:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
2086:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2087:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2088:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2089:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2090:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2091:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2092:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2093:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2094:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2095:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2096:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2097:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2098:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2099:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2324:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2325:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2326:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2327:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2328:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2329:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2330:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2331:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2332:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2333:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2334:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2335:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2336:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2337:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2338:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2339:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2340:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2341:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2342:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2343:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2344:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2345:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2346:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2347:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2348:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2349:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2350:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2351:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
2352:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2353:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
2354:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2355:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2356:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2357:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2358:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2359:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2360:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2361:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2362:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the
2363:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2364:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status
2365:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2366:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2367:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2368:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2369:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2370:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2371:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2372:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2373:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2374:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2375:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2376:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the
2377:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * external oscillator.
2378:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2379:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2380:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2381:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2382:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2383:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2384:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2385:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2386:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2387:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2388:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2389:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2390:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2391:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2392:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2393:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2394:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2395:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2396:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2397:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2398:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2399:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2400:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2401:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2402:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2404:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2405:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2406:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2407:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2408:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2409:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2410:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2411:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2412:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2413:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2414:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2415:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2416:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2417:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2418:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2419:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2420:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2421:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2422:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2423:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2424:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2425:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2426:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2427:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2428:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2429:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2430:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2431:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2432:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2433:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2434:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2435:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2436:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2437:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays
2438:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2439:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status
2440:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2441:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2442:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator()
2443:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2444:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2445:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2446:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2447:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2448:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2449:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2450:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2451:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2452:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2453:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2454:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2455:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2456:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2457:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2458:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2459:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2460:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2461:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2462:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2463:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2464:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2465:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2466:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2467:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2468:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2469:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2470:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2471:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2472:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2473:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2474:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2475:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2476:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2477:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2478:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2479:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2480:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2481:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2482:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2483:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2484:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2485:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2486:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2487:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2488:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2489:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2490:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2491:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2492:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2493:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2494:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2495:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2496:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \note
2497:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2498:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2499:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2500:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2501:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2502:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2503:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2504:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2505:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin
2506:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2507:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2508:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2509:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2510:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2511:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2512:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2513:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2514:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2515:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2516:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2517:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2518:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2519:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2520:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2521:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2522:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2523:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2524:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2525:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2526:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2527:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2528:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2529:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2530:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2531:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2532:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2533:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2534:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2535:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2536:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2537:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2538:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2539:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2540:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2541:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2542:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2543:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2544:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2545:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2546:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2547:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2548:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2549:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2550:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2551:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2552:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2553:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2554:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2555:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2556:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2557:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2558:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2559:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2560:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2561:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2562:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2563:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2564:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2565:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2566:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2567:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2568:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2569:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2570:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2571:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2572:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2573:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2574:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2575:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2576:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2577:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 145              	 .loc 2 2577 0
 146              	 .cfi_startproc
 147              	 
 148              	 
 149              	 
 150 0000 80B4     	 push {r7}
 151              	.LCFI12:
 152              	 .cfi_def_cfa_offset 4
 153              	 .cfi_offset 7,-4
 154 0002 00AF     	 add r7,sp,#0
 155              	.LCFI13:
 156              	 .cfi_def_cfa_register 7
2578:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 157              	 .loc 2 2578 0
 158 0004 064B     	 ldr r3,.L6
 159 0006 1A68     	 ldr r2,[r3]
 160 0008 064B     	 ldr r3,.L6+4
 161 000a 1B69     	 ldr r3,[r3,#16]
 162 000c 03F00103 	 and r3,r3,#1
 163 0010 02FA03F3 	 lsl r3,r2,r3
2579:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
 164              	 .loc 2 2579 0
 165 0014 1846     	 mov r0,r3
 166 0016 BD46     	 mov sp,r7
 167              	.LCFI14:
 168              	 .cfi_def_cfa_register 13
 169              	 
 170 0018 5DF8047B 	 ldr r7,[sp],#4
 171              	.LCFI15:
 172              	 .cfi_restore 7
 173              	 .cfi_def_cfa_offset 0
 174 001c 7047     	 bx lr
 175              	.L7:
 176 001e 00BF     	 .align 2
 177              	.L6:
 178 0020 00000000 	 .word SystemCoreClock
 179 0024 00460050 	 .word 1342195200
 180              	 .cfi_endproc
 181              	.LFE217:
 183              	 .section .text.XMC_SCU_CLOCK_GetEthernetClockFrequency,"ax",%progbits
 184              	 .align 2
 185              	 .thumb
 186              	 .thumb_func
 188              	XMC_SCU_CLOCK_GetEthernetClockFrequency:
 189              	.LFB218:
2580:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2581:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2582:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2583:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2584:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  CCU clock frequency in Hertz.
2585:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2586:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2587:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of clock(fCPU) used for CCU4, CCU8, POSIF and HRPWM.\n\n
2588:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained from \a CCUDIV bits of \a CCUCLKCR register and system clock (fSYS) freque
2589:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fCCU clock frequency is calculated using following formula:\n
2590:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * fCCU = fSYS >> CCUDIV.\n
2591:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2592:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider(), XMC_SCU_CLOCK_GetSystemClockFrequency() \n\n\n
2593:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2594:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void);
2595:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2596:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2597:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB clock frequency in Hertz.
2598:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2599:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2600:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB and SDMMC clock(fUSB/fSDMMC).\n\n
2601:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained from \a USBDIV bits of \a USBCLKCR register and USB clock source.
2602:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values fUSB/fSDMMC clock frequency is calculated using following formula:\n
2603:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * if USB clock source = USBPLL: fUSB/fSDMMC = fUSBPLL/(USBDIV + 1).\n
2604:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * if USB clock source = PLL:  fUSB/fSDMMC = fPLL/(USBDIV + 1).\n
2605:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2606:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2607:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockSource(), XMC_SCU_CLOCK_GetUsbClockDivider() \n\n\n
2608:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2609:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void);
2610:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** 
2611:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2612:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ethernet clock frequency in Hertz.
2613:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2614:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2615:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of Ethernet clock(fETH).\n\n
2616:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is derived from system clock frequency(fSYS). It is calculated using
2617:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * the following formula:\n
2618:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * fETH = fSYS >> 1;
2619:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2620:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockFrequency() \n\n\n
2621:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2622:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEthernetClockFrequency(void)
2623:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** {
 190              	 .loc 2 2623 0
 191              	 .cfi_startproc
 192              	 
 193              	 
 194 0000 80B5     	 push {r7,lr}
 195              	.LCFI16:
 196              	 .cfi_def_cfa_offset 8
 197              	 .cfi_offset 7,-8
 198              	 .cfi_offset 14,-4
 199 0002 00AF     	 add r7,sp,#0
 200              	.LCFI17:
 201              	 .cfi_def_cfa_register 7
2624:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h ****   return XMC_SCU_CLOCK_GetSystemClockFrequency() >> 1U;
 202              	 .loc 2 2624 0
 203 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 204 0008 0346     	 mov r3,r0
 205 000a 5B08     	 lsrs r3,r3,#1
2625:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc4_scu.h **** }
 206              	 .loc 2 2625 0
 207 000c 1846     	 mov r0,r3
 208 000e 80BD     	 pop {r7,pc}
 209              	 .cfi_endproc
 210              	.LFE218:
 212              	 .section .text.XCM_ETH_MAC_IsNormalEvent,"ax",%progbits
 213              	 .align 2
 214              	 .thumb
 215              	 .thumb_func
 217              	XCM_ETH_MAC_IsNormalEvent:
 218              	.LFB236:
 219              	 .file 3 "../Libraries/XMCLib/src/xmc_eth_mac.c"
   1:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
   2:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
   3:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * @file xmc_eth_mac.c
   4:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * @date 2019-12-16
   5:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
   6:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *****************************************************************************
   8:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  10:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * All rights reserved.
  12:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  13:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  15:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Permission is hereby granted, free of charge, to any person or organization
  16:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * obtaining a copy of the software and accompanying documentation covered by
  17:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * do so, all subject to the following:
  21:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  22:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * The copyright notices in the Software and this entire statement, including
  23:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * the above license grant, this restriction and the following disclaimer,
  24:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * must be included in all copies of the Software, in whole or in part, and
  25:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * all derivative works of the Software, unless such copies or derivative
  26:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * works are solely in the form of machine-executable object code generated by
  27:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * a source language processor.
  28:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  29:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * DEALINGS IN THE SOFTWARE.
  36:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  37:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * To improve the quality of the software, users are encouraged to share
  38:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * at XMCSupport@infineon.com.
  40:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *****************************************************************************
  41:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  42:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Change History
  43:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * --------------
  44:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  45:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2015-06-20:
  46:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Initial
  47:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  48:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2015-09-01:
  49:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Add clock gating control in enable/disable APIs
  50:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Add transmit polling if run out of buffers
  51:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  52:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2015-11-30:
  53:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fix XMC_ETH_MAC_GetRxFrameSize return value in case of errors
  54:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  55:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2016-03-16:
  56:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fix XMC_ETH_MAC_DisableEvent
  57:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  58:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2016-05-19:
  59:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_ReturnTxDescriptor and XMC_ETH_MAC_ReturnRxDescriptor
  60:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  61:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2016-08-30:
  62:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable MMC interrupt events
  63:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  64:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2016-11-22:
  65:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to optimize access to bus
  66:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  67:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-02-25:
  68:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - XMC_ETH_MAC_Enable() and XMC_ETH_MAC_Disable(), fixed compilation warnings
  69:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  70:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-03-27:
  71:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable PMT and timestamp interrupt events
  72:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  73:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-02:
  74:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_InitPTPEx()
  75:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_SetPTPTime()
  76:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_UpdateAddend()
  77:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_InitPTP(), XMC_ETH_MAC_UpdatePTPTime(), XMC_ETH_MAC_SetPTPAlarm()
  78:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *       - nanoseconds initializazion
  79:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *       - added polling to wait for setup
  80:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  81:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-04:
  82:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable MMC IPC receive interrupt events
  83:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  84:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-11:
  85:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_SetPTPAlarm() nanoseconds conversion
  86:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  87:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-17:
  88:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_GetTxTimeStamp() and XMC_ETH_MAC_GetRxTimeStamp() return the timestamp
  89:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  90:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-27:
  91:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_GetRxTimeStamp() and XMC_ETH_MAC_GetTxTimeStamp() fixed returned nanosec
  92:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  93:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-08-03:
  94:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_InitPTP(), XMC_ETH_MAC_InitPTPEx(), XMC_ETH_MAC_GetPTPTime(), XMC_ETH_
  95:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *       rollover mode of nanosecond counter from binary to digital mode, i.e 1ns resolution
  96:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  97:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2017-09-27:
  98:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_InitEx()
  99:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - XMC_ETH_MAC_SetAddressEx(), XMC_ETH_MAC_GetAddressEx() and XMC_ETH_MAC_SetAddressPerfectFi
 100:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
 101:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2018-06-21:
 102:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_SetAddressPerfectFilterEx()
 103:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
 104:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2018-08-08:
 105:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_SetVLANTag() which now accepts a 32bit tag parameter that allows setting
 106:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
 107:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2019-11-14:
 108:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_InitRxDescriptors() to allow not initialization of rx descriptors buff
 109:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_InitTxDescriptors() to allow not initialization of tx descriptors buff
 110:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_InitTxDescriptors() enabling interrupt on transmission;
 111:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
 112:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2019-12-16:
 113:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
 114:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
 115:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * @endcond
 116:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 117:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 118:../Libraries/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
 119:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * HEADER FILES
 120:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
 121:../Libraries/XMCLib/src/xmc_eth_mac.c **** #include "xmc_eth_mac.h"
 122:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 123:../Libraries/XMCLib/src/xmc_eth_mac.c **** #if defined (ETH0)
 124:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 125:../Libraries/XMCLib/src/xmc_eth_mac.c **** #include <stdlib.h>
 126:../Libraries/XMCLib/src/xmc_eth_mac.c **** #include "xmc_scu.h"
 127:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 128:../Libraries/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
 129:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * MACROS
 130:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
 131:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 132:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
 133:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * ETH MAC clock speed
 134:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 135:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_35MHZ  (35000000U)  /**< ETH MAC clock speed 35 MHZ */
 136:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_60MHZ  (60000000U)  /**< ETH MAC clock speed 60 MHZ */
 137:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_100MHZ (100000000U) /**< ETH MAC clock speed 100 MHZ */
 138:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_150MHZ (150000000U) /**< ETH MAC clock speed 150 MHZ */
 139:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_200MHZ (200000000U) /**< ETH MAC clock speed 200 MHZ */
 140:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_250MHZ (250000000U) /**< ETH MAC clock speed 250 MHZ */
 141:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 142:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
 143:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * ETH MAC MDC divider
 144:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 145:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_16  (2U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/16 */
 146:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_26  (3U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/26 */
 147:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_42  (0U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/42 */
 148:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_62  (1U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/62 */
 149:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_102 (4U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/102 *
 150:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_124 (5U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/124 *
 151:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 152:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 153:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
 154:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * RDES1 Descriptor RX Packet Control
 155:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 156:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RBS2 (0x1FFF0000U) /**< Receive buffer 2 size */
 157:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RER  (0x00008000U) /**< Receive end of ring */
 158:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RCH  (0x00004000U) /**< Second address chained */
 159:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RBS1 (0x00001FFFU) /**< Receive buffer 1 size */
 160:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 161:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
 162:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Interrupt masking
 163:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 164:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DISABLE_MMC_INTERRUPT_MSK              (0x03ffffffU) /**< Bit mask to disable MMMC 
 165:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DISABLE_MMC_IPC_RECEIVE_INTERRUPT_MSK  (0x3fff3fffU) /**< Bit mask to disable MMC I
 166:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 167:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
 168:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Normal MAC events
 169:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 170:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_EVENT_NORMAL (XMC_ETH_MAC_EVENT_TRANSMIT |\
 171:../Libraries/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE |\
 172:../Libraries/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_RECEIVE |\
 173:../Libraries/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_EARLY_RECEIVE)
 174:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 175:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
 176:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Abnormal MAC events
 177:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 178:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_EVENT_ABNORMAL (XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED |\
 179:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT |\
 180:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW |\
 181:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW |\
 182:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE |\
 183:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED |\
 184:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT |\
 185:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_EARLY_TRANSMIT |\
 186:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_BUS_ERROR)
 187:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 188:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Definition needed in case of device header file previous to v1.5.1*/
 189:../Libraries/XMCLib/src/xmc_eth_mac.c **** #ifndef ETH_BUS_MODE_ATDS_Msk
 190:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_BUS_MODE_ATDS_Msk  (0x00000080UL)
 191:../Libraries/XMCLib/src/xmc_eth_mac.c **** #endif
 192:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 193:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Resolution of sub second counter ~ 20ns */
 194:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_SUB_SECOND_UPDATE_FREQ (50000000)
 195:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 196:../Libraries/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
 197:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * API IMPLEMENTATION
 198:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
 199:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 200:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Check if the event passed is a normal event */
 201:../Libraries/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XCM_ETH_MAC_IsNormalEvent(uint32_t event)
 202:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 220              	 .loc 3 202 0
 221              	 .cfi_startproc
 222              	 
 223              	 
 224              	 
 225 0000 80B4     	 push {r7}
 226              	.LCFI18:
 227              	 .cfi_def_cfa_offset 4
 228              	 .cfi_offset 7,-4
 229 0002 83B0     	 sub sp,sp,#12
 230              	.LCFI19:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI20:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 203:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (bool)((event & ((uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT |
 236              	 .loc 3 203 0
 237 0008 7A68     	 ldr r2,[r7,#4]
 238 000a 44F24503 	 movw r3,#16453
 239 000e 1340     	 ands r3,r3,r2
 240 0010 002B     	 cmp r3,#0
 241 0012 14BF     	 ite ne
 242 0014 0123     	 movne r3,#1
 243 0016 0023     	 moveq r3,#0
 244 0018 DBB2     	 uxtb r3,r3
 204:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE |
 205:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE |
 206:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_EARLY_RECEIVE)) != (uint32_t)0);
 207:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 245              	 .loc 3 207 0
 246 001a 1846     	 mov r0,r3
 247 001c 0C37     	 adds r7,r7,#12
 248              	.LCFI21:
 249              	 .cfi_def_cfa_offset 4
 250 001e BD46     	 mov sp,r7
 251              	.LCFI22:
 252              	 .cfi_def_cfa_register 13
 253              	 
 254 0020 5DF8047B 	 ldr r7,[sp],#4
 255              	.LCFI23:
 256              	 .cfi_restore 7
 257              	 .cfi_def_cfa_offset 0
 258 0024 7047     	 bx lr
 259              	 .cfi_endproc
 260              	.LFE236:
 262 0026 00BF     	 .section .text.XCM_ETH_MAC_IsAbnormalEvent,"ax",%progbits
 263              	 .align 2
 264              	 .thumb
 265              	 .thumb_func
 267              	XCM_ETH_MAC_IsAbnormalEvent:
 268              	.LFB237:
 208:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 209:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Check if the event passed is an abnormal event */
 210:../Libraries/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XCM_ETH_MAC_IsAbnormalEvent(uint32_t event)
 211:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 269              	 .loc 3 211 0
 270              	 .cfi_startproc
 271              	 
 272              	 
 273              	 
 274 0000 80B4     	 push {r7}
 275              	.LCFI24:
 276              	 .cfi_def_cfa_offset 4
 277              	 .cfi_offset 7,-4
 278 0002 83B0     	 sub sp,sp,#12
 279              	.LCFI25:
 280              	 .cfi_def_cfa_offset 16
 281 0004 00AF     	 add r7,sp,#0
 282              	.LCFI26:
 283              	 .cfi_def_cfa_register 7
 284 0006 7860     	 str r0,[r7,#4]
 212:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (bool)((event & ((uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED |
 285              	 .loc 3 212 0
 286 0008 7A68     	 ldr r2,[r7,#4]
 287 000a 42F2BA73 	 movw r3,#10170
 288 000e 1340     	 ands r3,r3,r2
 289 0010 002B     	 cmp r3,#0
 290 0012 14BF     	 ite ne
 291 0014 0123     	 movne r3,#1
 292 0016 0023     	 moveq r3,#0
 293 0018 DBB2     	 uxtb r3,r3
 213:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT |
 214:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW |
 215:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW |
 216:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE |
 217:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED |
 218:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT |
 219:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_EARLY_TRANSMIT |
 220:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_BUS_ERROR)) != (uint32_t)0);
 221:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 294              	 .loc 3 221 0
 295 001a 1846     	 mov r0,r3
 296 001c 0C37     	 adds r7,r7,#12
 297              	.LCFI27:
 298              	 .cfi_def_cfa_offset 4
 299 001e BD46     	 mov sp,r7
 300              	.LCFI28:
 301              	 .cfi_def_cfa_register 13
 302              	 
 303 0020 5DF8047B 	 ldr r7,[sp],#4
 304              	.LCFI29:
 305              	 .cfi_restore 7
 306              	 .cfi_def_cfa_offset 0
 307 0024 7047     	 bx lr
 308              	 .cfi_endproc
 309              	.LFE237:
 311 0026 00BF     	 .section .text.XMC_ETH_MAC_InitEx,"ax",%progbits
 312              	 .align 2
 313              	 .global XMC_ETH_MAC_InitEx
 314              	 .thumb
 315              	 .thumb_func
 317              	XMC_ETH_MAC_InitEx:
 318              	.LFB238:
 222:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 223:../Libraries/XMCLib/src/xmc_eth_mac.c **** #ifdef XMC_ASSERT_ENABLE
 224:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 225:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Check if the passed argument is a valid ETH module */
 226:../Libraries/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XMC_ETH_MAC_IsValidModule(ETH_GLOBAL_TypeDef *const eth)
 227:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 228:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (eth == ETH0);
 229:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 230:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 231:../Libraries/XMCLib/src/xmc_eth_mac.c **** #endif
 232:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 233:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitEx(XMC_ETH_MAC_t *const eth_mac)
 234:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 319              	 .loc 3 234 0
 320              	 .cfi_startproc
 321              	 
 322              	 
 323 0000 80B5     	 push {r7,lr}
 324              	.LCFI30:
 325              	 .cfi_def_cfa_offset 8
 326              	 .cfi_offset 7,-8
 327              	 .cfi_offset 14,-4
 328 0002 82B0     	 sub sp,sp,#8
 329              	.LCFI31:
 330              	 .cfi_def_cfa_offset 16
 331 0004 00AF     	 add r7,sp,#0
 332              	.LCFI32:
 333              	 .cfi_def_cfa_register 7
 334 0006 7860     	 str r0,[r7,#4]
 235:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitEx: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 236:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 237:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_Reset(eth_mac);
 335              	 .loc 3 237 0
 336 0008 7868     	 ldr r0,[r7,#4]
 337 000a FFF7FEFF 	 bl XMC_ETH_MAC_Reset
 238:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 239:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Initialize MAC configuration */
 240:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MAC_CONFIGURATION = (uint32_t)ETH_MAC_CONFIGURATION_IPC_Msk;
 338              	 .loc 3 240 0
 339 000e 7B68     	 ldr r3,[r7,#4]
 340 0010 1B68     	 ldr r3,[r3]
 341 0012 4FF48062 	 mov r2,#1024
 342 0016 1A60     	 str r2,[r3]
 241:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 242:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Initialize Filter registers */
 243:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->FLOW_CONTROL = ETH_FLOW_CONTROL_DZPQ_Msk; /* Disable Zero Quanta Pause */
 343              	 .loc 3 243 0
 344 0018 7B68     	 ldr r3,[r7,#4]
 345 001a 1B68     	 ldr r3,[r3]
 346 001c 8022     	 movs r2,#128
 347 001e 9A61     	 str r2,[r3,#24]
 244:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 245:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE = (uint32_t)ETH_OPERATION_MODE_RSF_Msk |
 348              	 .loc 3 245 0
 349 0020 7B68     	 ldr r3,[r7,#4]
 350 0022 1B68     	 ldr r3,[r3]
 351 0024 03F58053 	 add r3,r3,#4096
 352 0028 1833     	 adds r3,r3,#24
 353 002a 194A     	 ldr r2,.L15
 354 002c 1A60     	 str r2,[r3]
 246:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                   (uint32_t)ETH_OPERATION_MODE_TSF_Msk |
 247:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                   (uint32_t)ETH_OPERATION_MODE_OSF_Msk;
 248:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 249:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Increase enhanced descriptor to 8 WORDS, required when the Advanced Time-Stamp feature or Full
 250:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->BUS_MODE = (uint32_t)ETH_BUS_MODE_ATDS_Msk |
 355              	 .loc 3 250 0
 356 002e 7B68     	 ldr r3,[r7,#4]
 357 0030 1B68     	 ldr r3,[r3]
 358 0032 03F58053 	 add r3,r3,#4096
 359 0036 174A     	 ldr r2,.L15+4
 360 0038 1A60     	 str r2,[r3]
 251:../Libraries/XMCLib/src/xmc_eth_mac.c ****                             (uint32_t)ETH_BUS_MODE_AAL_Msk | /* the AHB interface generates all bur
 252:../Libraries/XMCLib/src/xmc_eth_mac.c ****                             (uint32_t)ETH_BUS_MODE_FB_Msk | /* DMA attempts to execute fixed-length
 253:../Libraries/XMCLib/src/xmc_eth_mac.c ****                             (uint32_t)(0x20 << ETH_BUS_MODE_PBL_Pos); /* maximum Burst length */
 254:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 255:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Initialize DMA Descriptors */
 256:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitRxDescriptors(eth_mac);
 361              	 .loc 3 256 0
 362 003a 7868     	 ldr r0,[r7,#4]
 363 003c FFF7FEFF 	 bl XMC_ETH_MAC_InitRxDescriptors
 257:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 364              	 .loc 3 257 0
 365 0040 7868     	 ldr r0,[r7,#4]
 366 0042 FFF7FEFF 	 bl XMC_ETH_MAC_InitTxDescriptors
 258:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 259:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Clear interrupts */
 260:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->STATUS = 0xFFFFFFFFUL;
 367              	 .loc 3 260 0
 368 0046 7B68     	 ldr r3,[r7,#4]
 369 0048 1B68     	 ldr r3,[r3]
 370 004a 03F58053 	 add r3,r3,#4096
 371 004e 1433     	 adds r3,r3,#20
 372 0050 4FF0FF32 	 mov r2,#-1
 373 0054 1A60     	 str r2,[r3]
 261:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 262:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Disable MMC interrupt events */
 263:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MMC_TRANSMIT_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_INTERRUPT_MSK;
 374              	 .loc 3 263 0
 375 0056 7B68     	 ldr r3,[r7,#4]
 376 0058 1B68     	 ldr r3,[r3]
 377 005a 6FF07C42 	 mvn r2,#-67108864
 378 005e C3F81021 	 str r2,[r3,#272]
 264:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MMC_RECEIVE_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_INTERRUPT_MSK;
 379              	 .loc 3 264 0
 380 0062 7B68     	 ldr r3,[r7,#4]
 381 0064 1B68     	 ldr r3,[r3]
 382 0066 6FF07C42 	 mvn r2,#-67108864
 383 006a C3F80C21 	 str r2,[r3,#268]
 265:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MMC_IPC_RECEIVE_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_IPC_RECEIVE_INTERRUPT_MSK;
 384              	 .loc 3 265 0
 385 006e 7B68     	 ldr r3,[r7,#4]
 386 0070 1B68     	 ldr r3,[r3]
 387 0072 6FF0C022 	 mvn r2,#-1073692672
 388 0076 C3F80022 	 str r2,[r3,#512]
 266:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 267:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Disable PMT and timestamp interrupt events */
 268:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK = ETH_INTERRUPT_MASK_PMTIM_Msk | ETH_INTERRUPT_MASK_TSIM_Msk;
 389              	 .loc 3 268 0
 390 007a 7B68     	 ldr r3,[r7,#4]
 391 007c 1B68     	 ldr r3,[r3]
 392 007e 4FF40272 	 mov r2,#520
 393 0082 DA63     	 str r2,[r3,#60]
 269:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 270:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->frame_end = NULL;
 394              	 .loc 3 270 0
 395 0084 7B68     	 ldr r3,[r7,#4]
 396 0086 0022     	 movs r2,#0
 397 0088 1A62     	 str r2,[r3,#32]
 271:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 398              	 .loc 3 271 0
 399 008a 0837     	 adds r7,r7,#8
 400              	.LCFI33:
 401              	 .cfi_def_cfa_offset 8
 402 008c BD46     	 mov sp,r7
 403              	.LCFI34:
 404              	 .cfi_def_cfa_register 13
 405              	 
 406 008e 80BD     	 pop {r7,pc}
 407              	.L16:
 408              	 .align 2
 409              	.L15:
 410 0090 04002002 	 .word 35651588
 411 0094 80200102 	 .word 33628288
 412              	 .cfi_endproc
 413              	.LFE238:
 415              	 .section .text.XMC_ETH_MAC_Init,"ax",%progbits
 416              	 .align 2
 417              	 .global XMC_ETH_MAC_Init
 418              	 .thumb
 419              	 .thumb_func
 421              	XMC_ETH_MAC_Init:
 422              	.LFB239:
 272:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 273:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC initialize */
 274:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac)
 275:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 423              	 .loc 3 275 0
 424              	 .cfi_startproc
 425              	 
 426              	 
 427 0000 80B5     	 push {r7,lr}
 428              	.LCFI35:
 429              	 .cfi_def_cfa_offset 8
 430              	 .cfi_offset 7,-8
 431              	 .cfi_offset 14,-4
 432 0002 84B0     	 sub sp,sp,#16
 433              	.LCFI36:
 434              	 .cfi_def_cfa_offset 24
 435 0004 00AF     	 add r7,sp,#0
 436              	.LCFI37:
 437              	 .cfi_def_cfa_register 7
 438 0006 7860     	 str r0,[r7,#4]
 276:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 277:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 278:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_Init: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 279:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 280:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_Enable(eth_mac);
 439              	 .loc 3 280 0
 440 0008 7868     	 ldr r0,[r7,#4]
 441 000a FFF7FEFF 	 bl XMC_ETH_MAC_Enable
 281:../Libraries/XMCLib/src/xmc_eth_mac.c ****   status = XMC_ETH_MAC_SetManagmentClockDivider(eth_mac);
 442              	 .loc 3 281 0
 443 000e 7868     	 ldr r0,[r7,#4]
 444 0010 FFF7FEFF 	 bl XMC_ETH_MAC_SetManagmentClockDivider
 445 0014 0346     	 mov r3,r0
 446 0016 FB73     	 strb r3,[r7,#15]
 282:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 283:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitEx(eth_mac);
 447              	 .loc 3 283 0
 448 0018 7868     	 ldr r0,[r7,#4]
 449 001a FFF7FEFF 	 bl XMC_ETH_MAC_InitEx
 284:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 285:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_SetAddress(eth_mac, eth_mac->address);
 450              	 .loc 3 285 0
 451 001e 7B68     	 ldr r3,[r7,#4]
 452 0020 D3E90223 	 ldrd r2,[r3,#8]
 453 0024 7868     	 ldr r0,[r7,#4]
 454 0026 FFF7FEFF 	 bl XMC_ETH_MAC_SetAddress
 286:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 287:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 455              	 .loc 3 287 0
 456 002a FB7B     	 ldrb r3,[r7,#15]
 288:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 457              	 .loc 3 288 0
 458 002c 1846     	 mov r0,r3
 459 002e 1037     	 adds r7,r7,#16
 460              	.LCFI38:
 461              	 .cfi_def_cfa_offset 8
 462 0030 BD46     	 mov sp,r7
 463              	.LCFI39:
 464              	 .cfi_def_cfa_register 13
 465              	 
 466 0032 80BD     	 pop {r7,pc}
 467              	 .cfi_endproc
 468              	.LFE239:
 470              	 .section .text.XMC_ETH_MAC_InitRxDescriptors,"ax",%progbits
 471              	 .align 2
 472              	 .global XMC_ETH_MAC_InitRxDescriptors
 473              	 .thumb
 474              	 .thumb_func
 476              	XMC_ETH_MAC_InitRxDescriptors:
 477              	.LFB240:
 289:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 290:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Initialize RX descriptors */
 291:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac)
 292:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 478              	 .loc 3 292 0
 479              	 .cfi_startproc
 480              	 
 481              	 
 482              	 
 483 0000 80B4     	 push {r7}
 484              	.LCFI40:
 485              	 .cfi_def_cfa_offset 4
 486              	 .cfi_offset 7,-4
 487 0002 85B0     	 sub sp,sp,#20
 488              	.LCFI41:
 489              	 .cfi_def_cfa_offset 24
 490 0004 00AF     	 add r7,sp,#0
 491              	.LCFI42:
 492              	 .cfi_def_cfa_register 7
 493 0006 7860     	 str r0,[r7,#4]
 293:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t i;
 294:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t next;
 295:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 296:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitRxDescriptors: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 297:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 298:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /*
 299:../Libraries/XMCLib/src/xmc_eth_mac.c ****    * Chained structure (ETH_MAC_DMA_RDES1_RCH), second address in the descriptor
 300:../Libraries/XMCLib/src/xmc_eth_mac.c ****    * (buffer2) is the next descriptor address
 301:../Libraries/XMCLib/src/xmc_eth_mac.c ****    */
 302:../Libraries/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < eth_mac->num_rx_buf; ++i)
 494              	 .loc 3 302 0
 495 0008 0023     	 movs r3,#0
 496 000a FB60     	 str r3,[r7,#12]
 497 000c 43E0     	 b .L20
 498              	.L24:
 303:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 304:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_desc[i].status = (uint32_t)ETH_MAC_DMA_RDES0_OWN;
 499              	 .loc 3 304 0
 500 000e 7B68     	 ldr r3,[r7,#4]
 501 0010 1A69     	 ldr r2,[r3,#16]
 502 0012 FB68     	 ldr r3,[r7,#12]
 503 0014 5B01     	 lsls r3,r3,#5
 504 0016 1344     	 add r3,r3,r2
 505 0018 4FF00042 	 mov r2,#-2147483648
 506 001c 1A60     	 str r2,[r3]
 305:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_desc[i].length = (uint32_t)ETH_MAC_DMA_RDES1_RCH | (uint32_t)XMC_ETH_MAC_BUF_SIZE;
 507              	 .loc 3 305 0
 508 001e 7B68     	 ldr r3,[r7,#4]
 509 0020 1A69     	 ldr r2,[r3,#16]
 510 0022 FB68     	 ldr r3,[r7,#12]
 511 0024 5B01     	 lsls r3,r3,#5
 512 0026 1344     	 add r3,r3,r2
 513 0028 44F2F452 	 movw r2,#17908
 514 002c 5A60     	 str r2,[r3,#4]
 306:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 307:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (eth_mac->rx_buf != NULL)
 515              	 .loc 3 307 0
 516 002e 7B68     	 ldr r3,[r7,#4]
 517 0030 9B69     	 ldr r3,[r3,#24]
 518 0032 002B     	 cmp r3,#0
 519 0034 0ED0     	 beq .L21
 308:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 309:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->rx_desc[i].buffer1 = (uint32_t) & (eth_mac->rx_buf[i * XMC_ETH_MAC_BUF_SIZE]);
 520              	 .loc 3 309 0
 521 0036 7B68     	 ldr r3,[r7,#4]
 522 0038 1A69     	 ldr r2,[r3,#16]
 523 003a FB68     	 ldr r3,[r7,#12]
 524 003c 5B01     	 lsls r3,r3,#5
 525 003e 1344     	 add r3,r3,r2
 526 0040 7A68     	 ldr r2,[r7,#4]
 527 0042 9169     	 ldr r1,[r2,#24]
 528 0044 FA68     	 ldr r2,[r7,#12]
 529 0046 40F2F450 	 movw r0,#1524
 530 004a 00FB02F2 	 mul r2,r0,r2
 531 004e 0A44     	 add r2,r2,r1
 532 0050 9A60     	 str r2,[r3,#8]
 533 0052 06E0     	 b .L22
 534              	.L21:
 310:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 311:../Libraries/XMCLib/src/xmc_eth_mac.c ****     else
 312:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 313:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->rx_desc[i].buffer1 = 0;
 535              	 .loc 3 313 0
 536 0054 7B68     	 ldr r3,[r7,#4]
 537 0056 1A69     	 ldr r2,[r3,#16]
 538 0058 FB68     	 ldr r3,[r7,#12]
 539 005a 5B01     	 lsls r3,r3,#5
 540 005c 1344     	 add r3,r3,r2
 541 005e 0022     	 movs r2,#0
 542 0060 9A60     	 str r2,[r3,#8]
 543              	.L22:
 314:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 315:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 316:../Libraries/XMCLib/src/xmc_eth_mac.c ****     next = i + 1U;
 544              	 .loc 3 316 0
 545 0062 FB68     	 ldr r3,[r7,#12]
 546 0064 0133     	 adds r3,r3,#1
 547 0066 BB60     	 str r3,[r7,#8]
 317:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (next == eth_mac->num_rx_buf)
 548              	 .loc 3 317 0
 549 0068 7B68     	 ldr r3,[r7,#4]
 550 006a 93F82430 	 ldrb r3,[r3,#36]
 551 006e 1A46     	 mov r2,r3
 552 0070 BB68     	 ldr r3,[r7,#8]
 553 0072 9A42     	 cmp r2,r3
 554 0074 01D1     	 bne .L23
 318:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 319:../Libraries/XMCLib/src/xmc_eth_mac.c ****       next = 0U;
 555              	 .loc 3 319 0
 556 0076 0023     	 movs r3,#0
 557 0078 BB60     	 str r3,[r7,#8]
 558              	.L23:
 320:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 321:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_desc[i].buffer2 = (uint32_t) & (eth_mac->rx_desc[next]);
 559              	 .loc 3 321 0 discriminator 2
 560 007a 7B68     	 ldr r3,[r7,#4]
 561 007c 1A69     	 ldr r2,[r3,#16]
 562 007e FB68     	 ldr r3,[r7,#12]
 563 0080 5B01     	 lsls r3,r3,#5
 564 0082 1344     	 add r3,r3,r2
 565 0084 7A68     	 ldr r2,[r7,#4]
 566 0086 1169     	 ldr r1,[r2,#16]
 567 0088 BA68     	 ldr r2,[r7,#8]
 568 008a 5201     	 lsls r2,r2,#5
 569 008c 0A44     	 add r2,r2,r1
 570 008e DA60     	 str r2,[r3,#12]
 302:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 571              	 .loc 3 302 0 discriminator 2
 572 0090 FB68     	 ldr r3,[r7,#12]
 573 0092 0133     	 adds r3,r3,#1
 574 0094 FB60     	 str r3,[r7,#12]
 575              	.L20:
 302:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 576              	 .loc 3 302 0 is_stmt 0 discriminator 1
 577 0096 7B68     	 ldr r3,[r7,#4]
 578 0098 93F82430 	 ldrb r3,[r3,#36]
 579 009c 1A46     	 mov r2,r3
 580 009e FB68     	 ldr r3,[r7,#12]
 581 00a0 9A42     	 cmp r2,r3
 582 00a2 B4D8     	 bhi .L24
 322:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 323:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->RECEIVE_DESCRIPTOR_LIST_ADDRESS = (uint32_t) & (eth_mac->rx_desc[0]);
 583              	 .loc 3 323 0 is_stmt 1
 584 00a4 7B68     	 ldr r3,[r7,#4]
 585 00a6 1B68     	 ldr r3,[r3]
 586 00a8 7A68     	 ldr r2,[r7,#4]
 587 00aa 1269     	 ldr r2,[r2,#16]
 588 00ac 03F58053 	 add r3,r3,#4096
 589 00b0 0C33     	 adds r3,r3,#12
 590 00b2 1A60     	 str r2,[r3]
 324:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index = 0U;
 591              	 .loc 3 324 0
 592 00b4 7B68     	 ldr r3,[r7,#4]
 593 00b6 0022     	 movs r2,#0
 594 00b8 83F82720 	 strb r2,[r3,#39]
 325:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 595              	 .loc 3 325 0
 596 00bc 1437     	 adds r7,r7,#20
 597              	.LCFI43:
 598              	 .cfi_def_cfa_offset 4
 599 00be BD46     	 mov sp,r7
 600              	.LCFI44:
 601              	 .cfi_def_cfa_register 13
 602              	 
 603 00c0 5DF8047B 	 ldr r7,[sp],#4
 604              	.LCFI45:
 605              	 .cfi_restore 7
 606              	 .cfi_def_cfa_offset 0
 607 00c4 7047     	 bx lr
 608              	 .cfi_endproc
 609              	.LFE240:
 611 00c6 00BF     	 .section .text.XMC_ETH_MAC_InitTxDescriptors,"ax",%progbits
 612              	 .align 2
 613              	 .global XMC_ETH_MAC_InitTxDescriptors
 614              	 .thumb
 615              	 .thumb_func
 617              	XMC_ETH_MAC_InitTxDescriptors:
 618              	.LFB241:
 326:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 327:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Initialize TX descriptors */
 328:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac)
 329:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 619              	 .loc 3 329 0
 620              	 .cfi_startproc
 621              	 
 622              	 
 623              	 
 624 0000 80B4     	 push {r7}
 625              	.LCFI46:
 626              	 .cfi_def_cfa_offset 4
 627              	 .cfi_offset 7,-4
 628 0002 85B0     	 sub sp,sp,#20
 629              	.LCFI47:
 630              	 .cfi_def_cfa_offset 24
 631 0004 00AF     	 add r7,sp,#0
 632              	.LCFI48:
 633              	 .cfi_def_cfa_register 7
 634 0006 7860     	 str r0,[r7,#4]
 330:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t i;
 331:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t next;
 332:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 333:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitTxDescriptors: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 334:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 335:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Chained structure (ETH_MAC_DMA_TDES0_TCH), second address in the descriptor (buffer2) is the n
 336:../Libraries/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < eth_mac->num_tx_buf; ++i)
 635              	 .loc 3 336 0
 636 0008 0023     	 movs r3,#0
 637 000a FB60     	 str r3,[r7,#12]
 638 000c 3AE0     	 b .L26
 639              	.L30:
 337:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 338:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->tx_desc[i].status = ETH_MAC_DMA_TDES0_TCH | ETH_MAC_DMA_TDES0_LS | ETH_MAC_DMA_TDES0_F
 640              	 .loc 3 338 0
 641 000e 7B68     	 ldr r3,[r7,#4]
 642 0010 5A69     	 ldr r2,[r3,#20]
 643 0012 FB68     	 ldr r3,[r7,#12]
 644 0014 5B01     	 lsls r3,r3,#5
 645 0016 1344     	 add r3,r3,r2
 646 0018 264A     	 ldr r2,.L31
 647 001a 1A60     	 str r2,[r3]
 339:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 340:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (eth_mac->tx_buf != NULL)
 648              	 .loc 3 340 0
 649 001c 7B68     	 ldr r3,[r7,#4]
 650 001e DB69     	 ldr r3,[r3,#28]
 651 0020 002B     	 cmp r3,#0
 652 0022 0ED0     	 beq .L27
 341:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 342:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[i].buffer1 = (uint32_t) & (eth_mac->tx_buf[i * XMC_ETH_MAC_BUF_SIZE]);
 653              	 .loc 3 342 0
 654 0024 7B68     	 ldr r3,[r7,#4]
 655 0026 5A69     	 ldr r2,[r3,#20]
 656 0028 FB68     	 ldr r3,[r7,#12]
 657 002a 5B01     	 lsls r3,r3,#5
 658 002c 1344     	 add r3,r3,r2
 659 002e 7A68     	 ldr r2,[r7,#4]
 660 0030 D169     	 ldr r1,[r2,#28]
 661 0032 FA68     	 ldr r2,[r7,#12]
 662 0034 40F2F450 	 movw r0,#1524
 663 0038 00FB02F2 	 mul r2,r0,r2
 664 003c 0A44     	 add r2,r2,r1
 665 003e 9A60     	 str r2,[r3,#8]
 666 0040 06E0     	 b .L28
 667              	.L27:
 343:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 344:../Libraries/XMCLib/src/xmc_eth_mac.c ****     else
 345:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 346:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[i].buffer1 = 0;
 668              	 .loc 3 346 0
 669 0042 7B68     	 ldr r3,[r7,#4]
 670 0044 5A69     	 ldr r2,[r3,#20]
 671 0046 FB68     	 ldr r3,[r7,#12]
 672 0048 5B01     	 lsls r3,r3,#5
 673 004a 1344     	 add r3,r3,r2
 674 004c 0022     	 movs r2,#0
 675 004e 9A60     	 str r2,[r3,#8]
 676              	.L28:
 347:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 348:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 349:../Libraries/XMCLib/src/xmc_eth_mac.c ****     next = i + 1U;
 677              	 .loc 3 349 0
 678 0050 FB68     	 ldr r3,[r7,#12]
 679 0052 0133     	 adds r3,r3,#1
 680 0054 BB60     	 str r3,[r7,#8]
 350:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (next == eth_mac->num_tx_buf)
 681              	 .loc 3 350 0
 682 0056 7B68     	 ldr r3,[r7,#4]
 683 0058 93F82530 	 ldrb r3,[r3,#37]
 684 005c 1A46     	 mov r2,r3
 685 005e BB68     	 ldr r3,[r7,#8]
 686 0060 9A42     	 cmp r2,r3
 687 0062 01D1     	 bne .L29
 351:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 352:../Libraries/XMCLib/src/xmc_eth_mac.c ****       next = 0U;
 688              	 .loc 3 352 0
 689 0064 0023     	 movs r3,#0
 690 0066 BB60     	 str r3,[r7,#8]
 691              	.L29:
 353:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 354:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->tx_desc[i].buffer2 = (uint32_t) & (eth_mac->tx_desc[next]);
 692              	 .loc 3 354 0 discriminator 2
 693 0068 7B68     	 ldr r3,[r7,#4]
 694 006a 5A69     	 ldr r2,[r3,#20]
 695 006c FB68     	 ldr r3,[r7,#12]
 696 006e 5B01     	 lsls r3,r3,#5
 697 0070 1344     	 add r3,r3,r2
 698 0072 7A68     	 ldr r2,[r7,#4]
 699 0074 5169     	 ldr r1,[r2,#20]
 700 0076 BA68     	 ldr r2,[r7,#8]
 701 0078 5201     	 lsls r2,r2,#5
 702 007a 0A44     	 add r2,r2,r1
 703 007c DA60     	 str r2,[r3,#12]
 336:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 704              	 .loc 3 336 0 discriminator 2
 705 007e FB68     	 ldr r3,[r7,#12]
 706 0080 0133     	 adds r3,r3,#1
 707 0082 FB60     	 str r3,[r7,#12]
 708              	.L26:
 336:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 709              	 .loc 3 336 0 is_stmt 0 discriminator 1
 710 0084 7B68     	 ldr r3,[r7,#4]
 711 0086 93F82530 	 ldrb r3,[r3,#37]
 712 008a 1A46     	 mov r2,r3
 713 008c FB68     	 ldr r3,[r7,#12]
 714 008e 9A42     	 cmp r2,r3
 715 0090 BDD8     	 bhi .L30
 355:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 356:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TRANSMIT_DESCRIPTOR_LIST_ADDRESS = (uint32_t) & (eth_mac->tx_desc[0]);
 716              	 .loc 3 356 0 is_stmt 1
 717 0092 7B68     	 ldr r3,[r7,#4]
 718 0094 1B68     	 ldr r3,[r3]
 719 0096 7A68     	 ldr r2,[r7,#4]
 720 0098 5269     	 ldr r2,[r2,#20]
 721 009a 03F58053 	 add r3,r3,#4096
 722 009e 1033     	 adds r3,r3,#16
 723 00a0 1A60     	 str r2,[r3]
 357:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_index = 0U;
 724              	 .loc 3 357 0
 725 00a2 7B68     	 ldr r3,[r7,#4]
 726 00a4 0022     	 movs r2,#0
 727 00a6 83F82620 	 strb r2,[r3,#38]
 358:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 728              	 .loc 3 358 0
 729 00aa 1437     	 adds r7,r7,#20
 730              	.LCFI49:
 731              	 .cfi_def_cfa_offset 4
 732 00ac BD46     	 mov sp,r7
 733              	.LCFI50:
 734              	 .cfi_def_cfa_register 13
 735              	 
 736 00ae 5DF8047B 	 ldr r7,[sp],#4
 737              	.LCFI51:
 738              	 .cfi_restore 7
 739              	 .cfi_def_cfa_offset 0
 740 00b2 7047     	 bx lr
 741              	.L32:
 742              	 .align 2
 743              	.L31:
 744 00b4 00001070 	 .word 1880096768
 745              	 .cfi_endproc
 746              	.LFE241:
 748              	 .section .text.XMC_ETH_MAC_SetAddressEx,"ax",%progbits
 749              	 .align 2
 750              	 .global XMC_ETH_MAC_SetAddressEx
 751              	 .thumb
 752              	 .thumb_func
 754              	XMC_ETH_MAC_SetAddressEx:
 755              	.LFB242:
 359:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 360:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressEx(XMC_ETH_MAC_t *const eth_mac, const uint8_t *const addr)
 361:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 756              	 .loc 3 361 0
 757              	 .cfi_startproc
 758              	 
 759              	 
 760              	 
 761 0000 80B4     	 push {r7}
 762              	.LCFI52:
 763              	 .cfi_def_cfa_offset 4
 764              	 .cfi_offset 7,-4
 765 0002 83B0     	 sub sp,sp,#12
 766              	.LCFI53:
 767              	 .cfi_def_cfa_offset 16
 768 0004 00AF     	 add r7,sp,#0
 769              	.LCFI54:
 770              	 .cfi_def_cfa_register 7
 771 0006 7860     	 str r0,[r7,#4]
 772 0008 3960     	 str r1,[r7]
 362:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MAC_ADDRESS0_HIGH = addr[4] | (addr[5] << 8);
 773              	 .loc 3 362 0
 774 000a 7B68     	 ldr r3,[r7,#4]
 775 000c 1B68     	 ldr r3,[r3]
 776 000e 3A68     	 ldr r2,[r7]
 777 0010 0432     	 adds r2,r2,#4
 778 0012 1278     	 ldrb r2,[r2]
 779 0014 1146     	 mov r1,r2
 780 0016 3A68     	 ldr r2,[r7]
 781 0018 0532     	 adds r2,r2,#5
 782 001a 1278     	 ldrb r2,[r2]
 783 001c 1202     	 lsls r2,r2,#8
 784 001e 0A43     	 orrs r2,r2,r1
 785 0020 1A64     	 str r2,[r3,#64]
 363:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MAC_ADDRESS0_LOW = addr[0] | (addr[1] << 8) | (addr[2] << 16) | (addr[3] << 24);
 786              	 .loc 3 363 0
 787 0022 7B68     	 ldr r3,[r7,#4]
 788 0024 1B68     	 ldr r3,[r3]
 789 0026 3A68     	 ldr r2,[r7]
 790 0028 1278     	 ldrb r2,[r2]
 791 002a 1146     	 mov r1,r2
 792 002c 3A68     	 ldr r2,[r7]
 793 002e 0132     	 adds r2,r2,#1
 794 0030 1278     	 ldrb r2,[r2]
 795 0032 1202     	 lsls r2,r2,#8
 796 0034 1143     	 orrs r1,r1,r2
 797 0036 3A68     	 ldr r2,[r7]
 798 0038 0232     	 adds r2,r2,#2
 799 003a 1278     	 ldrb r2,[r2]
 800 003c 1204     	 lsls r2,r2,#16
 801 003e 1143     	 orrs r1,r1,r2
 802 0040 3A68     	 ldr r2,[r7]
 803 0042 0332     	 adds r2,r2,#3
 804 0044 1278     	 ldrb r2,[r2]
 805 0046 1206     	 lsls r2,r2,#24
 806 0048 0A43     	 orrs r2,r2,r1
 807 004a 5A64     	 str r2,[r3,#68]
 364:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 808              	 .loc 3 364 0
 809 004c 0C37     	 adds r7,r7,#12
 810              	.LCFI55:
 811              	 .cfi_def_cfa_offset 4
 812 004e BD46     	 mov sp,r7
 813              	.LCFI56:
 814              	 .cfi_def_cfa_register 13
 815              	 
 816 0050 5DF8047B 	 ldr r7,[sp],#4
 817              	.LCFI57:
 818              	 .cfi_restore 7
 819              	 .cfi_def_cfa_offset 0
 820 0054 7047     	 bx lr
 821              	 .cfi_endproc
 822              	.LFE242:
 824 0056 00BF     	 .section .text.XMC_ETH_MAC_GetAddressEx,"ax",%progbits
 825              	 .align 2
 826              	 .global XMC_ETH_MAC_GetAddressEx
 827              	 .thumb
 828              	 .thumb_func
 830              	XMC_ETH_MAC_GetAddressEx:
 831              	.LFB243:
 365:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 366:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_GetAddressEx(XMC_ETH_MAC_t *const eth_mac, uint8_t *const addr)
 367:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 832              	 .loc 3 367 0
 833              	 .cfi_startproc
 834              	 
 835              	 
 836              	 
 837 0000 80B4     	 push {r7}
 838              	.LCFI58:
 839              	 .cfi_def_cfa_offset 4
 840              	 .cfi_offset 7,-4
 841 0002 85B0     	 sub sp,sp,#20
 842              	.LCFI59:
 843              	 .cfi_def_cfa_offset 24
 844 0004 00AF     	 add r7,sp,#0
 845              	.LCFI60:
 846              	 .cfi_def_cfa_register 7
 847 0006 7860     	 str r0,[r7,#4]
 848 0008 3960     	 str r1,[r7]
 368:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t low_addr = eth_mac->regs->MAC_ADDRESS0_LOW;
 849              	 .loc 3 368 0
 850 000a 7B68     	 ldr r3,[r7,#4]
 851 000c 1B68     	 ldr r3,[r3]
 852 000e 5B6C     	 ldr r3,[r3,#68]
 853 0010 FB60     	 str r3,[r7,#12]
 369:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t high_addr = eth_mac->regs->MAC_ADDRESS0_HIGH;
 854              	 .loc 3 369 0
 855 0012 7B68     	 ldr r3,[r7,#4]
 856 0014 1B68     	 ldr r3,[r3]
 857 0016 1B6C     	 ldr r3,[r3,#64]
 858 0018 BB60     	 str r3,[r7,#8]
 370:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 371:../Libraries/XMCLib/src/xmc_eth_mac.c ****   addr[0] = low_addr & 0xff;
 859              	 .loc 3 371 0
 860 001a FB68     	 ldr r3,[r7,#12]
 861 001c DAB2     	 uxtb r2,r3
 862 001e 3B68     	 ldr r3,[r7]
 863 0020 1A70     	 strb r2,[r3]
 372:../Libraries/XMCLib/src/xmc_eth_mac.c ****   addr[1] = (low_addr >> 8) & 0xff;
 864              	 .loc 3 372 0
 865 0022 3B68     	 ldr r3,[r7]
 866 0024 0133     	 adds r3,r3,#1
 867 0026 FA68     	 ldr r2,[r7,#12]
 868 0028 120A     	 lsrs r2,r2,#8
 869 002a D2B2     	 uxtb r2,r2
 870 002c 1A70     	 strb r2,[r3]
 373:../Libraries/XMCLib/src/xmc_eth_mac.c ****   addr[2] = (low_addr >> 16) & 0xff;
 871              	 .loc 3 373 0
 872 002e 3B68     	 ldr r3,[r7]
 873 0030 0233     	 adds r3,r3,#2
 874 0032 FA68     	 ldr r2,[r7,#12]
 875 0034 120C     	 lsrs r2,r2,#16
 876 0036 D2B2     	 uxtb r2,r2
 877 0038 1A70     	 strb r2,[r3]
 374:../Libraries/XMCLib/src/xmc_eth_mac.c ****   addr[3] = (low_addr >> 24) & 0xff;
 878              	 .loc 3 374 0
 879 003a 3B68     	 ldr r3,[r7]
 880 003c 0333     	 adds r3,r3,#3
 881 003e FA68     	 ldr r2,[r7,#12]
 882 0040 120E     	 lsrs r2,r2,#24
 883 0042 D2B2     	 uxtb r2,r2
 884 0044 1A70     	 strb r2,[r3]
 375:../Libraries/XMCLib/src/xmc_eth_mac.c ****   addr[4] = high_addr & 0xff;
 885              	 .loc 3 375 0
 886 0046 3B68     	 ldr r3,[r7]
 887 0048 0433     	 adds r3,r3,#4
 888 004a BA68     	 ldr r2,[r7,#8]
 889 004c D2B2     	 uxtb r2,r2
 890 004e 1A70     	 strb r2,[r3]
 376:../Libraries/XMCLib/src/xmc_eth_mac.c ****   addr[5] = (high_addr >> 8) & 0xff;
 891              	 .loc 3 376 0
 892 0050 3B68     	 ldr r3,[r7]
 893 0052 0533     	 adds r3,r3,#5
 894 0054 BA68     	 ldr r2,[r7,#8]
 895 0056 120A     	 lsrs r2,r2,#8
 896 0058 D2B2     	 uxtb r2,r2
 897 005a 1A70     	 strb r2,[r3]
 377:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 898              	 .loc 3 377 0
 899 005c 1437     	 adds r7,r7,#20
 900              	.LCFI61:
 901              	 .cfi_def_cfa_offset 4
 902 005e BD46     	 mov sp,r7
 903              	.LCFI62:
 904              	 .cfi_def_cfa_register 13
 905              	 
 906 0060 5DF8047B 	 ldr r7,[sp],#4
 907              	.LCFI63:
 908              	 .cfi_restore 7
 909              	 .cfi_def_cfa_offset 0
 910 0064 7047     	 bx lr
 911              	 .cfi_endproc
 912              	.LFE243:
 914 0066 00BF     	 .section .text.XMC_ETH_MAC_SetAddressPerfectFilter,"ax",%progbits
 915              	 .align 2
 916              	 .global XMC_ETH_MAC_SetAddressPerfectFilter
 917              	 .thumb
 918              	 .thumb_func
 920              	XMC_ETH_MAC_SetAddressPerfectFilter:
 921              	.LFB244:
 378:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 379:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set address perfect filter */
 380:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressPerfectFilter(XMC_ETH_MAC_t *const eth_mac,
 381:../Libraries/XMCLib/src/xmc_eth_mac.c ****     uint8_t index,
 382:../Libraries/XMCLib/src/xmc_eth_mac.c ****     const uint64_t addr,
 383:../Libraries/XMCLib/src/xmc_eth_mac.c ****     uint32_t flags)
 384:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 922              	 .loc 3 384 0
 923              	 .cfi_startproc
 924              	 
 925              	 
 926              	 
 927 0000 B0B4     	 push {r4,r5,r7}
 928              	.LCFI64:
 929              	 .cfi_def_cfa_offset 12
 930              	 .cfi_offset 4,-12
 931              	 .cfi_offset 5,-8
 932              	 .cfi_offset 7,-4
 933 0002 87B0     	 sub sp,sp,#28
 934              	.LCFI65:
 935              	 .cfi_def_cfa_offset 40
 936 0004 00AF     	 add r7,sp,#0
 937              	.LCFI66:
 938              	 .cfi_def_cfa_register 7
 939 0006 F860     	 str r0,[r7,#12]
 940 0008 C7E90023 	 strd r2,[r7]
 941 000c 0B46     	 mov r3,r1
 942 000e FB72     	 strb r3,[r7,#11]
 385:../Libraries/XMCLib/src/xmc_eth_mac.c ****   __IO uint32_t *reg;
 386:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 387:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressPerfectFilter: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(e
 388:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressFilter: index is out of range", ((index > 0) && (index < 4)));
 389:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 390:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg = &(eth_mac->regs->MAC_ADDRESS0_HIGH);
 943              	 .loc 3 390 0
 944 0010 FB68     	 ldr r3,[r7,#12]
 945 0012 1B68     	 ldr r3,[r3]
 946 0014 4033     	 adds r3,r3,#64
 947 0016 7B61     	 str r3,[r7,#20]
 391:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg[index] = (uint32_t)(addr >> 32U) | flags;
 948              	 .loc 3 391 0
 949 0018 FB7A     	 ldrb r3,[r7,#11]
 950 001a 9B00     	 lsls r3,r3,#2
 951 001c 7A69     	 ldr r2,[r7,#20]
 952 001e D118     	 adds r1,r2,r3
 953 0020 D7E90023 	 ldrd r2,[r7]
 954 0024 1C00     	 movs r4,r3
 955 0026 0025     	 movs r5,#0
 956 0028 2246     	 mov r2,r4
 957 002a BB6A     	 ldr r3,[r7,#40]
 958 002c 1343     	 orrs r3,r3,r2
 959 002e 0B60     	 str r3,[r1]
 392:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg[index + 1U] = (uint32_t)addr;
 960              	 .loc 3 392 0
 961 0030 FB7A     	 ldrb r3,[r7,#11]
 962 0032 0133     	 adds r3,r3,#1
 963 0034 9B00     	 lsls r3,r3,#2
 964 0036 7A69     	 ldr r2,[r7,#20]
 965 0038 1344     	 add r3,r3,r2
 966 003a 3A68     	 ldr r2,[r7]
 967 003c 1A60     	 str r2,[r3]
 393:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 968              	 .loc 3 393 0
 969 003e 1C37     	 adds r7,r7,#28
 970              	.LCFI67:
 971              	 .cfi_def_cfa_offset 12
 972 0040 BD46     	 mov sp,r7
 973              	.LCFI68:
 974              	 .cfi_def_cfa_register 13
 975              	 
 976 0042 B0BC     	 pop {r4,r5,r7}
 977              	.LCFI69:
 978              	 .cfi_restore 7
 979              	 .cfi_restore 5
 980              	 .cfi_restore 4
 981              	 .cfi_def_cfa_offset 0
 982 0044 7047     	 bx lr
 983              	 .cfi_endproc
 984              	.LFE244:
 986              	 .section .text.XMC_ETH_MAC_SetAddressPerfectFilterEx,"ax",%progbits
 987              	 .align 2
 988              	 .global XMC_ETH_MAC_SetAddressPerfectFilterEx
 989              	 .thumb
 990              	 .thumb_func
 992              	XMC_ETH_MAC_SetAddressPerfectFilterEx:
 993              	.LFB245:
 394:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 395:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressPerfectFilterEx(XMC_ETH_MAC_t *const eth_mac,
 396:../Libraries/XMCLib/src/xmc_eth_mac.c ****     uint8_t index,
 397:../Libraries/XMCLib/src/xmc_eth_mac.c ****     uint8_t *const addr,
 398:../Libraries/XMCLib/src/xmc_eth_mac.c ****     uint32_t flags)
 399:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 994              	 .loc 3 399 0
 995              	 .cfi_startproc
 996              	 
 997              	 
 998              	 
 999 0000 80B4     	 push {r7}
 1000              	.LCFI70:
 1001              	 .cfi_def_cfa_offset 4
 1002              	 .cfi_offset 7,-4
 1003 0002 87B0     	 sub sp,sp,#28
 1004              	.LCFI71:
 1005              	 .cfi_def_cfa_offset 32
 1006 0004 00AF     	 add r7,sp,#0
 1007              	.LCFI72:
 1008              	 .cfi_def_cfa_register 7
 1009 0006 F860     	 str r0,[r7,#12]
 1010 0008 7A60     	 str r2,[r7,#4]
 1011 000a 3B60     	 str r3,[r7]
 1012 000c 0B46     	 mov r3,r1
 1013 000e FB72     	 strb r3,[r7,#11]
 400:../Libraries/XMCLib/src/xmc_eth_mac.c ****   __IO uint32_t *reg;
 401:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 402:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressPerfectFilter: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(e
 403:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressFilter: index is out of range", ((index > 0) && (index < 4)));
 404:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 405:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg = &(eth_mac->regs->MAC_ADDRESS0_HIGH);
 1014              	 .loc 3 405 0
 1015 0010 FB68     	 ldr r3,[r7,#12]
 1016 0012 1B68     	 ldr r3,[r3]
 1017 0014 4033     	 adds r3,r3,#64
 1018 0016 7B61     	 str r3,[r7,#20]
 406:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg[index] = addr[4] | (addr[5] << 8) | flags;
 1019              	 .loc 3 406 0
 1020 0018 FB7A     	 ldrb r3,[r7,#11]
 1021 001a 9B00     	 lsls r3,r3,#2
 1022 001c 7A69     	 ldr r2,[r7,#20]
 1023 001e 1344     	 add r3,r3,r2
 1024 0020 7A68     	 ldr r2,[r7,#4]
 1025 0022 0432     	 adds r2,r2,#4
 1026 0024 1278     	 ldrb r2,[r2]
 1027 0026 1146     	 mov r1,r2
 1028 0028 7A68     	 ldr r2,[r7,#4]
 1029 002a 0532     	 adds r2,r2,#5
 1030 002c 1278     	 ldrb r2,[r2]
 1031 002e 1202     	 lsls r2,r2,#8
 1032 0030 0A43     	 orrs r2,r2,r1
 1033 0032 1146     	 mov r1,r2
 1034 0034 3A68     	 ldr r2,[r7]
 1035 0036 0A43     	 orrs r2,r2,r1
 1036 0038 1A60     	 str r2,[r3]
 407:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg[index + 1U] = addr[0] | (addr[1] << 8) | (addr[2] << 16) | (addr[3] << 24);
 1037              	 .loc 3 407 0
 1038 003a FB7A     	 ldrb r3,[r7,#11]
 1039 003c 0133     	 adds r3,r3,#1
 1040 003e 9B00     	 lsls r3,r3,#2
 1041 0040 7A69     	 ldr r2,[r7,#20]
 1042 0042 1344     	 add r3,r3,r2
 1043 0044 7A68     	 ldr r2,[r7,#4]
 1044 0046 1278     	 ldrb r2,[r2]
 1045 0048 1146     	 mov r1,r2
 1046 004a 7A68     	 ldr r2,[r7,#4]
 1047 004c 0132     	 adds r2,r2,#1
 1048 004e 1278     	 ldrb r2,[r2]
 1049 0050 1202     	 lsls r2,r2,#8
 1050 0052 1143     	 orrs r1,r1,r2
 1051 0054 7A68     	 ldr r2,[r7,#4]
 1052 0056 0232     	 adds r2,r2,#2
 1053 0058 1278     	 ldrb r2,[r2]
 1054 005a 1204     	 lsls r2,r2,#16
 1055 005c 1143     	 orrs r1,r1,r2
 1056 005e 7A68     	 ldr r2,[r7,#4]
 1057 0060 0332     	 adds r2,r2,#3
 1058 0062 1278     	 ldrb r2,[r2]
 1059 0064 1206     	 lsls r2,r2,#24
 1060 0066 0A43     	 orrs r2,r2,r1
 1061 0068 1A60     	 str r2,[r3]
 408:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1062              	 .loc 3 408 0
 1063 006a 1C37     	 adds r7,r7,#28
 1064              	.LCFI73:
 1065              	 .cfi_def_cfa_offset 4
 1066 006c BD46     	 mov sp,r7
 1067              	.LCFI74:
 1068              	 .cfi_def_cfa_register 13
 1069              	 
 1070 006e 5DF8047B 	 ldr r7,[sp],#4
 1071              	.LCFI75:
 1072              	 .cfi_restore 7
 1073              	 .cfi_def_cfa_offset 0
 1074 0072 7047     	 bx lr
 1075              	 .cfi_endproc
 1076              	.LFE245:
 1078              	 .section .text.XMC_ETH_MAC_SetAddressHashFilter,"ax",%progbits
 1079              	 .align 2
 1080              	 .global XMC_ETH_MAC_SetAddressHashFilter
 1081              	 .thumb
 1082              	 .thumb_func
 1084              	XMC_ETH_MAC_SetAddressHashFilter:
 1085              	.LFB246:
 409:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 410:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set address hash filter */
 411:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressHashFilter(XMC_ETH_MAC_t *const eth_mac, const uint64_t hash)
 412:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1086              	 .loc 3 412 0
 1087              	 .cfi_startproc
 1088              	 
 1089              	 
 1090              	 
 1091 0000 B0B4     	 push {r4,r5,r7}
 1092              	.LCFI76:
 1093              	 .cfi_def_cfa_offset 12
 1094              	 .cfi_offset 4,-12
 1095              	 .cfi_offset 5,-8
 1096              	 .cfi_offset 7,-4
 1097 0002 85B0     	 sub sp,sp,#20
 1098              	.LCFI77:
 1099              	 .cfi_def_cfa_offset 32
 1100 0004 00AF     	 add r7,sp,#0
 1101              	.LCFI78:
 1102              	 .cfi_def_cfa_register 7
 1103 0006 F860     	 str r0,[r7,#12]
 1104 0008 C7E90023 	 strd r2,[r7]
 413:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->HASH_TABLE_HIGH = (uint32_t)(hash >> 32);
 1105              	 .loc 3 413 0
 1106 000c FB68     	 ldr r3,[r7,#12]
 1107 000e 1968     	 ldr r1,[r3]
 1108 0010 D7E90023 	 ldrd r2,[r7]
 1109 0014 1C00     	 movs r4,r3
 1110 0016 0025     	 movs r5,#0
 1111 0018 2346     	 mov r3,r4
 1112 001a 8B60     	 str r3,[r1,#8]
 414:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->HASH_TABLE_LOW = (uint32_t)hash;
 1113              	 .loc 3 414 0
 1114 001c FB68     	 ldr r3,[r7,#12]
 1115 001e 1B68     	 ldr r3,[r3]
 1116 0020 3A68     	 ldr r2,[r7]
 1117 0022 DA60     	 str r2,[r3,#12]
 415:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1118              	 .loc 3 415 0
 1119 0024 1437     	 adds r7,r7,#20
 1120              	.LCFI79:
 1121              	 .cfi_def_cfa_offset 12
 1122 0026 BD46     	 mov sp,r7
 1123              	.LCFI80:
 1124              	 .cfi_def_cfa_register 13
 1125              	 
 1126 0028 B0BC     	 pop {r4,r5,r7}
 1127              	.LCFI81:
 1128              	 .cfi_restore 7
 1129              	 .cfi_restore 5
 1130              	 .cfi_restore 4
 1131              	 .cfi_def_cfa_offset 0
 1132 002a 7047     	 bx lr
 1133              	 .cfi_endproc
 1134              	.LFE246:
 1136              	 .section .text.XMC_ETH_MAC_SendFrame,"ax",%progbits
 1137              	 .align 2
 1138              	 .global XMC_ETH_MAC_SendFrame
 1139              	 .thumb
 1140              	 .thumb_func
 1142              	XMC_ETH_MAC_SendFrame:
 1143              	.LFB247:
 416:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 417:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Send frame */
 418:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SendFrame(XMC_ETH_MAC_t *const eth_mac, const uint8_t *frame, uint
 419:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1144              	 .loc 3 419 0
 1145              	 .cfi_startproc
 1146              	 
 1147              	 
 1148 0000 80B5     	 push {r7,lr}
 1149              	.LCFI82:
 1150              	 .cfi_def_cfa_offset 8
 1151              	 .cfi_offset 7,-8
 1152              	 .cfi_offset 14,-4
 1153 0002 88B0     	 sub sp,sp,#32
 1154              	.LCFI83:
 1155              	 .cfi_def_cfa_offset 40
 1156 0004 00AF     	 add r7,sp,#0
 1157              	.LCFI84:
 1158              	 .cfi_def_cfa_register 7
 1159 0006 F860     	 str r0,[r7,#12]
 1160 0008 B960     	 str r1,[r7,#8]
 1161 000a 7A60     	 str r2,[r7,#4]
 1162 000c 3B60     	 str r3,[r7]
 420:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 421:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint8_t *dst;
 422:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t ctrl;
 423:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 424:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", eth_mac != NULL);
 425:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", eth_mac->regs == ETH0);
 426:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", (frame != NULL) && (len > 0));
 427:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 428:../Libraries/XMCLib/src/xmc_eth_mac.c ****   dst = eth_mac->frame_end;
 1163              	 .loc 3 428 0
 1164 000e FB68     	 ldr r3,[r7,#12]
 1165 0010 1B6A     	 ldr r3,[r3,#32]
 1166 0012 BB61     	 str r3,[r7,#24]
 429:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 430:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->tx_desc[eth_mac->tx_index].status & ETH_MAC_DMA_TDES0_OWN)
 1167              	 .loc 3 430 0
 1168 0014 FB68     	 ldr r3,[r7,#12]
 1169 0016 5A69     	 ldr r2,[r3,#20]
 1170 0018 FB68     	 ldr r3,[r7,#12]
 1171 001a 93F82630 	 ldrb r3,[r3,#38]
 1172 001e 5B01     	 lsls r3,r3,#5
 1173 0020 1344     	 add r3,r3,r2
 1174 0022 1B68     	 ldr r3,[r3]
 1175 0024 002B     	 cmp r3,#0
 1176 0026 1BDA     	 bge .L39
 431:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 432:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Transmitter is busy, wait */
 433:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 1177              	 .loc 3 433 0
 1178 0028 0123     	 movs r3,#1
 1179 002a FB77     	 strb r3,[r7,#31]
 434:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (eth_mac->regs->STATUS & ETH_STATUS_TU_Msk)
 1180              	 .loc 3 434 0
 1181 002c FB68     	 ldr r3,[r7,#12]
 1182 002e 1B68     	 ldr r3,[r3]
 1183 0030 03F58053 	 add r3,r3,#4096
 1184 0034 1433     	 adds r3,r3,#20
 1185 0036 1B68     	 ldr r3,[r3]
 1186 0038 03F00403 	 and r3,r3,#4
 1187 003c 002B     	 cmp r3,#0
 1188 003e 00F09E80 	 beq .L41
 435:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 436:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Receive buffer unavailable, resume DMA */
 437:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TU_Msk;
 1189              	 .loc 3 437 0
 1190 0042 FB68     	 ldr r3,[r7,#12]
 1191 0044 1B68     	 ldr r3,[r3]
 1192 0046 03F58053 	 add r3,r3,#4096
 1193 004a 1433     	 adds r3,r3,#20
 1194 004c 0422     	 movs r2,#4
 1195 004e 1A60     	 str r2,[r3]
 438:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 1196              	 .loc 3 438 0
 1197 0050 FB68     	 ldr r3,[r7,#12]
 1198 0052 1B68     	 ldr r3,[r3]
 1199 0054 03F58053 	 add r3,r3,#4096
 1200 0058 0433     	 adds r3,r3,#4
 1201 005a 0022     	 movs r2,#0
 1202 005c 1A60     	 str r2,[r3]
 1203 005e 8EE0     	 b .L41
 1204              	.L39:
 439:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 440:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 441:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 442:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 443:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 444:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (dst == NULL)
 1205              	 .loc 3 444 0
 1206 0060 BB69     	 ldr r3,[r7,#24]
 1207 0062 002B     	 cmp r3,#0
 1208 0064 12D1     	 bne .L42
 445:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 446:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Start of a new transmit frame */
 447:../Libraries/XMCLib/src/xmc_eth_mac.c ****       dst = (uint8_t *)eth_mac->tx_desc[eth_mac->tx_index].buffer1;
 1209              	 .loc 3 447 0
 1210 0066 FB68     	 ldr r3,[r7,#12]
 1211 0068 5A69     	 ldr r2,[r3,#20]
 1212 006a FB68     	 ldr r3,[r7,#12]
 1213 006c 93F82630 	 ldrb r3,[r3,#38]
 1214 0070 5B01     	 lsls r3,r3,#5
 1215 0072 1344     	 add r3,r3,r2
 1216 0074 9B68     	 ldr r3,[r3,#8]
 1217 0076 BB61     	 str r3,[r7,#24]
 448:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].length = len;
 1218              	 .loc 3 448 0
 1219 0078 FB68     	 ldr r3,[r7,#12]
 1220 007a 5A69     	 ldr r2,[r3,#20]
 1221 007c FB68     	 ldr r3,[r7,#12]
 1222 007e 93F82630 	 ldrb r3,[r3,#38]
 1223 0082 5B01     	 lsls r3,r3,#5
 1224 0084 1344     	 add r3,r3,r2
 1225 0086 7A68     	 ldr r2,[r7,#4]
 1226 0088 5A60     	 str r2,[r3,#4]
 1227 008a 11E0     	 b .L43
 1228              	.L42:
 449:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 450:../Libraries/XMCLib/src/xmc_eth_mac.c ****     else
 451:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 452:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Sending data fragments in progress */
 453:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].length += len;
 1229              	 .loc 3 453 0
 1230 008c FB68     	 ldr r3,[r7,#12]
 1231 008e 5A69     	 ldr r2,[r3,#20]
 1232 0090 FB68     	 ldr r3,[r7,#12]
 1233 0092 93F82630 	 ldrb r3,[r3,#38]
 1234 0096 5B01     	 lsls r3,r3,#5
 1235 0098 1344     	 add r3,r3,r2
 1236 009a FA68     	 ldr r2,[r7,#12]
 1237 009c 5169     	 ldr r1,[r2,#20]
 1238 009e FA68     	 ldr r2,[r7,#12]
 1239 00a0 92F82620 	 ldrb r2,[r2,#38]
 1240 00a4 5201     	 lsls r2,r2,#5
 1241 00a6 0A44     	 add r2,r2,r1
 1242 00a8 5168     	 ldr r1,[r2,#4]
 1243 00aa 7A68     	 ldr r2,[r7,#4]
 1244 00ac 0A44     	 add r2,r2,r1
 1245 00ae 5A60     	 str r2,[r3,#4]
 1246              	.L43:
 454:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 455:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 456:../Libraries/XMCLib/src/xmc_eth_mac.c ****     memcpy(dst, frame, len);
 1247              	 .loc 3 456 0
 1248 00b0 B869     	 ldr r0,[r7,#24]
 1249 00b2 B968     	 ldr r1,[r7,#8]
 1250 00b4 7A68     	 ldr r2,[r7,#4]
 1251 00b6 FFF7FEFF 	 bl memcpy
 457:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 458:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_FRAGMENT)
 1252              	 .loc 3 458 0
 1253 00ba 3B68     	 ldr r3,[r7]
 1254 00bc 03F00103 	 and r3,r3,#1
 1255 00c0 002B     	 cmp r3,#0
 1256 00c2 03D0     	 beq .L44
 459:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 460:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* More data to come, remember current write position */
 461:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->frame_end = dst;
 1257              	 .loc 3 461 0
 1258 00c4 FB68     	 ldr r3,[r7,#12]
 1259 00c6 BA69     	 ldr r2,[r7,#24]
 1260 00c8 1A62     	 str r2,[r3,#32]
 1261 00ca 56E0     	 b .L45
 1262              	.L44:
 462:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 463:../Libraries/XMCLib/src/xmc_eth_mac.c ****     else
 464:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 465:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Frame is now ready, send it to DMA */
 466:../Libraries/XMCLib/src/xmc_eth_mac.c ****       ctrl = eth_mac->tx_desc[eth_mac->tx_index].status | ETH_MAC_DMA_TDES0_CIC;
 1263              	 .loc 3 466 0
 1264 00cc FB68     	 ldr r3,[r7,#12]
 1265 00ce 5A69     	 ldr r2,[r3,#20]
 1266 00d0 FB68     	 ldr r3,[r7,#12]
 1267 00d2 93F82630 	 ldrb r3,[r3,#38]
 1268 00d6 5B01     	 lsls r3,r3,#5
 1269 00d8 1344     	 add r3,r3,r2
 1270 00da 1B68     	 ldr r3,[r3]
 1271 00dc 43F44003 	 orr r3,r3,#12582912
 1272 00e0 7B61     	 str r3,[r7,#20]
 467:../Libraries/XMCLib/src/xmc_eth_mac.c ****       ctrl &= ~(ETH_MAC_DMA_TDES0_IC | ETH_MAC_DMA_TDES0_TTSE);
 1273              	 .loc 3 467 0
 1274 00e2 7B69     	 ldr r3,[r7,#20]
 1275 00e4 23F08443 	 bic r3,r3,#1107296256
 1276 00e8 7B61     	 str r3,[r7,#20]
 468:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 469:../Libraries/XMCLib/src/xmc_eth_mac.c ****       if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_EVENT)
 1277              	 .loc 3 469 0
 1278 00ea 3B68     	 ldr r3,[r7]
 1279 00ec 03F00203 	 and r3,r3,#2
 1280 00f0 002B     	 cmp r3,#0
 1281 00f2 03D0     	 beq .L46
 470:../Libraries/XMCLib/src/xmc_eth_mac.c ****       {
 471:../Libraries/XMCLib/src/xmc_eth_mac.c ****         ctrl |= ETH_MAC_DMA_TDES0_IC;
 1282              	 .loc 3 471 0
 1283 00f4 7B69     	 ldr r3,[r7,#20]
 1284 00f6 43F08043 	 orr r3,r3,#1073741824
 1285 00fa 7B61     	 str r3,[r7,#20]
 1286              	.L46:
 472:../Libraries/XMCLib/src/xmc_eth_mac.c ****       }
 473:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 474:../Libraries/XMCLib/src/xmc_eth_mac.c ****       if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_TIMESTAMP)
 1287              	 .loc 3 474 0
 1288 00fc 3B68     	 ldr r3,[r7]
 1289 00fe 03F00403 	 and r3,r3,#4
 1290 0102 002B     	 cmp r3,#0
 1291 0104 03D0     	 beq .L47
 475:../Libraries/XMCLib/src/xmc_eth_mac.c ****       {
 476:../Libraries/XMCLib/src/xmc_eth_mac.c ****         ctrl |= ETH_MAC_DMA_TDES0_TTSE;
 1292              	 .loc 3 476 0
 1293 0106 7B69     	 ldr r3,[r7,#20]
 1294 0108 43F00073 	 orr r3,r3,#33554432
 1295 010c 7B61     	 str r3,[r7,#20]
 1296              	.L47:
 477:../Libraries/XMCLib/src/xmc_eth_mac.c ****       }
 478:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_ts_index = eth_mac->tx_index;
 1297              	 .loc 3 478 0
 1298 010e FB68     	 ldr r3,[r7,#12]
 1299 0110 93F82620 	 ldrb r2,[r3,#38]
 1300 0114 FB68     	 ldr r3,[r7,#12]
 1301 0116 83F82820 	 strb r2,[r3,#40]
 479:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 480:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].status = ctrl | ETH_MAC_DMA_TDES0_OWN;
 1302              	 .loc 3 480 0
 1303 011a FB68     	 ldr r3,[r7,#12]
 1304 011c 5A69     	 ldr r2,[r3,#20]
 1305 011e FB68     	 ldr r3,[r7,#12]
 1306 0120 93F82630 	 ldrb r3,[r3,#38]
 1307 0124 5B01     	 lsls r3,r3,#5
 1308 0126 1344     	 add r3,r3,r2
 1309 0128 7A69     	 ldr r2,[r7,#20]
 1310 012a 42F00042 	 orr r2,r2,#-2147483648
 1311 012e 1A60     	 str r2,[r3]
 481:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 482:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_index++;
 1312              	 .loc 3 482 0
 1313 0130 FB68     	 ldr r3,[r7,#12]
 1314 0132 93F82630 	 ldrb r3,[r3,#38]
 1315 0136 0133     	 adds r3,r3,#1
 1316 0138 DAB2     	 uxtb r2,r3
 1317 013a FB68     	 ldr r3,[r7,#12]
 1318 013c 83F82620 	 strb r2,[r3,#38]
 483:../Libraries/XMCLib/src/xmc_eth_mac.c ****       if (eth_mac->tx_index == eth_mac->num_tx_buf)
 1319              	 .loc 3 483 0
 1320 0140 FB68     	 ldr r3,[r7,#12]
 1321 0142 93F82620 	 ldrb r2,[r3,#38]
 1322 0146 FB68     	 ldr r3,[r7,#12]
 1323 0148 93F82530 	 ldrb r3,[r3,#37]
 1324 014c 9A42     	 cmp r2,r3
 1325 014e 03D1     	 bne .L48
 484:../Libraries/XMCLib/src/xmc_eth_mac.c ****       {
 485:../Libraries/XMCLib/src/xmc_eth_mac.c ****         eth_mac->tx_index = 0U;
 1326              	 .loc 3 485 0
 1327 0150 FB68     	 ldr r3,[r7,#12]
 1328 0152 0022     	 movs r2,#0
 1329 0154 83F82620 	 strb r2,[r3,#38]
 1330              	.L48:
 486:../Libraries/XMCLib/src/xmc_eth_mac.c ****       }
 487:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->frame_end = NULL;
 1331              	 .loc 3 487 0
 1332 0158 FB68     	 ldr r3,[r7,#12]
 1333 015a 0022     	 movs r2,#0
 1334 015c 1A62     	 str r2,[r3,#32]
 488:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 489:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Start frame transmission */
 490:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TPS_Msk;
 1335              	 .loc 3 490 0
 1336 015e FB68     	 ldr r3,[r7,#12]
 1337 0160 1B68     	 ldr r3,[r3]
 1338 0162 03F58053 	 add r3,r3,#4096
 1339 0166 1433     	 adds r3,r3,#20
 1340 0168 0222     	 movs r2,#2
 1341 016a 1A60     	 str r2,[r3]
 491:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 1342              	 .loc 3 491 0
 1343 016c FB68     	 ldr r3,[r7,#12]
 1344 016e 1B68     	 ldr r3,[r3]
 1345 0170 03F58053 	 add r3,r3,#4096
 1346 0174 0433     	 adds r3,r3,#4
 1347 0176 0022     	 movs r2,#0
 1348 0178 1A60     	 str r2,[r3]
 1349              	.L45:
 492:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 493:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_OK;
 1350              	 .loc 3 493 0
 1351 017a 0023     	 movs r3,#0
 1352 017c FB77     	 strb r3,[r7,#31]
 1353              	.L41:
 494:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 495:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 496:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 1354              	 .loc 3 496 0
 1355 017e FB7F     	 ldrb r3,[r7,#31]
 497:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1356              	 .loc 3 497 0
 1357 0180 1846     	 mov r0,r3
 1358 0182 2037     	 adds r7,r7,#32
 1359              	.LCFI85:
 1360              	 .cfi_def_cfa_offset 8
 1361 0184 BD46     	 mov sp,r7
 1362              	.LCFI86:
 1363              	 .cfi_def_cfa_register 13
 1364              	 
 1365 0186 80BD     	 pop {r7,pc}
 1366              	 .cfi_endproc
 1367              	.LFE247:
 1369              	 .section .text.XMC_ETH_MAC_ReadFrame,"ax",%progbits
 1370              	 .align 2
 1371              	 .global XMC_ETH_MAC_ReadFrame
 1372              	 .thumb
 1373              	 .thumb_func
 1375              	XMC_ETH_MAC_ReadFrame:
 1376              	.LFB248:
 498:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 499:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Read frame */
 500:../Libraries/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_ReadFrame(XMC_ETH_MAC_t *const eth_mac, uint8_t *frame, uint32_t len)
 501:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1377              	 .loc 3 501 0
 1378              	 .cfi_startproc
 1379              	 
 1380              	 
 1381 0000 80B5     	 push {r7,lr}
 1382              	.LCFI87:
 1383              	 .cfi_def_cfa_offset 8
 1384              	 .cfi_offset 7,-8
 1385              	 .cfi_offset 14,-4
 1386 0002 86B0     	 sub sp,sp,#24
 1387              	.LCFI88:
 1388              	 .cfi_def_cfa_offset 32
 1389 0004 00AF     	 add r7,sp,#0
 1390              	.LCFI89:
 1391              	 .cfi_def_cfa_register 7
 1392 0006 F860     	 str r0,[r7,#12]
 1393 0008 B960     	 str r1,[r7,#8]
 1394 000a 7A60     	 str r2,[r7,#4]
 502:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint8_t const *src;
 503:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 504:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", eth_mac != NULL);
 505:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", eth_mac->regs == ETH0);
 506:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", (frame != NULL) && (len > 0));
 507:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 508:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Fast-copy data to packet buffer */
 509:../Libraries/XMCLib/src/xmc_eth_mac.c ****   src = (uint8_t const *)eth_mac->rx_desc[eth_mac->rx_index].buffer1;
 1395              	 .loc 3 509 0
 1396 000c FB68     	 ldr r3,[r7,#12]
 1397 000e 1A69     	 ldr r2,[r3,#16]
 1398 0010 FB68     	 ldr r3,[r7,#12]
 1399 0012 93F82730 	 ldrb r3,[r3,#39]
 1400 0016 5B01     	 lsls r3,r3,#5
 1401 0018 1344     	 add r3,r3,r2
 1402 001a 9B68     	 ldr r3,[r3,#8]
 1403 001c 7B61     	 str r3,[r7,#20]
 510:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 511:../Libraries/XMCLib/src/xmc_eth_mac.c ****   memcpy(frame, src, len);
 1404              	 .loc 3 511 0
 1405 001e B868     	 ldr r0,[r7,#8]
 1406 0020 7969     	 ldr r1,[r7,#20]
 1407 0022 7A68     	 ldr r2,[r7,#4]
 1408 0024 FFF7FEFF 	 bl memcpy
 512:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 513:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Return this block back to DMA */
 514:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[eth_mac->rx_index].status = ETH_MAC_DMA_RDES0_OWN;
 1409              	 .loc 3 514 0
 1410 0028 FB68     	 ldr r3,[r7,#12]
 1411 002a 1A69     	 ldr r2,[r3,#16]
 1412 002c FB68     	 ldr r3,[r7,#12]
 1413 002e 93F82730 	 ldrb r3,[r3,#39]
 1414 0032 5B01     	 lsls r3,r3,#5
 1415 0034 1344     	 add r3,r3,r2
 1416 0036 4FF00042 	 mov r2,#-2147483648
 1417 003a 1A60     	 str r2,[r3]
 515:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 516:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index++;
 1418              	 .loc 3 516 0
 1419 003c FB68     	 ldr r3,[r7,#12]
 1420 003e 93F82730 	 ldrb r3,[r3,#39]
 1421 0042 0133     	 adds r3,r3,#1
 1422 0044 DAB2     	 uxtb r2,r3
 1423 0046 FB68     	 ldr r3,[r7,#12]
 1424 0048 83F82720 	 strb r2,[r3,#39]
 517:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->rx_index == eth_mac->num_rx_buf)
 1425              	 .loc 3 517 0
 1426 004c FB68     	 ldr r3,[r7,#12]
 1427 004e 93F82720 	 ldrb r2,[r3,#39]
 1428 0052 FB68     	 ldr r3,[r7,#12]
 1429 0054 93F82430 	 ldrb r3,[r3,#36]
 1430 0058 9A42     	 cmp r2,r3
 1431 005a 03D1     	 bne .L51
 518:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 519:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_index = 0U;
 1432              	 .loc 3 519 0
 1433 005c FB68     	 ldr r3,[r7,#12]
 1434 005e 0022     	 movs r2,#0
 1435 0060 83F82720 	 strb r2,[r3,#39]
 1436              	.L51:
 520:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 521:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 522:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->regs->STATUS & ETH_STATUS_RU_Msk)
 1437              	 .loc 3 522 0
 1438 0064 FB68     	 ldr r3,[r7,#12]
 1439 0066 1B68     	 ldr r3,[r3]
 1440 0068 03F58053 	 add r3,r3,#4096
 1441 006c 1433     	 adds r3,r3,#20
 1442 006e 1B68     	 ldr r3,[r3]
 1443 0070 03F08003 	 and r3,r3,#128
 1444 0074 002B     	 cmp r3,#0
 1445 0076 0DD0     	 beq .L52
 523:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 524:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Receive buffer unavailable, resume DMA */
 525:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_RU_Msk;
 1446              	 .loc 3 525 0
 1447 0078 FB68     	 ldr r3,[r7,#12]
 1448 007a 1B68     	 ldr r3,[r3]
 1449 007c 03F58053 	 add r3,r3,#4096
 1450 0080 1433     	 adds r3,r3,#20
 1451 0082 8022     	 movs r2,#128
 1452 0084 1A60     	 str r2,[r3]
 526:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->RECEIVE_POLL_DEMAND = 0U;
 1453              	 .loc 3 526 0
 1454 0086 FB68     	 ldr r3,[r7,#12]
 1455 0088 1B68     	 ldr r3,[r3]
 1456 008a 03F58053 	 add r3,r3,#4096
 1457 008e 0833     	 adds r3,r3,#8
 1458 0090 0022     	 movs r2,#0
 1459 0092 1A60     	 str r2,[r3]
 1460              	.L52:
 527:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 528:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 529:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (len);
 1461              	 .loc 3 529 0
 1462 0094 7B68     	 ldr r3,[r7,#4]
 530:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1463              	 .loc 3 530 0
 1464 0096 1846     	 mov r0,r3
 1465 0098 1837     	 adds r7,r7,#24
 1466              	.LCFI90:
 1467              	 .cfi_def_cfa_offset 8
 1468 009a BD46     	 mov sp,r7
 1469              	.LCFI91:
 1470              	 .cfi_def_cfa_register 13
 1471              	 
 1472 009c 80BD     	 pop {r7,pc}
 1473              	 .cfi_endproc
 1474              	.LFE248:
 1476 009e 00BF     	 .section .text.XMC_ETH_MAC_GetRxFrameSize,"ax",%progbits
 1477              	 .align 2
 1478              	 .global XMC_ETH_MAC_GetRxFrameSize
 1479              	 .thumb
 1480              	 .thumb_func
 1482              	XMC_ETH_MAC_GetRxFrameSize:
 1483              	.LFB249:
 531:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 532:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Get RX frame size */
 533:../Libraries/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetRxFrameSize(XMC_ETH_MAC_t *const eth_mac)
 534:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1484              	 .loc 3 534 0
 1485              	 .cfi_startproc
 1486              	 
 1487              	 
 1488              	 
 1489 0000 80B4     	 push {r7}
 1490              	.LCFI92:
 1491              	 .cfi_def_cfa_offset 4
 1492              	 .cfi_offset 7,-4
 1493 0002 85B0     	 sub sp,sp,#20
 1494              	.LCFI93:
 1495              	 .cfi_def_cfa_offset 24
 1496 0004 00AF     	 add r7,sp,#0
 1497              	.LCFI94:
 1498              	 .cfi_def_cfa_register 7
 1499 0006 7860     	 str r0,[r7,#4]
 535:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t status;
 536:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t len = 0U;
 1500              	 .loc 3 536 0
 1501 0008 0023     	 movs r3,#0
 1502 000a FB60     	 str r3,[r7,#12]
 537:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 538:../Libraries/XMCLib/src/xmc_eth_mac.c ****   status = eth_mac->rx_desc[eth_mac->rx_index].status;
 1503              	 .loc 3 538 0
 1504 000c 7B68     	 ldr r3,[r7,#4]
 1505 000e 1A69     	 ldr r2,[r3,#16]
 1506 0010 7B68     	 ldr r3,[r7,#4]
 1507 0012 93F82730 	 ldrb r3,[r3,#39]
 1508 0016 5B01     	 lsls r3,r3,#5
 1509 0018 1344     	 add r3,r3,r2
 1510 001a 1B68     	 ldr r3,[r3]
 1511 001c BB60     	 str r3,[r7,#8]
 539:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 540:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (status & ETH_MAC_DMA_RDES0_OWN)
 1512              	 .loc 3 540 0
 1513 001e BB68     	 ldr r3,[r7,#8]
 1514 0020 002B     	 cmp r3,#0
 1515 0022 02DA     	 bge .L55
 541:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 542:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Owned by DMA */
 543:../Libraries/XMCLib/src/xmc_eth_mac.c ****     len = 0U;
 1516              	 .loc 3 543 0
 1517 0024 0023     	 movs r3,#0
 1518 0026 FB60     	 str r3,[r7,#12]
 1519 0028 18E0     	 b .L56
 1520              	.L55:
 544:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 545:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (((status & ETH_MAC_DMA_RDES0_ES) != 0U) ||
 1521              	 .loc 3 545 0
 1522 002a BB68     	 ldr r3,[r7,#8]
 1523 002c 03F40043 	 and r3,r3,#32768
 1524 0030 002B     	 cmp r3,#0
 1525 0032 09D1     	 bne .L57
 546:../Libraries/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1526              	 .loc 3 546 0 discriminator 1
 1527 0034 BB68     	 ldr r3,[r7,#8]
 1528 0036 03F40073 	 and r3,r3,#512
 545:../Libraries/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1529              	 .loc 3 545 0 discriminator 1
 1530 003a 002B     	 cmp r3,#0
 1531 003c 04D0     	 beq .L57
 547:../Libraries/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_LS) == 0U))
 1532              	 .loc 3 547 0
 1533 003e BB68     	 ldr r3,[r7,#8]
 1534 0040 03F48073 	 and r3,r3,#256
 546:../Libraries/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1535              	 .loc 3 546 0
 1536 0044 002B     	 cmp r3,#0
 1537 0046 03D1     	 bne .L58
 1538              	.L57:
 548:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 549:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Error, this block is invalid */
 550:../Libraries/XMCLib/src/xmc_eth_mac.c ****     len = 0xFFFFFFFFU;
 1539              	 .loc 3 550 0
 1540 0048 4FF0FF33 	 mov r3,#-1
 1541 004c FB60     	 str r3,[r7,#12]
 1542 004e 05E0     	 b .L56
 1543              	.L58:
 551:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 552:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 553:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 554:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Subtract CRC */
 555:../Libraries/XMCLib/src/xmc_eth_mac.c ****     len = ((status & ETH_MAC_DMA_RDES0_FL) >> 16U) - 4U;
 1544              	 .loc 3 555 0
 1545 0050 BA68     	 ldr r2,[r7,#8]
 1546 0052 064B     	 ldr r3,.L60
 1547 0054 1340     	 ands r3,r3,r2
 1548 0056 1B0C     	 lsrs r3,r3,#16
 1549 0058 043B     	 subs r3,r3,#4
 1550 005a FB60     	 str r3,[r7,#12]
 1551              	.L56:
 556:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 557:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 558:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return len;
 1552              	 .loc 3 558 0
 1553 005c FB68     	 ldr r3,[r7,#12]
 559:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1554              	 .loc 3 559 0
 1555 005e 1846     	 mov r0,r3
 1556 0060 1437     	 adds r7,r7,#20
 1557              	.LCFI95:
 1558              	 .cfi_def_cfa_offset 4
 1559 0062 BD46     	 mov sp,r7
 1560              	.LCFI96:
 1561              	 .cfi_def_cfa_register 13
 1562              	 
 1563 0064 5DF8047B 	 ldr r7,[sp],#4
 1564              	.LCFI97:
 1565              	 .cfi_restore 7
 1566              	 .cfi_def_cfa_offset 0
 1567 0068 7047     	 bx lr
 1568              	.L61:
 1569 006a 00BF     	 .align 2
 1570              	.L60:
 1571 006c 0000FF3F 	 .word 1073676288
 1572              	 .cfi_endproc
 1573              	.LFE249:
 1575              	 .section .text.XMC_ETH_MAC_SetManagmentClockDivider,"ax",%progbits
 1576              	 .align 2
 1577              	 .global XMC_ETH_MAC_SetManagmentClockDivider
 1578              	 .thumb
 1579              	 .thumb_func
 1581              	XMC_ETH_MAC_SetManagmentClockDivider:
 1582              	.LFB250:
 560:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 561:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set management clock divider */
 562:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac)
 563:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1583              	 .loc 3 563 0
 1584              	 .cfi_startproc
 1585              	 
 1586              	 
 1587 0000 80B5     	 push {r7,lr}
 1588              	.LCFI98:
 1589              	 .cfi_def_cfa_offset 8
 1590              	 .cfi_offset 7,-8
 1591              	 .cfi_offset 14,-4
 1592 0002 86B0     	 sub sp,sp,#24
 1593              	.LCFI99:
 1594              	 .cfi_def_cfa_offset 32
 1595 0004 00AF     	 add r7,sp,#0
 1596              	.LCFI100:
 1597              	 .cfi_def_cfa_register 7
 1598 0006 7860     	 str r0,[r7,#4]
 564:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t eth_mac_clk;
 565:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 566:../Libraries/XMCLib/src/xmc_eth_mac.c ****   __IO uint32_t *reg;
 567:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 568:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac_clk = XMC_SCU_CLOCK_GetEthernetClockFrequency();
 1599              	 .loc 3 568 0
 1600 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetEthernetClockFrequency
 1601 000c 3861     	 str r0,[r7,#16]
 569:../Libraries/XMCLib/src/xmc_eth_mac.c ****   status = XMC_ETH_MAC_STATUS_OK;
 1602              	 .loc 3 569 0
 1603 000e 0023     	 movs r3,#0
 1604 0010 FB75     	 strb r3,[r7,#23]
 570:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 571:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg = &(eth_mac->regs->GMII_ADDRESS);
 1605              	 .loc 3 571 0
 1606 0012 7B68     	 ldr r3,[r7,#4]
 1607 0014 1B68     	 ldr r3,[r3]
 1608 0016 1033     	 adds r3,r3,#16
 1609 0018 FB60     	 str r3,[r7,#12]
 572:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_35MHZ)
 1610              	 .loc 3 572 0
 1611 001a 3B69     	 ldr r3,[r7,#16]
 1612 001c 1A4A     	 ldr r2,.L71
 1613 001e 9342     	 cmp r3,r2
 1614 0020 03D8     	 bhi .L63
 573:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 574:../Libraries/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_16;
 1615              	 .loc 3 574 0
 1616 0022 FB68     	 ldr r3,[r7,#12]
 1617 0024 0822     	 movs r2,#8
 1618 0026 1A60     	 str r2,[r3]
 1619 0028 29E0     	 b .L64
 1620              	.L63:
 575:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 576:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_60MHZ)
 1621              	 .loc 3 576 0
 1622 002a 3B69     	 ldr r3,[r7,#16]
 1623 002c 174A     	 ldr r2,.L71+4
 1624 002e 9342     	 cmp r3,r2
 1625 0030 03D8     	 bhi .L65
 577:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 578:../Libraries/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_26;
 1626              	 .loc 3 578 0
 1627 0032 FB68     	 ldr r3,[r7,#12]
 1628 0034 0C22     	 movs r2,#12
 1629 0036 1A60     	 str r2,[r3]
 1630 0038 21E0     	 b .L64
 1631              	.L65:
 579:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 580:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_100MHZ)
 1632              	 .loc 3 580 0
 1633 003a 3B69     	 ldr r3,[r7,#16]
 1634 003c 144A     	 ldr r2,.L71+8
 1635 003e 9342     	 cmp r3,r2
 1636 0040 03D8     	 bhi .L66
 581:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 582:../Libraries/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_42;
 1637              	 .loc 3 582 0
 1638 0042 FB68     	 ldr r3,[r7,#12]
 1639 0044 0022     	 movs r2,#0
 1640 0046 1A60     	 str r2,[r3]
 1641 0048 19E0     	 b .L64
 1642              	.L66:
 583:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 584:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_150MHZ)
 1643              	 .loc 3 584 0
 1644 004a 3B69     	 ldr r3,[r7,#16]
 1645 004c 114A     	 ldr r2,.L71+12
 1646 004e 9342     	 cmp r3,r2
 1647 0050 03D8     	 bhi .L67
 585:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 586:../Libraries/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_62;
 1648              	 .loc 3 586 0
 1649 0052 FB68     	 ldr r3,[r7,#12]
 1650 0054 0422     	 movs r2,#4
 1651 0056 1A60     	 str r2,[r3]
 1652 0058 11E0     	 b .L64
 1653              	.L67:
 587:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 588:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_200MHZ)
 1654              	 .loc 3 588 0
 1655 005a 3B69     	 ldr r3,[r7,#16]
 1656 005c 0E4A     	 ldr r2,.L71+16
 1657 005e 9342     	 cmp r3,r2
 1658 0060 03D8     	 bhi .L68
 589:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 590:../Libraries/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_102;
 1659              	 .loc 3 590 0
 1660 0062 FB68     	 ldr r3,[r7,#12]
 1661 0064 1022     	 movs r2,#16
 1662 0066 1A60     	 str r2,[r3]
 1663 0068 09E0     	 b .L64
 1664              	.L68:
 591:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 592:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_250MHZ)
 1665              	 .loc 3 592 0
 1666 006a 3B69     	 ldr r3,[r7,#16]
 1667 006c 0B4A     	 ldr r2,.L71+20
 1668 006e 9342     	 cmp r3,r2
 1669 0070 03D8     	 bhi .L69
 593:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 594:../Libraries/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_124;
 1670              	 .loc 3 594 0
 1671 0072 FB68     	 ldr r3,[r7,#12]
 1672 0074 1422     	 movs r2,#20
 1673 0076 1A60     	 str r2,[r3]
 1674 0078 01E0     	 b .L64
 1675              	.L69:
 595:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 596:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 597:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 598:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_ERROR;
 1676              	 .loc 3 598 0
 1677 007a 0223     	 movs r3,#2
 1678 007c FB75     	 strb r3,[r7,#23]
 1679              	.L64:
 599:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 600:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 601:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 1680              	 .loc 3 601 0
 1681 007e FB7D     	 ldrb r3,[r7,#23]
 602:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1682              	 .loc 3 602 0
 1683 0080 1846     	 mov r0,r3
 1684 0082 1837     	 adds r7,r7,#24
 1685              	.LCFI101:
 1686              	 .cfi_def_cfa_offset 8
 1687 0084 BD46     	 mov sp,r7
 1688              	.LCFI102:
 1689              	 .cfi_def_cfa_register 13
 1690              	 
 1691 0086 80BD     	 pop {r7,pc}
 1692              	.L72:
 1693              	 .align 2
 1694              	.L71:
 1695 0088 C00E1602 	 .word 35000000
 1696 008c 00879303 	 .word 60000000
 1697 0090 00E1F505 	 .word 100000000
 1698 0094 80D1F008 	 .word 150000000
 1699 0098 00C2EB0B 	 .word 200000000
 1700 009c 80B2E60E 	 .word 250000000
 1701              	 .cfi_endproc
 1702              	.LFE250:
 1704              	 .section .text.XMC_ETH_MAC_Enable,"ax",%progbits
 1705              	 .align 2
 1706              	 .global XMC_ETH_MAC_Enable
 1707              	 .thumb
 1708              	 .thumb_func
 1710              	XMC_ETH_MAC_Enable:
 1711              	.LFB251:
 603:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 604:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC enable */
 605:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac)
 606:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1712              	 .loc 3 606 0
 1713              	 .cfi_startproc
 1714              	 
 1715              	 
 1716 0000 80B5     	 push {r7,lr}
 1717              	.LCFI103:
 1718              	 .cfi_def_cfa_offset 8
 1719              	 .cfi_offset 7,-8
 1720              	 .cfi_offset 14,-4
 1721 0002 82B0     	 sub sp,sp,#8
 1722              	.LCFI104:
 1723              	 .cfi_def_cfa_offset 16
 1724 0004 00AF     	 add r7,sp,#0
 1725              	.LCFI105:
 1726              	 .cfi_def_cfa_register 7
 1727 0006 7860     	 str r0,[r7,#4]
 607:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_UNUSED_ARG(eth_mac);
 608:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 609:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_ETH);
 1728              	 .loc 3 609 0
 1729 0008 0420     	 movs r0,#4
 1730 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 610:../Libraries/XMCLib/src/xmc_eth_mac.c **** #if UC_DEVICE != XMC4500
 611:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ETH0);
 612:../Libraries/XMCLib/src/xmc_eth_mac.c **** #endif
 613:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ETH0);
 1731              	 .loc 3 613 0
 1732 000e 0348     	 ldr r0,.L74
 1733 0010 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 614:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1734              	 .loc 3 614 0
 1735 0014 0837     	 adds r7,r7,#8
 1736              	.LCFI106:
 1737              	 .cfi_def_cfa_offset 8
 1738 0016 BD46     	 mov sp,r7
 1739              	.LCFI107:
 1740              	 .cfi_def_cfa_register 13
 1741              	 
 1742 0018 80BD     	 pop {r7,pc}
 1743              	.L75:
 1744 001a 00BF     	 .align 2
 1745              	.L74:
 1746 001c 04000020 	 .word 536870916
 1747              	 .cfi_endproc
 1748              	.LFE251:
 1750              	 .section .text.XMC_ETH_MAC_Disable,"ax",%progbits
 1751              	 .align 2
 1752              	 .global XMC_ETH_MAC_Disable
 1753              	 .thumb
 1754              	 .thumb_func
 1756              	XMC_ETH_MAC_Disable:
 1757              	.LFB252:
 615:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 616:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC disable */
 617:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac)
 618:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1758              	 .loc 3 618 0
 1759              	 .cfi_startproc
 1760              	 
 1761              	 
 1762 0000 80B5     	 push {r7,lr}
 1763              	.LCFI108:
 1764              	 .cfi_def_cfa_offset 8
 1765              	 .cfi_offset 7,-8
 1766              	 .cfi_offset 14,-4
 1767 0002 82B0     	 sub sp,sp,#8
 1768              	.LCFI109:
 1769              	 .cfi_def_cfa_offset 16
 1770 0004 00AF     	 add r7,sp,#0
 1771              	.LCFI110:
 1772              	 .cfi_def_cfa_register 7
 1773 0006 7860     	 str r0,[r7,#4]
 619:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_UNUSED_ARG(eth_mac);
 620:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 621:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ETH0);
 1774              	 .loc 3 621 0
 1775 0008 0448     	 ldr r0,.L77
 1776 000a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 622:../Libraries/XMCLib/src/xmc_eth_mac.c **** #if UC_DEVICE != XMC4500
 623:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ETH0);
 624:../Libraries/XMCLib/src/xmc_eth_mac.c **** #endif
 625:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_DisableClock(XMC_SCU_CLOCK_ETH);
 1777              	 .loc 3 625 0
 1778 000e 0420     	 movs r0,#4
 1779 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableClock
 626:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1780              	 .loc 3 626 0
 1781 0014 0837     	 adds r7,r7,#8
 1782              	.LCFI111:
 1783              	 .cfi_def_cfa_offset 8
 1784 0016 BD46     	 mov sp,r7
 1785              	.LCFI112:
 1786              	 .cfi_def_cfa_register 13
 1787              	 
 1788 0018 80BD     	 pop {r7,pc}
 1789              	.L78:
 1790 001a 00BF     	 .align 2
 1791              	.L77:
 1792 001c 04000020 	 .word 536870916
 1793              	 .cfi_endproc
 1794              	.LFE252:
 1796              	 .section .text.XMC_ETH_MAC_ReadPhy,"ax",%progbits
 1797              	 .align 2
 1798              	 .global XMC_ETH_MAC_ReadPhy
 1799              	 .thumb
 1800              	 .thumb_func
 1802              	XMC_ETH_MAC_ReadPhy:
 1803              	.LFB253:
 627:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 628:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Read physical layer and obtain status */
 629:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *eth_mac, uint8_t phy_addr, uint8_t reg_addr
 630:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1804              	 .loc 3 630 0
 1805              	 .cfi_startproc
 1806              	 
 1807              	 
 1808              	 
 1809 0000 80B4     	 push {r7}
 1810              	.LCFI113:
 1811              	 .cfi_def_cfa_offset 4
 1812              	 .cfi_offset 7,-4
 1813 0002 87B0     	 sub sp,sp,#28
 1814              	.LCFI114:
 1815              	 .cfi_def_cfa_offset 32
 1816 0004 00AF     	 add r7,sp,#0
 1817              	.LCFI115:
 1818              	 .cfi_def_cfa_register 7
 1819 0006 F860     	 str r0,[r7,#12]
 1820 0008 7B60     	 str r3,[r7,#4]
 1821 000a 0B46     	 mov r3,r1
 1822 000c FB72     	 strb r3,[r7,#11]
 1823 000e 1346     	 mov r3,r2
 1824 0010 BB72     	 strb r3,[r7,#10]
 631:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t retries;
 632:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 633:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_PhyRead: Parameter error", data != NULL);
 634:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 635:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_ADDRESS = (uint32_t)((eth_mac->regs->GMII_ADDRESS & (uint32_t)ETH_GMII_ADDRES
 1825              	 .loc 3 635 0
 1826 0012 FB68     	 ldr r3,[r7,#12]
 1827 0014 1B68     	 ldr r3,[r3]
 1828 0016 FA68     	 ldr r2,[r7,#12]
 1829 0018 1268     	 ldr r2,[r2]
 1830 001a 1269     	 ldr r2,[r2,#16]
 1831 001c 02F03C01 	 and r1,r2,#60
 636:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 637:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos) |
 1832              	 .loc 3 637 0
 1833 0020 FA7A     	 ldrb r2,[r7,#11]
 1834 0022 D202     	 lsls r2,r2,#11
 636:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 1835              	 .loc 3 636 0
 1836 0024 1143     	 orrs r1,r1,r2
 638:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)((uint32_t)reg_addr << ETH_GMII_ADDRESS_MR_Pos));
 1837              	 .loc 3 638 0
 1838 0026 BA7A     	 ldrb r2,[r7,#10]
 1839 0028 9201     	 lsls r2,r2,#6
 635:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 1840              	 .loc 3 635 0
 1841 002a 0A43     	 orrs r2,r2,r1
 1842 002c 42F00102 	 orr r2,r2,#1
 1843 0030 1A61     	 str r2,[r3,#16]
 639:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 640:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Poll busy bit during max PHY_TIMEOUT time */
 641:../Libraries/XMCLib/src/xmc_eth_mac.c ****   retries = 0U;
 1844              	 .loc 3 641 0
 1845 0032 0023     	 movs r3,#0
 1846 0034 7B61     	 str r3,[r7,#20]
 1847              	.L82:
 642:../Libraries/XMCLib/src/xmc_eth_mac.c ****   do
 643:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 644:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if ((eth_mac->regs->GMII_ADDRESS & ETH_GMII_ADDRESS_MB_Msk) == 0U)
 1848              	 .loc 3 644 0
 1849 0036 FB68     	 ldr r3,[r7,#12]
 1850 0038 1B68     	 ldr r3,[r3]
 1851 003a 1B69     	 ldr r3,[r3,#16]
 1852 003c 03F00103 	 and r3,r3,#1
 1853 0040 002B     	 cmp r3,#0
 1854 0042 07D1     	 bne .L80
 645:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 646:../Libraries/XMCLib/src/xmc_eth_mac.c ****       *data = (uint16_t)(eth_mac->regs->GMII_DATA & ETH_GMII_DATA_MD_Msk);
 1855              	 .loc 3 646 0
 1856 0044 FB68     	 ldr r3,[r7,#12]
 1857 0046 1B68     	 ldr r3,[r3]
 1858 0048 5B69     	 ldr r3,[r3,#20]
 1859 004a 9AB2     	 uxth r2,r3
 1860 004c 7B68     	 ldr r3,[r7,#4]
 1861 004e 1A80     	 strh r2,[r3]
 647:../Libraries/XMCLib/src/xmc_eth_mac.c ****       return XMC_ETH_MAC_STATUS_OK;
 1862              	 .loc 3 647 0
 1863 0050 0023     	 movs r3,#0
 1864 0052 08E0     	 b .L81
 1865              	.L80:
 648:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 649:../Libraries/XMCLib/src/xmc_eth_mac.c ****     ++retries;
 1866              	 .loc 3 649 0
 1867 0054 7B69     	 ldr r3,[r7,#20]
 1868 0056 0133     	 adds r3,r3,#1
 1869 0058 7B61     	 str r3,[r7,#20]
 650:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 651:../Libraries/XMCLib/src/xmc_eth_mac.c ****   while (retries < XMC_ETH_MAC_PHY_MAX_RETRIES);
 1870              	 .loc 3 651 0
 1871 005a 7B69     	 ldr r3,[r7,#20]
 1872 005c 4FF6FE72 	 movw r2,#65534
 1873 0060 9342     	 cmp r3,r2
 1874 0062 E8D9     	 bls .L82
 652:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 653:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return XMC_ETH_MAC_STATUS_ERROR;
 1875              	 .loc 3 653 0
 1876 0064 0223     	 movs r3,#2
 1877              	.L81:
 654:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1878              	 .loc 3 654 0
 1879 0066 1846     	 mov r0,r3
 1880 0068 1C37     	 adds r7,r7,#28
 1881              	.LCFI116:
 1882              	 .cfi_def_cfa_offset 4
 1883 006a BD46     	 mov sp,r7
 1884              	.LCFI117:
 1885              	 .cfi_def_cfa_register 13
 1886              	 
 1887 006c 5DF8047B 	 ldr r7,[sp],#4
 1888              	.LCFI118:
 1889              	 .cfi_restore 7
 1890              	 .cfi_def_cfa_offset 0
 1891 0070 7047     	 bx lr
 1892              	 .cfi_endproc
 1893              	.LFE253:
 1895 0072 00BF     	 .section .text.XMC_ETH_MAC_WritePhy,"ax",%progbits
 1896              	 .align 2
 1897              	 .global XMC_ETH_MAC_WritePhy
 1898              	 .thumb
 1899              	 .thumb_func
 1901              	XMC_ETH_MAC_WritePhy:
 1902              	.LFB254:
 655:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 656:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Write physical layer and return status */
 657:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *eth_mac, uint8_t phy_addr, uint8_t reg_add
 658:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1903              	 .loc 3 658 0
 1904              	 .cfi_startproc
 1905              	 
 1906              	 
 1907              	 
 1908 0000 80B4     	 push {r7}
 1909              	.LCFI119:
 1910              	 .cfi_def_cfa_offset 4
 1911              	 .cfi_offset 7,-4
 1912 0002 85B0     	 sub sp,sp,#20
 1913              	.LCFI120:
 1914              	 .cfi_def_cfa_offset 24
 1915 0004 00AF     	 add r7,sp,#0
 1916              	.LCFI121:
 1917              	 .cfi_def_cfa_register 7
 1918 0006 7860     	 str r0,[r7,#4]
 1919 0008 0846     	 mov r0,r1
 1920 000a 1146     	 mov r1,r2
 1921 000c 1A46     	 mov r2,r3
 1922 000e 0346     	 mov r3,r0
 1923 0010 FB70     	 strb r3,[r7,#3]
 1924 0012 0B46     	 mov r3,r1
 1925 0014 BB70     	 strb r3,[r7,#2]
 1926 0016 1346     	 mov r3,r2
 1927 0018 3B80     	 strh r3,[r7]
 659:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t retries;
 660:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 661:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_DATA  = data;
 1928              	 .loc 3 661 0
 1929 001a 7B68     	 ldr r3,[r7,#4]
 1930 001c 1B68     	 ldr r3,[r3]
 1931 001e 3A88     	 ldrh r2,[r7]
 1932 0020 5A61     	 str r2,[r3,#20]
 662:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_ADDRESS = (uint32_t)((eth_mac->regs->GMII_ADDRESS & (uint32_t)ETH_GMII_ADDRES
 1933              	 .loc 3 662 0
 1934 0022 7B68     	 ldr r3,[r7,#4]
 1935 0024 1B68     	 ldr r3,[r3]
 1936 0026 7A68     	 ldr r2,[r7,#4]
 1937 0028 1268     	 ldr r2,[r2]
 1938 002a 1269     	 ldr r2,[r2,#16]
 1939 002c 02F03C01 	 and r1,r2,#60
 663:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 664:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)ETH_GMII_ADDRESS_MW_Msk |
 665:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos) |
 1940              	 .loc 3 665 0
 1941 0030 FA78     	 ldrb r2,[r7,#3]
 1942 0032 D202     	 lsls r2,r2,#11
 664:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos) |
 1943              	 .loc 3 664 0
 1944 0034 1143     	 orrs r1,r1,r2
 666:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)((uint32_t)reg_addr << ETH_GMII_ADDRESS_MR_Pos));
 1945              	 .loc 3 666 0
 1946 0036 BA78     	 ldrb r2,[r7,#2]
 1947 0038 9201     	 lsls r2,r2,#6
 662:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 1948              	 .loc 3 662 0
 1949 003a 0A43     	 orrs r2,r2,r1
 1950 003c 42F00302 	 orr r2,r2,#3
 1951 0040 1A61     	 str r2,[r3,#16]
 667:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 668:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Poll busy bit during max PHY_TIMEOUT time */
 669:../Libraries/XMCLib/src/xmc_eth_mac.c ****   retries = 0U;
 1952              	 .loc 3 669 0
 1953 0042 0023     	 movs r3,#0
 1954 0044 FB60     	 str r3,[r7,#12]
 1955              	.L86:
 670:../Libraries/XMCLib/src/xmc_eth_mac.c ****   do
 671:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 672:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if ((eth_mac->regs->GMII_ADDRESS & ETH_GMII_ADDRESS_MB_Msk) == 0U)
 1956              	 .loc 3 672 0
 1957 0046 7B68     	 ldr r3,[r7,#4]
 1958 0048 1B68     	 ldr r3,[r3]
 1959 004a 1B69     	 ldr r3,[r3,#16]
 1960 004c 03F00103 	 and r3,r3,#1
 1961 0050 002B     	 cmp r3,#0
 1962 0052 01D1     	 bne .L84
 673:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 674:../Libraries/XMCLib/src/xmc_eth_mac.c ****       return XMC_ETH_MAC_STATUS_OK;
 1963              	 .loc 3 674 0
 1964 0054 0023     	 movs r3,#0
 1965 0056 08E0     	 b .L85
 1966              	.L84:
 675:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 676:../Libraries/XMCLib/src/xmc_eth_mac.c ****     ++retries;
 1967              	 .loc 3 676 0
 1968 0058 FB68     	 ldr r3,[r7,#12]
 1969 005a 0133     	 adds r3,r3,#1
 1970 005c FB60     	 str r3,[r7,#12]
 677:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 678:../Libraries/XMCLib/src/xmc_eth_mac.c ****   while (retries < XMC_ETH_MAC_PHY_MAX_RETRIES);
 1971              	 .loc 3 678 0
 1972 005e FB68     	 ldr r3,[r7,#12]
 1973 0060 4FF6FE72 	 movw r2,#65534
 1974 0064 9342     	 cmp r3,r2
 1975 0066 EED9     	 bls .L86
 679:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 680:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return XMC_ETH_MAC_STATUS_ERROR;
 1976              	 .loc 3 680 0
 1977 0068 0223     	 movs r3,#2
 1978              	.L85:
 681:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1979              	 .loc 3 681 0
 1980 006a 1846     	 mov r0,r3
 1981 006c 1437     	 adds r7,r7,#20
 1982              	.LCFI122:
 1983              	 .cfi_def_cfa_offset 4
 1984 006e BD46     	 mov sp,r7
 1985              	.LCFI123:
 1986              	 .cfi_def_cfa_register 13
 1987              	 
 1988 0070 5DF8047B 	 ldr r7,[sp],#4
 1989              	.LCFI124:
 1990              	 .cfi_restore 7
 1991              	 .cfi_def_cfa_offset 0
 1992 0074 7047     	 bx lr
 1993              	 .cfi_endproc
 1994              	.LFE254:
 1996 0076 00BF     	 .section .text.XMC_ETH_MAC_FlushTx,"ax",%progbits
 1997              	 .align 2
 1998              	 .global XMC_ETH_MAC_FlushTx
 1999              	 .thumb
 2000              	 .thumb_func
 2002              	XMC_ETH_MAC_FlushTx:
 2003              	.LFB255:
 682:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 683:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Flush TX */
 684:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_FlushTx(XMC_ETH_MAC_t *const eth_mac)
 685:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2004              	 .loc 3 685 0
 2005              	 .cfi_startproc
 2006              	 
 2007              	 
 2008 0000 80B5     	 push {r7,lr}
 2009              	.LCFI125:
 2010              	 .cfi_def_cfa_offset 8
 2011              	 .cfi_offset 7,-8
 2012              	 .cfi_offset 14,-4
 2013 0002 82B0     	 sub sp,sp,#8
 2014              	.LCFI126:
 2015              	 .cfi_def_cfa_offset 16
 2016 0004 00AF     	 add r7,sp,#0
 2017              	.LCFI127:
 2018              	 .cfi_def_cfa_register 7
 2019 0006 7860     	 str r0,[r7,#4]
 686:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_ST_Msk;
 2020              	 .loc 3 686 0
 2021 0008 7B68     	 ldr r3,[r7,#4]
 2022 000a 1968     	 ldr r1,[r3]
 2023 000c 7B68     	 ldr r3,[r7,#4]
 2024 000e 1B68     	 ldr r3,[r3]
 2025 0010 03F58053 	 add r3,r3,#4096
 2026 0014 1833     	 adds r3,r3,#24
 2027 0016 1B68     	 ldr r3,[r3]
 2028 0018 23F40052 	 bic r2,r3,#8192
 2029 001c 01F58053 	 add r3,r1,#4096
 2030 0020 1833     	 adds r3,r3,#24
 2031 0022 1A60     	 str r2,[r3]
 687:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 2032              	 .loc 3 687 0
 2033 0024 7868     	 ldr r0,[r7,#4]
 2034 0026 FFF7FEFF 	 bl XMC_ETH_MAC_InitTxDescriptors
 688:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_ST_Msk;
 2035              	 .loc 3 688 0
 2036 002a 7B68     	 ldr r3,[r7,#4]
 2037 002c 1968     	 ldr r1,[r3]
 2038 002e 7B68     	 ldr r3,[r7,#4]
 2039 0030 1B68     	 ldr r3,[r3]
 2040 0032 03F58053 	 add r3,r3,#4096
 2041 0036 1833     	 adds r3,r3,#24
 2042 0038 1B68     	 ldr r3,[r3]
 2043 003a 43F40052 	 orr r2,r3,#8192
 2044 003e 01F58053 	 add r3,r1,#4096
 2045 0042 1833     	 adds r3,r3,#24
 2046 0044 1A60     	 str r2,[r3]
 689:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2047              	 .loc 3 689 0
 2048 0046 0837     	 adds r7,r7,#8
 2049              	.LCFI128:
 2050              	 .cfi_def_cfa_offset 8
 2051 0048 BD46     	 mov sp,r7
 2052              	.LCFI129:
 2053              	 .cfi_def_cfa_register 13
 2054              	 
 2055 004a 80BD     	 pop {r7,pc}
 2056              	 .cfi_endproc
 2057              	.LFE255:
 2059              	 .section .text.XMC_ETH_MAC_FlushRx,"ax",%progbits
 2060              	 .align 2
 2061              	 .global XMC_ETH_MAC_FlushRx
 2062              	 .thumb
 2063              	 .thumb_func
 2065              	XMC_ETH_MAC_FlushRx:
 2066              	.LFB256:
 690:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 691:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Flush RX */
 692:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_FlushRx(XMC_ETH_MAC_t *const eth_mac)
 693:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2067              	 .loc 3 693 0
 2068              	 .cfi_startproc
 2069              	 
 2070              	 
 2071 0000 80B5     	 push {r7,lr}
 2072              	.LCFI130:
 2073              	 .cfi_def_cfa_offset 8
 2074              	 .cfi_offset 7,-8
 2075              	 .cfi_offset 14,-4
 2076 0002 82B0     	 sub sp,sp,#8
 2077              	.LCFI131:
 2078              	 .cfi_def_cfa_offset 16
 2079 0004 00AF     	 add r7,sp,#0
 2080              	.LCFI132:
 2081              	 .cfi_def_cfa_register 7
 2082 0006 7860     	 str r0,[r7,#4]
 694:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_SR_Msk;
 2083              	 .loc 3 694 0
 2084 0008 7B68     	 ldr r3,[r7,#4]
 2085 000a 1968     	 ldr r1,[r3]
 2086 000c 7B68     	 ldr r3,[r7,#4]
 2087 000e 1B68     	 ldr r3,[r3]
 2088 0010 03F58053 	 add r3,r3,#4096
 2089 0014 1833     	 adds r3,r3,#24
 2090 0016 1B68     	 ldr r3,[r3]
 2091 0018 23F00202 	 bic r2,r3,#2
 2092 001c 01F58053 	 add r3,r1,#4096
 2093 0020 1833     	 adds r3,r3,#24
 2094 0022 1A60     	 str r2,[r3]
 695:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitRxDescriptors(eth_mac);
 2095              	 .loc 3 695 0
 2096 0024 7868     	 ldr r0,[r7,#4]
 2097 0026 FFF7FEFF 	 bl XMC_ETH_MAC_InitRxDescriptors
 696:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_SR_Msk;
 2098              	 .loc 3 696 0
 2099 002a 7B68     	 ldr r3,[r7,#4]
 2100 002c 1968     	 ldr r1,[r3]
 2101 002e 7B68     	 ldr r3,[r7,#4]
 2102 0030 1B68     	 ldr r3,[r3]
 2103 0032 03F58053 	 add r3,r3,#4096
 2104 0036 1833     	 adds r3,r3,#24
 2105 0038 1B68     	 ldr r3,[r3]
 2106 003a 43F00202 	 orr r2,r3,#2
 2107 003e 01F58053 	 add r3,r1,#4096
 2108 0042 1833     	 adds r3,r3,#24
 2109 0044 1A60     	 str r2,[r3]
 697:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2110              	 .loc 3 697 0
 2111 0046 0837     	 adds r7,r7,#8
 2112              	.LCFI133:
 2113              	 .cfi_def_cfa_offset 8
 2114 0048 BD46     	 mov sp,r7
 2115              	.LCFI134:
 2116              	 .cfi_def_cfa_register 13
 2117              	 
 2118 004a 80BD     	 pop {r7,pc}
 2119              	 .cfi_endproc
 2120              	.LFE256:
 2122              	 .section .text.XMC_ETH_MAC_SetWakeUpFrameFilter,"ax",%progbits
 2123              	 .align 2
 2124              	 .global XMC_ETH_MAC_SetWakeUpFrameFilter
 2125              	 .thumb
 2126              	 .thumb_func
 2128              	XMC_ETH_MAC_SetWakeUpFrameFilter:
 2129              	.LFB257:
 698:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 699:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set wakeup frame filter */
 700:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetWakeUpFrameFilter(XMC_ETH_MAC_t *const eth_mac,
 701:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                       const uint32_t (*const filter)[XMC_ETH_WAKEUP_REGISTER_LENGTH
 702:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2130              	 .loc 3 702 0
 2131              	 .cfi_startproc
 2132              	 
 2133              	 
 2134              	 
 2135 0000 80B4     	 push {r7}
 2136              	.LCFI135:
 2137              	 .cfi_def_cfa_offset 4
 2138              	 .cfi_offset 7,-4
 2139 0002 85B0     	 sub sp,sp,#20
 2140              	.LCFI136:
 2141              	 .cfi_def_cfa_offset 24
 2142 0004 00AF     	 add r7,sp,#0
 2143              	.LCFI137:
 2144              	 .cfi_def_cfa_register 7
 2145 0006 7860     	 str r0,[r7,#4]
 2146 0008 3960     	 str r1,[r7]
 703:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t i = 0U;
 2147              	 .loc 3 703 0
 2148 000a 0023     	 movs r3,#0
 2149 000c FB60     	 str r3,[r7,#12]
 704:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 705:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Fill Remote Wake-up frame filter register with buffer data */
 706:../Libraries/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < XMC_ETH_WAKEUP_REGISTER_LENGTH; i++)
 2150              	 .loc 3 706 0
 2151 000e 0023     	 movs r3,#0
 2152 0010 FB60     	 str r3,[r7,#12]
 2153 0012 09E0     	 b .L90
 2154              	.L91:
 707:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 708:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Write each time to the same register */
 709:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->REMOTE_WAKE_UP_FRAME_FILTER = (*filter)[i];
 2155              	 .loc 3 709 0 discriminator 3
 2156 0014 7B68     	 ldr r3,[r7,#4]
 2157 0016 1B68     	 ldr r3,[r3]
 2158 0018 3A68     	 ldr r2,[r7]
 2159 001a F968     	 ldr r1,[r7,#12]
 2160 001c 52F82120 	 ldr r2,[r2,r1,lsl#2]
 2161 0020 9A62     	 str r2,[r3,#40]
 706:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 2162              	 .loc 3 706 0 discriminator 3
 2163 0022 FB68     	 ldr r3,[r7,#12]
 2164 0024 0133     	 adds r3,r3,#1
 2165 0026 FB60     	 str r3,[r7,#12]
 2166              	.L90:
 706:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 2167              	 .loc 3 706 0 is_stmt 0 discriminator 1
 2168 0028 FB68     	 ldr r3,[r7,#12]
 2169 002a 072B     	 cmp r3,#7
 2170 002c F2D9     	 bls .L91
 710:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 711:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2171              	 .loc 3 711 0 is_stmt 1
 2172 002e 1437     	 adds r7,r7,#20
 2173              	.LCFI138:
 2174              	 .cfi_def_cfa_offset 4
 2175 0030 BD46     	 mov sp,r7
 2176              	.LCFI139:
 2177              	 .cfi_def_cfa_register 13
 2178              	 
 2179 0032 5DF8047B 	 ldr r7,[sp],#4
 2180              	.LCFI140:
 2181              	 .cfi_restore 7
 2182              	 .cfi_def_cfa_offset 0
 2183 0036 7047     	 bx lr
 2184              	 .cfi_endproc
 2185              	.LFE257:
 2187              	 .section .text.XMC_ETH_MAC_EnableEvent,"ax",%progbits
 2188              	 .align 2
 2189              	 .global XMC_ETH_MAC_EnableEvent
 2190              	 .thumb
 2191              	 .thumb_func
 2193              	XMC_ETH_MAC_EnableEvent:
 2194              	.LFB258:
 712:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 713:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Enable event */
 714:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_EnableEvent(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 715:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2195              	 .loc 3 715 0
 2196              	 .cfi_startproc
 2197              	 
 2198              	 
 2199 0000 80B5     	 push {r7,lr}
 2200              	.LCFI141:
 2201              	 .cfi_def_cfa_offset 8
 2202              	 .cfi_offset 7,-8
 2203              	 .cfi_offset 14,-4
 2204 0002 82B0     	 sub sp,sp,#8
 2205              	.LCFI142:
 2206              	 .cfi_def_cfa_offset 16
 2207 0004 00AF     	 add r7,sp,#0
 2208              	.LCFI143:
 2209              	 .cfi_def_cfa_register 7
 2210 0006 7860     	 str r0,[r7,#4]
 2211 0008 3960     	 str r1,[r7]
 716:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_EnableDMAEvent: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 717:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 718:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK &= ~(event >> 16U);
 2212              	 .loc 3 718 0
 2213 000a 7B68     	 ldr r3,[r7,#4]
 2214 000c 1B68     	 ldr r3,[r3]
 2215 000e 7A68     	 ldr r2,[r7,#4]
 2216 0010 1268     	 ldr r2,[r2]
 2217 0012 D16B     	 ldr r1,[r2,#60]
 2218 0014 3A68     	 ldr r2,[r7]
 2219 0016 120C     	 lsrs r2,r2,#16
 2220 0018 D243     	 mvns r2,r2
 2221 001a 0A40     	 ands r2,r2,r1
 2222 001c DA63     	 str r2,[r3,#60]
 719:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 720:../Libraries/XMCLib/src/xmc_eth_mac.c ****   event &= (uint16_t)0x7fffU;
 2223              	 .loc 3 720 0
 2224 001e 3B68     	 ldr r3,[r7]
 2225 0020 C3F30E03 	 ubfx r3,r3,#0,#15
 2226 0024 3B60     	 str r3,[r7]
 721:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (XCM_ETH_MAC_IsNormalEvent(event))
 2227              	 .loc 3 721 0
 2228 0026 3868     	 ldr r0,[r7]
 2229 0028 FFF7FEFF 	 bl XCM_ETH_MAC_IsNormalEvent
 2230 002c 0346     	 mov r3,r0
 2231 002e 002B     	 cmp r3,#0
 2232 0030 03D0     	 beq .L93
 722:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 723:../Libraries/XMCLib/src/xmc_eth_mac.c ****     event |= (uint32_t)ETH_INTERRUPT_ENABLE_NIE_Msk;
 2233              	 .loc 3 723 0
 2234 0032 3B68     	 ldr r3,[r7]
 2235 0034 43F48033 	 orr r3,r3,#65536
 2236 0038 3B60     	 str r3,[r7]
 2237              	.L93:
 724:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 725:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 726:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (XCM_ETH_MAC_IsAbnormalEvent(event))
 2238              	 .loc 3 726 0
 2239 003a 3868     	 ldr r0,[r7]
 2240 003c FFF7FEFF 	 bl XCM_ETH_MAC_IsAbnormalEvent
 2241 0040 0346     	 mov r3,r0
 2242 0042 002B     	 cmp r3,#0
 2243 0044 03D0     	 beq .L94
 727:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 728:../Libraries/XMCLib/src/xmc_eth_mac.c ****     event |= (uint32_t)ETH_INTERRUPT_ENABLE_AIE_Msk;
 2244              	 .loc 3 728 0
 2245 0046 3B68     	 ldr r3,[r7]
 2246 0048 43F40043 	 orr r3,r3,#32768
 2247 004c 3B60     	 str r3,[r7]
 2248              	.L94:
 729:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 730:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 731:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE |= event;
 2249              	 .loc 3 731 0
 2250 004e 7B68     	 ldr r3,[r7,#4]
 2251 0050 1968     	 ldr r1,[r3]
 2252 0052 7B68     	 ldr r3,[r7,#4]
 2253 0054 1B68     	 ldr r3,[r3]
 2254 0056 03F58053 	 add r3,r3,#4096
 2255 005a 1C33     	 adds r3,r3,#28
 2256 005c 1A68     	 ldr r2,[r3]
 2257 005e 3B68     	 ldr r3,[r7]
 2258 0060 1A43     	 orrs r2,r2,r3
 2259 0062 01F58053 	 add r3,r1,#4096
 2260 0066 1C33     	 adds r3,r3,#28
 2261 0068 1A60     	 str r2,[r3]
 732:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2262              	 .loc 3 732 0
 2263 006a 0837     	 adds r7,r7,#8
 2264              	.LCFI144:
 2265              	 .cfi_def_cfa_offset 8
 2266 006c BD46     	 mov sp,r7
 2267              	.LCFI145:
 2268              	 .cfi_def_cfa_register 13
 2269              	 
 2270 006e 80BD     	 pop {r7,pc}
 2271              	 .cfi_endproc
 2272              	.LFE258:
 2274              	 .section .text.XMC_ETH_MAC_DisableEvent,"ax",%progbits
 2275              	 .align 2
 2276              	 .global XMC_ETH_MAC_DisableEvent
 2277              	 .thumb
 2278              	 .thumb_func
 2280              	XMC_ETH_MAC_DisableEvent:
 2281              	.LFB259:
 733:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 734:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Disable event */
 735:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_DisableEvent(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 736:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2282              	 .loc 3 736 0
 2283              	 .cfi_startproc
 2284              	 
 2285              	 
 2286              	 
 2287 0000 80B4     	 push {r7}
 2288              	.LCFI146:
 2289              	 .cfi_def_cfa_offset 4
 2290              	 .cfi_offset 7,-4
 2291 0002 83B0     	 sub sp,sp,#12
 2292              	.LCFI147:
 2293              	 .cfi_def_cfa_offset 16
 2294 0004 00AF     	 add r7,sp,#0
 2295              	.LCFI148:
 2296              	 .cfi_def_cfa_register 7
 2297 0006 7860     	 str r0,[r7,#4]
 2298 0008 3960     	 str r1,[r7]
 737:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_DisableDMAEvent: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->
 738:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 739:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK |= event >> 16U;
 2299              	 .loc 3 739 0
 2300 000a 7B68     	 ldr r3,[r7,#4]
 2301 000c 1B68     	 ldr r3,[r3]
 2302 000e 7A68     	 ldr r2,[r7,#4]
 2303 0010 1268     	 ldr r2,[r2]
 2304 0012 D16B     	 ldr r1,[r2,#60]
 2305 0014 3A68     	 ldr r2,[r7]
 2306 0016 120C     	 lsrs r2,r2,#16
 2307 0018 0A43     	 orrs r2,r2,r1
 2308 001a DA63     	 str r2,[r3,#60]
 740:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 741:../Libraries/XMCLib/src/xmc_eth_mac.c ****   event &= 0x7fffU;
 2309              	 .loc 3 741 0
 2310 001c 3B68     	 ldr r3,[r7]
 2311 001e C3F30E03 	 ubfx r3,r3,#0,#15
 2312 0022 3B60     	 str r3,[r7]
 742:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE &= ~event;
 2313              	 .loc 3 742 0
 2314 0024 7B68     	 ldr r3,[r7,#4]
 2315 0026 1968     	 ldr r1,[r3]
 2316 0028 7B68     	 ldr r3,[r7,#4]
 2317 002a 1B68     	 ldr r3,[r3]
 2318 002c 03F58053 	 add r3,r3,#4096
 2319 0030 1C33     	 adds r3,r3,#28
 2320 0032 1A68     	 ldr r2,[r3]
 2321 0034 3B68     	 ldr r3,[r7]
 2322 0036 DB43     	 mvns r3,r3
 2323 0038 1A40     	 ands r2,r2,r3
 2324 003a 01F58053 	 add r3,r1,#4096
 2325 003e 1C33     	 adds r3,r3,#28
 2326 0040 1A60     	 str r2,[r3]
 743:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2327              	 .loc 3 743 0
 2328 0042 0C37     	 adds r7,r7,#12
 2329              	.LCFI149:
 2330              	 .cfi_def_cfa_offset 4
 2331 0044 BD46     	 mov sp,r7
 2332              	.LCFI150:
 2333              	 .cfi_def_cfa_register 13
 2334              	 
 2335 0046 5DF8047B 	 ldr r7,[sp],#4
 2336              	.LCFI151:
 2337              	 .cfi_restore 7
 2338              	 .cfi_def_cfa_offset 0
 2339 004a 7047     	 bx lr
 2340              	 .cfi_endproc
 2341              	.LFE259:
 2343              	 .section .text.XMC_ETH_MAC_ClearEventStatus,"ax",%progbits
 2344              	 .align 2
 2345              	 .global XMC_ETH_MAC_ClearEventStatus
 2346              	 .thumb
 2347              	 .thumb_func
 2349              	XMC_ETH_MAC_ClearEventStatus:
 2350              	.LFB260:
 744:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 745:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Clear event status */
 746:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ClearEventStatus(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 747:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2351              	 .loc 3 747 0
 2352              	 .cfi_startproc
 2353              	 
 2354              	 
 2355              	 
 2356 0000 80B4     	 push {r7}
 2357              	.LCFI152:
 2358              	 .cfi_def_cfa_offset 4
 2359              	 .cfi_offset 7,-4
 2360 0002 83B0     	 sub sp,sp,#12
 2361              	.LCFI153:
 2362              	 .cfi_def_cfa_offset 16
 2363 0004 00AF     	 add r7,sp,#0
 2364              	.LCFI154:
 2365              	 .cfi_def_cfa_register 7
 2366 0006 7860     	 str r0,[r7,#4]
 2367 0008 3960     	 str r1,[r7]
 748:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ClearEventStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac-
 749:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 750:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if ((eth_mac->regs->STATUS & ETH_STATUS_NIS_Msk) != 0U)
 2368              	 .loc 3 750 0
 2369 000a 7B68     	 ldr r3,[r7,#4]
 2370 000c 1B68     	 ldr r3,[r3]
 2371 000e 03F58053 	 add r3,r3,#4096
 2372 0012 1433     	 adds r3,r3,#20
 2373 0014 1B68     	 ldr r3,[r3]
 2374 0016 03F48033 	 and r3,r3,#65536
 2375 001a 002B     	 cmp r3,#0
 2376 001c 03D0     	 beq .L97
 751:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 752:../Libraries/XMCLib/src/xmc_eth_mac.c ****     event |= (uint32_t)ETH_STATUS_NIS_Msk;
 2377              	 .loc 3 752 0
 2378 001e 3B68     	 ldr r3,[r7]
 2379 0020 43F48033 	 orr r3,r3,#65536
 2380 0024 3B60     	 str r3,[r7]
 2381              	.L97:
 753:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 754:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 755:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if ((eth_mac->regs->STATUS & ETH_STATUS_AIS_Msk) != 0U)
 2382              	 .loc 3 755 0
 2383 0026 7B68     	 ldr r3,[r7,#4]
 2384 0028 1B68     	 ldr r3,[r3]
 2385 002a 03F58053 	 add r3,r3,#4096
 2386 002e 1433     	 adds r3,r3,#20
 2387 0030 1B68     	 ldr r3,[r3]
 2388 0032 03F40043 	 and r3,r3,#32768
 2389 0036 002B     	 cmp r3,#0
 2390 0038 03D0     	 beq .L98
 756:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 757:../Libraries/XMCLib/src/xmc_eth_mac.c ****     event |= (uint32_t)ETH_STATUS_AIS_Msk;
 2391              	 .loc 3 757 0
 2392 003a 3B68     	 ldr r3,[r7]
 2393 003c 43F40043 	 orr r3,r3,#32768
 2394 0040 3B60     	 str r3,[r7]
 2395              	.L98:
 758:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 759:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 760:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->STATUS = event & 0x0001FFFFU;
 2396              	 .loc 3 760 0
 2397 0042 7B68     	 ldr r3,[r7,#4]
 2398 0044 1B68     	 ldr r3,[r3]
 2399 0046 3A68     	 ldr r2,[r7]
 2400 0048 C2F31002 	 ubfx r2,r2,#0,#17
 2401 004c 03F58053 	 add r3,r3,#4096
 2402 0050 1433     	 adds r3,r3,#20
 2403 0052 1A60     	 str r2,[r3]
 761:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2404              	 .loc 3 761 0
 2405 0054 0C37     	 adds r7,r7,#12
 2406              	.LCFI155:
 2407              	 .cfi_def_cfa_offset 4
 2408 0056 BD46     	 mov sp,r7
 2409              	.LCFI156:
 2410              	 .cfi_def_cfa_register 13
 2411              	 
 2412 0058 5DF8047B 	 ldr r7,[sp],#4
 2413              	.LCFI157:
 2414              	 .cfi_restore 7
 2415              	 .cfi_def_cfa_offset 0
 2416 005c 7047     	 bx lr
 2417              	 .cfi_endproc
 2418              	.LFE260:
 2420 005e 00BF     	 .section .text.XMC_ETH_MAC_GetEventStatus,"ax",%progbits
 2421              	 .align 2
 2422              	 .global XMC_ETH_MAC_GetEventStatus
 2423              	 .thumb
 2424              	 .thumb_func
 2426              	XMC_ETH_MAC_GetEventStatus:
 2427              	.LFB261:
 762:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 763:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Obtain event status */
 764:../Libraries/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetEventStatus(const XMC_ETH_MAC_t *const eth_mac)
 765:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2428              	 .loc 3 765 0
 2429              	 .cfi_startproc
 2430              	 
 2431              	 
 2432              	 
 2433 0000 80B4     	 push {r7}
 2434              	.LCFI158:
 2435              	 .cfi_def_cfa_offset 4
 2436              	 .cfi_offset 7,-4
 2437 0002 85B0     	 sub sp,sp,#20
 2438              	.LCFI159:
 2439              	 .cfi_def_cfa_offset 24
 2440 0004 00AF     	 add r7,sp,#0
 2441              	.LCFI160:
 2442              	 .cfi_def_cfa_register 7
 2443 0006 7860     	 str r0,[r7,#4]
 766:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t temp_status = 0;
 2444              	 .loc 3 766 0
 2445 0008 0023     	 movs r3,#0
 2446 000a FB60     	 str r3,[r7,#12]
 767:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetEventStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 768:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 769:../Libraries/XMCLib/src/xmc_eth_mac.c ****   temp_status =  (eth_mac->regs->STATUS & (uint32_t)0x7ffUL);
 2447              	 .loc 3 769 0
 2448 000c 7B68     	 ldr r3,[r7,#4]
 2449 000e 1B68     	 ldr r3,[r3]
 2450 0010 03F58053 	 add r3,r3,#4096
 2451 0014 1433     	 adds r3,r3,#20
 2452 0016 1B68     	 ldr r3,[r3]
 2453 0018 C3F30A03 	 ubfx r3,r3,#0,#11
 2454 001c FB60     	 str r3,[r7,#12]
 770:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 771:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return ((uint32_t)((eth_mac->regs->INTERRUPT_STATUS & (ETH_INTERRUPT_MASK_PMTIM_Msk | ETH_INTERRU
 2455              	 .loc 3 771 0
 2456 001e 7B68     	 ldr r3,[r7,#4]
 2457 0020 1B68     	 ldr r3,[r3]
 2458 0022 9B6B     	 ldr r3,[r3,#56]
 2459 0024 03F40273 	 and r3,r3,#520
 2460 0028 1A04     	 lsls r2,r3,#16
 2461 002a FB68     	 ldr r3,[r7,#12]
 2462 002c 1343     	 orrs r3,r3,r2
 772:../Libraries/XMCLib/src/xmc_eth_mac.c ****           temp_status);
 773:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2463              	 .loc 3 773 0
 2464 002e 1846     	 mov r0,r3
 2465 0030 1437     	 adds r7,r7,#20
 2466              	.LCFI161:
 2467              	 .cfi_def_cfa_offset 4
 2468 0032 BD46     	 mov sp,r7
 2469              	.LCFI162:
 2470              	 .cfi_def_cfa_register 13
 2471              	 
 2472 0034 5DF8047B 	 ldr r7,[sp],#4
 2473              	.LCFI163:
 2474              	 .cfi_restore 7
 2475              	 .cfi_def_cfa_offset 0
 2476 0038 7047     	 bx lr
 2477              	 .cfi_endproc
 2478              	.LFE261:
 2480 003a 00BF     	 .section .text.XMC_ETH_MAC_ReturnRxDescriptor,"ax",%progbits
 2481              	 .align 2
 2482              	 .global XMC_ETH_MAC_ReturnRxDescriptor
 2483              	 .thumb
 2484              	 .thumb_func
 2486              	XMC_ETH_MAC_ReturnRxDescriptor:
 2487              	.LFB262:
 774:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 775:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Return RX descriptor */
 776:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ReturnRxDescriptor(XMC_ETH_MAC_t *const eth_mac)
 777:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2488              	 .loc 3 777 0
 2489              	 .cfi_startproc
 2490              	 
 2491              	 
 2492              	 
 2493 0000 80B4     	 push {r7}
 2494              	.LCFI164:
 2495              	 .cfi_def_cfa_offset 4
 2496              	 .cfi_offset 7,-4
 2497 0002 83B0     	 sub sp,sp,#12
 2498              	.LCFI165:
 2499              	 .cfi_def_cfa_offset 16
 2500 0004 00AF     	 add r7,sp,#0
 2501              	.LCFI166:
 2502              	 .cfi_def_cfa_register 7
 2503 0006 7860     	 str r0,[r7,#4]
 778:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[eth_mac->rx_index].status |= ETH_MAC_DMA_RDES0_OWN;
 2504              	 .loc 3 778 0
 2505 0008 7B68     	 ldr r3,[r7,#4]
 2506 000a 1A69     	 ldr r2,[r3,#16]
 2507 000c 7B68     	 ldr r3,[r7,#4]
 2508 000e 93F82730 	 ldrb r3,[r3,#39]
 2509 0012 5B01     	 lsls r3,r3,#5
 2510 0014 1344     	 add r3,r3,r2
 2511 0016 7A68     	 ldr r2,[r7,#4]
 2512 0018 1169     	 ldr r1,[r2,#16]
 2513 001a 7A68     	 ldr r2,[r7,#4]
 2514 001c 92F82720 	 ldrb r2,[r2,#39]
 2515 0020 5201     	 lsls r2,r2,#5
 2516 0022 0A44     	 add r2,r2,r1
 2517 0024 1268     	 ldr r2,[r2]
 2518 0026 42F00042 	 orr r2,r2,#-2147483648
 2519 002a 1A60     	 str r2,[r3]
 779:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index++;
 2520              	 .loc 3 779 0
 2521 002c 7B68     	 ldr r3,[r7,#4]
 2522 002e 93F82730 	 ldrb r3,[r3,#39]
 2523 0032 0133     	 adds r3,r3,#1
 2524 0034 DAB2     	 uxtb r2,r3
 2525 0036 7B68     	 ldr r3,[r7,#4]
 2526 0038 83F82720 	 strb r2,[r3,#39]
 780:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->rx_index == eth_mac->num_rx_buf)
 2527              	 .loc 3 780 0
 2528 003c 7B68     	 ldr r3,[r7,#4]
 2529 003e 93F82720 	 ldrb r2,[r3,#39]
 2530 0042 7B68     	 ldr r3,[r7,#4]
 2531 0044 93F82430 	 ldrb r3,[r3,#36]
 2532 0048 9A42     	 cmp r2,r3
 2533 004a 03D1     	 bne .L101
 781:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 782:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_index = 0U;
 2534              	 .loc 3 782 0
 2535 004c 7B68     	 ldr r3,[r7,#4]
 2536 004e 0022     	 movs r2,#0
 2537 0050 83F82720 	 strb r2,[r3,#39]
 2538              	.L101:
 783:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 784:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2539              	 .loc 3 784 0
 2540 0054 0C37     	 adds r7,r7,#12
 2541              	.LCFI167:
 2542              	 .cfi_def_cfa_offset 4
 2543 0056 BD46     	 mov sp,r7
 2544              	.LCFI168:
 2545              	 .cfi_def_cfa_register 13
 2546              	 
 2547 0058 5DF8047B 	 ldr r7,[sp],#4
 2548              	.LCFI169:
 2549              	 .cfi_restore 7
 2550              	 .cfi_def_cfa_offset 0
 2551 005c 7047     	 bx lr
 2552              	 .cfi_endproc
 2553              	.LFE262:
 2555 005e 00BF     	 .section .text.XMC_ETH_MAC_ReturnTxDescriptor,"ax",%progbits
 2556              	 .align 2
 2557              	 .global XMC_ETH_MAC_ReturnTxDescriptor
 2558              	 .thumb
 2559              	 .thumb_func
 2561              	XMC_ETH_MAC_ReturnTxDescriptor:
 2562              	.LFB263:
 785:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 786:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Return TX descriptor */
 787:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ReturnTxDescriptor(XMC_ETH_MAC_t *const eth_mac)
 788:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2563              	 .loc 3 788 0
 2564              	 .cfi_startproc
 2565              	 
 2566              	 
 2567              	 
 2568 0000 80B4     	 push {r7}
 2569              	.LCFI170:
 2570              	 .cfi_def_cfa_offset 4
 2571              	 .cfi_offset 7,-4
 2572 0002 83B0     	 sub sp,sp,#12
 2573              	.LCFI171:
 2574              	 .cfi_def_cfa_offset 16
 2575 0004 00AF     	 add r7,sp,#0
 2576              	.LCFI172:
 2577              	 .cfi_def_cfa_register 7
 2578 0006 7860     	 str r0,[r7,#4]
 789:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_ts_index = eth_mac->tx_index;
 2579              	 .loc 3 789 0
 2580 0008 7B68     	 ldr r3,[r7,#4]
 2581 000a 93F82620 	 ldrb r2,[r3,#38]
 2582 000e 7B68     	 ldr r3,[r7,#4]
 2583 0010 83F82820 	 strb r2,[r3,#40]
 790:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 791:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_desc[eth_mac->tx_index].status |= ETH_MAC_DMA_TDES0_CIC | ETH_MAC_DMA_TDES0_OWN;
 2584              	 .loc 3 791 0
 2585 0014 7B68     	 ldr r3,[r7,#4]
 2586 0016 5A69     	 ldr r2,[r3,#20]
 2587 0018 7B68     	 ldr r3,[r7,#4]
 2588 001a 93F82630 	 ldrb r3,[r3,#38]
 2589 001e 5B01     	 lsls r3,r3,#5
 2590 0020 1A44     	 add r2,r2,r3
 2591 0022 7B68     	 ldr r3,[r7,#4]
 2592 0024 5969     	 ldr r1,[r3,#20]
 2593 0026 7B68     	 ldr r3,[r7,#4]
 2594 0028 93F82630 	 ldrb r3,[r3,#38]
 2595 002c 5B01     	 lsls r3,r3,#5
 2596 002e 0B44     	 add r3,r3,r1
 2597 0030 1B68     	 ldr r3,[r3]
 2598 0032 43F00043 	 orr r3,r3,#-2147483648
 2599 0036 43F44003 	 orr r3,r3,#12582912
 2600 003a 1360     	 str r3,[r2]
 792:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_index++;
 2601              	 .loc 3 792 0
 2602 003c 7B68     	 ldr r3,[r7,#4]
 2603 003e 93F82630 	 ldrb r3,[r3,#38]
 2604 0042 0133     	 adds r3,r3,#1
 2605 0044 DAB2     	 uxtb r2,r3
 2606 0046 7B68     	 ldr r3,[r7,#4]
 2607 0048 83F82620 	 strb r2,[r3,#38]
 793:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->tx_index == eth_mac->num_tx_buf)
 2608              	 .loc 3 793 0
 2609 004c 7B68     	 ldr r3,[r7,#4]
 2610 004e 93F82620 	 ldrb r2,[r3,#38]
 2611 0052 7B68     	 ldr r3,[r7,#4]
 2612 0054 93F82530 	 ldrb r3,[r3,#37]
 2613 0058 9A42     	 cmp r2,r3
 2614 005a 03D1     	 bne .L104
 794:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 795:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->tx_index = 0U;
 2615              	 .loc 3 795 0
 2616 005c 7B68     	 ldr r3,[r7,#4]
 2617 005e 0022     	 movs r2,#0
 2618 0060 83F82620 	 strb r2,[r3,#38]
 2619              	.L104:
 796:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 797:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 798:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->frame_end = NULL;
 2620              	 .loc 3 798 0
 2621 0064 7B68     	 ldr r3,[r7,#4]
 2622 0066 0022     	 movs r2,#0
 2623 0068 1A62     	 str r2,[r3,#32]
 799:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2624              	 .loc 3 799 0
 2625 006a 0C37     	 adds r7,r7,#12
 2626              	.LCFI173:
 2627              	 .cfi_def_cfa_offset 4
 2628 006c BD46     	 mov sp,r7
 2629              	.LCFI174:
 2630              	 .cfi_def_cfa_register 13
 2631              	 
 2632 006e 5DF8047B 	 ldr r7,[sp],#4
 2633              	.LCFI175:
 2634              	 .cfi_restore 7
 2635              	 .cfi_def_cfa_offset 0
 2636 0072 7047     	 bx lr
 2637              	 .cfi_endproc
 2638              	.LFE263:
 2640              	 .section .text.XMC_ETH_MAC_SetVLANTag,"ax",%progbits
 2641              	 .align 2
 2642              	 .global XMC_ETH_MAC_SetVLANTag
 2643              	 .thumb
 2644              	 .thumb_func
 2646              	XMC_ETH_MAC_SetVLANTag:
 2647              	.LFB264:
 800:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 801:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set VLAN tag */
 802:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetVLANTag(XMC_ETH_MAC_t *const eth_mac, uint32_t tag)
 803:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2648              	 .loc 3 803 0
 2649              	 .cfi_startproc
 2650              	 
 2651              	 
 2652              	 
 2653 0000 80B4     	 push {r7}
 2654              	.LCFI176:
 2655              	 .cfi_def_cfa_offset 4
 2656              	 .cfi_offset 7,-4
 2657 0002 83B0     	 sub sp,sp,#12
 2658              	.LCFI177:
 2659              	 .cfi_def_cfa_offset 16
 2660 0004 00AF     	 add r7,sp,#0
 2661              	.LCFI178:
 2662              	 .cfi_def_cfa_register 7
 2663 0006 7860     	 str r0,[r7,#4]
 2664 0008 3960     	 str r1,[r7]
 804:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetVLANTag: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 805:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 806:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->VLAN_TAG = tag;
 2665              	 .loc 3 806 0
 2666 000a 7B68     	 ldr r3,[r7,#4]
 2667 000c 1B68     	 ldr r3,[r3]
 2668 000e 3A68     	 ldr r2,[r7]
 2669 0010 DA61     	 str r2,[r3,#28]
 807:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2670              	 .loc 3 807 0
 2671 0012 0C37     	 adds r7,r7,#12
 2672              	.LCFI179:
 2673              	 .cfi_def_cfa_offset 4
 2674 0014 BD46     	 mov sp,r7
 2675              	.LCFI180:
 2676              	 .cfi_def_cfa_register 13
 2677              	 
 2678 0016 5DF8047B 	 ldr r7,[sp],#4
 2679              	.LCFI181:
 2680              	 .cfi_restore 7
 2681              	 .cfi_def_cfa_offset 0
 2682 001a 7047     	 bx lr
 2683              	 .cfi_endproc
 2684              	.LFE264:
 2686              	 .section .text.XMC_ETH_MAC_InitPTP,"ax",%progbits
 2687              	 .align 2
 2688              	 .global XMC_ETH_MAC_InitPTP
 2689              	 .thumb
 2690              	 .thumb_func
 2692              	XMC_ETH_MAC_InitPTP:
 2693              	.LFB265:
 808:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 809:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Initialize PTP */
 810:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitPTP(XMC_ETH_MAC_t *const eth_mac, uint32_t config)
 811:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2694              	 .loc 3 811 0
 2695              	 .cfi_startproc
 2696              	 
 2697              	 
 2698 0000 90B5     	 push {r4,r7,lr}
 2699              	.LCFI182:
 2700              	 .cfi_def_cfa_offset 12
 2701              	 .cfi_offset 4,-12
 2702              	 .cfi_offset 7,-8
 2703              	 .cfi_offset 14,-4
 2704 0002 85B0     	 sub sp,sp,#20
 2705              	.LCFI183:
 2706              	 .cfi_def_cfa_offset 32
 2707 0004 00AF     	 add r7,sp,#0
 2708              	.LCFI184:
 2709              	 .cfi_def_cfa_register 7
 2710 0006 7860     	 str r0,[r7,#4]
 2711 0008 3960     	 str r1,[r7]
 812:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitPTP: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 813:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 814:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Mask the time stamp interrupt */
 815:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK |= (uint32_t)ETH_INTERRUPT_MASK_TSIM_Msk;
 2712              	 .loc 3 815 0
 2713 000a 7B68     	 ldr r3,[r7,#4]
 2714 000c 1B68     	 ldr r3,[r3]
 2715 000e 7A68     	 ldr r2,[r7,#4]
 2716 0010 1268     	 ldr r2,[r2]
 2717 0012 D26B     	 ldr r2,[r2,#60]
 2718 0014 42F40072 	 orr r2,r2,#512
 2719 0018 DA63     	 str r2,[r3,#60]
 816:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 817:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Enable time stamp, rollover mode of nanosecond counter set to digital mode, i.e. after 0x3B9AC
 818:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL = ETH_TIMESTAMP_CONTROL_TSENA_Msk | ETH_TIMESTAMP_CONTROL_TSCTRL
 2720              	 .loc 3 818 0
 2721 001a 7B68     	 ldr r3,[r7,#4]
 2722 001c 1A68     	 ldr r2,[r3]
 2723 001e 3B68     	 ldr r3,[r7]
 2724 0020 43F40073 	 orr r3,r3,#512
 2725 0024 43F00103 	 orr r3,r3,#1
 2726 0028 C2F80037 	 str r3,[r2,#1792]
 819:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 820:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if ((config & (uint32_t)XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE) != 0U)
 2727              	 .loc 3 820 0
 2728 002c 3B68     	 ldr r3,[r7]
 2729 002e 03F00203 	 and r3,r3,#2
 2730 0032 002B     	 cmp r3,#0
 2731 0034 36D0     	 beq .L107
 2732              	.LBB2:
 821:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 822:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Program sub-second increment register based on PTP clock frequency ~ 50MHz */
 823:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->SUB_SECOND_INCREMENT = 20;
 2733              	 .loc 3 823 0
 2734 0036 7B68     	 ldr r3,[r7,#4]
 2735 0038 1B68     	 ldr r3,[r3]
 2736 003a 1422     	 movs r2,#20
 2737 003c C3F80427 	 str r2,[r3,#1796]
 824:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 825:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* fSYS = Reference Clock for the Time Stamp Update Logic*/
 826:../Libraries/XMCLib/src/xmc_eth_mac.c ****     float ratio = (float)XMC_SCU_CLOCK_GetSystemClockFrequency() / (float)XMC_ETH_SUB_SECOND_UPDATE
 2738              	 .loc 3 826 0
 2739 0040 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2740 0044 07EE900A 	 fmsr s15,r0
 2741 0048 F8EE677A 	 fuitos s15,s15
 2742 004c 9FED2B7A 	 flds s14,.L111
 2743 0050 C7EE877A 	 fdivs s15,s15,s14
 2744 0054 C7ED037A 	 fsts s15,[r7,#12]
 827:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)(((float)0x100000000ULL / ratio) + 0.5F);
 2745              	 .loc 3 827 0
 2746 0058 7B68     	 ldr r3,[r7,#4]
 2747 005a 1B68     	 ldr r3,[r3]
 2748 005c 9FED287A 	 flds s14,.L111+4
 2749 0060 D7ED037A 	 flds s15,[r7,#12]
 2750 0064 C7EE277A 	 fdivs s15,s14,s15
 2751 0068 B6EE007A 	 fconsts s14,#96
 2752 006c 77EE877A 	 fadds s15,s15,s14
 2753 0070 FCEEE77A 	 ftouizs s15,s15
 2754 0074 17EE902A 	 fmrs r2,s15
 2755 0078 C3F81827 	 str r2,[r3,#1816]
 828:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 829:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Addend register update */
 830:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 2756              	 .loc 3 830 0
 2757 007c 7B68     	 ldr r3,[r7,#4]
 2758 007e 1B68     	 ldr r3,[r3]
 2759 0080 7A68     	 ldr r2,[r7,#4]
 2760 0082 1268     	 ldr r2,[r2]
 2761 0084 D2F80027 	 ldr r2,[r2,#1792]
 2762 0088 42F02002 	 orr r2,r2,#32
 2763 008c C3F80027 	 str r2,[r3,#1792]
 831:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 832:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 833:../Libraries/XMCLib/src/xmc_eth_mac.c ****     while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);
 2764              	 .loc 3 833 0
 2765 0090 00BF     	 nop
 2766              	.L108:
 2767              	 .loc 3 833 0 is_stmt 0 discriminator 1
 2768 0092 7B68     	 ldr r3,[r7,#4]
 2769 0094 1B68     	 ldr r3,[r3]
 2770 0096 D3F80037 	 ldr r3,[r3,#1792]
 2771 009a 03F02003 	 and r3,r3,#32
 2772 009e 002B     	 cmp r3,#0
 2773 00a0 F7D1     	 bne .L108
 2774              	.LBE2:
 2775 00a2 15E0     	 b .L109
 2776              	.L107:
 834:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 835:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 836:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 837:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Program sub-second increment register based on PTP clock frequency = fSYS/2 */
 838:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->SUB_SECOND_INCREMENT = (uint32_t)(((float)1000000000 / (float)XMC_SCU_CLOCK_GetS
 2777              	 .loc 3 838 0 is_stmt 1
 2778 00a4 7B68     	 ldr r3,[r7,#4]
 2779 00a6 1C68     	 ldr r4,[r3]
 2780 00a8 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2781 00ac 07EE900A 	 fmsr s15,r0
 2782 00b0 F8EE677A 	 fuitos s15,s15
 2783 00b4 9FED137A 	 flds s14,.L111+8
 2784 00b8 C7EE277A 	 fdivs s15,s14,s15
 2785 00bc B6EE007A 	 fconsts s14,#96
 2786 00c0 77EE877A 	 fadds s15,s15,s14
 2787 00c4 FCEEE77A 	 ftouizs s15,s15
 2788 00c8 17EE903A 	 fmrs r3,s15
 2789 00cc C4F80437 	 str r3,[r4,#1796]
 2790              	.L109:
 839:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 840:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 841:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSINIT_Msk;
 2791              	 .loc 3 841 0
 2792 00d0 7B68     	 ldr r3,[r7,#4]
 2793 00d2 1B68     	 ldr r3,[r3]
 2794 00d4 7A68     	 ldr r2,[r7,#4]
 2795 00d6 1268     	 ldr r2,[r2]
 2796 00d8 D2F80027 	 ldr r2,[r2,#1792]
 2797 00dc 42F00402 	 orr r2,r2,#4
 2798 00e0 C3F80027 	 str r2,[r3,#1792]
 842:../Libraries/XMCLib/src/xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSINIT_Msk);
 2799              	 .loc 3 842 0
 2800 00e4 00BF     	 nop
 2801              	.L110:
 2802              	 .loc 3 842 0 is_stmt 0 discriminator 1
 2803 00e6 7B68     	 ldr r3,[r7,#4]
 2804 00e8 1B68     	 ldr r3,[r3]
 2805 00ea D3F80037 	 ldr r3,[r3,#1792]
 2806 00ee 03F00403 	 and r3,r3,#4
 2807 00f2 002B     	 cmp r3,#0
 2808 00f4 F7D1     	 bne .L110
 843:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2809              	 .loc 3 843 0 is_stmt 1
 2810 00f6 1437     	 adds r7,r7,#20
 2811              	.LCFI185:
 2812              	 .cfi_def_cfa_offset 12
 2813 00f8 BD46     	 mov sp,r7
 2814              	.LCFI186:
 2815              	 .cfi_def_cfa_register 13
 2816              	 
 2817 00fa 90BD     	 pop {r4,r7,pc}
 2818              	.L112:
 2819              	 .align 2
 2820              	.L111:
 2821 00fc 20BC3E4C 	 .word 1279179808
 2822 0100 0000804F 	 .word 1333788672
 2823 0104 286B6E4E 	 .word 1315859240
 2824              	 .cfi_endproc
 2825              	.LFE265:
 2827              	 .section .text.XMC_ETH_MAC_InitPTPEx,"ax",%progbits
 2828              	 .align 2
 2829              	 .global XMC_ETH_MAC_InitPTPEx
 2830              	 .thumb
 2831              	 .thumb_func
 2833              	XMC_ETH_MAC_InitPTPEx:
 2834              	.LFB266:
 844:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 845:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Initialize PTP using a given time */
 846:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitPTPEx(XMC_ETH_MAC_t *const eth_mac, uint32_t config, XMC_ETH_MAC_TIME_t *const
 847:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2835              	 .loc 3 847 0
 2836              	 .cfi_startproc
 2837              	 
 2838              	 
 2839 0000 80B5     	 push {r7,lr}
 2840              	.LCFI187:
 2841              	 .cfi_def_cfa_offset 8
 2842              	 .cfi_offset 7,-8
 2843              	 .cfi_offset 14,-4
 2844 0002 84B0     	 sub sp,sp,#16
 2845              	.LCFI188:
 2846              	 .cfi_def_cfa_offset 24
 2847 0004 00AF     	 add r7,sp,#0
 2848              	.LCFI189:
 2849              	 .cfi_def_cfa_register 7
 2850 0006 F860     	 str r0,[r7,#12]
 2851 0008 B960     	 str r1,[r7,#8]
 2852 000a 7A60     	 str r2,[r7,#4]
 848:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitPTP: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 849:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 850:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Initialize the system time */
 851:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = time->nanoseconds;
 2853              	 .loc 3 851 0
 2854 000c FB68     	 ldr r3,[r7,#12]
 2855 000e 1B68     	 ldr r3,[r3]
 2856 0010 7A68     	 ldr r2,[r7,#4]
 2857 0012 5268     	 ldr r2,[r2,#4]
 2858 0014 C3F81427 	 str r2,[r3,#1812]
 852:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 2859              	 .loc 3 852 0
 2860 0018 FB68     	 ldr r3,[r7,#12]
 2861 001a 1B68     	 ldr r3,[r3]
 2862 001c 7A68     	 ldr r2,[r7,#4]
 2863 001e 1268     	 ldr r2,[r2]
 2864 0020 C3F81027 	 str r2,[r3,#1808]
 853:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 854:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitPTP(eth_mac, config);
 2865              	 .loc 3 854 0
 2866 0024 F868     	 ldr r0,[r7,#12]
 2867 0026 B968     	 ldr r1,[r7,#8]
 2868 0028 FFF7FEFF 	 bl XMC_ETH_MAC_InitPTP
 855:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2869              	 .loc 3 855 0
 2870 002c 1037     	 adds r7,r7,#16
 2871              	.LCFI190:
 2872              	 .cfi_def_cfa_offset 8
 2873 002e BD46     	 mov sp,r7
 2874              	.LCFI191:
 2875              	 .cfi_def_cfa_register 13
 2876              	 
 2877 0030 80BD     	 pop {r7,pc}
 2878              	 .cfi_endproc
 2879              	.LFE266:
 2881 0032 00BF     	 .section .text.XMC_ETH_MAC_GetPTPTime,"ax",%progbits
 2882              	 .align 2
 2883              	 .global XMC_ETH_MAC_GetPTPTime
 2884              	 .thumb
 2885              	 .thumb_func
 2887              	XMC_ETH_MAC_GetPTPTime:
 2888              	.LFB267:
 856:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 857:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Get PTP time */
 858:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_GetPTPTime(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)
 859:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2889              	 .loc 3 859 0
 2890              	 .cfi_startproc
 2891              	 
 2892              	 
 2893              	 
 2894 0000 80B4     	 push {r7}
 2895              	.LCFI192:
 2896              	 .cfi_def_cfa_offset 4
 2897              	 .cfi_offset 7,-4
 2898 0002 83B0     	 sub sp,sp,#12
 2899              	.LCFI193:
 2900              	 .cfi_def_cfa_offset 16
 2901 0004 00AF     	 add r7,sp,#0
 2902              	.LCFI194:
 2903              	 .cfi_def_cfa_register 7
 2904 0006 7860     	 str r0,[r7,#4]
 2905 0008 3960     	 str r1,[r7]
 860:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 861:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 862:../Libraries/XMCLib/src/xmc_eth_mac.c ****   time->nanoseconds = (uint32_t)(eth_mac->regs->SYSTEM_TIME_NANOSECONDS); /* accuracy of 1 ns */
 2906              	 .loc 3 862 0
 2907 000a 7B68     	 ldr r3,[r7,#4]
 2908 000c 1B68     	 ldr r3,[r3]
 2909 000e D3F80C37 	 ldr r3,[r3,#1804]
 2910 0012 1A46     	 mov r2,r3
 2911 0014 3B68     	 ldr r3,[r7]
 2912 0016 5A60     	 str r2,[r3,#4]
 863:../Libraries/XMCLib/src/xmc_eth_mac.c ****   time->seconds = eth_mac->regs->SYSTEM_TIME_SECONDS;
 2913              	 .loc 3 863 0
 2914 0018 7B68     	 ldr r3,[r7,#4]
 2915 001a 1B68     	 ldr r3,[r3]
 2916 001c D3F80827 	 ldr r2,[r3,#1800]
 2917 0020 3B68     	 ldr r3,[r7]
 2918 0022 1A60     	 str r2,[r3]
 864:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2919              	 .loc 3 864 0
 2920 0024 0C37     	 adds r7,r7,#12
 2921              	.LCFI195:
 2922              	 .cfi_def_cfa_offset 4
 2923 0026 BD46     	 mov sp,r7
 2924              	.LCFI196:
 2925              	 .cfi_def_cfa_register 13
 2926              	 
 2927 0028 5DF8047B 	 ldr r7,[sp],#4
 2928              	.LCFI197:
 2929              	 .cfi_restore 7
 2930              	 .cfi_def_cfa_offset 0
 2931 002c 7047     	 bx lr
 2932              	 .cfi_endproc
 2933              	.LFE267:
 2935 002e 00BF     	 .section .text.XMC_ETH_MAC_SetPTPTime,"ax",%progbits
 2936              	 .align 2
 2937              	 .global XMC_ETH_MAC_SetPTPTime
 2938              	 .thumb
 2939              	 .thumb_func
 2941              	XMC_ETH_MAC_SetPTPTime:
 2942              	.LFB268:
 865:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 866:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set PTP time */
 867:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetPTPTime(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)
 868:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2943              	 .loc 3 868 0
 2944              	 .cfi_startproc
 2945              	 
 2946              	 
 2947              	 
 2948 0000 80B4     	 push {r7}
 2949              	.LCFI198:
 2950              	 .cfi_def_cfa_offset 4
 2951              	 .cfi_offset 7,-4
 2952 0002 83B0     	 sub sp,sp,#12
 2953              	.LCFI199:
 2954              	 .cfi_def_cfa_offset 16
 2955 0004 00AF     	 add r7,sp,#0
 2956              	.LCFI200:
 2957              	 .cfi_def_cfa_register 7
 2958 0006 7860     	 str r0,[r7,#4]
 2959 0008 3960     	 str r1,[r7]
 869:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 870:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 871:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 2960              	 .loc 3 871 0
 2961 000a 7B68     	 ldr r3,[r7,#4]
 2962 000c 1B68     	 ldr r3,[r3]
 2963 000e 3A68     	 ldr r2,[r7]
 2964 0010 1268     	 ldr r2,[r2]
 2965 0012 C3F81027 	 str r2,[r3,#1808]
 872:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = time->nanoseconds;
 2966              	 .loc 3 872 0
 2967 0016 7B68     	 ldr r3,[r7,#4]
 2968 0018 1B68     	 ldr r3,[r3]
 2969 001a 3A68     	 ldr r2,[r7]
 2970 001c 5268     	 ldr r2,[r2,#4]
 2971 001e C3F81427 	 str r2,[r3,#1812]
 873:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 874:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Initialize precision timer */
 875:../Libraries/XMCLib/src/xmc_eth_mac.c ****   ETH0->TIMESTAMP_CONTROL |= ETH_TIMESTAMP_CONTROL_TSINIT_Msk;
 2972              	 .loc 3 875 0
 2973 0022 0B4A     	 ldr r2,.L117
 2974 0024 0A4B     	 ldr r3,.L117
 2975 0026 D3F80037 	 ldr r3,[r3,#1792]
 2976 002a 43F00403 	 orr r3,r3,#4
 2977 002e C2F80037 	 str r3,[r2,#1792]
 876:../Libraries/XMCLib/src/xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSINIT_Msk);
 2978              	 .loc 3 876 0
 2979 0032 00BF     	 nop
 2980              	.L116:
 2981              	 .loc 3 876 0 is_stmt 0 discriminator 1
 2982 0034 7B68     	 ldr r3,[r7,#4]
 2983 0036 1B68     	 ldr r3,[r3]
 2984 0038 D3F80037 	 ldr r3,[r3,#1792]
 2985 003c 03F00403 	 and r3,r3,#4
 2986 0040 002B     	 cmp r3,#0
 2987 0042 F7D1     	 bne .L116
 877:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2988              	 .loc 3 877 0 is_stmt 1
 2989 0044 0C37     	 adds r7,r7,#12
 2990              	.LCFI201:
 2991              	 .cfi_def_cfa_offset 4
 2992 0046 BD46     	 mov sp,r7
 2993              	.LCFI202:
 2994              	 .cfi_def_cfa_register 13
 2995              	 
 2996 0048 5DF8047B 	 ldr r7,[sp],#4
 2997              	.LCFI203:
 2998              	 .cfi_restore 7
 2999              	 .cfi_def_cfa_offset 0
 3000 004c 7047     	 bx lr
 3001              	.L118:
 3002 004e 00BF     	 .align 2
 3003              	.L117:
 3004 0050 00C00050 	 .word 1342226432
 3005              	 .cfi_endproc
 3006              	.LFE268:
 3008              	 .section .text.XMC_ETH_MAC_UpdatePTPTime,"ax",%progbits
 3009              	 .align 2
 3010              	 .global XMC_ETH_MAC_UpdatePTPTime
 3011              	 .thumb
 3012              	 .thumb_func
 3014              	XMC_ETH_MAC_UpdatePTPTime:
 3015              	.LFB269:
 878:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 879:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Update PTP time */
 880:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_UpdatePTPTime(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)
 881:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 3016              	 .loc 3 881 0
 3017              	 .cfi_startproc
 3018              	 
 3019              	 
 3020              	 
 3021 0000 80B4     	 push {r7}
 3022              	.LCFI204:
 3023              	 .cfi_def_cfa_offset 4
 3024              	 .cfi_offset 7,-4
 3025 0002 85B0     	 sub sp,sp,#20
 3026              	.LCFI205:
 3027              	 .cfi_def_cfa_offset 24
 3028 0004 00AF     	 add r7,sp,#0
 3029              	.LCFI206:
 3030              	 .cfi_def_cfa_register 7
 3031 0006 7860     	 str r0,[r7,#4]
 3032 0008 3960     	 str r1,[r7]
 882:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t temp;
 883:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 884:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_UpdatePTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->re
 885:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_UpdatePTPTime: time.time_stamp_nanoseconds not in range", (time->nanoseco
 886:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 887:../Libraries/XMCLib/src/xmc_eth_mac.c ****   temp = (uint32_t)(abs(time->nanoseconds));
 3033              	 .loc 3 887 0
 3034 000a 3B68     	 ldr r3,[r7]
 3035 000c 5B68     	 ldr r3,[r3,#4]
 3036 000e 002B     	 cmp r3,#0
 3037 0010 B8BF     	 it lt
 3038 0012 5B42     	 rsblt r3,r3,#0
 3039 0014 FB60     	 str r3,[r7,#12]
 888:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (time->nanoseconds < 0)
 3040              	 .loc 3 888 0
 3041 0016 3B68     	 ldr r3,[r7]
 3042 0018 5B68     	 ldr r3,[r3,#4]
 3043 001a 002B     	 cmp r3,#0
 3044 001c 03DA     	 bge .L120
 889:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 890:../Libraries/XMCLib/src/xmc_eth_mac.c ****     temp |= (uint32_t)ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_Msk;
 3045              	 .loc 3 890 0
 3046 001e FB68     	 ldr r3,[r7,#12]
 3047 0020 43F00043 	 orr r3,r3,#-2147483648
 3048 0024 FB60     	 str r3,[r7,#12]
 3049              	.L120:
 891:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 892:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 893:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = temp;
 3050              	 .loc 3 893 0
 3051 0026 7B68     	 ldr r3,[r7,#4]
 3052 0028 1B68     	 ldr r3,[r3]
 3053 002a FA68     	 ldr r2,[r7,#12]
 3054 002c C3F81427 	 str r2,[r3,#1812]
 894:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 3055              	 .loc 3 894 0
 3056 0030 7B68     	 ldr r3,[r7,#4]
 3057 0032 1B68     	 ldr r3,[r3]
 3058 0034 3A68     	 ldr r2,[r7]
 3059 0036 1268     	 ldr r2,[r2]
 3060 0038 C3F81027 	 str r2,[r3,#1808]
 895:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 896:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSUPDT_Msk;
 3061              	 .loc 3 896 0
 3062 003c 7B68     	 ldr r3,[r7,#4]
 3063 003e 1B68     	 ldr r3,[r3]
 3064 0040 7A68     	 ldr r2,[r7,#4]
 3065 0042 1268     	 ldr r2,[r2]
 3066 0044 D2F80027 	 ldr r2,[r2,#1792]
 3067 0048 42F00802 	 orr r2,r2,#8
 3068 004c C3F80027 	 str r2,[r3,#1792]
 897:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 3069              	 .loc 3 897 0
 3070 0050 1437     	 adds r7,r7,#20
 3071              	.LCFI207:
 3072              	 .cfi_def_cfa_offset 4
 3073 0052 BD46     	 mov sp,r7
 3074              	.LCFI208:
 3075              	 .cfi_def_cfa_register 13
 3076              	 
 3077 0054 5DF8047B 	 ldr r7,[sp],#4
 3078              	.LCFI209:
 3079              	 .cfi_restore 7
 3080              	 .cfi_def_cfa_offset 0
 3081 0058 7047     	 bx lr
 3082              	 .cfi_endproc
 3083              	.LFE269:
 3085 005a 00BF     	 .section .text.XMC_ETH_MAC_SetPTPAlarm,"ax",%progbits
 3086              	 .align 2
 3087              	 .global XMC_ETH_MAC_SetPTPAlarm
 3088              	 .thumb
 3089              	 .thumb_func
 3091              	XMC_ETH_MAC_SetPTPAlarm:
 3092              	.LFB270:
 898:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 899:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set PTP alarm */
 900:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetPTPAlarm(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)
 901:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 3093              	 .loc 3 901 0
 3094              	 .cfi_startproc
 3095              	 
 3096              	 
 3097              	 
 3098 0000 80B4     	 push {r7}
 3099              	.LCFI210:
 3100              	 .cfi_def_cfa_offset 4
 3101              	 .cfi_offset 7,-4
 3102 0002 83B0     	 sub sp,sp,#12
 3103              	.LCFI211:
 3104              	 .cfi_def_cfa_offset 16
 3105 0004 00AF     	 add r7,sp,#0
 3106              	.LCFI212:
 3107              	 .cfi_def_cfa_register 7
 3108 0006 7860     	 str r0,[r7,#4]
 3109 0008 3960     	 str r1,[r7]
 902:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetPTPAlarm: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs
 903:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetPTPAlarm: time.time_stamp_nanoseconds not in range", (time->nanosecond
 904:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 905:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TARGET_TIME_NANOSECONDS = time->nanoseconds;
 3110              	 .loc 3 905 0
 3111 000a 7B68     	 ldr r3,[r7,#4]
 3112 000c 1B68     	 ldr r3,[r3]
 3113 000e 3A68     	 ldr r2,[r7]
 3114 0010 5268     	 ldr r2,[r2,#4]
 3115 0012 C3F82027 	 str r2,[r3,#1824]
 906:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TARGET_TIME_SECONDS = time->seconds;
 3116              	 .loc 3 906 0
 3117 0016 7B68     	 ldr r3,[r7,#4]
 3118 0018 1B68     	 ldr r3,[r3]
 3119 001a 3A68     	 ldr r2,[r7]
 3120 001c 1268     	 ldr r2,[r2]
 3121 001e C3F81C27 	 str r2,[r3,#1820]
 907:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 3122              	 .loc 3 907 0
 3123 0022 0C37     	 adds r7,r7,#12
 3124              	.LCFI213:
 3125              	 .cfi_def_cfa_offset 4
 3126 0024 BD46     	 mov sp,r7
 3127              	.LCFI214:
 3128              	 .cfi_def_cfa_register 13
 3129              	 
 3130 0026 5DF8047B 	 ldr r7,[sp],#4
 3131              	.LCFI215:
 3132              	 .cfi_restore 7
 3133              	 .cfi_def_cfa_offset 0
 3134 002a 7047     	 bx lr
 3135              	 .cfi_endproc
 3136              	.LFE270:
 3138              	 .section .text.XMC_ETH_MAC_AdjustPTPClock,"ax",%progbits
 3139              	 .align 2
 3140              	 .global XMC_ETH_MAC_AdjustPTPClock
 3141              	 .thumb
 3142              	 .thumb_func
 3144              	XMC_ETH_MAC_AdjustPTPClock:
 3145              	.LFB271:
 908:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 909:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Adjust PTP clock */
 910:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_AdjustPTPClock(XMC_ETH_MAC_t *const eth_mac, uint32_t correction)
 911:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 3146              	 .loc 3 911 0
 3147              	 .cfi_startproc
 3148              	 
 3149              	 
 3150 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3151              	.LCFI216:
 3152              	 .cfi_def_cfa_offset 20
 3153              	 .cfi_offset 4,-20
 3154              	 .cfi_offset 5,-16
 3155              	 .cfi_offset 6,-12
 3156              	 .cfi_offset 7,-8
 3157              	 .cfi_offset 14,-4
 3158 0002 83B0     	 sub sp,sp,#12
 3159              	.LCFI217:
 3160              	 .cfi_def_cfa_offset 32
 3161 0004 00AF     	 add r7,sp,#0
 3162              	.LCFI218:
 3163              	 .cfi_def_cfa_register 7
 3164 0006 7860     	 str r0,[r7,#4]
 3165 0008 3960     	 str r1,[r7]
 912:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_AdjustPTPClock: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 913:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 914:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Correction factor is Q31 (0x80000000 = 1.000000000) */
 915:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)(((uint64_t)correction * eth_mac->regs->TIMESTAMP_ADD
 3166              	 .loc 3 915 0
 3167 000a 7B68     	 ldr r3,[r7,#4]
 3168 000c 1E68     	 ldr r6,[r3]
 3169 000e 3B68     	 ldr r3,[r7]
 3170 0010 1846     	 mov r0,r3
 3171 0012 4FF00001 	 mov r1,#0
 3172 0016 7B68     	 ldr r3,[r7,#4]
 3173 0018 1B68     	 ldr r3,[r3]
 3174 001a D3F81837 	 ldr r3,[r3,#1816]
 3175 001e 1A46     	 mov r2,r3
 3176 0020 4FF00003 	 mov r3,#0
 3177 0024 02FB01FC 	 mul ip,r2,r1
 3178 0028 00FB03FE 	 mul lr,r0,r3
 3179 002c E644     	 add lr,lr,ip
 3180 002e A0FB0223 	 umull r2,r3,r0,r2
 3181 0032 0EEB0301 	 add r1,lr,r3
 3182 0036 0B46     	 mov r3,r1
 3183 0038 D40F     	 lsrs r4,r2,#31
 3184 003a 44EA4304 	 orr r4,r4,r3,lsl#1
 3185 003e DD0F     	 lsrs r5,r3,#31
 3186 0040 2346     	 mov r3,r4
 3187 0042 C6F81837 	 str r3,[r6,#1816]
 916:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 917:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Update addend register */
 918:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 3188              	 .loc 3 918 0
 3189 0046 7B68     	 ldr r3,[r7,#4]
 3190 0048 1B68     	 ldr r3,[r3]
 3191 004a 7A68     	 ldr r2,[r7,#4]
 3192 004c 1268     	 ldr r2,[r2]
 3193 004e D2F80027 	 ldr r2,[r2,#1792]
 3194 0052 42F02002 	 orr r2,r2,#32
 3195 0056 C3F80027 	 str r2,[r3,#1792]
 919:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 920:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 921:../Libraries/XMCLib/src/xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);
 3196              	 .loc 3 921 0
 3197 005a 00BF     	 nop
 3198              	.L123:
 3199              	 .loc 3 921 0 is_stmt 0 discriminator 1
 3200 005c 7B68     	 ldr r3,[r7,#4]
 3201 005e 1B68     	 ldr r3,[r3]
 3202 0060 D3F80037 	 ldr r3,[r3,#1792]
 3203 0064 03F02003 	 and r3,r3,#32
 3204 0068 002B     	 cmp r3,#0
 3205 006a F7D1     	 bne .L123
 922:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 3206              	 .loc 3 922 0 is_stmt 1
 3207 006c 0C37     	 adds r7,r7,#12
 3208              	.LCFI219:
 3209              	 .cfi_def_cfa_offset 20
 3210 006e BD46     	 mov sp,r7
 3211              	.LCFI220:
 3212              	 .cfi_def_cfa_register 13
 3213              	 
 3214 0070 F0BD     	 pop {r4,r5,r6,r7,pc}
 3215              	 .cfi_endproc
 3216              	.LFE271:
 3218 0072 00BF     	 .section .text.XMC_ETH_MAC_UpdateAddend,"ax",%progbits
 3219              	 .align 2
 3220              	 .global XMC_ETH_MAC_UpdateAddend
 3221              	 .thumb
 3222              	 .thumb_func
 3224              	XMC_ETH_MAC_UpdateAddend:
 3225              	.LFB272:
 923:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 924:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Update Addend */
 925:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_UpdateAddend(XMC_ETH_MAC_t *const eth_mac, uint32_t addend)
 926:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 3226              	 .loc 3 926 0
 3227              	 .cfi_startproc
 3228              	 
 3229              	 
 3230              	 
 3231 0000 80B4     	 push {r7}
 3232              	.LCFI221:
 3233              	 .cfi_def_cfa_offset 4
 3234              	 .cfi_offset 7,-4
 3235 0002 83B0     	 sub sp,sp,#12
 3236              	.LCFI222:
 3237              	 .cfi_def_cfa_offset 16
 3238 0004 00AF     	 add r7,sp,#0
 3239              	.LCFI223:
 3240              	 .cfi_def_cfa_register 7
 3241 0006 7860     	 str r0,[r7,#4]
 3242 0008 3960     	 str r1,[r7]
 927:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_AdjustPTPClock: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 928:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 929:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_ADDEND = addend;
 3243              	 .loc 3 929 0
 3244 000a 7B68     	 ldr r3,[r7,#4]
 3245 000c 1B68     	 ldr r3,[r3]
 3246 000e 3A68     	 ldr r2,[r7]
 3247 0010 C3F81827 	 str r2,[r3,#1816]
 930:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 931:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Update addend register */
 932:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 3248              	 .loc 3 932 0
 3249 0014 7B68     	 ldr r3,[r7,#4]
 3250 0016 1B68     	 ldr r3,[r3]
 3251 0018 7A68     	 ldr r2,[r7,#4]
 3252 001a 1268     	 ldr r2,[r2]
 3253 001c D2F80027 	 ldr r2,[r2,#1792]
 3254 0020 42F02002 	 orr r2,r2,#32
 3255 0024 C3F80027 	 str r2,[r3,#1792]
 933:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 934:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 935:../Libraries/XMCLib/src/xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);
 3256              	 .loc 3 935 0
 3257 0028 00BF     	 nop
 3258              	.L125:
 3259              	 .loc 3 935 0 is_stmt 0 discriminator 1
 3260 002a 7B68     	 ldr r3,[r7,#4]
 3261 002c 1B68     	 ldr r3,[r3]
 3262 002e D3F80037 	 ldr r3,[r3,#1792]
 3263 0032 03F02003 	 and r3,r3,#32
 3264 0036 002B     	 cmp r3,#0
 3265 0038 F7D1     	 bne .L125
 936:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 3266              	 .loc 3 936 0 is_stmt 1
 3267 003a 0C37     	 adds r7,r7,#12
 3268              	.LCFI224:
 3269              	 .cfi_def_cfa_offset 4
 3270 003c BD46     	 mov sp,r7
 3271              	.LCFI225:
 3272              	 .cfi_def_cfa_register 13
 3273              	 
 3274 003e 5DF8047B 	 ldr r7,[sp],#4
 3275              	.LCFI226:
 3276              	 .cfi_restore 7
 3277              	 .cfi_def_cfa_offset 0
 3278 0042 7047     	 bx lr
 3279              	 .cfi_endproc
 3280              	.LFE272:
 3282              	 .section .text.XMC_ETH_MAC_GetPTPStatus,"ax",%progbits
 3283              	 .align 2
 3284              	 .global XMC_ETH_MAC_GetPTPStatus
 3285              	 .thumb
 3286              	 .thumb_func
 3288              	XMC_ETH_MAC_GetPTPStatus:
 3289              	.LFB273:
 937:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 938:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set PTP status */
 939:../Libraries/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetPTPStatus(const XMC_ETH_MAC_t *const eth_mac)
 940:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 3290              	 .loc 3 940 0
 3291              	 .cfi_startproc
 3292              	 
 3293              	 
 3294              	 
 3295 0000 80B4     	 push {r7}
 3296              	.LCFI227:
 3297              	 .cfi_def_cfa_offset 4
 3298              	 .cfi_offset 7,-4
 3299 0002 83B0     	 sub sp,sp,#12
 3300              	.LCFI228:
 3301              	 .cfi_def_cfa_offset 16
 3302 0004 00AF     	 add r7,sp,#0
 3303              	.LCFI229:
 3304              	 .cfi_def_cfa_register 7
 3305 0006 7860     	 str r0,[r7,#4]
 941:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->reg
 942:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 943:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (eth_mac->regs->TIMESTAMP_STATUS);
 3306              	 .loc 3 943 0
 3307 0008 7B68     	 ldr r3,[r7,#4]
 3308 000a 1B68     	 ldr r3,[r3]
 3309 000c D3F82837 	 ldr r3,[r3,#1832]
 944:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 3310              	 .loc 3 944 0
 3311 0010 1846     	 mov r0,r3
 3312 0012 0C37     	 adds r7,r7,#12
 3313              	.LCFI230:
 3314              	 .cfi_def_cfa_offset 4
 3315 0014 BD46     	 mov sp,r7
 3316              	.LCFI231:
 3317              	 .cfi_def_cfa_register 13
 3318              	 
 3319 0016 5DF8047B 	 ldr r7,[sp],#4
 3320              	.LCFI232:
 3321              	 .cfi_restore 7
 3322              	 .cfi_def_cfa_offset 0
 3323 001a 7047     	 bx lr
 3324              	 .cfi_endproc
 3325              	.LFE273:
 3327              	 .section .text.XMC_ETH_MAC_GetRxTimeStamp,"ax",%progbits
 3328              	 .align 2
 3329              	 .global XMC_ETH_MAC_GetRxTimeStamp
 3330              	 .thumb
 3331              	 .thumb_func
 3333              	XMC_ETH_MAC_GetRxTimeStamp:
 3334              	.LFB274:
 945:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 946:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Get TX time-stamp */
 947:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetRxTimeStamp(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *c
 948:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 3335              	 .loc 3 948 0
 3336              	 .cfi_startproc
 3337              	 
 3338              	 
 3339              	 
 3340 0000 80B4     	 push {r7}
 3341              	.LCFI233:
 3342              	 .cfi_def_cfa_offset 4
 3343              	 .cfi_offset 7,-4
 3344 0002 85B0     	 sub sp,sp,#20
 3345              	.LCFI234:
 3346              	 .cfi_def_cfa_offset 24
 3347 0004 00AF     	 add r7,sp,#0
 3348              	.LCFI235:
 3349              	 .cfi_def_cfa_register 7
 3350 0006 7860     	 str r0,[r7,#4]
 3351 0008 3960     	 str r1,[r7]
 949:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc;
 950:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 951:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 952:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetRxTimeStamp: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 953:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetRxTimeStamp: time is invalid", time != NULL);
 954:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 955:../Libraries/XMCLib/src/xmc_eth_mac.c ****   rx_desc = &eth_mac->rx_desc[eth_mac->rx_index];
 3352              	 .loc 3 955 0
 3353 000a 7B68     	 ldr r3,[r7,#4]
 3354 000c 1A69     	 ldr r2,[r3,#16]
 3355 000e 7B68     	 ldr r3,[r7,#4]
 3356 0010 93F82730 	 ldrb r3,[r3,#39]
 3357 0014 5B01     	 lsls r3,r3,#5
 3358 0016 1344     	 add r3,r3,r2
 3359 0018 BB60     	 str r3,[r7,#8]
 956:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (rx_desc->status & ETH_MAC_DMA_RDES0_OWN)
 3360              	 .loc 3 956 0
 3361 001a BB68     	 ldr r3,[r7,#8]
 3362 001c 1B68     	 ldr r3,[r3]
 3363 001e 002B     	 cmp r3,#0
 3364 0020 02DA     	 bge .L129
 957:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 958:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 3365              	 .loc 3 958 0
 3366 0022 0123     	 movs r3,#1
 3367 0024 FB73     	 strb r3,[r7,#15]
 3368 0026 14E0     	 b .L130
 3369              	.L129:
 959:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 960:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 961:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 962:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if ((rx_desc->status & (ETH_MAC_DMA_RDES0_TSA | ETH_MAC_DMA_RDES0_LS)) == (ETH_MAC_DMA_RDES0_TS
 3370              	 .loc 3 962 0
 3371 0028 BB68     	 ldr r3,[r7,#8]
 3372 002a 1B68     	 ldr r3,[r3]
 3373 002c 03F4C073 	 and r3,r3,#384
 3374 0030 B3F5C07F 	 cmp r3,#384
 3375 0034 0BD1     	 bne .L131
 963:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 964:../Libraries/XMCLib/src/xmc_eth_mac.c ****       time->nanoseconds = (int32_t)(rx_desc->time_stamp_nanoseconds);
 3376              	 .loc 3 964 0
 3377 0036 BB68     	 ldr r3,[r7,#8]
 3378 0038 9B69     	 ldr r3,[r3,#24]
 3379 003a 1A46     	 mov r2,r3
 3380 003c 3B68     	 ldr r3,[r7]
 3381 003e 5A60     	 str r2,[r3,#4]
 965:../Libraries/XMCLib/src/xmc_eth_mac.c ****       time->seconds = rx_desc->time_stamp_seconds;
 3382              	 .loc 3 965 0
 3383 0040 BB68     	 ldr r3,[r7,#8]
 3384 0042 DA69     	 ldr r2,[r3,#28]
 3385 0044 3B68     	 ldr r3,[r7]
 3386 0046 1A60     	 str r2,[r3]
 966:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 967:../Libraries/XMCLib/src/xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_OK;
 3387              	 .loc 3 967 0
 3388 0048 0023     	 movs r3,#0
 3389 004a FB73     	 strb r3,[r7,#15]
 3390 004c 01E0     	 b .L130
 3391              	.L131:
 968:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 969:../Libraries/XMCLib/src/xmc_eth_mac.c ****     else
 970:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 971:../Libraries/XMCLib/src/xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_ERROR;
 3392              	 .loc 3 971 0
 3393 004e 0223     	 movs r3,#2
 3394 0050 FB73     	 strb r3,[r7,#15]
 3395              	.L130:
 972:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 973:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 974:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 975:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 3396              	 .loc 3 975 0
 3397 0052 FB7B     	 ldrb r3,[r7,#15]
 976:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 3398              	 .loc 3 976 0
 3399 0054 1846     	 mov r0,r3
 3400 0056 1437     	 adds r7,r7,#20
 3401              	.LCFI236:
 3402              	 .cfi_def_cfa_offset 4
 3403 0058 BD46     	 mov sp,r7
 3404              	.LCFI237:
 3405              	 .cfi_def_cfa_register 13
 3406              	 
 3407 005a 5DF8047B 	 ldr r7,[sp],#4
 3408              	.LCFI238:
 3409              	 .cfi_restore 7
 3410              	 .cfi_def_cfa_offset 0
 3411 005e 7047     	 bx lr
 3412              	 .cfi_endproc
 3413              	.LFE274:
 3415              	 .section .text.XMC_ETH_MAC_GetTxTimeStamp,"ax",%progbits
 3416              	 .align 2
 3417              	 .global XMC_ETH_MAC_GetTxTimeStamp
 3418              	 .thumb
 3419              	 .thumb_func
 3421              	XMC_ETH_MAC_GetTxTimeStamp:
 3422              	.LFB275:
 977:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 978:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Get TX time-stamp */
 979:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetTxTimeStamp(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *c
 980:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 3423              	 .loc 3 980 0
 3424              	 .cfi_startproc
 3425              	 
 3426              	 
 3427              	 
 3428 0000 80B4     	 push {r7}
 3429              	.LCFI239:
 3430              	 .cfi_def_cfa_offset 4
 3431              	 .cfi_offset 7,-4
 3432 0002 85B0     	 sub sp,sp,#20
 3433              	.LCFI240:
 3434              	 .cfi_def_cfa_offset 24
 3435 0004 00AF     	 add r7,sp,#0
 3436              	.LCFI241:
 3437              	 .cfi_def_cfa_register 7
 3438 0006 7860     	 str r0,[r7,#4]
 3439 0008 3960     	 str r1,[r7]
 981:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc;
 982:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 983:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 984:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetTxTimeStamp: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 985:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetTxTimeStamp: time is invalid", time != NULL);
 986:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 987:../Libraries/XMCLib/src/xmc_eth_mac.c ****   tx_desc = &eth_mac->tx_desc[eth_mac->tx_ts_index];
 3440              	 .loc 3 987 0
 3441 000a 7B68     	 ldr r3,[r7,#4]
 3442 000c 5A69     	 ldr r2,[r3,#20]
 3443 000e 7B68     	 ldr r3,[r7,#4]
 3444 0010 93F82830 	 ldrb r3,[r3,#40]
 3445 0014 5B01     	 lsls r3,r3,#5
 3446 0016 1344     	 add r3,r3,r2
 3447 0018 BB60     	 str r3,[r7,#8]
 988:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (tx_desc->status & ETH_MAC_DMA_TDES0_OWN)
 3448              	 .loc 3 988 0
 3449 001a BB68     	 ldr r3,[r7,#8]
 3450 001c 1B68     	 ldr r3,[r3]
 3451 001e 002B     	 cmp r3,#0
 3452 0020 02DA     	 bge .L134
 989:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 990:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 3453              	 .loc 3 990 0
 3454 0022 0123     	 movs r3,#1
 3455 0024 FB73     	 strb r3,[r7,#15]
 3456 0026 14E0     	 b .L135
 3457              	.L134:
 991:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 992:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 993:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 994:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if ((tx_desc->status & (ETH_MAC_DMA_TDES0_TTSS | ETH_MAC_DMA_TDES0_LS)) == (ETH_MAC_DMA_TDES0_T
 3458              	 .loc 3 994 0
 3459 0028 BB68     	 ldr r3,[r7,#8]
 3460 002a 1A68     	 ldr r2,[r3]
 3461 002c 0C4B     	 ldr r3,.L138
 3462 002e 1340     	 ands r3,r3,r2
 3463 0030 0B4A     	 ldr r2,.L138
 3464 0032 9342     	 cmp r3,r2
 3465 0034 0BD1     	 bne .L136
 995:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 996:../Libraries/XMCLib/src/xmc_eth_mac.c ****       time->nanoseconds = (int32_t)(tx_desc->time_stamp_nanoseconds); /* accuracy of 1 ns */
 3466              	 .loc 3 996 0
 3467 0036 BB68     	 ldr r3,[r7,#8]
 3468 0038 9B69     	 ldr r3,[r3,#24]
 3469 003a 1A46     	 mov r2,r3
 3470 003c 3B68     	 ldr r3,[r7]
 3471 003e 5A60     	 str r2,[r3,#4]
 997:../Libraries/XMCLib/src/xmc_eth_mac.c ****       time->seconds = tx_desc->time_stamp_seconds;
 3472              	 .loc 3 997 0
 3473 0040 BB68     	 ldr r3,[r7,#8]
 3474 0042 DA69     	 ldr r2,[r3,#28]
 3475 0044 3B68     	 ldr r3,[r7]
 3476 0046 1A60     	 str r2,[r3]
 998:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 999:../Libraries/XMCLib/src/xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_OK;
 3477              	 .loc 3 999 0
 3478 0048 0023     	 movs r3,#0
 3479 004a FB73     	 strb r3,[r7,#15]
 3480 004c 01E0     	 b .L135
 3481              	.L136:
1000:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
1001:../Libraries/XMCLib/src/xmc_eth_mac.c ****     else
1002:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
1003:../Libraries/XMCLib/src/xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_ERROR;
 3482              	 .loc 3 1003 0
 3483 004e 0223     	 movs r3,#2
 3484 0050 FB73     	 strb r3,[r7,#15]
 3485              	.L135:
1004:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
1005:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
1006:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
1007:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 3486              	 .loc 3 1007 0
 3487 0052 FB7B     	 ldrb r3,[r7,#15]
1008:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 3488              	 .loc 3 1008 0
 3489 0054 1846     	 mov r0,r3
 3490 0056 1437     	 adds r7,r7,#20
 3491              	.LCFI242:
 3492              	 .cfi_def_cfa_offset 4
 3493 0058 BD46     	 mov sp,r7
 3494              	.LCFI243:
 3495              	 .cfi_def_cfa_register 13
 3496              	 
 3497 005a 5DF8047B 	 ldr r7,[sp],#4
 3498              	.LCFI244:
 3499              	 .cfi_restore 7
 3500              	 .cfi_def_cfa_offset 0
 3501 005e 7047     	 bx lr
 3502              	.L139:
 3503              	 .align 2
 3504              	.L138:
 3505 0060 00000220 	 .word 537001984
 3506              	 .cfi_endproc
 3507              	.LFE275:
 3509              	 .text
 3510              	.Letext0:
 3511              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3512              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3513              	 .file 6 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3514              	 .file 7 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
 3515              	 .file 8 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/core_cm4.h"
 3516              	 .file 9 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_eth_mac.c
    {standard input}:20     .text.XMC_ETH_MAC_Reset:00000000 $t
    {standard input}:24     .text.XMC_ETH_MAC_Reset:00000000 XMC_ETH_MAC_Reset
    {standard input}:81     .text.XMC_ETH_MAC_SetAddress:00000000 $t
    {standard input}:85     .text.XMC_ETH_MAC_SetAddress:00000000 XMC_ETH_MAC_SetAddress
    {standard input}:138    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:142    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:178    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:184    .text.XMC_SCU_CLOCK_GetEthernetClockFrequency:00000000 $t
    {standard input}:188    .text.XMC_SCU_CLOCK_GetEthernetClockFrequency:00000000 XMC_SCU_CLOCK_GetEthernetClockFrequency
    {standard input}:213    .text.XCM_ETH_MAC_IsNormalEvent:00000000 $t
    {standard input}:217    .text.XCM_ETH_MAC_IsNormalEvent:00000000 XCM_ETH_MAC_IsNormalEvent
    {standard input}:263    .text.XCM_ETH_MAC_IsAbnormalEvent:00000000 $t
    {standard input}:267    .text.XCM_ETH_MAC_IsAbnormalEvent:00000000 XCM_ETH_MAC_IsAbnormalEvent
    {standard input}:312    .text.XMC_ETH_MAC_InitEx:00000000 $t
    {standard input}:317    .text.XMC_ETH_MAC_InitEx:00000000 XMC_ETH_MAC_InitEx
    {standard input}:476    .text.XMC_ETH_MAC_InitRxDescriptors:00000000 XMC_ETH_MAC_InitRxDescriptors
    {standard input}:617    .text.XMC_ETH_MAC_InitTxDescriptors:00000000 XMC_ETH_MAC_InitTxDescriptors
    {standard input}:410    .text.XMC_ETH_MAC_InitEx:00000090 $d
    {standard input}:416    .text.XMC_ETH_MAC_Init:00000000 $t
    {standard input}:421    .text.XMC_ETH_MAC_Init:00000000 XMC_ETH_MAC_Init
    {standard input}:1710   .text.XMC_ETH_MAC_Enable:00000000 XMC_ETH_MAC_Enable
    {standard input}:1581   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000000 XMC_ETH_MAC_SetManagmentClockDivider
    {standard input}:471    .text.XMC_ETH_MAC_InitRxDescriptors:00000000 $t
    {standard input}:612    .text.XMC_ETH_MAC_InitTxDescriptors:00000000 $t
    {standard input}:744    .text.XMC_ETH_MAC_InitTxDescriptors:000000b4 $d
    {standard input}:749    .text.XMC_ETH_MAC_SetAddressEx:00000000 $t
    {standard input}:754    .text.XMC_ETH_MAC_SetAddressEx:00000000 XMC_ETH_MAC_SetAddressEx
    {standard input}:825    .text.XMC_ETH_MAC_GetAddressEx:00000000 $t
    {standard input}:830    .text.XMC_ETH_MAC_GetAddressEx:00000000 XMC_ETH_MAC_GetAddressEx
    {standard input}:915    .text.XMC_ETH_MAC_SetAddressPerfectFilter:00000000 $t
    {standard input}:920    .text.XMC_ETH_MAC_SetAddressPerfectFilter:00000000 XMC_ETH_MAC_SetAddressPerfectFilter
    {standard input}:987    .text.XMC_ETH_MAC_SetAddressPerfectFilterEx:00000000 $t
    {standard input}:992    .text.XMC_ETH_MAC_SetAddressPerfectFilterEx:00000000 XMC_ETH_MAC_SetAddressPerfectFilterEx
    {standard input}:1079   .text.XMC_ETH_MAC_SetAddressHashFilter:00000000 $t
    {standard input}:1084   .text.XMC_ETH_MAC_SetAddressHashFilter:00000000 XMC_ETH_MAC_SetAddressHashFilter
    {standard input}:1137   .text.XMC_ETH_MAC_SendFrame:00000000 $t
    {standard input}:1142   .text.XMC_ETH_MAC_SendFrame:00000000 XMC_ETH_MAC_SendFrame
    {standard input}:1370   .text.XMC_ETH_MAC_ReadFrame:00000000 $t
    {standard input}:1375   .text.XMC_ETH_MAC_ReadFrame:00000000 XMC_ETH_MAC_ReadFrame
    {standard input}:1477   .text.XMC_ETH_MAC_GetRxFrameSize:00000000 $t
    {standard input}:1482   .text.XMC_ETH_MAC_GetRxFrameSize:00000000 XMC_ETH_MAC_GetRxFrameSize
    {standard input}:1571   .text.XMC_ETH_MAC_GetRxFrameSize:0000006c $d
    {standard input}:1576   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000000 $t
    {standard input}:1695   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000088 $d
    {standard input}:1705   .text.XMC_ETH_MAC_Enable:00000000 $t
    {standard input}:1746   .text.XMC_ETH_MAC_Enable:0000001c $d
    {standard input}:1751   .text.XMC_ETH_MAC_Disable:00000000 $t
    {standard input}:1756   .text.XMC_ETH_MAC_Disable:00000000 XMC_ETH_MAC_Disable
    {standard input}:1792   .text.XMC_ETH_MAC_Disable:0000001c $d
    {standard input}:1797   .text.XMC_ETH_MAC_ReadPhy:00000000 $t
    {standard input}:1802   .text.XMC_ETH_MAC_ReadPhy:00000000 XMC_ETH_MAC_ReadPhy
    {standard input}:1896   .text.XMC_ETH_MAC_WritePhy:00000000 $t
    {standard input}:1901   .text.XMC_ETH_MAC_WritePhy:00000000 XMC_ETH_MAC_WritePhy
    {standard input}:1997   .text.XMC_ETH_MAC_FlushTx:00000000 $t
    {standard input}:2002   .text.XMC_ETH_MAC_FlushTx:00000000 XMC_ETH_MAC_FlushTx
    {standard input}:2060   .text.XMC_ETH_MAC_FlushRx:00000000 $t
    {standard input}:2065   .text.XMC_ETH_MAC_FlushRx:00000000 XMC_ETH_MAC_FlushRx
    {standard input}:2123   .text.XMC_ETH_MAC_SetWakeUpFrameFilter:00000000 $t
    {standard input}:2128   .text.XMC_ETH_MAC_SetWakeUpFrameFilter:00000000 XMC_ETH_MAC_SetWakeUpFrameFilter
    {standard input}:2188   .text.XMC_ETH_MAC_EnableEvent:00000000 $t
    {standard input}:2193   .text.XMC_ETH_MAC_EnableEvent:00000000 XMC_ETH_MAC_EnableEvent
    {standard input}:2275   .text.XMC_ETH_MAC_DisableEvent:00000000 $t
    {standard input}:2280   .text.XMC_ETH_MAC_DisableEvent:00000000 XMC_ETH_MAC_DisableEvent
    {standard input}:2344   .text.XMC_ETH_MAC_ClearEventStatus:00000000 $t
    {standard input}:2349   .text.XMC_ETH_MAC_ClearEventStatus:00000000 XMC_ETH_MAC_ClearEventStatus
    {standard input}:2421   .text.XMC_ETH_MAC_GetEventStatus:00000000 $t
    {standard input}:2426   .text.XMC_ETH_MAC_GetEventStatus:00000000 XMC_ETH_MAC_GetEventStatus
    {standard input}:2481   .text.XMC_ETH_MAC_ReturnRxDescriptor:00000000 $t
    {standard input}:2486   .text.XMC_ETH_MAC_ReturnRxDescriptor:00000000 XMC_ETH_MAC_ReturnRxDescriptor
    {standard input}:2556   .text.XMC_ETH_MAC_ReturnTxDescriptor:00000000 $t
    {standard input}:2561   .text.XMC_ETH_MAC_ReturnTxDescriptor:00000000 XMC_ETH_MAC_ReturnTxDescriptor
    {standard input}:2641   .text.XMC_ETH_MAC_SetVLANTag:00000000 $t
    {standard input}:2646   .text.XMC_ETH_MAC_SetVLANTag:00000000 XMC_ETH_MAC_SetVLANTag
    {standard input}:2687   .text.XMC_ETH_MAC_InitPTP:00000000 $t
    {standard input}:2692   .text.XMC_ETH_MAC_InitPTP:00000000 XMC_ETH_MAC_InitPTP
    {standard input}:2821   .text.XMC_ETH_MAC_InitPTP:000000fc $d
    {standard input}:2828   .text.XMC_ETH_MAC_InitPTPEx:00000000 $t
    {standard input}:2833   .text.XMC_ETH_MAC_InitPTPEx:00000000 XMC_ETH_MAC_InitPTPEx
    {standard input}:2882   .text.XMC_ETH_MAC_GetPTPTime:00000000 $t
    {standard input}:2887   .text.XMC_ETH_MAC_GetPTPTime:00000000 XMC_ETH_MAC_GetPTPTime
    {standard input}:2936   .text.XMC_ETH_MAC_SetPTPTime:00000000 $t
    {standard input}:2941   .text.XMC_ETH_MAC_SetPTPTime:00000000 XMC_ETH_MAC_SetPTPTime
    {standard input}:3004   .text.XMC_ETH_MAC_SetPTPTime:00000050 $d
    {standard input}:3009   .text.XMC_ETH_MAC_UpdatePTPTime:00000000 $t
    {standard input}:3014   .text.XMC_ETH_MAC_UpdatePTPTime:00000000 XMC_ETH_MAC_UpdatePTPTime
    {standard input}:3086   .text.XMC_ETH_MAC_SetPTPAlarm:00000000 $t
    {standard input}:3091   .text.XMC_ETH_MAC_SetPTPAlarm:00000000 XMC_ETH_MAC_SetPTPAlarm
    {standard input}:3139   .text.XMC_ETH_MAC_AdjustPTPClock:00000000 $t
    {standard input}:3144   .text.XMC_ETH_MAC_AdjustPTPClock:00000000 XMC_ETH_MAC_AdjustPTPClock
    {standard input}:3219   .text.XMC_ETH_MAC_UpdateAddend:00000000 $t
    {standard input}:3224   .text.XMC_ETH_MAC_UpdateAddend:00000000 XMC_ETH_MAC_UpdateAddend
    {standard input}:3283   .text.XMC_ETH_MAC_GetPTPStatus:00000000 $t
    {standard input}:3288   .text.XMC_ETH_MAC_GetPTPStatus:00000000 XMC_ETH_MAC_GetPTPStatus
    {standard input}:3328   .text.XMC_ETH_MAC_GetRxTimeStamp:00000000 $t
    {standard input}:3333   .text.XMC_ETH_MAC_GetRxTimeStamp:00000000 XMC_ETH_MAC_GetRxTimeStamp
    {standard input}:3416   .text.XMC_ETH_MAC_GetTxTimeStamp:00000000 $t
    {standard input}:3421   .text.XMC_ETH_MAC_GetTxTimeStamp:00000000 XMC_ETH_MAC_GetTxTimeStamp
    {standard input}:3505   .text.XMC_ETH_MAC_GetTxTimeStamp:00000060 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
memcpy
XMC_SCU_CLOCK_EnableClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_DisableClock
