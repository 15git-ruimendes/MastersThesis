   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usic.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_SetInputTriggerCombinationMode,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_SetInputTriggerCombinationMode:
  25              	.LFB147:
  26              	 .file 1 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2020-12-05
   4:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
   7:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.
  11:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  14:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * do so, all subject to the following:
  20:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  21:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * a source language processor.
  27:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  28:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * at XMCSupport@infineon.com.
  39:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *****************************************************************************
  40:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  41:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  42:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  43:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  44:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  45:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  46:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  47:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  48:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  49:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  50:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  51:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  52:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  54:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  55:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  56:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  57:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  58:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  59:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  60:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  62:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  63:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  64:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  65:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  67:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  68:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  69:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  70:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  71:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  72:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  73:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  74:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  75:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  76:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  77:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  79:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  80:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  81:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  82:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  83:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  84:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  85:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  86:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  87:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  88:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  89:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  90:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  91:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  92:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  93:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  95:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  96:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-09-30:
  98:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_InvalidateReadData(), XMC_USIC_CH_EnableWordLengthControl() and XMC_USIC
  99:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-12-05:
 101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_PutDataEx()
 102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-04-30:
 104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_SetTriggerLimit()
 105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 2020-12-05:
 107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S to XMC_USIC_CH_BRG_CLOCK_SOURCE_t
 108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_BRG_CTQSEL_t
 109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
 110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
 112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
 116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
 117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc1_usic_map.h"
 186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc4_usic_map.h"
 190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 324:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 325:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 326:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 327:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 328:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 329:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 330:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 332:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 333:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 334:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 335:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 336:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 337:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 338:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 339:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 340:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 341:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 342:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 343:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 344:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 345:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 346:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 347:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 348:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 349:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 350:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 351:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 352:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 353:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 354:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 355:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 356:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 357:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 358:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 359:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 360:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 361:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 362:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 363:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 364:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 365:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 366:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 367:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 368:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 369:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 370:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 371:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 372:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 373:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 374:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 375:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 376:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 377:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 378:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 379:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 380:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 381:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 382:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 383:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 384:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 385:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 386:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 387:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 388:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 389:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 390:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 391:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 392:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 393:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 394:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 395:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 396:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 397:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 398:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 399:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 402:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 404:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 406:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 407:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 408:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 409:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 410:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 411:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 412:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 413:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 414:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 415:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 416:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 417:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 418:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 421:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 423:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 425:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 426:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 427:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 428:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 431:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 433:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 435:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos,  /**< Baudrate generator 
 436:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S    = 0x3UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 437:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 438:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 439:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 440:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel input selection for CTQ
 441:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 442:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CTQSEL
 443:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 444:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PDIV = 0x0UL, /**< fCTQIN = fPDIV */
 445:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_PPP  = 0x1UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fPPP */
 446:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_SCLK = 0x2UL << USIC_CH_BRG_CTQSEL_Pos,  /**< fCTQIN = fSCLK */
 447:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CTQSEL_MCLK = 0x3UL << USIC_CH_BRG_CTQSEL_Pos  /**< fCTQIN = fMCLK */
 448:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CTQSEL_t;
 449:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 450:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 451:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 452:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 453:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 454:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 455:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 456:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 457:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 458:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 459:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 460:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 462:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 463:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 464:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 465:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 466:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 467:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 468:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 469:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 470:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 471:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 472:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 473:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 474:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 475:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 476:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 477:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 478:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 479:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 480:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 483:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 484:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 485:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 486:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 487:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 488:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 489:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 490:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 491:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 492:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 493:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** */
 494:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 495:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 496:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 497:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 498:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 499:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 500:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 501:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 502:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 503:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 504:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 505:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 506:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 507:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #pragma push
 508:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #pragma anon_unions
 509:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 510:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning 586
 511:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 512:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 513:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 514:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 515:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 516:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 517:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 518:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 519:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file,
 520:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 521:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 522:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 523:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 524:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 525:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 526:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 527:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 528:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 529:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 530:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 531:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 532:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 533:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 534:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 535:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 536:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 537:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 538:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   union
 539:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   {
 540:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 541:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 542:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 543:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 544:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 545:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   };
 546:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 547:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 548:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 549:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   union
 550:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   {
 551:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 552:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 553:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 554:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 555:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 556:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   };
 557:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 558:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 559:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 560:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 561:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 562:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 563:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 564:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 565:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 566:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 567:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 568:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 569:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 570:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 571:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 572:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 573:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 574:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 575:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 576:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 577:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 578:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 579:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 582:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 583:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #pragma pop
 584:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 585:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #pragma warning restore
 586:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 587:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 588:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 589:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 590:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 591:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 593:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 594:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 595:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 596:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 597:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 598:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 599:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 600:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 601:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 602:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 603:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 604:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 605:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 606:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 607:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 608:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 609:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 610:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 611:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 612:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 613:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 614:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 615:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 616:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)
 617:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 618:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 619:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)
 620:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 621:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 622:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 624:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 625:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 626:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 627:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 628:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 629:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 630:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 631:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 632:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 634:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 635:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 636:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 637:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 638:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 639:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 640:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 641:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 642:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 643:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 644:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 645:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 646:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 647:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 648:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 649:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 650:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 651:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 652:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 654:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 655:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 656:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 657:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 658:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 659:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 660:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 661:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 662:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 663:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 664:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 665:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 666:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 667:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 668:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 669:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 670:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 674:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 675:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 676:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 677:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 678:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 679:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 680:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 681:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 682:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 683:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 684:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 685:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 686:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 687:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 688:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 689:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 690:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 691:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 692:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 693:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 694:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 695:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 698:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 699:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 700:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 701:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 703:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 704:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 706:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 707:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 708:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 709:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 710:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 711:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 712:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 713:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 714:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 715:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 716:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 717:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 718:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 719:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 720:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 721:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 722:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 723:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 724:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 725:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 726:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 727:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 728:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 732:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clksel Baudrate generator clock source.
 733:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pppen Enable 2:1 Divider for fPPP.
 734:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Divider Factor to generate fPDIV = fPPP / (pDIV + 1)
 735:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  ctqsel Input selection for CTQ.
 736:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pctq Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1)
 737:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  dctq Denominator for Time Quanta Counter. fTQ / (DCTQ + 1)
 738:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 739:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 741:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate generator of the USIC channel.
 742:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFractionalDivider() \n\n\n
 745:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 747:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 748:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                                     bool pppen,
 749:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pdiv,
 750:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 751:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t pctq,
 752:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                                     uint32_t dctq);
 753:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 754:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 755:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 756:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 757:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 758:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 759:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 760:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 761:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 762:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 763:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 764:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 765:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 766:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 767:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 768:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 769:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 770:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 771:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 772:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 773:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 774:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 775:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 776:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 777:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 778:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 780:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 781:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 782:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 783:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 784:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 785:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 786:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 787:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 788:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 789:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 790:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 791:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png
 792:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png
 793:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 795:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 796:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 797:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 798:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 799:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 800:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 801:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 802:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 803:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 804:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 805:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 806:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 807:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 808:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 809:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 813:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 814:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 815:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 816:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 817:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 818:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 819:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     const uint16_t pdiv,
 820:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     const uint32_t oversampling,
 821:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 822:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 823:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 824:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 825:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 826:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 827:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 828:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 829:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 830:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 831:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 832:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 833:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 834:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 835:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 836:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 837:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc.
 838:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 839:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 840:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 841:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 842:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 843:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 844:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 845:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 846:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                                     ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 847:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 848:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 849:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 850:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 851:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 852:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 853:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 854:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 856:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 857:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 858:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 859:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 860:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 861:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 862:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 863:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 864:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_INSW_Msk;
 865:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 866:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 867:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 868:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 869:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 870:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 871:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 872:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 876:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 877:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 878:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 879:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 880:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 881:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 882:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 883:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 884:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 885:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 886:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 887:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 888:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 889:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 890:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 891:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 892:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 893:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 894:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 895:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 896:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 897:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 898:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 899:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 900:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 901:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 902:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 903:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 904:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 905:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 906:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 907:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 908:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 909:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 910:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 911:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 912:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 913:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 914:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 915:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 916:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 917:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 918:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 919:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 920:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 921:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 922:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 923:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 924:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 925:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 926:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 927:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 928:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 929:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 930:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 931:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 932:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 933:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 934:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 935:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 936:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 937:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 938:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 939:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 940:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 941:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 942:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 943:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 944:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 945:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 946:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 947:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 948:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 949:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 950:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 951:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 953:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 954:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 955:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 956:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 957:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &= (uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 958:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 959:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
 960:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 961:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 962:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 963:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 964:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 965:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 966:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 967:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 968:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 969:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 970:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 971:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 972:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 973:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 974:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 975:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 976:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 977:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 978:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 979:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 980:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 981:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 982:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 983:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 984:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 985:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 986:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 987:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 988:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
 989:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 990:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 991:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
 992:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 993:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
 994:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 995:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
 997:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 998:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 999:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1000:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1001:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1002:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1003:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1004:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
1005:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
1006:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
1007:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
1010:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
1012:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
1013:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DSEN_Msk;
1014:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
1015:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
1016:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1017:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1018:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1019:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1020:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1021:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1022:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1023:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
1024:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
1025:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1026:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1027:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
1028:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
1029:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
1030:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
1031:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &= (uint32_t)~USIC_CH_DXCR_DSEN_Msk;
1032:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
1033:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
1034:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1035:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1036:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1037:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1038:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
1039:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1040:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1041:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1042:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
1043:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1044:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1045:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1046:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
1047:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
1048:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1049:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)
1050:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
1051:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
1052:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
1053:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
1054:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
1055:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
1056:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1057:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1058:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1059:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1060:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1061:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1062:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1064:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1065:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1066:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1067:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1068:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
1069:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1070:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_t input,
1071:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
1072:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1072 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
  45 000c 1346     	 mov r3,r2
  46 000e BB70     	 strb r3,[r7,#2]
1073:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  47              	 .loc 1 1073 0
  48 0010 F878     	 ldrb r0,[r7,#3]
  49 0012 FB78     	 ldrb r3,[r7,#3]
  50 0014 7A68     	 ldr r2,[r7,#4]
  51 0016 0633     	 adds r3,r3,#6
  52 0018 9B00     	 lsls r3,r3,#2
  53 001a 1344     	 add r3,r3,r2
  54 001c 5B68     	 ldr r3,[r3,#4]
  55 001e 23F44062 	 bic r2,r3,#3072
1074:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
  56              	 .loc 1 1074 0
  57 0022 BB78     	 ldrb r3,[r7,#2]
  58 0024 9B02     	 lsls r3,r3,#10
1073:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  59              	 .loc 1 1073 0
  60 0026 1A43     	 orrs r2,r2,r3
  61 0028 7968     	 ldr r1,[r7,#4]
  62 002a 831D     	 adds r3,r0,#6
  63 002c 9B00     	 lsls r3,r3,#2
  64 002e 0B44     	 add r3,r3,r1
  65 0030 5A60     	 str r2,[r3,#4]
1075:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
  66              	 .loc 1 1075 0
  67 0032 0C37     	 adds r7,r7,#12
  68              	.LCFI3:
  69              	 .cfi_def_cfa_offset 4
  70 0034 BD46     	 mov sp,r7
  71              	.LCFI4:
  72              	 .cfi_def_cfa_register 13
  73              	 
  74 0036 5DF8047B 	 ldr r7,[sp],#4
  75              	.LCFI5:
  76              	 .cfi_restore 7
  77              	 .cfi_def_cfa_offset 0
  78 003a 7047     	 bx lr
  79              	 .cfi_endproc
  80              	.LFE147:
  82              	 .section .text.XMC_USIC_CH_SetBRGInputClockSource,"ax",%progbits
  83              	 .align 2
  84              	 .thumb
  85              	 .thumb_func
  87              	XMC_USIC_CH_SetBRGInputClockSource:
  88              	.LFB148:
1076:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** 
1077:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** /**
1078:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1079:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1080:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1081:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1082:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1083:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1084:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1085:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  *
1086:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1087:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1088:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****  */
1089:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1090:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** {
  89              	 .loc 1 1090 0
  90              	 .cfi_startproc
  91              	 
  92              	 
  93              	 
  94 0000 80B4     	 push {r7}
  95              	.LCFI6:
  96              	 .cfi_def_cfa_offset 4
  97              	 .cfi_offset 7,-4
  98 0002 83B0     	 sub sp,sp,#12
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 16
 101 0004 00AF     	 add r7,sp,#0
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 7
 104 0006 7860     	 str r0,[r7,#4]
 105 0008 0B46     	 mov r3,r1
 106 000a FB70     	 strb r3,[r7,#3]
1091:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 107              	 .loc 1 1091 0
 108 000c 7B68     	 ldr r3,[r7,#4]
 109 000e 5B69     	 ldr r3,[r3,#20]
 110 0010 23F00302 	 bic r2,r3,#3
 111 0014 FB78     	 ldrb r3,[r7,#3]
 112 0016 1A43     	 orrs r2,r2,r3
 113 0018 7B68     	 ldr r3,[r7,#4]
 114 001a 5A61     	 str r2,[r3,#20]
1092:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc\xmc_usic.h **** }
 115              	 .loc 1 1092 0
 116 001c 0C37     	 adds r7,r7,#12
 117              	.LCFI9:
 118              	 .cfi_def_cfa_offset 4
 119 001e BD46     	 mov sp,r7
 120              	.LCFI10:
 121              	 .cfi_def_cfa_register 13
 122              	 
 123 0020 5DF8047B 	 ldr r7,[sp],#4
 124              	.LCFI11:
 125              	 .cfi_restore 7
 126              	 .cfi_def_cfa_offset 0
 127 0024 7047     	 bx lr
 128              	 .cfi_endproc
 129              	.LFE148:
 131 0026 00BF     	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 132              	 .align 2
 133              	 .global XMC_USIC_CH_Enable
 134              	 .thumb
 135              	 .thumb_func
 137              	XMC_USIC_CH_Enable:
 138              	.LFB238:
 139              	 .file 2 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2020-12-05
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_usic.c ****  *
  14:../Libraries/XMCLib/src/xmc_usic.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_usic.c ****  *
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_usic.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_usic.c ****  *
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_usic.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_usic.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_usic.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_usic.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *
  41:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_usic.c ****  *
  44:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *
  48:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  49:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *
  51:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *
  54:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  55:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *
  57:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  58:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *
  60:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  61:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *
  63:../Libraries/XMCLib/src/xmc_usic.c ****  * 2018-09-29:
  64:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  65:../Libraries/XMCLib/src/xmc_usic.c ****  *
  66:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-03-30:
  67:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *
  69:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-05-07:
  70:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  71:../Libraries/XMCLib/src/xmc_usic.c ****  *
  72:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-07-01:
  73:../Libraries/XMCLib/src/xmc_usic.c ****  *     - XMC_USIC_CH_SetBaudrateEx() change type of input parameters
  74:../Libraries/XMCLib/src/xmc_usic.c ****  *
  75:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-09-25:
  76:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed XMC_USIC_CH_SetBaudrate() which under certain circumtances, i.e. if fPERI == baudrat
  77:../Libraries/XMCLib/src/xmc_usic.c ****  *
  78:../Libraries/XMCLib/src/xmc_usic.c ****  * 2020-04-30:
  79:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit() and  XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
  80:../Libraries/XMCLib/src/xmc_usic.c ****  *       For new projects please use XMC_USIC_CH_TXFIFO_SetTriggerLimit() and XMC_USIC_CH_RXFIFO_Se
  81:../Libraries/XMCLib/src/xmc_usic.c ****  *
  82:../Libraries/XMCLib/src/xmc_usic.c ****  * 2020-12-05:
  83:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateDivider()
  84:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  85:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  86:../Libraries/XMCLib/src/xmc_usic.c ****  *
  87:../Libraries/XMCLib/src/xmc_usic.c ****  */
  88:../Libraries/XMCLib/src/xmc_usic.c **** 
  89:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  90:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  91:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  92:../Libraries/XMCLib/src/xmc_usic.c **** 
  93:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  94:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  95:../Libraries/XMCLib/src/xmc_usic.c **** 
  96:../Libraries/XMCLib/src/xmc_usic.c **** #include <stdlib.h>     /* abs */
  97:../Libraries/XMCLib/src/xmc_usic.c **** 
  98:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  99:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
 100:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
 101:../Libraries/XMCLib/src/xmc_usic.c **** 
 102:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
 103:../Libraries/XMCLib/src/xmc_usic.c **** 
 104:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
 105:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
 106:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
 107:../Libraries/XMCLib/src/xmc_usic.c **** 
 108:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
 109:../Libraries/XMCLib/src/xmc_usic.c **** {
 140              	 .loc 2 109 0
 141              	 .cfi_startproc
 142              	 
 143              	 
 144 0000 80B5     	 push {r7,lr}
 145              	.LCFI12:
 146              	 .cfi_def_cfa_offset 8
 147              	 .cfi_offset 7,-8
 148              	 .cfi_offset 14,-4
 149 0002 82B0     	 sub sp,sp,#8
 150              	.LCFI13:
 151              	 .cfi_def_cfa_offset 16
 152 0004 00AF     	 add r7,sp,#0
 153              	.LCFI14:
 154              	 .cfi_def_cfa_register 7
 155 0006 7860     	 str r0,[r7,#4]
 110:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
 111:../Libraries/XMCLib/src/xmc_usic.c **** 
 112:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
 156              	 .loc 2 112 0
 157 0008 7B68     	 ldr r3,[r7,#4]
 158 000a 1A4A     	 ldr r2,.L11
 159 000c 9342     	 cmp r3,r2
 160 000e 03D0     	 beq .L4
 161              	 .loc 2 112 0 is_stmt 0 discriminator 1
 162 0010 7B68     	 ldr r3,[r7,#4]
 163 0012 194A     	 ldr r2,.L11+4
 164 0014 9342     	 cmp r3,r2
 165 0016 03D1     	 bne .L5
 166              	.L4:
 113:../Libraries/XMCLib/src/xmc_usic.c ****   {
 114:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
 167              	 .loc 2 114 0 is_stmt 1
 168 0018 1848     	 ldr r0,.L11+8
 169 001a FFF7FEFF 	 bl XMC_USIC_Enable
 170 001e 16E0     	 b .L6
 171              	.L5:
 115:../Libraries/XMCLib/src/xmc_usic.c ****   }
 116:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 117:../Libraries/XMCLib/src/xmc_usic.c ****   else if ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 172              	 .loc 2 117 0
 173 0020 7B68     	 ldr r3,[r7,#4]
 174 0022 174A     	 ldr r2,.L11+12
 175 0024 9342     	 cmp r3,r2
 176 0026 03D0     	 beq .L7
 177              	 .loc 2 117 0 is_stmt 0 discriminator 1
 178 0028 7B68     	 ldr r3,[r7,#4]
 179 002a 164A     	 ldr r2,.L11+16
 180 002c 9342     	 cmp r3,r2
 181 002e 03D1     	 bne .L8
 182              	.L7:
 118:../Libraries/XMCLib/src/xmc_usic.c ****   {
 119:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 183              	 .loc 2 119 0 is_stmt 1
 184 0030 1548     	 ldr r0,.L11+20
 185 0032 FFF7FEFF 	 bl XMC_USIC_Enable
 186 0036 0AE0     	 b .L6
 187              	.L8:
 120:../Libraries/XMCLib/src/xmc_usic.c ****   }
 121:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 122:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 123:../Libraries/XMCLib/src/xmc_usic.c ****   else if ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 188              	 .loc 2 123 0
 189 0038 7B68     	 ldr r3,[r7,#4]
 190 003a 144A     	 ldr r2,.L11+24
 191 003c 9342     	 cmp r3,r2
 192 003e 03D0     	 beq .L9
 193              	 .loc 2 123 0 is_stmt 0 discriminator 1
 194 0040 7B68     	 ldr r3,[r7,#4]
 195 0042 134A     	 ldr r2,.L11+28
 196 0044 9342     	 cmp r3,r2
 197 0046 02D1     	 bne .L6
 198              	.L9:
 124:../Libraries/XMCLib/src/xmc_usic.c ****   {
 125:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 199              	 .loc 2 125 0 is_stmt 1
 200 0048 1248     	 ldr r0,.L11+32
 201 004a FFF7FEFF 	 bl XMC_USIC_Enable
 202              	.L6:
 126:../Libraries/XMCLib/src/xmc_usic.c ****   }
 127:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 128:../Libraries/XMCLib/src/xmc_usic.c ****   else
 129:../Libraries/XMCLib/src/xmc_usic.c ****   {
 130:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 131:../Libraries/XMCLib/src/xmc_usic.c ****   }
 132:../Libraries/XMCLib/src/xmc_usic.c **** 
 133:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 134:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 203              	 .loc 2 134 0
 204 004e 7B68     	 ldr r3,[r7,#4]
 205 0050 0322     	 movs r2,#3
 206 0052 DA60     	 str r2,[r3,#12]
 135:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 207              	 .loc 2 135 0
 208 0054 00BF     	 nop
 209              	.L10:
 210              	 .loc 2 135 0 is_stmt 0 discriminator 1
 211 0056 7B68     	 ldr r3,[r7,#4]
 212 0058 DB68     	 ldr r3,[r3,#12]
 213 005a 03F00103 	 and r3,r3,#1
 214 005e 002B     	 cmp r3,#0
 215 0060 F9D0     	 beq .L10
 136:../Libraries/XMCLib/src/xmc_usic.c ****   {
 137:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 138:../Libraries/XMCLib/src/xmc_usic.c ****   }
 139:../Libraries/XMCLib/src/xmc_usic.c **** 
 140:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 141:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 216              	 .loc 2 141 0 is_stmt 1
 217 0062 7B68     	 ldr r3,[r7,#4]
 218 0064 1B6C     	 ldr r3,[r3,#64]
 219 0066 23F00F02 	 bic r2,r3,#15
 220 006a 7B68     	 ldr r3,[r7,#4]
 221 006c 1A64     	 str r2,[r3,#64]
 142:../Libraries/XMCLib/src/xmc_usic.c **** }
 222              	 .loc 2 142 0
 223 006e 0837     	 adds r7,r7,#8
 224              	.LCFI15:
 225              	 .cfi_def_cfa_offset 8
 226 0070 BD46     	 mov sp,r7
 227              	.LCFI16:
 228              	 .cfi_def_cfa_register 13
 229              	 
 230 0072 80BD     	 pop {r7,pc}
 231              	.L12:
 232              	 .align 2
 233              	.L11:
 234 0074 00000340 	 .word 1073938432
 235 0078 00020340 	 .word 1073938944
 236 007c 08000340 	 .word 1073938440
 237 0080 00000248 	 .word 1208090624
 238 0084 00020248 	 .word 1208091136
 239 0088 08000248 	 .word 1208090632
 240 008c 00400248 	 .word 1208107008
 241 0090 00420248 	 .word 1208107520
 242 0094 08400248 	 .word 1208107016
 243              	 .cfi_endproc
 244              	.LFE238:
 246              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 247              	 .align 2
 248              	 .global XMC_USIC_CH_Disable
 249              	 .thumb
 250              	 .thumb_func
 252              	XMC_USIC_CH_Disable:
 253              	.LFB239:
 143:../Libraries/XMCLib/src/xmc_usic.c **** 
 144:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 145:../Libraries/XMCLib/src/xmc_usic.c **** {
 254              	 .loc 2 145 0
 255              	 .cfi_startproc
 256              	 
 257              	 
 258              	 
 259 0000 80B4     	 push {r7}
 260              	.LCFI17:
 261              	 .cfi_def_cfa_offset 4
 262              	 .cfi_offset 7,-4
 263 0002 83B0     	 sub sp,sp,#12
 264              	.LCFI18:
 265              	 .cfi_def_cfa_offset 16
 266 0004 00AF     	 add r7,sp,#0
 267              	.LCFI19:
 268              	 .cfi_def_cfa_register 7
 269 0006 7860     	 str r0,[r7,#4]
 146:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 270              	 .loc 2 146 0
 271 0008 7B68     	 ldr r3,[r7,#4]
 272 000a DB68     	 ldr r3,[r3,#12]
 273 000c 23F00303 	 bic r3,r3,#3
 274 0010 43F00202 	 orr r2,r3,#2
 275 0014 7B68     	 ldr r3,[r7,#4]
 276 0016 DA60     	 str r2,[r3,#12]
 147:../Libraries/XMCLib/src/xmc_usic.c **** }
 277              	 .loc 2 147 0
 278 0018 0C37     	 adds r7,r7,#12
 279              	.LCFI20:
 280              	 .cfi_def_cfa_offset 4
 281 001a BD46     	 mov sp,r7
 282              	.LCFI21:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 001c 5DF8047B 	 ldr r7,[sp],#4
 286              	.LCFI22:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 0020 7047     	 bx lr
 290              	 .cfi_endproc
 291              	.LFE239:
 293 0022 00BF     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 294              	 .align 2
 295              	 .global XMC_USIC_CH_SetBaudrate
 296              	 .thumb
 297              	 .thumb_func
 299              	XMC_USIC_CH_SetBaudrate:
 300              	.LFB240:
 148:../Libraries/XMCLib/src/xmc_usic.c **** 
 149:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 150:../Libraries/XMCLib/src/xmc_usic.c **** {
 301              	 .loc 2 150 0
 302              	 .cfi_startproc
 303              	 
 304              	 
 305 0000 80B5     	 push {r7,lr}
 306              	.LCFI23:
 307              	 .cfi_def_cfa_offset 8
 308              	 .cfi_offset 7,-8
 309              	 .cfi_offset 14,-4
 310 0002 8EB0     	 sub sp,sp,#56
 311              	.LCFI24:
 312              	 .cfi_def_cfa_offset 64
 313 0004 00AF     	 add r7,sp,#0
 314              	.LCFI25:
 315              	 .cfi_def_cfa_register 7
 316 0006 F860     	 str r0,[r7,#12]
 317 0008 B960     	 str r1,[r7,#8]
 318 000a 7A60     	 str r2,[r7,#4]
 151:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 152:../Libraries/XMCLib/src/xmc_usic.c **** 
 153:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 154:../Libraries/XMCLib/src/xmc_usic.c **** 
 155:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 156:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 157:../Libraries/XMCLib/src/xmc_usic.c **** 
 158:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 159:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 160:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 161:../Libraries/XMCLib/src/xmc_usic.c **** 
 162:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 163:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 164:../Libraries/XMCLib/src/xmc_usic.c **** 
 165:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 166:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 319              	 .loc 2 166 0
 320 000c BB68     	 ldr r3,[r7,#8]
 321 000e 632B     	 cmp r3,#99
 322 0010 5AD9     	 bls .L15
 323              	 .loc 2 166 0 is_stmt 0 discriminator 1
 324 0012 7B68     	 ldr r3,[r7,#4]
 325 0014 002B     	 cmp r3,#0
 326 0016 57D0     	 beq .L15
 167:../Libraries/XMCLib/src/xmc_usic.c ****   {
 168:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 327              	 .loc 2 168 0 is_stmt 1
 328 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 329 001c 0246     	 mov r2,r0
 330 001e 2F4B     	 ldr r3,.L21
 331 0020 A3FB0223 	 umull r2,r3,r3,r2
 332 0024 5B09     	 lsrs r3,r3,#5
 333 0026 3B62     	 str r3,[r7,#32]
 169:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 334              	 .loc 2 169 0
 335 0028 BB68     	 ldr r3,[r7,#8]
 336 002a 2C4A     	 ldr r2,.L21
 337 002c A2FB0323 	 umull r2,r3,r2,r3
 338 0030 5B09     	 lsrs r3,r3,#5
 339 0032 BB60     	 str r3,[r7,#8]
 170:../Libraries/XMCLib/src/xmc_usic.c **** 
 171:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1024U;
 340              	 .loc 2 171 0
 341 0034 4FF48063 	 mov r3,#1024
 342 0038 FB62     	 str r3,[r7,#44]
 172:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 343              	 .loc 2 172 0
 344 003a 0123     	 movs r3,#1
 345 003c BB62     	 str r3,[r7,#40]
 173:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 346              	 .loc 2 173 0
 347 003e 40F2FF33 	 movw r3,#1023
 348 0042 7B62     	 str r3,[r7,#36]
 174:../Libraries/XMCLib/src/xmc_usic.c **** 
 175:../Libraries/XMCLib/src/xmc_usic.c ****     for (clock_divider = 1024U; clock_divider > 0U; --clock_divider)
 349              	 .loc 2 175 0
 350 0044 4FF48063 	 mov r3,#1024
 351 0048 3B63     	 str r3,[r7,#48]
 352 004a 22E0     	 b .L16
 353              	.L18:
 176:../Libraries/XMCLib/src/xmc_usic.c ****     {
 177:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 354              	 .loc 2 177 0
 355 004c 3B6A     	 ldr r3,[r7,#32]
 356 004e 3A6B     	 ldr r2,[r7,#48]
 357 0050 02FB03F2 	 mul r2,r2,r3
 358 0054 BB68     	 ldr r3,[r7,#8]
 359 0056 7968     	 ldr r1,[r7,#4]
 360 0058 01FB03F3 	 mul r3,r1,r3
 361 005c B2FBF3F3 	 udiv r3,r2,r3
 362 0060 FB61     	 str r3,[r7,#28]
 178:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 363              	 .loc 2 178 0
 364 0062 FB69     	 ldr r3,[r7,#28]
 365 0064 9B0A     	 lsrs r3,r3,#10
 366 0066 BB61     	 str r3,[r7,#24]
 179:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 367              	 .loc 2 179 0
 368 0068 FB69     	 ldr r3,[r7,#28]
 369 006a C3F30903 	 ubfx r3,r3,#0,#10
 370 006e 7B61     	 str r3,[r7,#20]
 180:../Libraries/XMCLib/src/xmc_usic.c **** 
 181:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int <= 1024U) && (pdiv_frac < pdiv_frac_min))
 371              	 .loc 2 181 0
 372 0070 BB69     	 ldr r3,[r7,#24]
 373 0072 B3F5806F 	 cmp r3,#1024
 374 0076 09D8     	 bhi .L17
 375              	 .loc 2 181 0 is_stmt 0 discriminator 1
 376 0078 7A69     	 ldr r2,[r7,#20]
 377 007a 7B6A     	 ldr r3,[r7,#36]
 378 007c 9A42     	 cmp r2,r3
 379 007e 05D2     	 bcs .L17
 182:../Libraries/XMCLib/src/xmc_usic.c ****       {
 183:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 380              	 .loc 2 183 0 is_stmt 1
 381 0080 7B69     	 ldr r3,[r7,#20]
 382 0082 7B62     	 str r3,[r7,#36]
 184:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 383              	 .loc 2 184 0
 384 0084 BB69     	 ldr r3,[r7,#24]
 385 0086 BB62     	 str r3,[r7,#40]
 185:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 386              	 .loc 2 185 0
 387 0088 3B6B     	 ldr r3,[r7,#48]
 388 008a FB62     	 str r3,[r7,#44]
 389              	.L17:
 175:../Libraries/XMCLib/src/xmc_usic.c ****     {
 390              	 .loc 2 175 0 discriminator 2
 391 008c 3B6B     	 ldr r3,[r7,#48]
 392 008e 013B     	 subs r3,r3,#1
 393 0090 3B63     	 str r3,[r7,#48]
 394              	.L16:
 175:../Libraries/XMCLib/src/xmc_usic.c ****     {
 395              	 .loc 2 175 0 is_stmt 0 discriminator 1
 396 0092 3B6B     	 ldr r3,[r7,#48]
 397 0094 002B     	 cmp r3,#0
 398 0096 D9D1     	 bne .L18
 186:../Libraries/XMCLib/src/xmc_usic.c ****       }
 187:../Libraries/XMCLib/src/xmc_usic.c ****     }
 188:../Libraries/XMCLib/src/xmc_usic.c **** 
 189:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 190:../Libraries/XMCLib/src/xmc_usic.c ****                    ((clock_divider_min - 1) << USIC_CH_FDR_STEP_Pos);
 399              	 .loc 2 190 0 is_stmt 1
 400 0098 FB6A     	 ldr r3,[r7,#44]
 401 009a 013B     	 subs r3,r3,#1
 189:../Libraries/XMCLib/src/xmc_usic.c ****                    ((clock_divider_min - 1) << USIC_CH_FDR_STEP_Pos);
 402              	 .loc 2 189 0
 403 009c 43F40042 	 orr r2,r3,#32768
 404 00a0 FB68     	 ldr r3,[r7,#12]
 405 00a2 1A61     	 str r2,[r3,#16]
 191:../Libraries/XMCLib/src/xmc_usic.c **** 
 192:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 406              	 .loc 2 192 0
 407 00a4 FB68     	 ldr r3,[r7,#12]
 408 00a6 5A69     	 ldr r2,[r3,#20]
 409 00a8 0D4B     	 ldr r3,.L21+4
 410 00aa 1340     	 ands r3,r3,r2
 193:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 194:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 195:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 196:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 411              	 .loc 2 196 0
 412 00ac 7A68     	 ldr r2,[r7,#4]
 413 00ae 013A     	 subs r2,r2,#1
 414 00b0 9202     	 lsls r2,r2,#10
 195:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 415              	 .loc 2 195 0
 416 00b2 1A43     	 orrs r2,r2,r3
 197:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 417              	 .loc 2 197 0
 418 00b4 BB6A     	 ldr r3,[r7,#40]
 419 00b6 013B     	 subs r3,r3,#1
 420 00b8 1B04     	 lsls r3,r3,#16
 196:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 421              	 .loc 2 196 0
 422 00ba 1A43     	 orrs r2,r2,r3
 192:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 423              	 .loc 2 192 0
 424 00bc FB68     	 ldr r3,[r7,#12]
 425 00be 5A61     	 str r2,[r3,#20]
 198:../Libraries/XMCLib/src/xmc_usic.c **** 
 199:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 426              	 .loc 2 199 0
 427 00c0 0023     	 movs r3,#0
 428 00c2 87F83730 	 strb r3,[r7,#55]
 429 00c6 02E0     	 b .L19
 430              	.L15:
 200:../Libraries/XMCLib/src/xmc_usic.c ****   }
 201:../Libraries/XMCLib/src/xmc_usic.c ****   else
 202:../Libraries/XMCLib/src/xmc_usic.c ****   {
 203:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 431              	 .loc 2 203 0
 432 00c8 0123     	 movs r3,#1
 433 00ca 87F83730 	 strb r3,[r7,#55]
 434              	.L19:
 204:../Libraries/XMCLib/src/xmc_usic.c ****   }
 205:../Libraries/XMCLib/src/xmc_usic.c **** 
 206:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 435              	 .loc 2 206 0
 436 00ce 97F83730 	 ldrb r3,[r7,#55]
 207:../Libraries/XMCLib/src/xmc_usic.c **** }
 437              	 .loc 2 207 0
 438 00d2 1846     	 mov r0,r3
 439 00d4 3837     	 adds r7,r7,#56
 440              	.LCFI26:
 441              	 .cfi_def_cfa_offset 8
 442 00d6 BD46     	 mov sp,r7
 443              	.LCFI27:
 444              	 .cfi_def_cfa_register 13
 445              	 
 446 00d8 80BD     	 pop {r7,pc}
 447              	.L22:
 448 00da 00BF     	 .align 2
 449              	.L21:
 450 00dc 1F85EB51 	 .word 1374389535
 451 00e0 EF8000FC 	 .word -67075857
 452              	 .cfi_endproc
 453              	.LFE240:
 455              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 456              	 .align 2
 457              	 .global XMC_USIC_CH_SetBaudrateEx
 458              	 .thumb
 459              	 .thumb_func
 461              	XMC_USIC_CH_SetBaudrateEx:
 462              	.LFB241:
 208:../Libraries/XMCLib/src/xmc_usic.c **** 
 209:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 210:../Libraries/XMCLib/src/xmc_usic.c **** {
 463              	 .loc 2 210 0
 464              	 .cfi_startproc
 465              	 
 466              	 
 467 0000 80B5     	 push {r7,lr}
 468              	.LCFI28:
 469              	 .cfi_def_cfa_offset 8
 470              	 .cfi_offset 7,-8
 471              	 .cfi_offset 14,-4
 472 0002 8CB0     	 sub sp,sp,#48
 473              	.LCFI29:
 474              	 .cfi_def_cfa_offset 56
 475 0004 00AF     	 add r7,sp,#0
 476              	.LCFI30:
 477              	 .cfi_def_cfa_register 7
 478 0006 F860     	 str r0,[r7,#12]
 479 0008 B960     	 str r1,[r7,#8]
 480 000a 7A60     	 str r2,[r7,#4]
 211:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 481              	 .loc 2 211 0
 482 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 483 0010 0346     	 mov r3,r0
 484 0012 3B62     	 str r3,[r7,#32]
 212:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t brg_clock = rate * oversampling;
 485              	 .loc 2 212 0
 486 0014 BB68     	 ldr r3,[r7,#8]
 487 0016 7A68     	 ldr r2,[r7,#4]
 488 0018 02FB03F3 	 mul r3,r2,r3
 489 001c FB61     	 str r3,[r7,#28]
 213:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_upper;
 214:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_lower;
 215:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv = 1;
 490              	 .loc 2 215 0
 491 001e 0123     	 movs r3,#1
 492 0020 FB62     	 str r3,[r7,#44]
 216:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 217:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 218:../Libraries/XMCLib/src/xmc_usic.c **** 
 219:../Libraries/XMCLib/src/xmc_usic.c ****   if (peripheral_clock > brg_clock)
 493              	 .loc 2 219 0
 494 0022 3A6A     	 ldr r2,[r7,#32]
 495 0024 FB69     	 ldr r3,[r7,#28]
 496 0026 9A42     	 cmp r2,r3
 497 0028 5FDD     	 ble .L24
 220:../Libraries/XMCLib/src/xmc_usic.c ****   {
 221:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 498              	 .loc 2 221 0
 499 002a 3A6A     	 ldr r2,[r7,#32]
 500 002c FB69     	 ldr r3,[r7,#28]
 501 002e 92FBF3F3 	 sdiv r3,r2,r3
 502 0032 BB62     	 str r3,[r7,#40]
 222:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 503              	 .loc 2 222 0
 504 0034 10E0     	 b .L25
 505              	.L26:
 223:../Libraries/XMCLib/src/xmc_usic.c ****     {
 224:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv++;
 506              	 .loc 2 224 0
 507 0036 FB6A     	 ldr r3,[r7,#44]
 508 0038 0133     	 adds r3,r3,#1
 509 003a FB62     	 str r3,[r7,#44]
 225:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 510              	 .loc 2 225 0
 511 003c BB68     	 ldr r3,[r7,#8]
 512 003e 7A68     	 ldr r2,[r7,#4]
 513 0040 02FB03F3 	 mul r3,r2,r3
 514 0044 1A46     	 mov r2,r3
 515 0046 FB6A     	 ldr r3,[r7,#44]
 516 0048 03FB02F3 	 mul r3,r3,r2
 517 004c FB61     	 str r3,[r7,#28]
 226:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 518              	 .loc 2 226 0
 519 004e 3A6A     	 ldr r2,[r7,#32]
 520 0050 FB69     	 ldr r3,[r7,#28]
 521 0052 92FBF3F3 	 sdiv r3,r2,r3
 522 0056 BB62     	 str r3,[r7,#40]
 523              	.L25:
 222:../Libraries/XMCLib/src/xmc_usic.c ****     {
 524              	 .loc 2 222 0
 525 0058 BB6A     	 ldr r3,[r7,#40]
 526 005a 40F2FE32 	 movw r2,#1022
 527 005e 9342     	 cmp r3,r2
 528 0060 E9D8     	 bhi .L26
 227:../Libraries/XMCLib/src/xmc_usic.c ****     }
 228:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 529              	 .loc 2 228 0
 530 0062 3A6A     	 ldr r2,[r7,#32]
 531 0064 7B68     	 ldr r3,[r7,#4]
 532 0066 B96A     	 ldr r1,[r7,#40]
 533 0068 01FB03F3 	 mul r3,r1,r3
 534 006c F96A     	 ldr r1,[r7,#44]
 535 006e 01FB03F3 	 mul r3,r1,r3
 536 0072 B2FBF3F3 	 udiv r3,r2,r3
 537 0076 BB61     	 str r3,[r7,#24]
 229:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 538              	 .loc 2 229 0
 539 0078 3A6A     	 ldr r2,[r7,#32]
 540 007a BB6A     	 ldr r3,[r7,#40]
 541 007c 0133     	 adds r3,r3,#1
 542 007e 7968     	 ldr r1,[r7,#4]
 543 0080 01FB03F3 	 mul r3,r1,r3
 544 0084 F96A     	 ldr r1,[r7,#44]
 545 0086 01FB03F3 	 mul r3,r1,r3
 546 008a B2FBF3F3 	 udiv r3,r2,r3
 547 008e 7B61     	 str r3,[r7,#20]
 230:../Libraries/XMCLib/src/xmc_usic.c **** 
 231:../Libraries/XMCLib/src/xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 232:../Libraries/XMCLib/src/xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 548              	 .loc 2 232 0
 549 0090 BA68     	 ldr r2,[r7,#8]
 550 0092 7B69     	 ldr r3,[r7,#20]
 551 0094 D31A     	 subs r3,r2,r3
 552 0096 83EAE372 	 eor r2,r3,r3,asr#31
 553 009a A2EBE372 	 sub r2,r2,r3,asr#31
 554 009e B968     	 ldr r1,[r7,#8]
 555 00a0 BB69     	 ldr r3,[r7,#24]
 556 00a2 CB1A     	 subs r3,r1,r3
 557 00a4 002B     	 cmp r3,#0
 558 00a6 B8BF     	 it lt
 559 00a8 5B42     	 rsblt r3,r3,#0
 560 00aa 9A42     	 cmp r2,r3
 561 00ac 02DA     	 bge .L27
 233:../Libraries/XMCLib/src/xmc_usic.c ****     {
 234:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step += 1;
 562              	 .loc 2 234 0
 563 00ae BB6A     	 ldr r3,[r7,#40]
 564 00b0 0133     	 adds r3,r3,#1
 565 00b2 BB62     	 str r3,[r7,#40]
 566              	.L27:
 235:../Libraries/XMCLib/src/xmc_usic.c ****     }
 236:../Libraries/XMCLib/src/xmc_usic.c **** 
 237:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = 1024 - divider_step;
 567              	 .loc 2 237 0
 568 00b4 BB6A     	 ldr r3,[r7,#40]
 569 00b6 C3F58063 	 rsb r3,r3,#1024
 570 00ba BB62     	 str r3,[r7,#40]
 238:../Libraries/XMCLib/src/xmc_usic.c **** 
 239:../Libraries/XMCLib/src/xmc_usic.c **** 
 240:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 571              	 .loc 2 240 0
 572 00bc BB6A     	 ldr r3,[r7,#40]
 573 00be 43F48042 	 orr r2,r3,#16384
 574 00c2 FB68     	 ldr r3,[r7,#12]
 575 00c4 1A61     	 str r2,[r3,#16]
 241:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 242:../Libraries/XMCLib/src/xmc_usic.c **** 
 243:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 576              	 .loc 2 243 0
 577 00c6 FB68     	 ldr r3,[r7,#12]
 578 00c8 5A69     	 ldr r2,[r3,#20]
 579 00ca 0C4B     	 ldr r3,.L30
 580 00cc 1340     	 ands r3,r3,r2
 244:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 245:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 246:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 247:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 581              	 .loc 2 247 0
 582 00ce 7A68     	 ldr r2,[r7,#4]
 583 00d0 013A     	 subs r2,r2,#1
 584 00d2 9202     	 lsls r2,r2,#10
 246:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 585              	 .loc 2 246 0
 586 00d4 1A43     	 orrs r2,r2,r3
 248:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv - 1) << USIC_CH_BRG_PDIV_Pos);
 587              	 .loc 2 248 0
 588 00d6 FB6A     	 ldr r3,[r7,#44]
 589 00d8 013B     	 subs r3,r3,#1
 590 00da 1B04     	 lsls r3,r3,#16
 247:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv - 1) << USIC_CH_BRG_PDIV_Pos);
 591              	 .loc 2 247 0
 592 00dc 1A43     	 orrs r2,r2,r3
 243:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 593              	 .loc 2 243 0
 594 00de FB68     	 ldr r3,[r7,#12]
 595 00e0 5A61     	 str r2,[r3,#20]
 249:../Libraries/XMCLib/src/xmc_usic.c **** 
 250:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 596              	 .loc 2 250 0
 597 00e2 0023     	 movs r3,#0
 598 00e4 87F82730 	 strb r3,[r7,#39]
 599 00e8 02E0     	 b .L28
 600              	.L24:
 251:../Libraries/XMCLib/src/xmc_usic.c ****   }
 252:../Libraries/XMCLib/src/xmc_usic.c ****   else
 253:../Libraries/XMCLib/src/xmc_usic.c ****   {
 254:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 601              	 .loc 2 254 0
 602 00ea 0123     	 movs r3,#1
 603 00ec 87F82730 	 strb r3,[r7,#39]
 604              	.L28:
 255:../Libraries/XMCLib/src/xmc_usic.c ****   }
 256:../Libraries/XMCLib/src/xmc_usic.c **** 
 257:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 605              	 .loc 2 257 0
 606 00f0 97F82730 	 ldrb r3,[r7,#39]
 258:../Libraries/XMCLib/src/xmc_usic.c **** }
 607              	 .loc 2 258 0
 608 00f4 1846     	 mov r0,r3
 609 00f6 3037     	 adds r7,r7,#48
 610              	.LCFI31:
 611              	 .cfi_def_cfa_offset 8
 612 00f8 BD46     	 mov sp,r7
 613              	.LCFI32:
 614              	 .cfi_def_cfa_register 13
 615              	 
 616 00fa 80BD     	 pop {r7,pc}
 617              	.L31:
 618              	 .align 2
 619              	.L30:
 620 00fc EF8000FC 	 .word -67075857
 621              	 .cfi_endproc
 622              	.LFE241:
 624              	 .section .text.XMC_USIC_CH_SetBaudrateDivider,"ax",%progbits
 625              	 .align 2
 626              	 .global XMC_USIC_CH_SetBaudrateDivider
 627              	 .thumb
 628              	 .thumb_func
 630              	XMC_USIC_CH_SetBaudrateDivider:
 631              	.LFB242:
 259:../Libraries/XMCLib/src/xmc_usic.c **** 
 260:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetBaudrateDivider(XMC_USIC_CH_t *const channel, 
 261:../Libraries/XMCLib/src/xmc_usic.c ****                                     XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel,
 262:../Libraries/XMCLib/src/xmc_usic.c ****                                     bool pppen,
 263:../Libraries/XMCLib/src/xmc_usic.c ****                                     uint32_t pdiv,
 264:../Libraries/XMCLib/src/xmc_usic.c ****                                     XMC_USIC_CH_BRG_CTQSEL_t ctqsel,
 265:../Libraries/XMCLib/src/xmc_usic.c ****                                     uint32_t pctq,
 266:../Libraries/XMCLib/src/xmc_usic.c ****                                     uint32_t dctq)
 267:../Libraries/XMCLib/src/xmc_usic.c **** {
 632              	 .loc 2 267 0
 633              	 .cfi_startproc
 634              	 
 635              	 
 636              	 
 637 0000 80B4     	 push {r7}
 638              	.LCFI33:
 639              	 .cfi_def_cfa_offset 4
 640              	 .cfi_offset 7,-4
 641 0002 87B0     	 sub sp,sp,#28
 642              	.LCFI34:
 643              	 .cfi_def_cfa_offset 32
 644 0004 00AF     	 add r7,sp,#0
 645              	.LCFI35:
 646              	 .cfi_def_cfa_register 7
 647 0006 F860     	 str r0,[r7,#12]
 648 0008 7B60     	 str r3,[r7,#4]
 649 000a 0B46     	 mov r3,r1
 650 000c FB72     	 strb r3,[r7,#11]
 651 000e 1346     	 mov r3,r2
 652 0010 BB72     	 strb r3,[r7,#10]
 268:../Libraries/XMCLib/src/xmc_usic.c ****     uint32_t regval = channel->BRG;
 653              	 .loc 2 268 0
 654 0012 FB68     	 ldr r3,[r7,#12]
 655 0014 5B69     	 ldr r3,[r3,#20]
 656 0016 7B61     	 str r3,[r7,#20]
 269:../Libraries/XMCLib/src/xmc_usic.c ****     regval &= (uint32_t)~(USIC_CH_BRG_CLKSEL_Msk | USIC_CH_BRG_PPPEN_Msk | USIC_CH_BRG_PDIV_Msk | U
 657              	 .loc 2 269 0
 658 0018 7A69     	 ldr r2,[r7,#20]
 659 001a 114B     	 ldr r3,.L35
 660 001c 1340     	 ands r3,r3,r2
 661 001e 7B61     	 str r3,[r7,#20]
 270:../Libraries/XMCLib/src/xmc_usic.c ****     regval |= clksel | (pppen ? USIC_CH_BRG_PPPEN_Msk : 0) | (pdiv << USIC_CH_BRG_PDIV_Pos) | ctqse
 662              	 .loc 2 270 0
 663 0020 FA7A     	 ldrb r2,[r7,#11]
 664 0022 BB7A     	 ldrb r3,[r7,#10]
 665 0024 002B     	 cmp r3,#0
 666 0026 01D0     	 beq .L33
 667              	 .loc 2 270 0 is_stmt 0 discriminator 1
 668 0028 1023     	 movs r3,#16
 669 002a 00E0     	 b .L34
 670              	.L33:
 671              	 .loc 2 270 0 discriminator 2
 672 002c 0023     	 movs r3,#0
 673              	.L34:
 674              	 .loc 2 270 0 discriminator 4
 675 002e 1A43     	 orrs r2,r2,r3
 676 0030 7B68     	 ldr r3,[r7,#4]
 677 0032 1B04     	 lsls r3,r3,#16
 678 0034 1A43     	 orrs r2,r2,r3
 679 0036 97F82030 	 ldrb r3,[r7,#32]
 680 003a 1A43     	 orrs r2,r2,r3
 681 003c 7B6A     	 ldr r3,[r7,#36]
 682 003e 1B02     	 lsls r3,r3,#8
 683 0040 1A43     	 orrs r2,r2,r3
 684 0042 BB6A     	 ldr r3,[r7,#40]
 685 0044 9B02     	 lsls r3,r3,#10
 686 0046 1343     	 orrs r3,r3,r2
 687 0048 7A69     	 ldr r2,[r7,#20]
 688 004a 1343     	 orrs r3,r3,r2
 689 004c 7B61     	 str r3,[r7,#20]
 271:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = regval;
 690              	 .loc 2 271 0 is_stmt 1 discriminator 4
 691 004e FB68     	 ldr r3,[r7,#12]
 692 0050 7A69     	 ldr r2,[r7,#20]
 693 0052 5A61     	 str r2,[r3,#20]
 272:../Libraries/XMCLib/src/xmc_usic.c **** }
 694              	 .loc 2 272 0 discriminator 4
 695 0054 1C37     	 adds r7,r7,#28
 696              	.LCFI36:
 697              	 .cfi_def_cfa_offset 4
 698 0056 BD46     	 mov sp,r7
 699              	.LCFI37:
 700              	 .cfi_def_cfa_register 13
 701              	 
 702 0058 5DF8047B 	 ldr r7,[sp],#4
 703              	.LCFI38:
 704              	 .cfi_restore 7
 705              	 .cfi_def_cfa_offset 0
 706 005c 7047     	 bx lr
 707              	.L36:
 708 005e 00BF     	 .align 2
 709              	.L35:
 710 0060 2C8000FC 	 .word -67076052
 711              	 .cfi_endproc
 712              	.LFE242:
 714              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 715              	 .align 2
 716              	 .global XMC_USIC_CH_GetBaudrate
 717              	 .thumb
 718              	 .thumb_func
 720              	XMC_USIC_CH_GetBaudrate:
 721              	.LFB243:
 273:../Libraries/XMCLib/src/xmc_usic.c **** 
 274:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 275:../Libraries/XMCLib/src/xmc_usic.c **** {
 722              	 .loc 2 275 0
 723              	 .cfi_startproc
 724              	 
 725              	 
 726 0000 80B5     	 push {r7,lr}
 727              	.LCFI39:
 728              	 .cfi_def_cfa_offset 8
 729              	 .cfi_offset 7,-8
 730              	 .cfi_offset 14,-4
 731 0002 86B0     	 sub sp,sp,#24
 732              	.LCFI40:
 733              	 .cfi_def_cfa_offset 32
 734 0004 00AF     	 add r7,sp,#0
 735              	.LCFI41:
 736              	 .cfi_def_cfa_register 7
 737 0006 7860     	 str r0,[r7,#4]
 276:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 277:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 738              	 .loc 2 277 0
 739 0008 7B68     	 ldr r3,[r7,#4]
 740 000a 5B69     	 ldr r3,[r3,#20]
 741 000c 03F0C003 	 and r3,r3,#192
 742 0010 C02B     	 cmp r3,#192
 743 0012 02D1     	 bne .L38
 278:../Libraries/XMCLib/src/xmc_usic.c ****   {
 279:../Libraries/XMCLib/src/xmc_usic.c ****     // CTQSEL = 3
 280:../Libraries/XMCLib/src/xmc_usic.c ****     divider = 2;
 744              	 .loc 2 280 0
 745 0014 0223     	 movs r3,#2
 746 0016 7B61     	 str r3,[r7,#20]
 747 0018 22E0     	 b .L39
 748              	.L38:
 281:../Libraries/XMCLib/src/xmc_usic.c ****   }
 282:../Libraries/XMCLib/src/xmc_usic.c ****   else
 283:../Libraries/XMCLib/src/xmc_usic.c ****   {
 284:../Libraries/XMCLib/src/xmc_usic.c ****     // CTQSEL = 0, 1, or 2
 285:../Libraries/XMCLib/src/xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 749              	 .loc 2 285 0
 750 001a 7B68     	 ldr r3,[r7,#4]
 751 001c 5B69     	 ldr r3,[r3,#20]
 752 001e 03F01003 	 and r3,r3,#16
 753 0022 002B     	 cmp r3,#0
 754 0024 01D0     	 beq .L40
 755              	 .loc 2 285 0 is_stmt 0 discriminator 1
 756 0026 0223     	 movs r3,#2
 757 0028 00E0     	 b .L41
 758              	.L40:
 759              	 .loc 2 285 0 discriminator 2
 760 002a 0123     	 movs r3,#1
 761              	.L41:
 762              	 .loc 2 285 0 discriminator 4
 763 002c 7B61     	 str r3,[r7,#20]
 286:../Libraries/XMCLib/src/xmc_usic.c **** 
 287:../Libraries/XMCLib/src/xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 764              	 .loc 2 287 0 is_stmt 1 discriminator 4
 765 002e 7B68     	 ldr r3,[r7,#4]
 766 0030 5B69     	 ldr r3,[r3,#20]
 767 0032 03F04003 	 and r3,r3,#64
 768 0036 002B     	 cmp r3,#0
 769 0038 12D1     	 bne .L39
 288:../Libraries/XMCLib/src/xmc_usic.c ****     {
 289:../Libraries/XMCLib/src/xmc_usic.c ****       // CTQSEL = 0 or 2
 290:../Libraries/XMCLib/src/xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 770              	 .loc 2 290 0
 771 003a 7B68     	 ldr r3,[r7,#4]
 772 003c 5A69     	 ldr r2,[r3,#20]
 773 003e 384B     	 ldr r3,.L45
 774 0040 1340     	 ands r3,r3,r2
 775 0042 1B0C     	 lsrs r3,r3,#16
 776 0044 5A1C     	 adds r2,r3,#1
 777 0046 7B69     	 ldr r3,[r7,#20]
 778 0048 02FB03F3 	 mul r3,r2,r3
 779 004c 7B61     	 str r3,[r7,#20]
 291:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 780              	 .loc 2 291 0
 781 004e 7B68     	 ldr r3,[r7,#4]
 782 0050 5B69     	 ldr r3,[r3,#20]
 783 0052 03F08003 	 and r3,r3,#128
 784 0056 002B     	 cmp r3,#0
 785 0058 02D0     	 beq .L39
 292:../Libraries/XMCLib/src/xmc_usic.c ****       {
 293:../Libraries/XMCLib/src/xmc_usic.c ****         // CTQSEL = 2
 294:../Libraries/XMCLib/src/xmc_usic.c ****         divider *= 2;
 786              	 .loc 2 294 0
 787 005a 7B69     	 ldr r3,[r7,#20]
 788 005c 5B00     	 lsls r3,r3,#1
 789 005e 7B61     	 str r3,[r7,#20]
 790              	.L39:
 295:../Libraries/XMCLib/src/xmc_usic.c ****       }
 296:../Libraries/XMCLib/src/xmc_usic.c ****     }
 297:../Libraries/XMCLib/src/xmc_usic.c ****   }
 298:../Libraries/XMCLib/src/xmc_usic.c **** 
 299:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 791              	 .loc 2 299 0
 792 0060 7B68     	 ldr r3,[r7,#4]
 793 0062 5B69     	 ldr r3,[r3,#20]
 794 0064 03F44073 	 and r3,r3,#768
 795 0068 1B0A     	 lsrs r3,r3,#8
 796 006a 5A1C     	 adds r2,r3,#1
 797 006c 7B69     	 ldr r3,[r7,#20]
 798 006e 02FB03F3 	 mul r3,r2,r3
 799 0072 7B61     	 str r3,[r7,#20]
 300:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 800              	 .loc 2 300 0
 801 0074 7B68     	 ldr r3,[r7,#4]
 802 0076 5B69     	 ldr r3,[r3,#20]
 803 0078 03F4F843 	 and r3,r3,#31744
 804 007c 9B0A     	 lsrs r3,r3,#10
 805 007e 5A1C     	 adds r2,r3,#1
 806 0080 7B69     	 ldr r3,[r7,#20]
 807 0082 02FB03F3 	 mul r3,r2,r3
 808 0086 7B61     	 str r3,[r7,#20]
 301:../Libraries/XMCLib/src/xmc_usic.c **** 
 302:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 809              	 .loc 2 302 0
 810 0088 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 811 008c F860     	 str r0,[r7,#12]
 303:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 304:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 812              	 .loc 2 304 0
 813 008e 7B68     	 ldr r3,[r7,#4]
 814 0090 1B69     	 ldr r3,[r3,#16]
 815 0092 03F44043 	 and r3,r3,#49152
 816 0096 B3F5004F 	 cmp r3,#32768
 817 009a 15D1     	 bne .L42
 305:../Libraries/XMCLib/src/xmc_usic.c ****   {
 306:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 818              	 .loc 2 306 0
 819 009c FB68     	 ldr r3,[r7,#12]
 820 009e 07EE903A 	 fmsr s15,r3
 821 00a2 B8EE677A 	 fuitos s14,s15
 822 00a6 7B68     	 ldr r3,[r7,#4]
 823 00a8 1B69     	 ldr r3,[r3,#16]
 824 00aa C3F30903 	 ubfx r3,r3,#0,#10
 825 00ae 07EE903A 	 fmsr s15,r3
 826 00b2 F8EE677A 	 fuitos s15,s15
 827 00b6 DFED1B6A 	 flds s13,.L45+4
 828 00ba C7EEA67A 	 fdivs s15,s15,s13
 829 00be 67EE277A 	 fmuls s15,s14,s15
 830 00c2 C7ED047A 	 fsts s15,[r7,#16]
 831 00c6 16E0     	 b .L43
 832              	.L42:
 307:../Libraries/XMCLib/src/xmc_usic.c ****   }
 308:../Libraries/XMCLib/src/xmc_usic.c ****   else
 309:../Libraries/XMCLib/src/xmc_usic.c ****   {
 310:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 311:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 833              	 .loc 2 311 0
 834 00c8 FB68     	 ldr r3,[r7,#12]
 835 00ca 07EE903A 	 fmsr s15,r3
 836 00ce B8EE677A 	 fuitos s14,s15
 837 00d2 7B68     	 ldr r3,[r7,#4]
 838 00d4 1B69     	 ldr r3,[r3,#16]
 839 00d6 C3F30903 	 ubfx r3,r3,#0,#10
 840 00da C3F58063 	 rsb r3,r3,#1024
 841 00de 07EE903A 	 fmsr s15,r3
 842 00e2 F8EE677A 	 fuitos s15,s15
 843 00e6 F7EE006A 	 fconsts s13,#112
 844 00ea C6EEA77A 	 fdivs s15,s13,s15
 845 00ee 67EE277A 	 fmuls s15,s14,s15
 846 00f2 C7ED047A 	 fsts s15,[r7,#16]
 847              	.L43:
 312:../Libraries/XMCLib/src/xmc_usic.c ****   }
 313:../Libraries/XMCLib/src/xmc_usic.c **** 
 314:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 848              	 .loc 2 314 0
 849 00f6 7B69     	 ldr r3,[r7,#20]
 850 00f8 07EE903A 	 fmsr s15,r3
 851 00fc F8EE677A 	 fuitos s15,s15
 852 0100 97ED047A 	 flds s14,[r7,#16]
 853 0104 C7EE277A 	 fdivs s15,s14,s15
 854 0108 C7ED047A 	 fsts s15,[r7,#16]
 315:../Libraries/XMCLib/src/xmc_usic.c **** 
 316:../Libraries/XMCLib/src/xmc_usic.c ****   return (uint32_t)baudrate;
 855              	 .loc 2 316 0
 856 010c D7ED047A 	 flds s15,[r7,#16]
 857 0110 FCEEE77A 	 ftouizs s15,s15
 858 0114 17EE903A 	 fmrs r3,s15
 317:../Libraries/XMCLib/src/xmc_usic.c **** }
 859              	 .loc 2 317 0
 860 0118 1846     	 mov r0,r3
 861 011a 1837     	 adds r7,r7,#24
 862              	.LCFI42:
 863              	 .cfi_def_cfa_offset 8
 864 011c BD46     	 mov sp,r7
 865              	.LCFI43:
 866              	 .cfi_def_cfa_register 13
 867              	 
 868 011e 80BD     	 pop {r7,pc}
 869              	.L46:
 870              	 .align 2
 871              	.L45:
 872 0120 0000FF03 	 .word 67043328
 873 0124 00008044 	 .word 1149239296
 874              	 .cfi_endproc
 875              	.LFE243:
 877              	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 878              	 .align 2
 879              	 .global XMC_USIC_CH_GetSCLKFrequency
 880              	 .thumb
 881              	 .thumb_func
 883              	XMC_USIC_CH_GetSCLKFrequency:
 884              	.LFB244:
 318:../Libraries/XMCLib/src/xmc_usic.c **** 
 319:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 320:../Libraries/XMCLib/src/xmc_usic.c **** {
 885              	 .loc 2 320 0
 886              	 .cfi_startproc
 887              	 
 888              	 
 889 0000 80B5     	 push {r7,lr}
 890              	.LCFI44:
 891              	 .cfi_def_cfa_offset 8
 892              	 .cfi_offset 7,-8
 893              	 .cfi_offset 14,-4
 894 0002 86B0     	 sub sp,sp,#24
 895              	.LCFI45:
 896              	 .cfi_def_cfa_offset 32
 897 0004 00AF     	 add r7,sp,#0
 898              	.LCFI46:
 899              	 .cfi_def_cfa_register 7
 900 0006 7860     	 str r0,[r7,#4]
 321:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 322:../Libraries/XMCLib/src/xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 901              	 .loc 2 322 0
 902 0008 7B68     	 ldr r3,[r7,#4]
 903 000a 5B69     	 ldr r3,[r3,#20]
 904 000c 03F01003 	 and r3,r3,#16
 905 0010 002B     	 cmp r3,#0
 906 0012 01D0     	 beq .L48
 907              	 .loc 2 322 0 is_stmt 0 discriminator 1
 908 0014 0223     	 movs r3,#2
 909 0016 00E0     	 b .L49
 910              	.L48:
 911              	 .loc 2 322 0 discriminator 2
 912 0018 0123     	 movs r3,#1
 913              	.L49:
 914              	 .loc 2 322 0 discriminator 4
 915 001a 3B61     	 str r3,[r7,#16]
 323:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 916              	 .loc 2 323 0 is_stmt 1 discriminator 4
 917 001c 7B68     	 ldr r3,[r7,#4]
 918 001e 5A69     	 ldr r2,[r3,#20]
 919 0020 2B4B     	 ldr r3,.L53
 920 0022 1340     	 ands r3,r3,r2
 921 0024 1B0C     	 lsrs r3,r3,#16
 922 0026 5A1C     	 adds r2,r3,#1
 923 0028 3B69     	 ldr r3,[r7,#16]
 924 002a 02FB03F3 	 mul r3,r2,r3
 925 002e 3B61     	 str r3,[r7,#16]
 324:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 926              	 .loc 2 324 0 discriminator 4
 927 0030 3B69     	 ldr r3,[r7,#16]
 928 0032 5B00     	 lsls r3,r3,#1
 929 0034 3B61     	 str r3,[r7,#16]
 325:../Libraries/XMCLib/src/xmc_usic.c **** 
 326:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 930              	 .loc 2 326 0 discriminator 4
 931 0036 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 932 003a F860     	 str r0,[r7,#12]
 327:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 328:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 933              	 .loc 2 328 0 discriminator 4
 934 003c 7B68     	 ldr r3,[r7,#4]
 935 003e 1B69     	 ldr r3,[r3,#16]
 936 0040 03F44043 	 and r3,r3,#49152
 937 0044 B3F5004F 	 cmp r3,#32768
 938 0048 15D1     	 bne .L50
 329:../Libraries/XMCLib/src/xmc_usic.c ****   {
 330:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 331:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 939              	 .loc 2 331 0
 940 004a FB68     	 ldr r3,[r7,#12]
 941 004c 07EE903A 	 fmsr s15,r3
 942 0050 B8EE677A 	 fuitos s14,s15
 943 0054 7B68     	 ldr r3,[r7,#4]
 944 0056 1B69     	 ldr r3,[r3,#16]
 945 0058 C3F30903 	 ubfx r3,r3,#0,#10
 946 005c 07EE903A 	 fmsr s15,r3
 947 0060 F8EE677A 	 fuitos s15,s15
 948 0064 DFED1B6A 	 flds s13,.L53+4
 949 0068 C7EEA67A 	 fdivs s15,s15,s13
 950 006c 67EE277A 	 fmuls s15,s14,s15
 951 0070 C7ED057A 	 fsts s15,[r7,#20]
 952 0074 16E0     	 b .L51
 953              	.L50:
 332:../Libraries/XMCLib/src/xmc_usic.c ****   }
 333:../Libraries/XMCLib/src/xmc_usic.c ****   else
 334:../Libraries/XMCLib/src/xmc_usic.c ****   {
 335:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 336:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 954              	 .loc 2 336 0
 955 0076 FB68     	 ldr r3,[r7,#12]
 956 0078 07EE903A 	 fmsr s15,r3
 957 007c B8EE677A 	 fuitos s14,s15
 958 0080 7B68     	 ldr r3,[r7,#4]
 959 0082 1B69     	 ldr r3,[r3,#16]
 960 0084 C3F30903 	 ubfx r3,r3,#0,#10
 961 0088 C3F58063 	 rsb r3,r3,#1024
 962 008c 07EE903A 	 fmsr s15,r3
 963 0090 F8EE677A 	 fuitos s15,s15
 964 0094 F7EE006A 	 fconsts s13,#112
 965 0098 C6EEA77A 	 fdivs s15,s13,s15
 966 009c 67EE277A 	 fmuls s15,s14,s15
 967 00a0 C7ED057A 	 fsts s15,[r7,#20]
 968              	.L51:
 337:../Libraries/XMCLib/src/xmc_usic.c ****   }
 338:../Libraries/XMCLib/src/xmc_usic.c **** 
 339:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 969              	 .loc 2 339 0
 970 00a4 3B69     	 ldr r3,[r7,#16]
 971 00a6 07EE903A 	 fmsr s15,r3
 972 00aa F8EE677A 	 fuitos s15,s15
 973 00ae 97ED057A 	 flds s14,[r7,#20]
 974 00b2 C7EE277A 	 fdivs s15,s14,s15
 975 00b6 C7ED057A 	 fsts s15,[r7,#20]
 340:../Libraries/XMCLib/src/xmc_usic.c **** 
 341:../Libraries/XMCLib/src/xmc_usic.c ****   return (uint32_t)baudrate;
 976              	 .loc 2 341 0
 977 00ba D7ED057A 	 flds s15,[r7,#20]
 978 00be FCEEE77A 	 ftouizs s15,s15
 979 00c2 17EE903A 	 fmrs r3,s15
 342:../Libraries/XMCLib/src/xmc_usic.c **** }
 980              	 .loc 2 342 0
 981 00c6 1846     	 mov r0,r3
 982 00c8 1837     	 adds r7,r7,#24
 983              	.LCFI47:
 984              	 .cfi_def_cfa_offset 8
 985 00ca BD46     	 mov sp,r7
 986              	.LCFI48:
 987              	 .cfi_def_cfa_register 13
 988              	 
 989 00cc 80BD     	 pop {r7,pc}
 990              	.L54:
 991 00ce 00BF     	 .align 2
 992              	.L53:
 993 00d0 0000FF03 	 .word 67043328
 994 00d4 00008044 	 .word 1149239296
 995              	 .cfi_endproc
 996              	.LFE244:
 998              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 999              	 .align 2
 1000              	 .global XMC_USIC_CH_GetMCLKFrequency
 1001              	 .thumb
 1002              	 .thumb_func
 1004              	XMC_USIC_CH_GetMCLKFrequency:
 1005              	.LFB245:
 343:../Libraries/XMCLib/src/xmc_usic.c **** 
 344:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 345:../Libraries/XMCLib/src/xmc_usic.c **** {
 1006              	 .loc 2 345 0
 1007              	 .cfi_startproc
 1008              	 
 1009              	 
 1010 0000 80B5     	 push {r7,lr}
 1011              	.LCFI49:
 1012              	 .cfi_def_cfa_offset 8
 1013              	 .cfi_offset 7,-8
 1014              	 .cfi_offset 14,-4
 1015 0002 84B0     	 sub sp,sp,#16
 1016              	.LCFI50:
 1017              	 .cfi_def_cfa_offset 24
 1018 0004 00AF     	 add r7,sp,#0
 1019              	.LCFI51:
 1020              	 .cfi_def_cfa_register 7
 1021 0006 7860     	 str r0,[r7,#4]
 346:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 1022              	 .loc 2 346 0
 1023 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1024 000c B860     	 str r0,[r7,#8]
 347:../Libraries/XMCLib/src/xmc_usic.c **** 
 348:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 349:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 1025              	 .loc 2 349 0
 1026 000e 7B68     	 ldr r3,[r7,#4]
 1027 0010 1B69     	 ldr r3,[r3,#16]
 1028 0012 03F44043 	 and r3,r3,#49152
 1029 0016 B3F5004F 	 cmp r3,#32768
 1030 001a 17D1     	 bne .L56
 350:../Libraries/XMCLib/src/xmc_usic.c ****   {
 351:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 352:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 1031              	 .loc 2 352 0
 1032 001c BB68     	 ldr r3,[r7,#8]
 1033 001e 07EE903A 	 fmsr s15,r3
 1034 0022 B8EE677A 	 fuitos s14,s15
 1035 0026 7B68     	 ldr r3,[r7,#4]
 1036 0028 1B69     	 ldr r3,[r3,#16]
 1037 002a C3F30903 	 ubfx r3,r3,#0,#10
 1038 002e C3F58063 	 rsb r3,r3,#1024
 1039 0032 07EE903A 	 fmsr s15,r3
 1040 0036 F8EE677A 	 fuitos s15,s15
 1041 003a F7EE006A 	 fconsts s13,#112
 1042 003e C6EEA77A 	 fdivs s15,s13,s15
 1043 0042 67EE277A 	 fmuls s15,s14,s15
 1044 0046 C7ED037A 	 fsts s15,[r7,#12]
 1045 004a 14E0     	 b .L57
 1046              	.L56:
 353:../Libraries/XMCLib/src/xmc_usic.c ****   }
 354:../Libraries/XMCLib/src/xmc_usic.c ****   else
 355:../Libraries/XMCLib/src/xmc_usic.c ****   {
 356:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 357:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 1047              	 .loc 2 357 0
 1048 004c BB68     	 ldr r3,[r7,#8]
 1049 004e 07EE903A 	 fmsr s15,r3
 1050 0052 B8EE677A 	 fuitos s14,s15
 1051 0056 7B68     	 ldr r3,[r7,#4]
 1052 0058 1B69     	 ldr r3,[r3,#16]
 1053 005a C3F30903 	 ubfx r3,r3,#0,#10
 1054 005e 07EE903A 	 fmsr s15,r3
 1055 0062 F8EE677A 	 fuitos s15,s15
 1056 0066 DFED0D6A 	 flds s13,.L59
 1057 006a C7EEA67A 	 fdivs s15,s15,s13
 1058 006e C7EE277A 	 fdivs s15,s14,s15
 1059 0072 C7ED037A 	 fsts s15,[r7,#12]
 1060              	.L57:
 358:../Libraries/XMCLib/src/xmc_usic.c ****   }
 359:../Libraries/XMCLib/src/xmc_usic.c **** 
 360:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= 2;
 1061              	 .loc 2 360 0
 1062 0076 D7ED037A 	 flds s15,[r7,#12]
 1063 007a B0EE007A 	 fconsts s14,#0
 1064 007e C7EE877A 	 fdivs s15,s15,s14
 1065 0082 C7ED037A 	 fsts s15,[r7,#12]
 361:../Libraries/XMCLib/src/xmc_usic.c **** 
 362:../Libraries/XMCLib/src/xmc_usic.c ****   return (uint32_t)baudrate;
 1066              	 .loc 2 362 0
 1067 0086 D7ED037A 	 flds s15,[r7,#12]
 1068 008a FCEEE77A 	 ftouizs s15,s15
 1069 008e 17EE903A 	 fmrs r3,s15
 363:../Libraries/XMCLib/src/xmc_usic.c **** }
 1070              	 .loc 2 363 0
 1071 0092 1846     	 mov r0,r3
 1072 0094 1037     	 adds r7,r7,#16
 1073              	.LCFI52:
 1074              	 .cfi_def_cfa_offset 8
 1075 0096 BD46     	 mov sp,r7
 1076              	.LCFI53:
 1077              	 .cfi_def_cfa_register 13
 1078              	 
 1079 0098 80BD     	 pop {r7,pc}
 1080              	.L60:
 1081 009a 00BF     	 .align 2
 1082              	.L59:
 1083 009c 00008044 	 .word 1149239296
 1084              	 .cfi_endproc
 1085              	.LFE245:
 1087              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 1088              	 .align 2
 1089              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 1090              	 .thumb
 1091              	 .thumb_func
 1093              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 1094              	.LFB246:
 364:../Libraries/XMCLib/src/xmc_usic.c **** 
 365:../Libraries/XMCLib/src/xmc_usic.c **** 
 366:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 367:../Libraries/XMCLib/src/xmc_usic.c ****     const uint16_t pdiv,
 368:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t oversampling,
 369:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 370:../Libraries/XMCLib/src/xmc_usic.c **** {
 1095              	 .loc 2 370 0
 1096              	 .cfi_startproc
 1097              	 
 1098              	 
 1099 0000 80B5     	 push {r7,lr}
 1100              	.LCFI54:
 1101              	 .cfi_def_cfa_offset 8
 1102              	 .cfi_offset 7,-8
 1103              	 .cfi_offset 14,-4
 1104 0002 84B0     	 sub sp,sp,#16
 1105              	.LCFI55:
 1106              	 .cfi_def_cfa_offset 24
 1107 0004 00AF     	 add r7,sp,#0
 1108              	.LCFI56:
 1109              	 .cfi_def_cfa_register 7
 1110 0006 F860     	 str r0,[r7,#12]
 1111 0008 7A60     	 str r2,[r7,#4]
 1112 000a 1A46     	 mov r2,r3
 1113 000c 0B46     	 mov r3,r1
 1114 000e 7B81     	 strh r3,[r7,#10]
 1115 0010 1346     	 mov r3,r2
 1116 0012 7B72     	 strb r3,[r7,#9]
 371:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 372:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 373:../Libraries/XMCLib/src/xmc_usic.c **** 
 374:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 375:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 1117              	 .loc 2 375 0
 1118 0014 F868     	 ldr r0,[r7,#12]
 1119 0016 0221     	 movs r1,#2
 1120 0018 FFF7FEFF 	 bl XMC_USIC_CH_SetBRGInputClockSource
 376:../Libraries/XMCLib/src/xmc_usic.c **** 
 377:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 378:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel, XMC_USIC_CH_INPUT_DX1, combination_mode);
 1121              	 .loc 2 378 0
 1122 001c 7B7A     	 ldrb r3,[r7,#9]
 1123 001e F868     	 ldr r0,[r7,#12]
 1124 0020 0121     	 movs r1,#1
 1125 0022 1A46     	 mov r2,r3
 1126 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetInputTriggerCombinationMode
 379:../Libraries/XMCLib/src/xmc_usic.c **** 
 380:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 381:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 1127              	 .loc 2 381 0
 1128 0028 FB68     	 ldr r3,[r7,#12]
 1129 002a 5A69     	 ldr r2,[r3,#20]
 1130 002c 074B     	 ldr r3,.L62
 1131 002e 1340     	 ands r3,r3,r2
 382:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 383:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 384:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 385:../Libraries/XMCLib/src/xmc_usic.c ****                  (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1132              	 .loc 2 385 0
 1133 0030 7A68     	 ldr r2,[r7,#4]
 1134 0032 013A     	 subs r2,r2,#1
 1135 0034 9202     	 lsls r2,r2,#10
 384:../Libraries/XMCLib/src/xmc_usic.c ****                  (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1136              	 .loc 2 384 0
 1137 0036 1A43     	 orrs r2,r2,r3
 386:../Libraries/XMCLib/src/xmc_usic.c ****                  (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1138              	 .loc 2 386 0
 1139 0038 7B89     	 ldrh r3,[r7,#10]
 1140 003a 013B     	 subs r3,r3,#1
 1141 003c 1B04     	 lsls r3,r3,#16
 385:../Libraries/XMCLib/src/xmc_usic.c ****                  (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1142              	 .loc 2 385 0
 1143 003e 1A43     	 orrs r2,r2,r3
 381:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 1144              	 .loc 2 381 0
 1145 0040 FB68     	 ldr r3,[r7,#12]
 1146 0042 5A61     	 str r2,[r3,#20]
 387:../Libraries/XMCLib/src/xmc_usic.c **** }
 1147              	 .loc 2 387 0
 1148 0044 1037     	 adds r7,r7,#16
 1149              	.LCFI57:
 1150              	 .cfi_def_cfa_offset 8
 1151 0046 BD46     	 mov sp,r7
 1152              	.LCFI58:
 1153              	 .cfi_def_cfa_register 13
 1154              	 
 1155 0048 80BD     	 pop {r7,pc}
 1156              	.L63:
 1157 004a 00BF     	 .align 2
 1158              	.L62:
 1159 004c EF8000FC 	 .word -67075857
 1160              	 .cfi_endproc
 1161              	.LFE246:
 1163              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 1164              	 .align 2
 1165              	 .global XMC_USIC_CH_TXFIFO_Configure
 1166              	 .thumb
 1167              	 .thumb_func
 1169              	XMC_USIC_CH_TXFIFO_Configure:
 1170              	.LFB247:
 388:../Libraries/XMCLib/src/xmc_usic.c **** 
 389:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 390:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 391:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 392:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 393:../Libraries/XMCLib/src/xmc_usic.c **** {
 1171              	 .loc 2 393 0
 1172              	 .cfi_startproc
 1173              	 
 1174              	 
 1175              	 
 1176 0000 80B4     	 push {r7}
 1177              	.LCFI59:
 1178              	 .cfi_def_cfa_offset 4
 1179              	 .cfi_offset 7,-4
 1180 0002 85B0     	 sub sp,sp,#20
 1181              	.LCFI60:
 1182              	 .cfi_def_cfa_offset 24
 1183 0004 00AF     	 add r7,sp,#0
 1184              	.LCFI61:
 1185              	 .cfi_def_cfa_register 7
 1186 0006 F860     	 str r0,[r7,#12]
 1187 0008 B960     	 str r1,[r7,#8]
 1188 000a 3B60     	 str r3,[r7]
 1189 000c 1346     	 mov r3,r2
 1190 000e FB71     	 strb r3,[r7,#7]
 394:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 395:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1191              	 .loc 2 395 0
 1192 0010 FB68     	 ldr r3,[r7,#12]
 1193 0012 D3F80831 	 ldr r3,[r3,#264]
 1194 0016 23F0E062 	 bic r2,r3,#117440512
 1195 001a FB68     	 ldr r3,[r7,#12]
 1196 001c C3F80821 	 str r2,[r3,#264]
 396:../Libraries/XMCLib/src/xmc_usic.c **** 
 397:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 398:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 399:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 400:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 401:../Libraries/XMCLib/src/xmc_usic.c ****    */
 402:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 1197              	 .loc 2 402 0
 1198 0020 FB68     	 ldr r3,[r7,#12]
 1199 0022 D3F80821 	 ldr r2,[r3,#264]
 1200 0026 094B     	 ldr r3,.L65
 1201 0028 1340     	 ands r3,r3,r2
 403:../Libraries/XMCLib/src/xmc_usic.c ****                               USIC_CH_TBCTR_DPTR_Msk |
 404:../Libraries/XMCLib/src/xmc_usic.c ****                               USIC_CH_TBCTR_SIZE_Msk)) |
 405:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1202              	 .loc 2 405 0
 1203 002a 3A68     	 ldr r2,[r7]
 1204 002c 1102     	 lsls r1,r2,#8
 1205 002e BA68     	 ldr r2,[r7,#8]
 1206 0030 1143     	 orrs r1,r1,r2
 406:../Libraries/XMCLib/src/xmc_usic.c ****                               (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 407:../Libraries/XMCLib/src/xmc_usic.c ****                               ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1207              	 .loc 2 407 0
 1208 0032 FA79     	 ldrb r2,[r7,#7]
 1209 0034 1206     	 lsls r2,r2,#24
 405:../Libraries/XMCLib/src/xmc_usic.c ****                               (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 1210              	 .loc 2 405 0
 1211 0036 0A43     	 orrs r2,r2,r1
 404:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1212              	 .loc 2 404 0
 1213 0038 1A43     	 orrs r2,r2,r3
 402:../Libraries/XMCLib/src/xmc_usic.c ****                               USIC_CH_TBCTR_DPTR_Msk |
 1214              	 .loc 2 402 0
 1215 003a FB68     	 ldr r3,[r7,#12]
 1216 003c C3F80821 	 str r2,[r3,#264]
 408:../Libraries/XMCLib/src/xmc_usic.c **** }
 1217              	 .loc 2 408 0
 1218 0040 1437     	 adds r7,r7,#20
 1219              	.LCFI62:
 1220              	 .cfi_def_cfa_offset 4
 1221 0042 BD46     	 mov sp,r7
 1222              	.LCFI63:
 1223              	 .cfi_def_cfa_register 13
 1224              	 
 1225 0044 5DF8047B 	 ldr r7,[sp],#4
 1226              	.LCFI64:
 1227              	 .cfi_restore 7
 1228              	 .cfi_def_cfa_offset 0
 1229 0048 7047     	 bx lr
 1230              	.L66:
 1231 004a 00BF     	 .align 2
 1232              	.L65:
 1233 004c C0C0FFF8 	 .word -117456704
 1234              	 .cfi_endproc
 1235              	.LFE247:
 1237              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 1238              	 .align 2
 1239              	 .global XMC_USIC_CH_RXFIFO_Configure
 1240              	 .thumb
 1241              	 .thumb_func
 1243              	XMC_USIC_CH_RXFIFO_Configure:
 1244              	.LFB248:
 409:../Libraries/XMCLib/src/xmc_usic.c **** 
 410:../Libraries/XMCLib/src/xmc_usic.c **** 
 411:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 412:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 413:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 414:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 415:../Libraries/XMCLib/src/xmc_usic.c **** {
 1245              	 .loc 2 415 0
 1246              	 .cfi_startproc
 1247              	 
 1248              	 
 1249              	 
 1250 0000 80B4     	 push {r7}
 1251              	.LCFI65:
 1252              	 .cfi_def_cfa_offset 4
 1253              	 .cfi_offset 7,-4
 1254 0002 85B0     	 sub sp,sp,#20
 1255              	.LCFI66:
 1256              	 .cfi_def_cfa_offset 24
 1257 0004 00AF     	 add r7,sp,#0
 1258              	.LCFI67:
 1259              	 .cfi_def_cfa_register 7
 1260 0006 F860     	 str r0,[r7,#12]
 1261 0008 B960     	 str r1,[r7,#8]
 1262 000a 3B60     	 str r3,[r7]
 1263 000c 1346     	 mov r3,r2
 1264 000e FB71     	 strb r3,[r7,#7]
 416:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 417:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1265              	 .loc 2 417 0
 1266 0010 FB68     	 ldr r3,[r7,#12]
 1267 0012 D3F80C31 	 ldr r3,[r3,#268]
 1268 0016 23F0E062 	 bic r2,r3,#117440512
 1269 001a FB68     	 ldr r3,[r7,#12]
 1270 001c C3F80C21 	 str r2,[r3,#268]
 418:../Libraries/XMCLib/src/xmc_usic.c **** 
 419:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 420:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 421:../Libraries/XMCLib/src/xmc_usic.c ****    */
 422:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 1271              	 .loc 2 422 0
 1272 0020 FB68     	 ldr r3,[r7,#12]
 1273 0022 D3F80C21 	 ldr r2,[r3,#268]
 1274 0026 0A4B     	 ldr r3,.L68
 1275 0028 1340     	 ands r3,r3,r2
 423:../Libraries/XMCLib/src/xmc_usic.c ****                                USIC_CH_RBCTR_DPTR_Msk |
 424:../Libraries/XMCLib/src/xmc_usic.c ****                                USIC_CH_RBCTR_LOF_Msk)) |
 425:../Libraries/XMCLib/src/xmc_usic.c ****                               ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1276              	 .loc 2 425 0
 1277 002a 3A68     	 ldr r2,[r7]
 1278 002c 1102     	 lsls r1,r2,#8
 1279 002e BA68     	 ldr r2,[r7,#8]
 1280 0030 1143     	 orrs r1,r1,r2
 426:../Libraries/XMCLib/src/xmc_usic.c ****                                (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 427:../Libraries/XMCLib/src/xmc_usic.c ****                                ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 1281              	 .loc 2 427 0
 1282 0032 FA79     	 ldrb r2,[r7,#7]
 1283 0034 1206     	 lsls r2,r2,#24
 426:../Libraries/XMCLib/src/xmc_usic.c ****                                (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 1284              	 .loc 2 426 0
 1285 0036 0A43     	 orrs r2,r2,r1
 422:../Libraries/XMCLib/src/xmc_usic.c ****                                USIC_CH_RBCTR_DPTR_Msk |
 1286              	 .loc 2 422 0
 1287 0038 1343     	 orrs r3,r3,r2
 1288 003a 43F08052 	 orr r2,r3,#268435456
 1289 003e FB68     	 ldr r3,[r7,#12]
 1290 0040 C3F80C21 	 str r2,[r3,#268]
 428:../Libraries/XMCLib/src/xmc_usic.c ****                                (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 429:../Libraries/XMCLib/src/xmc_usic.c **** }
 1291              	 .loc 2 429 0
 1292 0044 1437     	 adds r7,r7,#20
 1293              	.LCFI68:
 1294              	 .cfi_def_cfa_offset 4
 1295 0046 BD46     	 mov sp,r7
 1296              	.LCFI69:
 1297              	 .cfi_def_cfa_register 13
 1298              	 
 1299 0048 5DF8047B 	 ldr r7,[sp],#4
 1300              	.LCFI70:
 1301              	 .cfi_restore 7
 1302              	 .cfi_def_cfa_offset 0
 1303 004c 7047     	 bx lr
 1304              	.L69:
 1305 004e 00BF     	 .align 2
 1306              	.L68:
 1307 0050 C0C0FFEF 	 .word -268451648
 1308              	 .cfi_endproc
 1309              	.LFE248:
 1311              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1312              	 .align 2
 1313              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 1314              	 .thumb
 1315              	 .thumb_func
 1317              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 1318              	.LFB249:
 430:../Libraries/XMCLib/src/xmc_usic.c **** 
 431:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 432:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_FIFO_SIZE_t size,
 433:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t limit)
 434:../Libraries/XMCLib/src/xmc_usic.c **** {
 1319              	 .loc 2 434 0
 1320              	 .cfi_startproc
 1321              	 
 1322              	 
 1323              	 
 1324 0000 80B4     	 push {r7}
 1325              	.LCFI71:
 1326              	 .cfi_def_cfa_offset 4
 1327              	 .cfi_offset 7,-4
 1328 0002 85B0     	 sub sp,sp,#20
 1329              	.LCFI72:
 1330              	 .cfi_def_cfa_offset 24
 1331 0004 00AF     	 add r7,sp,#0
 1332              	.LCFI73:
 1333              	 .cfi_def_cfa_register 7
 1334 0006 F860     	 str r0,[r7,#12]
 1335 0008 0B46     	 mov r3,r1
 1336 000a 7A60     	 str r2,[r7,#4]
 1337 000c FB72     	 strb r3,[r7,#11]
 435:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_UNUSED_ARG(size);
 436:../Libraries/XMCLib/src/xmc_usic.c **** 
 437:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 438:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 439:../Libraries/XMCLib/src/xmc_usic.c ****    */
 440:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 1338              	 .loc 2 440 0
 1339 000e FB68     	 ldr r3,[r7,#12]
 1340 0010 D3F80831 	 ldr r3,[r3,#264]
 1341 0014 23F47C52 	 bic r2,r3,#16128
 441:../Libraries/XMCLib/src/xmc_usic.c ****                               (limit << USIC_CH_TBCTR_LIMIT_Pos));
 1342              	 .loc 2 441 0
 1343 0018 7B68     	 ldr r3,[r7,#4]
 1344 001a 1B02     	 lsls r3,r3,#8
 440:../Libraries/XMCLib/src/xmc_usic.c ****                               (limit << USIC_CH_TBCTR_LIMIT_Pos));
 1345              	 .loc 2 440 0
 1346 001c 1A43     	 orrs r2,r2,r3
 1347 001e FB68     	 ldr r3,[r7,#12]
 1348 0020 C3F80821 	 str r2,[r3,#264]
 442:../Libraries/XMCLib/src/xmc_usic.c **** }
 1349              	 .loc 2 442 0
 1350 0024 1437     	 adds r7,r7,#20
 1351              	.LCFI74:
 1352              	 .cfi_def_cfa_offset 4
 1353 0026 BD46     	 mov sp,r7
 1354              	.LCFI75:
 1355              	 .cfi_def_cfa_register 13
 1356              	 
 1357 0028 5DF8047B 	 ldr r7,[sp],#4
 1358              	.LCFI76:
 1359              	 .cfi_restore 7
 1360              	 .cfi_def_cfa_offset 0
 1361 002c 7047     	 bx lr
 1362              	 .cfi_endproc
 1363              	.LFE249:
 1365 002e 00BF     	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1366              	 .align 2
 1367              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 1368              	 .thumb
 1369              	 .thumb_func
 1371              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 1372              	.LFB250:
 443:../Libraries/XMCLib/src/xmc_usic.c **** 
 444:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 445:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_FIFO_SIZE_t size,
 446:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t limit)
 447:../Libraries/XMCLib/src/xmc_usic.c **** {
 1373              	 .loc 2 447 0
 1374              	 .cfi_startproc
 1375              	 
 1376              	 
 1377              	 
 1378 0000 80B4     	 push {r7}
 1379              	.LCFI77:
 1380              	 .cfi_def_cfa_offset 4
 1381              	 .cfi_offset 7,-4
 1382 0002 85B0     	 sub sp,sp,#20
 1383              	.LCFI78:
 1384              	 .cfi_def_cfa_offset 24
 1385 0004 00AF     	 add r7,sp,#0
 1386              	.LCFI79:
 1387              	 .cfi_def_cfa_register 7
 1388 0006 F860     	 str r0,[r7,#12]
 1389 0008 0B46     	 mov r3,r1
 1390 000a 7A60     	 str r2,[r7,#4]
 1391 000c FB72     	 strb r3,[r7,#11]
 448:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_UNUSED_ARG(size);
 449:../Libraries/XMCLib/src/xmc_usic.c **** 
 450:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 1392              	 .loc 2 450 0
 1393 000e FB68     	 ldr r3,[r7,#12]
 1394 0010 D3F80C31 	 ldr r3,[r3,#268]
 1395 0014 23F47C52 	 bic r2,r3,#16128
 451:../Libraries/XMCLib/src/xmc_usic.c ****                               (limit << USIC_CH_RBCTR_LIMIT_Pos));
 1396              	 .loc 2 451 0
 1397 0018 7B68     	 ldr r3,[r7,#4]
 1398 001a 1B02     	 lsls r3,r3,#8
 450:../Libraries/XMCLib/src/xmc_usic.c ****                               (limit << USIC_CH_RBCTR_LIMIT_Pos));
 1399              	 .loc 2 450 0
 1400 001c 1A43     	 orrs r2,r2,r3
 1401 001e FB68     	 ldr r3,[r7,#12]
 1402 0020 C3F80C21 	 str r2,[r3,#268]
 452:../Libraries/XMCLib/src/xmc_usic.c **** }
 1403              	 .loc 2 452 0
 1404 0024 1437     	 adds r7,r7,#20
 1405              	.LCFI80:
 1406              	 .cfi_def_cfa_offset 4
 1407 0026 BD46     	 mov sp,r7
 1408              	.LCFI81:
 1409              	 .cfi_def_cfa_register 13
 1410              	 
 1411 0028 5DF8047B 	 ldr r7,[sp],#4
 1412              	.LCFI82:
 1413              	 .cfi_restore 7
 1414              	 .cfi_def_cfa_offset 0
 1415 002c 7047     	 bx lr
 1416              	 .cfi_endproc
 1417              	.LFE250:
 1419 002e 00BF     	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 1420              	 .align 2
 1421              	 .global XMC_USIC_CH_SetInterruptNodePointer
 1422              	 .thumb
 1423              	 .thumb_func
 1425              	XMC_USIC_CH_SetInterruptNodePointer:
 1426              	.LFB251:
 453:../Libraries/XMCLib/src/xmc_usic.c **** 
 454:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 455:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 456:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t service_request)
 457:../Libraries/XMCLib/src/xmc_usic.c **** {
 1427              	 .loc 2 457 0
 1428              	 .cfi_startproc
 1429              	 
 1430              	 
 1431              	 
 1432 0000 80B4     	 push {r7}
 1433              	.LCFI83:
 1434              	 .cfi_def_cfa_offset 4
 1435              	 .cfi_offset 7,-4
 1436 0002 85B0     	 sub sp,sp,#20
 1437              	.LCFI84:
 1438              	 .cfi_def_cfa_offset 24
 1439 0004 00AF     	 add r7,sp,#0
 1440              	.LCFI85:
 1441              	 .cfi_def_cfa_register 7
 1442 0006 F860     	 str r0,[r7,#12]
 1443 0008 0B46     	 mov r3,r1
 1444 000a 7A60     	 str r2,[r7,#4]
 1445 000c FB72     	 strb r3,[r7,#11]
 458:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1446              	 .loc 2 458 0
 1447 000e FB68     	 ldr r3,[r7,#12]
 1448 0010 9A69     	 ldr r2,[r3,#24]
 1449 0012 FB7A     	 ldrb r3,[r7,#11]
 1450 0014 0721     	 movs r1,#7
 1451 0016 01FA03F3 	 lsl r3,r1,r3
 1452 001a DB43     	 mvns r3,r3
 1453 001c 1A40     	 ands r2,r2,r3
 459:../Libraries/XMCLib/src/xmc_usic.c ****                              (service_request << (uint32_t)interrupt_node));
 1454              	 .loc 2 459 0
 1455 001e FB7A     	 ldrb r3,[r7,#11]
 1456 0020 7968     	 ldr r1,[r7,#4]
 1457 0022 01FA03F3 	 lsl r3,r1,r3
 458:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1458              	 .loc 2 458 0
 1459 0026 1A43     	 orrs r2,r2,r3
 1460 0028 FB68     	 ldr r3,[r7,#12]
 1461 002a 9A61     	 str r2,[r3,#24]
 460:../Libraries/XMCLib/src/xmc_usic.c **** }
 1462              	 .loc 2 460 0
 1463 002c 1437     	 adds r7,r7,#20
 1464              	.LCFI86:
 1465              	 .cfi_def_cfa_offset 4
 1466 002e BD46     	 mov sp,r7
 1467              	.LCFI87:
 1468              	 .cfi_def_cfa_register 13
 1469              	 
 1470 0030 5DF8047B 	 ldr r7,[sp],#4
 1471              	.LCFI88:
 1472              	 .cfi_restore 7
 1473              	 .cfi_def_cfa_offset 0
 1474 0034 7047     	 bx lr
 1475              	 .cfi_endproc
 1476              	.LFE251:
 1478 0036 00BF     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 1479              	 .align 2
 1480              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 1481              	 .thumb
 1482              	 .thumb_func
 1484              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 1485              	.LFB252:
 461:../Libraries/XMCLib/src/xmc_usic.c **** 
 462:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 463:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
 464:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t service_request)
 465:../Libraries/XMCLib/src/xmc_usic.c **** {
 1486              	 .loc 2 465 0
 1487              	 .cfi_startproc
 1488              	 
 1489              	 
 1490              	 
 1491 0000 80B4     	 push {r7}
 1492              	.LCFI89:
 1493              	 .cfi_def_cfa_offset 4
 1494              	 .cfi_offset 7,-4
 1495 0002 85B0     	 sub sp,sp,#20
 1496              	.LCFI90:
 1497              	 .cfi_def_cfa_offset 24
 1498 0004 00AF     	 add r7,sp,#0
 1499              	.LCFI91:
 1500              	 .cfi_def_cfa_register 7
 1501 0006 F860     	 str r0,[r7,#12]
 1502 0008 0B46     	 mov r3,r1
 1503 000a 7A60     	 str r2,[r7,#4]
 1504 000c FB72     	 strb r3,[r7,#11]
 466:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1505              	 .loc 2 466 0
 1506 000e FB68     	 ldr r3,[r7,#12]
 1507 0010 D3F80821 	 ldr r2,[r3,#264]
 1508 0014 FB7A     	 ldrb r3,[r7,#11]
 1509 0016 0721     	 movs r1,#7
 1510 0018 01FA03F3 	 lsl r3,r1,r3
 1511 001c DB43     	 mvns r3,r3
 1512 001e 1A40     	 ands r2,r2,r3
 467:../Libraries/XMCLib/src/xmc_usic.c ****                               (service_request << (uint32_t)interrupt_node));
 1513              	 .loc 2 467 0
 1514 0020 FB7A     	 ldrb r3,[r7,#11]
 1515 0022 7968     	 ldr r1,[r7,#4]
 1516 0024 01FA03F3 	 lsl r3,r1,r3
 466:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1517              	 .loc 2 466 0
 1518 0028 1A43     	 orrs r2,r2,r3
 1519 002a FB68     	 ldr r3,[r7,#12]
 1520 002c C3F80821 	 str r2,[r3,#264]
 468:../Libraries/XMCLib/src/xmc_usic.c **** }
 1521              	 .loc 2 468 0
 1522 0030 1437     	 adds r7,r7,#20
 1523              	.LCFI92:
 1524              	 .cfi_def_cfa_offset 4
 1525 0032 BD46     	 mov sp,r7
 1526              	.LCFI93:
 1527              	 .cfi_def_cfa_register 13
 1528              	 
 1529 0034 5DF8047B 	 ldr r7,[sp],#4
 1530              	.LCFI94:
 1531              	 .cfi_restore 7
 1532              	 .cfi_def_cfa_offset 0
 1533 0038 7047     	 bx lr
 1534              	 .cfi_endproc
 1535              	.LFE252:
 1537 003a 00BF     	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 1538              	 .align 2
 1539              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 1540              	 .thumb
 1541              	 .thumb_func
 1543              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 1544              	.LFB253:
 469:../Libraries/XMCLib/src/xmc_usic.c **** 
 470:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 471:../Libraries/XMCLib/src/xmc_usic.c ****     const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node,
 472:../Libraries/XMCLib/src/xmc_usic.c ****     const uint32_t service_request)
 473:../Libraries/XMCLib/src/xmc_usic.c **** {
 1545              	 .loc 2 473 0
 1546              	 .cfi_startproc
 1547              	 
 1548              	 
 1549              	 
 1550 0000 80B4     	 push {r7}
 1551              	.LCFI95:
 1552              	 .cfi_def_cfa_offset 4
 1553              	 .cfi_offset 7,-4
 1554 0002 85B0     	 sub sp,sp,#20
 1555              	.LCFI96:
 1556              	 .cfi_def_cfa_offset 24
 1557 0004 00AF     	 add r7,sp,#0
 1558              	.LCFI97:
 1559              	 .cfi_def_cfa_register 7
 1560 0006 F860     	 str r0,[r7,#12]
 1561 0008 0B46     	 mov r3,r1
 1562 000a 7A60     	 str r2,[r7,#4]
 1563 000c FB72     	 strb r3,[r7,#11]
 474:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1564              	 .loc 2 474 0
 1565 000e FB68     	 ldr r3,[r7,#12]
 1566 0010 D3F80C21 	 ldr r2,[r3,#268]
 1567 0014 FB7A     	 ldrb r3,[r7,#11]
 1568 0016 0721     	 movs r1,#7
 1569 0018 01FA03F3 	 lsl r3,r1,r3
 1570 001c DB43     	 mvns r3,r3
 1571 001e 1A40     	 ands r2,r2,r3
 475:../Libraries/XMCLib/src/xmc_usic.c ****                               (service_request << (uint32_t)interrupt_node));
 1572              	 .loc 2 475 0
 1573 0020 FB7A     	 ldrb r3,[r7,#11]
 1574 0022 7968     	 ldr r1,[r7,#4]
 1575 0024 01FA03F3 	 lsl r3,r1,r3
 474:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1576              	 .loc 2 474 0
 1577 0028 1A43     	 orrs r2,r2,r3
 1578 002a FB68     	 ldr r3,[r7,#12]
 1579 002c C3F80C21 	 str r2,[r3,#268]
 476:../Libraries/XMCLib/src/xmc_usic.c **** }
 1580              	 .loc 2 476 0
 1581 0030 1437     	 adds r7,r7,#20
 1582              	.LCFI98:
 1583              	 .cfi_def_cfa_offset 4
 1584 0032 BD46     	 mov sp,r7
 1585              	.LCFI99:
 1586              	 .cfi_def_cfa_register 13
 1587              	 
 1588 0034 5DF8047B 	 ldr r7,[sp],#4
 1589              	.LCFI100:
 1590              	 .cfi_restore 7
 1591              	 .cfi_def_cfa_offset 0
 1592 0038 7047     	 bx lr
 1593              	 .cfi_endproc
 1594              	.LFE253:
 1596 003a 00BF     	 .section .text.XMC_USIC_Enable,"ax",%progbits
 1597              	 .align 2
 1598              	 .global XMC_USIC_Enable
 1599              	 .thumb
 1600              	 .thumb_func
 1602              	XMC_USIC_Enable:
 1603              	.LFB254:
 477:../Libraries/XMCLib/src/xmc_usic.c **** 
 478:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 479:../Libraries/XMCLib/src/xmc_usic.c **** {
 1604              	 .loc 2 479 0
 1605              	 .cfi_startproc
 1606              	 
 1607              	 
 1608 0000 80B5     	 push {r7,lr}
 1609              	.LCFI101:
 1610              	 .cfi_def_cfa_offset 8
 1611              	 .cfi_offset 7,-8
 1612              	 .cfi_offset 14,-4
 1613 0002 82B0     	 sub sp,sp,#8
 1614              	.LCFI102:
 1615              	 .cfi_def_cfa_offset 16
 1616 0004 00AF     	 add r7,sp,#0
 1617              	.LCFI103:
 1618              	 .cfi_def_cfa_register 7
 1619 0006 7860     	 str r0,[r7,#4]
 480:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 1620              	 .loc 2 480 0
 1621 0008 7B68     	 ldr r3,[r7,#4]
 1622 000a 184A     	 ldr r2,.L82
 1623 000c 9342     	 cmp r3,r2
 1624 000e 0CD1     	 bne .L76
 481:../Libraries/XMCLib/src/xmc_usic.c ****   {
 482:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 483:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 484:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 485:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 486:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 487:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1625              	 .loc 2 487 0
 1626 0010 4FF40060 	 mov r0,#2048
 1627 0014 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 488:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 1628              	 .loc 2 488 0
 1629 0018 00BF     	 nop
 1630              	.L77:
 1631              	 .loc 2 488 0 is_stmt 0 discriminator 1
 1632 001a 4FF40060 	 mov r0,#2048
 1633 001e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1634 0022 0346     	 mov r3,r0
 1635 0024 002B     	 cmp r3,#0
 1636 0026 F8D1     	 bne .L77
 1637 0028 1CE0     	 b .L75
 1638              	.L76:
 489:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 490:../Libraries/XMCLib/src/xmc_usic.c ****   }
 491:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 492:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 1639              	 .loc 2 492 0 is_stmt 1
 1640 002a 7B68     	 ldr r3,[r7,#4]
 1641 002c 104A     	 ldr r2,.L82+4
 1642 002e 9342     	 cmp r3,r2
 1643 0030 0AD1     	 bne .L79
 493:../Libraries/XMCLib/src/xmc_usic.c ****   {
 494:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 495:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 496:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 497:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 498:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 499:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1644              	 .loc 2 499 0
 1645 0032 1048     	 ldr r0,.L82+8
 1646 0034 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 500:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
 1647              	 .loc 2 500 0
 1648 0038 00BF     	 nop
 1649              	.L80:
 1650              	 .loc 2 500 0 is_stmt 0 discriminator 1
 1651 003a 0E48     	 ldr r0,.L82+8
 1652 003c FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1653 0040 0346     	 mov r3,r0
 1654 0042 002B     	 cmp r3,#0
 1655 0044 F9D1     	 bne .L80
 1656 0046 0DE0     	 b .L75
 1657              	.L79:
 501:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 502:../Libraries/XMCLib/src/xmc_usic.c ****   }
 503:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 504:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 505:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 1658              	 .loc 2 505 0 is_stmt 1
 1659 0048 7B68     	 ldr r3,[r7,#4]
 1660 004a 0B4A     	 ldr r2,.L82+12
 1661 004c 9342     	 cmp r3,r2
 1662 004e 09D1     	 bne .L75
 506:../Libraries/XMCLib/src/xmc_usic.c ****   {
 507:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 508:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 509:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 510:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 511:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 512:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1663              	 .loc 2 512 0
 1664 0050 0A48     	 ldr r0,.L82+16
 1665 0052 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 513:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 1666              	 .loc 2 513 0
 1667 0056 00BF     	 nop
 1668              	.L81:
 1669              	 .loc 2 513 0 is_stmt 0 discriminator 1
 1670 0058 0848     	 ldr r0,.L82+16
 1671 005a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1672 005e 0346     	 mov r3,r0
 1673 0060 002B     	 cmp r3,#0
 1674 0062 F9D1     	 bne .L81
 1675              	.L75:
 514:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 515:../Libraries/XMCLib/src/xmc_usic.c ****   }
 516:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 517:../Libraries/XMCLib/src/xmc_usic.c ****   else
 518:../Libraries/XMCLib/src/xmc_usic.c ****   {
 519:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 520:../Libraries/XMCLib/src/xmc_usic.c ****   }
 521:../Libraries/XMCLib/src/xmc_usic.c **** }
 1676              	 .loc 2 521 0 is_stmt 1
 1677 0064 0837     	 adds r7,r7,#8
 1678              	.LCFI104:
 1679              	 .cfi_def_cfa_offset 8
 1680 0066 BD46     	 mov sp,r7
 1681              	.LCFI105:
 1682              	 .cfi_def_cfa_register 13
 1683              	 
 1684 0068 80BD     	 pop {r7,pc}
 1685              	.L83:
 1686 006a 00BF     	 .align 2
 1687              	.L82:
 1688 006c 08000340 	 .word 1073938440
 1689 0070 08000248 	 .word 1208090632
 1690 0074 80000010 	 .word 268435584
 1691 0078 08400248 	 .word 1208107016
 1692 007c 00010010 	 .word 268435712
 1693              	 .cfi_endproc
 1694              	.LFE254:
 1696              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1697              	 .align 2
 1698              	 .global XMC_USIC_Disable
 1699              	 .thumb
 1700              	 .thumb_func
 1702              	XMC_USIC_Disable:
 1703              	.LFB255:
 522:../Libraries/XMCLib/src/xmc_usic.c **** 
 523:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 524:../Libraries/XMCLib/src/xmc_usic.c **** {
 1704              	 .loc 2 524 0
 1705              	 .cfi_startproc
 1706              	 
 1707              	 
 1708 0000 80B5     	 push {r7,lr}
 1709              	.LCFI106:
 1710              	 .cfi_def_cfa_offset 8
 1711              	 .cfi_offset 7,-8
 1712              	 .cfi_offset 14,-4
 1713 0002 82B0     	 sub sp,sp,#8
 1714              	.LCFI107:
 1715              	 .cfi_def_cfa_offset 16
 1716 0004 00AF     	 add r7,sp,#0
 1717              	.LCFI108:
 1718              	 .cfi_def_cfa_register 7
 1719 0006 7860     	 str r0,[r7,#4]
 525:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1720              	 .loc 2 525 0
 1721 0008 7B68     	 ldr r3,[r7,#4]
 1722 000a 0D4A     	 ldr r2,.L88
 1723 000c 9342     	 cmp r3,r2
 1724 000e 04D1     	 bne .L85
 526:../Libraries/XMCLib/src/xmc_usic.c ****   {
 527:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 528:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1725              	 .loc 2 528 0
 1726 0010 4FF40060 	 mov r0,#2048
 1727 0014 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1728 0018 0EE0     	 b .L84
 1729              	.L85:
 529:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 530:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 531:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 532:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 533:../Libraries/XMCLib/src/xmc_usic.c ****   }
 534:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 535:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 1730              	 .loc 2 535 0
 1731 001a 7B68     	 ldr r3,[r7,#4]
 1732 001c 094A     	 ldr r2,.L88+4
 1733 001e 9342     	 cmp r3,r2
 1734 0020 03D1     	 bne .L87
 536:../Libraries/XMCLib/src/xmc_usic.c ****   {
 537:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 538:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1735              	 .loc 2 538 0
 1736 0022 0948     	 ldr r0,.L88+8
 1737 0024 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1738 0028 06E0     	 b .L84
 1739              	.L87:
 539:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 540:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 541:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 542:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 543:../Libraries/XMCLib/src/xmc_usic.c ****   }
 544:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 545:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 546:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 1740              	 .loc 2 546 0
 1741 002a 7B68     	 ldr r3,[r7,#4]
 1742 002c 074A     	 ldr r2,.L88+12
 1743 002e 9342     	 cmp r3,r2
 1744 0030 02D1     	 bne .L84
 547:../Libraries/XMCLib/src/xmc_usic.c ****   {
 548:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 549:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1745              	 .loc 2 549 0
 1746 0032 0748     	 ldr r0,.L88+16
 1747 0034 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1748              	.L84:
 550:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 551:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 552:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 553:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 554:../Libraries/XMCLib/src/xmc_usic.c ****   }
 555:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 556:../Libraries/XMCLib/src/xmc_usic.c ****   else
 557:../Libraries/XMCLib/src/xmc_usic.c ****   {
 558:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 559:../Libraries/XMCLib/src/xmc_usic.c ****   }
 560:../Libraries/XMCLib/src/xmc_usic.c **** 
 561:../Libraries/XMCLib/src/xmc_usic.c **** }
 1749              	 .loc 2 561 0
 1750 0038 0837     	 adds r7,r7,#8
 1751              	.LCFI109:
 1752              	 .cfi_def_cfa_offset 8
 1753 003a BD46     	 mov sp,r7
 1754              	.LCFI110:
 1755              	 .cfi_def_cfa_register 13
 1756              	 
 1757 003c 80BD     	 pop {r7,pc}
 1758              	.L89:
 1759 003e 00BF     	 .align 2
 1760              	.L88:
 1761 0040 08000340 	 .word 1073938440
 1762 0044 08000248 	 .word 1208090632
 1763 0048 80000010 	 .word 268435584
 1764 004c 08400248 	 .word 1208107016
 1765 0050 00010010 	 .word 268435712
 1766              	 .cfi_endproc
 1767              	.LFE255:
 1769              	 .text
 1770              	.Letext0:
 1771              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1772              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1773              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1774              	 .file 6 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc4_scu.h"
 1775              	 .file 7 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
 1776              	 .file 8 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/core_cm4.h"
 1777              	 .file 9 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:20     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 XMC_USIC_CH_SetInputTriggerCombinationMode
    {standard input}:83     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 $t
    {standard input}:87     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 XMC_USIC_CH_SetBRGInputClockSource
    {standard input}:132    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:137    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1602   .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:234    .text.XMC_USIC_CH_Enable:00000074 $d
    {standard input}:247    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:252    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:294    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:299    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:450    .text.XMC_USIC_CH_SetBaudrate:000000dc $d
    {standard input}:456    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:461    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:620    .text.XMC_USIC_CH_SetBaudrateEx:000000fc $d
    {standard input}:625    .text.XMC_USIC_CH_SetBaudrateDivider:00000000 $t
    {standard input}:630    .text.XMC_USIC_CH_SetBaudrateDivider:00000000 XMC_USIC_CH_SetBaudrateDivider
    {standard input}:710    .text.XMC_USIC_CH_SetBaudrateDivider:00000060 $d
    {standard input}:715    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:720    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:872    .text.XMC_USIC_CH_GetBaudrate:00000120 $d
    {standard input}:878    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:883    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:993    .text.XMC_USIC_CH_GetSCLKFrequency:000000d0 $d
    {standard input}:999    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:1004   .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:1083   .text.XMC_USIC_CH_GetMCLKFrequency:0000009c $d
    {standard input}:1088   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:1093   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:1159   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:0000004c $d
    {standard input}:1164   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:1169   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:1233   .text.XMC_USIC_CH_TXFIFO_Configure:0000004c $d
    {standard input}:1238   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:1243   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:1307   .text.XMC_USIC_CH_RXFIFO_Configure:00000050 $d
    {standard input}:1312   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1317   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:1366   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1371   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:1420   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:1425   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:1479   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1484   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:1538   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1543   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:1597   .text.XMC_USIC_Enable:00000000 $t
    {standard input}:1688   .text.XMC_USIC_Enable:0000006c $d
    {standard input}:1697   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1702   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1761   .text.XMC_USIC_Disable:00000040 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_RESET_AssertPeripheralReset
