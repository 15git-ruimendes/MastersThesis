   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ledts.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_LEDTS_InitGlobal
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_LEDTS_InitGlobal:
  26              	.LFB173:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_ledts.c"
   1:../Libraries/XMCLib/src/xmc_ledts.c **** /**
   2:../Libraries/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../Libraries/XMCLib/src/xmc_ledts.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   5:../Libraries/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ledts.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_ledts.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   9:../Libraries/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ledts.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  12:../Libraries/XMCLib/src/xmc_ledts.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  14:../Libraries/XMCLib/src/xmc_ledts.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_ledts.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_ledts.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_ledts.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_ledts.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_ledts.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  21:../Libraries/XMCLib/src/xmc_ledts.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_ledts.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_ledts.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_ledts.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_ledts.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_ledts.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  28:../Libraries/XMCLib/src/xmc_ledts.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_ledts.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_ledts.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_ledts.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_ledts.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_ledts.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_ledts.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  36:../Libraries/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_ledts.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_ledts.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_ledts.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  41:../Libraries/XMCLib/src/xmc_ledts.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_ledts.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  44:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  46:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  47:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  48:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  49:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  51:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2017-02-25:
  52:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - XMC_LEDTS_InitGlobal() fixed compilation warnings
  53:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  54:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2019-12-16:
  55:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  56:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  57:../Libraries/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  58:../Libraries/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  59:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  60:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  61:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  62:../Libraries/XMCLib/src/xmc_ledts.c ****  * @endcond
  63:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  64:../Libraries/XMCLib/src/xmc_ledts.c ****  */
  65:../Libraries/XMCLib/src/xmc_ledts.c **** 
  66:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  68:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_ledts.h"
  70:../Libraries/XMCLib/src/xmc_ledts.c **** 
  71:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  72:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  73:../Libraries/XMCLib/src/xmc_ledts.c **** 
  74:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_ledts.c ****  * MACROS
  76:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  78:../Libraries/XMCLib/src/xmc_ledts.c **** 
  79:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_ledts.c ****  * ENUMS
  81:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_ledts.c **** 
  83:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  85:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_ledts.c **** 
  87:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  88:../Libraries/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  89:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  90:../Libraries/XMCLib/src/xmc_ledts.c **** 
  91:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  92:../Libraries/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  93:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  94:../Libraries/XMCLib/src/xmc_ledts.c **** 
  95:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  96:../Libraries/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  97:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  98:../Libraries/XMCLib/src/xmc_ledts.c **** 
  99:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 100:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
 101:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 102:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
 103:../Libraries/XMCLib/src/xmc_ledts.c **** {
  28              	 .loc 1 103 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 3960     	 str r1,[r7]
 104:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 105:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
 106:../Libraries/XMCLib/src/xmc_ledts.c **** 
 107:../Libraries/XMCLib/src/xmc_ledts.c ****   if (ledts == XMC_LEDTS0)
  45              	 .loc 1 107 0
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c 0B4A     	 ldr r2,.L5
  48 000e 9342     	 cmp r3,r2
  49 0010 02D1     	 bne .L2
 108:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 109:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 110:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
 111:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 112:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 113:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
  50              	 .loc 1 113 0
  51 0012 0B48     	 ldr r0,.L5+4
  52 0014 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  53              	.L2:
 114:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 115:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 116:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 117:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS1)
 118:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 119:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 120:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
 121:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 122:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 123:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 124:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 125:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 126:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 127:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 128:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS2)
 129:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 130:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 131:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
 132:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 133:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 134:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 135:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 136:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 137:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 138:../Libraries/XMCLib/src/xmc_ledts.c ****   else
 139:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 140:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_ASSERT("XMC_LEDTS_InitGlobal:Invalid Module Pointer", 0);
 141:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 142:../Libraries/XMCLib/src/xmc_ledts.c **** 
 143:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  54              	 .loc 1 143 0
  55 0018 7B68     	 ldr r3,[r7,#4]
  56 001a 5B68     	 ldr r3,[r3,#4]
  57 001c 1B0C     	 lsrs r3,r3,#16
  58 001e 1B04     	 lsls r3,r3,#16
  59 0020 002B     	 cmp r3,#0
  60 0022 01D0     	 beq .L3
 144:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 145:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  61              	 .loc 1 145 0
  62 0024 0123     	 movs r3,#1
  63 0026 04E0     	 b .L4
  64              	.L3:
 146:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 147:../Libraries/XMCLib/src/xmc_ledts.c **** 
 148:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
  65              	 .loc 1 148 0
  66 0028 3B68     	 ldr r3,[r7]
  67 002a 1A68     	 ldr r2,[r3]
  68 002c 7B68     	 ldr r3,[r7,#4]
  69 002e 5A60     	 str r2,[r3,#4]
 149:../Libraries/XMCLib/src/xmc_ledts.c **** 
 150:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  70              	 .loc 1 150 0
  71 0030 0023     	 movs r3,#0
  72              	.L4:
 151:../Libraries/XMCLib/src/xmc_ledts.c **** }
  73              	 .loc 1 151 0
  74 0032 1846     	 mov r0,r3
  75 0034 0837     	 adds r7,r7,#8
  76              	.LCFI3:
  77              	 .cfi_def_cfa_offset 8
  78 0036 BD46     	 mov sp,r7
  79              	.LCFI4:
  80              	 .cfi_def_cfa_register 13
  81              	 
  82 0038 80BD     	 pop {r7,pc}
  83              	.L6:
  84 003a 00BF     	 .align 2
  85              	.L5:
  86 003c 00000148 	 .word 1208025088
  87 0040 08000010 	 .word 268435464
  88              	 .cfi_endproc
  89              	.LFE173:
  91              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
  92              	 .align 2
  93              	 .global XMC_LEDTS_InitLED
  94              	 .thumb
  95              	 .thumb_func
  97              	XMC_LEDTS_InitLED:
  98              	.LFB174:
 152:../Libraries/XMCLib/src/xmc_ledts.c **** 
 153:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 154:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 155:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 156:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 157:../Libraries/XMCLib/src/xmc_ledts.c **** {
  99              	 .loc 1 157 0
 100              	 .cfi_startproc
 101              	 
 102              	 
 103              	 
 104 0000 80B4     	 push {r7}
 105              	.LCFI5:
 106              	 .cfi_def_cfa_offset 4
 107              	 .cfi_offset 7,-4
 108 0002 83B0     	 sub sp,sp,#12
 109              	.LCFI6:
 110              	 .cfi_def_cfa_offset 16
 111 0004 00AF     	 add r7,sp,#0
 112              	.LCFI7:
 113              	 .cfi_def_cfa_register 7
 114 0006 7860     	 str r0,[r7,#4]
 115 0008 3960     	 str r1,[r7]
 158:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 159:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 160:../Libraries/XMCLib/src/xmc_ledts.c **** 
 161:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 116              	 .loc 1 161 0
 117 000a 7B68     	 ldr r3,[r7,#4]
 118 000c 5B68     	 ldr r3,[r3,#4]
 119 000e 1B0C     	 lsrs r3,r3,#16
 120 0010 1B04     	 lsls r3,r3,#16
 121 0012 002B     	 cmp r3,#0
 122 0014 01D0     	 beq .L8
 162:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 163:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 123              	 .loc 1 163 0
 124 0016 0123     	 movs r3,#1
 125 0018 13E0     	 b .L9
 126              	.L8:
 164:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 165:../Libraries/XMCLib/src/xmc_ledts.c **** 
 166:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 127              	 .loc 1 166 0
 128 001a 7B68     	 ldr r3,[r7,#4]
 129 001c 9B68     	 ldr r3,[r3,#8]
 130 001e 23F07042 	 bic r2,r3,#-268435456
 131 0022 7B68     	 ldr r3,[r7,#4]
 132 0024 9A60     	 str r2,[r3,#8]
 167:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 133              	 .loc 1 167 0
 134 0026 7B68     	 ldr r3,[r7,#4]
 135 0028 9A68     	 ldr r2,[r3,#8]
 136 002a 3B68     	 ldr r3,[r7]
 137 002c 1B68     	 ldr r3,[r3]
 138 002e 1A43     	 orrs r2,r2,r3
 139 0030 7B68     	 ldr r3,[r7,#4]
 140 0032 9A60     	 str r2,[r3,#8]
 168:../Libraries/XMCLib/src/xmc_ledts.c **** 
 169:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 170:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 141              	 .loc 1 170 0
 142 0034 7B68     	 ldr r3,[r7,#4]
 143 0036 5B68     	 ldr r3,[r3,#4]
 144 0038 43F00202 	 orr r2,r3,#2
 145 003c 7B68     	 ldr r3,[r7,#4]
 146 003e 5A60     	 str r2,[r3,#4]
 171:../Libraries/XMCLib/src/xmc_ledts.c **** 
 172:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 147              	 .loc 1 172 0
 148 0040 0023     	 movs r3,#0
 149              	.L9:
 173:../Libraries/XMCLib/src/xmc_ledts.c **** }
 150              	 .loc 1 173 0
 151 0042 1846     	 mov r0,r3
 152 0044 0C37     	 adds r7,r7,#12
 153              	.LCFI8:
 154              	 .cfi_def_cfa_offset 4
 155 0046 BD46     	 mov sp,r7
 156              	.LCFI9:
 157              	 .cfi_def_cfa_register 13
 158              	 
 159 0048 5DF8047B 	 ldr r7,[sp],#4
 160              	.LCFI10:
 161              	 .cfi_restore 7
 162              	 .cfi_def_cfa_offset 0
 163 004c 7047     	 bx lr
 164              	 .cfi_endproc
 165              	.LFE174:
 167 004e 00BF     	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 168              	 .align 2
 169              	 .global XMC_LEDTS_InitTSBasic
 170              	 .thumb
 171              	 .thumb_func
 173              	XMC_LEDTS_InitTSBasic:
 174              	.LFB175:
 174:../Libraries/XMCLib/src/xmc_ledts.c **** 
 175:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 176:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 177:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 178:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 179:../Libraries/XMCLib/src/xmc_ledts.c **** {
 175              	 .loc 1 179 0
 176              	 .cfi_startproc
 177              	 
 178              	 
 179              	 
 180 0000 80B4     	 push {r7}
 181              	.LCFI11:
 182              	 .cfi_def_cfa_offset 4
 183              	 .cfi_offset 7,-4
 184 0002 85B0     	 sub sp,sp,#20
 185              	.LCFI12:
 186              	 .cfi_def_cfa_offset 24
 187 0004 00AF     	 add r7,sp,#0
 188              	.LCFI13:
 189              	 .cfi_def_cfa_register 7
 190 0006 7860     	 str r0,[r7,#4]
 191 0008 3960     	 str r1,[r7]
 180:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 181:../Libraries/XMCLib/src/xmc_ledts.c **** 
 182:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 183:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 184:../Libraries/XMCLib/src/xmc_ledts.c **** 
 185:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 192              	 .loc 1 185 0
 193 000a 7B68     	 ldr r3,[r7,#4]
 194 000c 5B68     	 ldr r3,[r3,#4]
 195 000e 1B0C     	 lsrs r3,r3,#16
 196 0010 1B04     	 lsls r3,r3,#16
 197 0012 002B     	 cmp r3,#0
 198 0014 01D0     	 beq .L11
 186:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 187:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 199              	 .loc 1 187 0
 200 0016 0123     	 movs r3,#1
 201 0018 15E0     	 b .L12
 202              	.L11:
 188:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 189:../Libraries/XMCLib/src/xmc_ledts.c **** 
 190:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 203              	 .loc 1 190 0
 204 001a 0E4B     	 ldr r3,.L13
 205 001c FB60     	 str r3,[r7,#12]
 191:../Libraries/XMCLib/src/xmc_ledts.c ****           LEDTS_FNCTL_NR_TSIN_Msk);
 192:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 206              	 .loc 1 192 0
 207 001e 7B68     	 ldr r3,[r7,#4]
 208 0020 9A68     	 ldr r2,[r3,#8]
 209 0022 FB68     	 ldr r3,[r7,#12]
 210 0024 1A40     	 ands r2,r2,r3
 211 0026 7B68     	 ldr r3,[r7,#4]
 212 0028 9A60     	 str r2,[r3,#8]
 193:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 213              	 .loc 1 193 0
 214 002a 7B68     	 ldr r3,[r7,#4]
 215 002c 9A68     	 ldr r2,[r3,#8]
 216 002e 3B68     	 ldr r3,[r7]
 217 0030 1B68     	 ldr r3,[r3]
 218 0032 1A43     	 orrs r2,r2,r3
 219 0034 7B68     	 ldr r3,[r7,#4]
 220 0036 9A60     	 str r2,[r3,#8]
 194:../Libraries/XMCLib/src/xmc_ledts.c **** 
 195:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 196:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 221              	 .loc 1 196 0
 222 0038 7B68     	 ldr r3,[r7,#4]
 223 003a 5B68     	 ldr r3,[r3,#4]
 224 003c 43F00102 	 orr r2,r3,#1
 225 0040 7B68     	 ldr r3,[r7,#4]
 226 0042 5A60     	 str r2,[r3,#4]
 197:../Libraries/XMCLib/src/xmc_ledts.c **** 
 198:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 227              	 .loc 1 198 0
 228 0044 0023     	 movs r3,#0
 229              	.L12:
 199:../Libraries/XMCLib/src/xmc_ledts.c **** }
 230              	 .loc 1 199 0
 231 0046 1846     	 mov r0,r3
 232 0048 1437     	 adds r7,r7,#20
 233              	.LCFI14:
 234              	 .cfi_def_cfa_offset 4
 235 004a BD46     	 mov sp,r7
 236              	.LCFI15:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 004c 5DF8047B 	 ldr r7,[sp],#4
 240              	.LCFI16:
 241              	 .cfi_restore 7
 242              	 .cfi_def_cfa_offset 0
 243 0050 7047     	 bx lr
 244              	.L14:
 245 0052 00BF     	 .align 2
 246              	.L13:
 247 0054 FFFF60F0 	 .word -262078465
 248              	 .cfi_endproc
 249              	.LFE175:
 251              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 252              	 .align 2
 253              	 .global XMC_LEDTS_InitTSAdvanced
 254              	 .thumb
 255              	 .thumb_func
 257              	XMC_LEDTS_InitTSAdvanced:
 258              	.LFB176:
 200:../Libraries/XMCLib/src/xmc_ledts.c **** 
 201:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 202:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 203:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 204:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 205:../Libraries/XMCLib/src/xmc_ledts.c **** {
 259              	 .loc 1 205 0
 260              	 .cfi_startproc
 261              	 
 262              	 
 263              	 
 264 0000 80B4     	 push {r7}
 265              	.LCFI17:
 266              	 .cfi_def_cfa_offset 4
 267              	 .cfi_offset 7,-4
 268 0002 85B0     	 sub sp,sp,#20
 269              	.LCFI18:
 270              	 .cfi_def_cfa_offset 24
 271 0004 00AF     	 add r7,sp,#0
 272              	.LCFI19:
 273              	 .cfi_def_cfa_register 7
 274 0006 7860     	 str r0,[r7,#4]
 275 0008 3960     	 str r1,[r7]
 206:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 207:../Libraries/XMCLib/src/xmc_ledts.c **** 
 208:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 209:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 210:../Libraries/XMCLib/src/xmc_ledts.c **** 
 211:../Libraries/XMCLib/src/xmc_ledts.c ****   if ((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 276              	 .loc 1 211 0
 277 000a 7B68     	 ldr r3,[r7,#4]
 278 000c 5B68     	 ldr r3,[r3,#4]
 279 000e 1B0C     	 lsrs r3,r3,#16
 280 0010 1B04     	 lsls r3,r3,#16
 281 0012 002B     	 cmp r3,#0
 282 0014 01D0     	 beq .L16
 212:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 213:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 283              	 .loc 1 213 0
 284 0016 0123     	 movs r3,#1
 285 0018 1FE0     	 b .L17
 286              	.L16:
 214:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 215:../Libraries/XMCLib/src/xmc_ledts.c **** 
 216:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 287              	 .loc 1 216 0
 288 001a 6FF4F053 	 mvn r3,#7680
 289 001e FB60     	 str r3,[r7,#12]
 217:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 290              	 .loc 1 217 0
 291 0020 7B68     	 ldr r3,[r7,#4]
 292 0022 5A68     	 ldr r2,[r3,#4]
 293 0024 FB68     	 ldr r3,[r7,#12]
 294 0026 1A40     	 ands r2,r2,r3
 295 0028 7B68     	 ldr r3,[r7,#4]
 296 002a 5A60     	 str r2,[r3,#4]
 218:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 297              	 .loc 1 218 0
 298 002c 7B68     	 ldr r3,[r7,#4]
 299 002e 5A68     	 ldr r2,[r3,#4]
 300 0030 3B68     	 ldr r3,[r7]
 301 0032 1B68     	 ldr r3,[r3]
 302 0034 1A43     	 orrs r2,r2,r3
 303 0036 7B68     	 ldr r3,[r7,#4]
 304 0038 5A60     	 str r2,[r3,#4]
 219:../Libraries/XMCLib/src/xmc_ledts.c **** 
 220:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 305              	 .loc 1 220 0
 306 003a 0B4B     	 ldr r3,.L18
 307 003c FB60     	 str r3,[r7,#12]
 221:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 308              	 .loc 1 221 0
 309 003e 7B68     	 ldr r3,[r7,#4]
 310 0040 9A68     	 ldr r2,[r3,#8]
 311 0042 FB68     	 ldr r3,[r7,#12]
 312 0044 1A40     	 ands r2,r2,r3
 313 0046 7B68     	 ldr r3,[r7,#4]
 314 0048 9A60     	 str r2,[r3,#8]
 222:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 315              	 .loc 1 222 0
 316 004a 7B68     	 ldr r3,[r7,#4]
 317 004c 9A68     	 ldr r2,[r3,#8]
 318 004e 3B68     	 ldr r3,[r7]
 319 0050 5B68     	 ldr r3,[r3,#4]
 320 0052 1A43     	 orrs r2,r2,r3
 321 0054 7B68     	 ldr r3,[r7,#4]
 322 0056 9A60     	 str r2,[r3,#8]
 223:../Libraries/XMCLib/src/xmc_ledts.c **** 
 224:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 323              	 .loc 1 224 0
 324 0058 0023     	 movs r3,#0
 325              	.L17:
 225:../Libraries/XMCLib/src/xmc_ledts.c **** }
 326              	 .loc 1 225 0
 327 005a 1846     	 mov r0,r3
 328 005c 1437     	 adds r7,r7,#20
 329              	.LCFI20:
 330              	 .cfi_def_cfa_offset 4
 331 005e BD46     	 mov sp,r7
 332              	.LCFI21:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 0060 5DF8047B 	 ldr r7,[sp],#4
 336              	.LCFI22:
 337              	 .cfi_restore 7
 338              	 .cfi_def_cfa_offset 0
 339 0064 7047     	 bx lr
 340              	.L19:
 341 0066 00BF     	 .align 2
 342              	.L18:
 343 0068 E0FF9FFF 	 .word -6291488
 344              	 .cfi_endproc
 345              	.LFE176:
 347              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 348              	 .align 2
 349              	 .global XMC_LEDTS_StartCounter
 350              	 .thumb
 351              	 .thumb_func
 353              	XMC_LEDTS_StartCounter:
 354              	.LFB177:
 226:../Libraries/XMCLib/src/xmc_ledts.c **** 
 227:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 228:../Libraries/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 229:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 230:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 231:../Libraries/XMCLib/src/xmc_ledts.c **** {
 355              	 .loc 1 231 0
 356              	 .cfi_startproc
 357              	 
 358              	 
 359              	 
 360 0000 80B4     	 push {r7}
 361              	.LCFI23:
 362              	 .cfi_def_cfa_offset 4
 363              	 .cfi_offset 7,-4
 364 0002 83B0     	 sub sp,sp,#12
 365              	.LCFI24:
 366              	 .cfi_def_cfa_offset 16
 367 0004 00AF     	 add r7,sp,#0
 368              	.LCFI25:
 369              	 .cfi_def_cfa_register 7
 370 0006 7860     	 str r0,[r7,#4]
 371 0008 0B46     	 mov r3,r1
 372 000a 7B80     	 strh r3,[r7,#2]
 232:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 233:../Libraries/XMCLib/src/xmc_ledts.c **** 
 234:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler << 16U;
 373              	 .loc 1 234 0
 374 000c 7B68     	 ldr r3,[r7,#4]
 375 000e 5B68     	 ldr r3,[r3,#4]
 376 0010 7A88     	 ldrh r2,[r7,#2]
 377 0012 1204     	 lsls r2,r2,#16
 378 0014 1A43     	 orrs r2,r2,r3
 379 0016 7B68     	 ldr r3,[r7,#4]
 380 0018 5A60     	 str r2,[r3,#4]
 235:../Libraries/XMCLib/src/xmc_ledts.c **** }
 381              	 .loc 1 235 0
 382 001a 0C37     	 adds r7,r7,#12
 383              	.LCFI26:
 384              	 .cfi_def_cfa_offset 4
 385 001c BD46     	 mov sp,r7
 386              	.LCFI27:
 387              	 .cfi_def_cfa_register 13
 388              	 
 389 001e 5DF8047B 	 ldr r7,[sp],#4
 390              	.LCFI28:
 391              	 .cfi_restore 7
 392              	 .cfi_def_cfa_offset 0
 393 0022 7047     	 bx lr
 394              	 .cfi_endproc
 395              	.LFE177:
 397              	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 398              	 .align 2
 399              	 .global XMC_LEDTS_StopCounter
 400              	 .thumb
 401              	 .thumb_func
 403              	XMC_LEDTS_StopCounter:
 404              	.LFB178:
 236:../Libraries/XMCLib/src/xmc_ledts.c **** 
 237:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 238:../Libraries/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 239:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 240:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 241:../Libraries/XMCLib/src/xmc_ledts.c **** {
 405              	 .loc 1 241 0
 406              	 .cfi_startproc
 407              	 
 408              	 
 409              	 
 410 0000 80B4     	 push {r7}
 411              	.LCFI29:
 412              	 .cfi_def_cfa_offset 4
 413              	 .cfi_offset 7,-4
 414 0002 83B0     	 sub sp,sp,#12
 415              	.LCFI30:
 416              	 .cfi_def_cfa_offset 16
 417 0004 00AF     	 add r7,sp,#0
 418              	.LCFI31:
 419              	 .cfi_def_cfa_register 7
 420 0006 7860     	 str r0,[r7,#4]
 242:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 243:../Libraries/XMCLib/src/xmc_ledts.c **** 
 244:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 421              	 .loc 1 244 0
 422 0008 7B68     	 ldr r3,[r7,#4]
 423 000a 5B68     	 ldr r3,[r3,#4]
 424 000c 9AB2     	 uxth r2,r3
 425 000e 7B68     	 ldr r3,[r7,#4]
 426 0010 5A60     	 str r2,[r3,#4]
 245:../Libraries/XMCLib/src/xmc_ledts.c **** }
 427              	 .loc 1 245 0
 428 0012 0C37     	 adds r7,r7,#12
 429              	.LCFI32:
 430              	 .cfi_def_cfa_offset 4
 431 0014 BD46     	 mov sp,r7
 432              	.LCFI33:
 433              	 .cfi_def_cfa_register 13
 434              	 
 435 0016 5DF8047B 	 ldr r7,[sp],#4
 436              	.LCFI34:
 437              	 .cfi_restore 7
 438              	 .cfi_def_cfa_offset 0
 439 001a 7047     	 bx lr
 440              	 .cfi_endproc
 441              	.LFE178:
 443              	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 444              	 .align 2
 445              	 .global XMC_LEDTS_ReadInterruptFlag
 446              	 .thumb
 447              	 .thumb_func
 449              	XMC_LEDTS_ReadInterruptFlag:
 450              	.LFB179:
 246:../Libraries/XMCLib/src/xmc_ledts.c **** 
 247:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 248:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 249:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 250:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 251:../Libraries/XMCLib/src/xmc_ledts.c **** {
 451              	 .loc 1 251 0
 452              	 .cfi_startproc
 453              	 
 454              	 
 455              	 
 456 0000 80B4     	 push {r7}
 457              	.LCFI35:
 458              	 .cfi_def_cfa_offset 4
 459              	 .cfi_offset 7,-4
 460 0002 83B0     	 sub sp,sp,#12
 461              	.LCFI36:
 462              	 .cfi_def_cfa_offset 16
 463 0004 00AF     	 add r7,sp,#0
 464              	.LCFI37:
 465              	 .cfi_def_cfa_register 7
 466 0006 7860     	 str r0,[r7,#4]
 252:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 253:../Libraries/XMCLib/src/xmc_ledts.c **** 
 254:../Libraries/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 467              	 .loc 1 254 0
 468 0008 7B68     	 ldr r3,[r7,#4]
 469 000a DB68     	 ldr r3,[r3,#12]
 470 000c 03F00F03 	 and r3,r3,#15
 255:../Libraries/XMCLib/src/xmc_ledts.c **** }
 471              	 .loc 1 255 0
 472 0010 1846     	 mov r0,r3
 473 0012 0C37     	 adds r7,r7,#12
 474              	.LCFI38:
 475              	 .cfi_def_cfa_offset 4
 476 0014 BD46     	 mov sp,r7
 477              	.LCFI39:
 478              	 .cfi_def_cfa_register 13
 479              	 
 480 0016 5DF8047B 	 ldr r7,[sp],#4
 481              	.LCFI40:
 482              	 .cfi_restore 7
 483              	 .cfi_def_cfa_offset 0
 484 001a 7047     	 bx lr
 485              	 .cfi_endproc
 486              	.LFE179:
 488              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 489              	 .align 2
 490              	 .global XMC_LEDTS_SetActivePADNo
 491              	 .thumb
 492              	 .thumb_func
 494              	XMC_LEDTS_SetActivePADNo:
 495              	.LFB180:
 256:../Libraries/XMCLib/src/xmc_ledts.c **** 
 257:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 258:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 259:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 260:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 261:../Libraries/XMCLib/src/xmc_ledts.c **** {
 496              	 .loc 1 261 0
 497              	 .cfi_startproc
 498              	 
 499              	 
 500              	 
 501 0000 80B4     	 push {r7}
 502              	.LCFI41:
 503              	 .cfi_def_cfa_offset 4
 504              	 .cfi_offset 7,-4
 505 0002 85B0     	 sub sp,sp,#20
 506              	.LCFI42:
 507              	 .cfi_def_cfa_offset 24
 508 0004 00AF     	 add r7,sp,#0
 509              	.LCFI43:
 510              	 .cfi_def_cfa_register 7
 511 0006 7860     	 str r0,[r7,#4]
 512 0008 0B46     	 mov r3,r1
 513 000a FB70     	 strb r3,[r7,#3]
 262:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 263:../Libraries/XMCLib/src/xmc_ledts.c **** 
 264:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 265:../Libraries/XMCLib/src/xmc_ledts.c **** 
 266:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 514              	 .loc 1 266 0
 515 000c 7B68     	 ldr r3,[r7,#4]
 516 000e 9B68     	 ldr r3,[r3,#8]
 517 0010 FB60     	 str r3,[r7,#12]
 267:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 518              	 .loc 1 267 0
 519 0012 FB68     	 ldr r3,[r7,#12]
 520 0014 23F00703 	 bic r3,r3,#7
 521 0018 FB60     	 str r3,[r7,#12]
 268:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 522              	 .loc 1 268 0
 523 001a FB78     	 ldrb r3,[r7,#3]
 524 001c FA68     	 ldr r2,[r7,#12]
 525 001e 1343     	 orrs r3,r3,r2
 526 0020 FB60     	 str r3,[r7,#12]
 269:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 527              	 .loc 1 269 0
 528 0022 7B68     	 ldr r3,[r7,#4]
 529 0024 FA68     	 ldr r2,[r7,#12]
 530 0026 9A60     	 str r2,[r3,#8]
 270:../Libraries/XMCLib/src/xmc_ledts.c **** }
 531              	 .loc 1 270 0
 532 0028 1437     	 adds r7,r7,#20
 533              	.LCFI44:
 534              	 .cfi_def_cfa_offset 4
 535 002a BD46     	 mov sp,r7
 536              	.LCFI45:
 537              	 .cfi_def_cfa_register 13
 538              	 
 539 002c 5DF8047B 	 ldr r7,[sp],#4
 540              	.LCFI46:
 541              	 .cfi_restore 7
 542              	 .cfi_def_cfa_offset 0
 543 0030 7047     	 bx lr
 544              	 .cfi_endproc
 545              	.LFE180:
 547 0032 00BF     	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 548              	 .align 2
 549              	 .global XMC_LEDTS_ClearInterruptFlag
 550              	 .thumb
 551              	 .thumb_func
 553              	XMC_LEDTS_ClearInterruptFlag:
 554              	.LFB181:
 271:../Libraries/XMCLib/src/xmc_ledts.c **** 
 272:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 273:../Libraries/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 274:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 275:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 276:../Libraries/XMCLib/src/xmc_ledts.c **** {
 555              	 .loc 1 276 0
 556              	 .cfi_startproc
 557              	 
 558              	 
 559              	 
 560 0000 80B4     	 push {r7}
 561              	.LCFI47:
 562              	 .cfi_def_cfa_offset 4
 563              	 .cfi_offset 7,-4
 564 0002 83B0     	 sub sp,sp,#12
 565              	.LCFI48:
 566              	 .cfi_def_cfa_offset 16
 567 0004 00AF     	 add r7,sp,#0
 568              	.LCFI49:
 569              	 .cfi_def_cfa_register 7
 570 0006 7860     	 str r0,[r7,#4]
 571 0008 3960     	 str r1,[r7]
 277:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 278:../Libraries/XMCLib/src/xmc_ledts.c **** 
 279:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 572              	 .loc 1 279 0
 573 000a 3B68     	 ldr r3,[r7]
 574 000c 1A04     	 lsls r2,r3,#16
 575 000e 7B68     	 ldr r3,[r7,#4]
 576 0010 DA60     	 str r2,[r3,#12]
 280:../Libraries/XMCLib/src/xmc_ledts.c **** }
 577              	 .loc 1 280 0
 578 0012 0C37     	 adds r7,r7,#12
 579              	.LCFI50:
 580              	 .cfi_def_cfa_offset 4
 581 0014 BD46     	 mov sp,r7
 582              	.LCFI51:
 583              	 .cfi_def_cfa_register 13
 584              	 
 585 0016 5DF8047B 	 ldr r7,[sp],#4
 586              	.LCFI52:
 587              	 .cfi_restore 7
 588              	 .cfi_def_cfa_offset 0
 589 001a 7047     	 bx lr
 590              	 .cfi_endproc
 591              	.LFE181:
 593              	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 594              	 .align 2
 595              	 .global XMC_LEDTS_SetLEDLinePattern
 596              	 .thumb
 597              	 .thumb_func
 599              	XMC_LEDTS_SetLEDLinePattern:
 600              	.LFB182:
 281:../Libraries/XMCLib/src/xmc_ledts.c **** 
 282:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 283:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 284:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 285:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 286:../Libraries/XMCLib/src/xmc_ledts.c **** {
 601              	 .loc 1 286 0
 602              	 .cfi_startproc
 603              	 
 604              	 
 605              	 
 606 0000 80B4     	 push {r7}
 607              	.LCFI53:
 608              	 .cfi_def_cfa_offset 4
 609              	 .cfi_offset 7,-4
 610 0002 85B0     	 sub sp,sp,#20
 611              	.LCFI54:
 612              	 .cfi_def_cfa_offset 24
 613 0004 00AF     	 add r7,sp,#0
 614              	.LCFI55:
 615              	 .cfi_def_cfa_register 7
 616 0006 7860     	 str r0,[r7,#4]
 617 0008 0B46     	 mov r3,r1
 618 000a FB70     	 strb r3,[r7,#3]
 619 000c 1346     	 mov r3,r2
 620 000e BB70     	 strb r3,[r7,#2]
 287:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 288:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 621              	 .loc 1 288 0
 622 0010 FB78     	 ldrb r3,[r7,#3]
 623 0012 9B08     	 lsrs r3,r3,#2
 624 0014 FB73     	 strb r3,[r7,#15]
 289:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 625              	 .loc 1 289 0
 626 0016 FB78     	 ldrb r3,[r7,#3]
 627 0018 03F00303 	 and r3,r3,#3
 628 001c DBB2     	 uxtb r3,r3
 629 001e DB00     	 lsls r3,r3,#3
 630 0020 BB73     	 strb r3,[r7,#14]
 290:../Libraries/XMCLib/src/xmc_ledts.c **** 
 291:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 292:../Libraries/XMCLib/src/xmc_ledts.c **** 
 293:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 631              	 .loc 1 293 0
 632 0022 FB7B     	 ldrb r3,[r7,#15]
 633 0024 7A68     	 ldr r2,[r7,#4]
 634 0026 0433     	 adds r3,r3,#4
 635 0028 9B00     	 lsls r3,r3,#2
 636 002a 1344     	 add r3,r3,r2
 637 002c 5B68     	 ldr r3,[r3,#4]
 638 002e BB60     	 str r3,[r7,#8]
 294:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 639              	 .loc 1 294 0
 640 0030 BB7B     	 ldrb r3,[r7,#14]
 641 0032 FF22     	 movs r2,#255
 642 0034 02FA03F3 	 lsl r3,r2,r3
 643 0038 DB43     	 mvns r3,r3
 644 003a 1A46     	 mov r2,r3
 645 003c BB68     	 ldr r3,[r7,#8]
 646 003e 1340     	 ands r3,r3,r2
 647 0040 BB60     	 str r3,[r7,#8]
 295:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 648              	 .loc 1 295 0
 649 0042 BA78     	 ldrb r2,[r7,#2]
 650 0044 BB7B     	 ldrb r3,[r7,#14]
 651 0046 02FA03F3 	 lsl r3,r2,r3
 652 004a 1A46     	 mov r2,r3
 653 004c BB68     	 ldr r3,[r7,#8]
 654 004e 1343     	 orrs r3,r3,r2
 655 0050 BB60     	 str r3,[r7,#8]
 296:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 656              	 .loc 1 296 0
 657 0052 FB7B     	 ldrb r3,[r7,#15]
 658 0054 7A68     	 ldr r2,[r7,#4]
 659 0056 0433     	 adds r3,r3,#4
 660 0058 9B00     	 lsls r3,r3,#2
 661 005a 1344     	 add r3,r3,r2
 662 005c BA68     	 ldr r2,[r7,#8]
 663 005e 5A60     	 str r2,[r3,#4]
 297:../Libraries/XMCLib/src/xmc_ledts.c **** 
 298:../Libraries/XMCLib/src/xmc_ledts.c **** }
 664              	 .loc 1 298 0
 665 0060 1437     	 adds r7,r7,#20
 666              	.LCFI56:
 667              	 .cfi_def_cfa_offset 4
 668 0062 BD46     	 mov sp,r7
 669              	.LCFI57:
 670              	 .cfi_def_cfa_register 13
 671              	 
 672 0064 5DF8047B 	 ldr r7,[sp],#4
 673              	.LCFI58:
 674              	 .cfi_restore 7
 675              	 .cfi_def_cfa_offset 0
 676 0068 7047     	 bx lr
 677              	 .cfi_endproc
 678              	.LFE182:
 680 006a 00BF     	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 681              	 .align 2
 682              	 .global XMC_LEDTS_SetColumnBrightness
 683              	 .thumb
 684              	 .thumb_func
 686              	XMC_LEDTS_SetColumnBrightness:
 687              	.LFB183:
 299:../Libraries/XMCLib/src/xmc_ledts.c **** 
 300:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 301:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 302:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 303:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 304:../Libraries/XMCLib/src/xmc_ledts.c **** {
 688              	 .loc 1 304 0
 689              	 .cfi_startproc
 690              	 
 691              	 
 692              	 
 693 0000 80B4     	 push {r7}
 694              	.LCFI59:
 695              	 .cfi_def_cfa_offset 4
 696              	 .cfi_offset 7,-4
 697 0002 85B0     	 sub sp,sp,#20
 698              	.LCFI60:
 699              	 .cfi_def_cfa_offset 24
 700 0004 00AF     	 add r7,sp,#0
 701              	.LCFI61:
 702              	 .cfi_def_cfa_register 7
 703 0006 7860     	 str r0,[r7,#4]
 704 0008 0B46     	 mov r3,r1
 705 000a FB70     	 strb r3,[r7,#3]
 706 000c 1346     	 mov r3,r2
 707 000e BB70     	 strb r3,[r7,#2]
 305:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 306:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 708              	 .loc 1 306 0
 709 0010 FB78     	 ldrb r3,[r7,#3]
 710 0012 9B08     	 lsrs r3,r3,#2
 711 0014 FB73     	 strb r3,[r7,#15]
 307:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 712              	 .loc 1 307 0
 713 0016 FB78     	 ldrb r3,[r7,#3]
 714 0018 03F00303 	 and r3,r3,#3
 715 001c DBB2     	 uxtb r3,r3
 716 001e DB00     	 lsls r3,r3,#3
 717 0020 BB73     	 strb r3,[r7,#14]
 308:../Libraries/XMCLib/src/xmc_ledts.c **** 
 309:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 310:../Libraries/XMCLib/src/xmc_ledts.c **** 
 311:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[reg_index];
 718              	 .loc 1 311 0
 719 0022 FB7B     	 ldrb r3,[r7,#15]
 720 0024 7A68     	 ldr r2,[r7,#4]
 721 0026 0633     	 adds r3,r3,#6
 722 0028 9B00     	 lsls r3,r3,#2
 723 002a 1344     	 add r3,r3,r2
 724 002c 5B68     	 ldr r3,[r3,#4]
 725 002e BB60     	 str r3,[r7,#8]
 312:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 726              	 .loc 1 312 0
 727 0030 BB7B     	 ldrb r3,[r7,#14]
 728 0032 FF22     	 movs r2,#255
 729 0034 02FA03F3 	 lsl r3,r2,r3
 730 0038 DB43     	 mvns r3,r3
 731 003a 1A46     	 mov r2,r3
 732 003c BB68     	 ldr r3,[r7,#8]
 733 003e 1340     	 ands r3,r3,r2
 734 0040 BB60     	 str r3,[r7,#8]
 313:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= brightness << bit_shift_count;
 735              	 .loc 1 313 0
 736 0042 BA78     	 ldrb r2,[r7,#2]
 737 0044 BB7B     	 ldrb r3,[r7,#14]
 738 0046 02FA03F3 	 lsl r3,r2,r3
 739 004a 1A46     	 mov r2,r3
 740 004c BB68     	 ldr r3,[r7,#8]
 741 004e 1343     	 orrs r3,r3,r2
 742 0050 BB60     	 str r3,[r7,#8]
 314:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[reg_index] = reg;
 743              	 .loc 1 314 0
 744 0052 FB7B     	 ldrb r3,[r7,#15]
 745 0054 7A68     	 ldr r2,[r7,#4]
 746 0056 0633     	 adds r3,r3,#6
 747 0058 9B00     	 lsls r3,r3,#2
 748 005a 1344     	 add r3,r3,r2
 749 005c BA68     	 ldr r2,[r7,#8]
 750 005e 5A60     	 str r2,[r3,#4]
 315:../Libraries/XMCLib/src/xmc_ledts.c **** }
 751              	 .loc 1 315 0
 752 0060 1437     	 adds r7,r7,#20
 753              	.LCFI62:
 754              	 .cfi_def_cfa_offset 4
 755 0062 BD46     	 mov sp,r7
 756              	.LCFI63:
 757              	 .cfi_def_cfa_register 13
 758              	 
 759 0064 5DF8047B 	 ldr r7,[sp],#4
 760              	.LCFI64:
 761              	 .cfi_restore 7
 762              	 .cfi_def_cfa_offset 0
 763 0068 7047     	 bx lr
 764              	 .cfi_endproc
 765              	.LFE183:
 767 006a 00BF     	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 768              	 .align 2
 769              	 .global XMC_LEDTS_SetCommonOscillationWindow
 770              	 .thumb
 771              	 .thumb_func
 773              	XMC_LEDTS_SetCommonOscillationWindow:
 774              	.LFB184:
 316:../Libraries/XMCLib/src/xmc_ledts.c **** 
 317:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 318:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 319:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 320:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 321:../Libraries/XMCLib/src/xmc_ledts.c **** {
 775              	 .loc 1 321 0
 776              	 .cfi_startproc
 777              	 
 778              	 
 779              	 
 780 0000 80B4     	 push {r7}
 781              	.LCFI65:
 782              	 .cfi_def_cfa_offset 4
 783              	 .cfi_offset 7,-4
 784 0002 85B0     	 sub sp,sp,#20
 785              	.LCFI66:
 786              	 .cfi_def_cfa_offset 24
 787 0004 00AF     	 add r7,sp,#0
 788              	.LCFI67:
 789              	 .cfi_def_cfa_register 7
 790 0006 7860     	 str r0,[r7,#4]
 791 0008 0B46     	 mov r3,r1
 792 000a FB70     	 strb r3,[r7,#3]
 322:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 323:../Libraries/XMCLib/src/xmc_ledts.c **** 
 324:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 325:../Libraries/XMCLib/src/xmc_ledts.c **** 
 326:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 793              	 .loc 1 326 0
 794 000c 7B68     	 ldr r3,[r7,#4]
 795 000e 1B6A     	 ldr r3,[r3,#32]
 796 0010 FB60     	 str r3,[r7,#12]
 327:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 797              	 .loc 1 327 0
 798 0012 FB68     	 ldr r3,[r7,#12]
 799 0014 23F07F43 	 bic r3,r3,#-16777216
 800 0018 FB60     	 str r3,[r7,#12]
 328:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 801              	 .loc 1 328 0
 802 001a FB78     	 ldrb r3,[r7,#3]
 803 001c 1B06     	 lsls r3,r3,#24
 804 001e 1A46     	 mov r2,r3
 805 0020 FB68     	 ldr r3,[r7,#12]
 806 0022 1343     	 orrs r3,r3,r2
 807 0024 FB60     	 str r3,[r7,#12]
 329:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 808              	 .loc 1 329 0
 809 0026 7B68     	 ldr r3,[r7,#4]
 810 0028 FA68     	 ldr r2,[r7,#12]
 811 002a 1A62     	 str r2,[r3,#32]
 330:../Libraries/XMCLib/src/xmc_ledts.c **** }
 812              	 .loc 1 330 0
 813 002c 1437     	 adds r7,r7,#20
 814              	.LCFI68:
 815              	 .cfi_def_cfa_offset 4
 816 002e BD46     	 mov sp,r7
 817              	.LCFI69:
 818              	 .cfi_def_cfa_register 13
 819              	 
 820 0030 5DF8047B 	 ldr r7,[sp],#4
 821              	.LCFI70:
 822              	 .cfi_restore 7
 823              	 .cfi_def_cfa_offset 0
 824 0034 7047     	 bx lr
 825              	 .cfi_endproc
 826              	.LFE184:
 828 0036 00BF     	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 829              	 .align 2
 830              	 .global XMC_LEDTS_ReadFNCOL
 831              	 .thumb
 832              	 .thumb_func
 834              	XMC_LEDTS_ReadFNCOL:
 835              	.LFB185:
 331:../Libraries/XMCLib/src/xmc_ledts.c **** 
 332:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 333:../Libraries/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 334:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 335:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 336:../Libraries/XMCLib/src/xmc_ledts.c **** {
 836              	 .loc 1 336 0
 837              	 .cfi_startproc
 838              	 
 839              	 
 840              	 
 841 0000 80B4     	 push {r7}
 842              	.LCFI71:
 843              	 .cfi_def_cfa_offset 4
 844              	 .cfi_offset 7,-4
 845 0002 85B0     	 sub sp,sp,#20
 846              	.LCFI72:
 847              	 .cfi_def_cfa_offset 24
 848 0004 00AF     	 add r7,sp,#0
 849              	.LCFI73:
 850              	 .cfi_def_cfa_register 7
 851 0006 7860     	 str r0,[r7,#4]
 337:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 338:../Libraries/XMCLib/src/xmc_ledts.c **** 
 339:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 340:../Libraries/XMCLib/src/xmc_ledts.c **** 
 341:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 852              	 .loc 1 341 0
 853 0008 7B68     	 ldr r3,[r7,#4]
 854 000a 9B68     	 ldr r3,[r3,#8]
 855 000c 03F0E003 	 and r3,r3,#224
 856 0010 FB60     	 str r3,[r7,#12]
 342:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 857              	 .loc 1 342 0
 858 0012 FB68     	 ldr r3,[r7,#12]
 859 0014 5B09     	 lsrs r3,r3,#5
 860 0016 FB60     	 str r3,[r7,#12]
 343:../Libraries/XMCLib/src/xmc_ledts.c **** 
 344:../Libraries/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 861              	 .loc 1 344 0
 862 0018 FB68     	 ldr r3,[r7,#12]
 345:../Libraries/XMCLib/src/xmc_ledts.c **** }
 863              	 .loc 1 345 0
 864 001a 1846     	 mov r0,r3
 865 001c 1437     	 adds r7,r7,#20
 866              	.LCFI74:
 867              	 .cfi_def_cfa_offset 4
 868 001e BD46     	 mov sp,r7
 869              	.LCFI75:
 870              	 .cfi_def_cfa_register 13
 871              	 
 872 0020 5DF8047B 	 ldr r7,[sp],#4
 873              	.LCFI76:
 874              	 .cfi_restore 7
 875              	 .cfi_def_cfa_offset 0
 876 0024 7047     	 bx lr
 877              	 .cfi_endproc
 878              	.LFE185:
 880 0026 00BF     	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 881              	 .align 2
 882              	 .global XMC_LEDTS_SetNumOfLEDColumns
 883              	 .thumb
 884              	 .thumb_func
 886              	XMC_LEDTS_SetNumOfLEDColumns:
 887              	.LFB186:
 346:../Libraries/XMCLib/src/xmc_ledts.c **** 
 347:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 349:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 350:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 351:../Libraries/XMCLib/src/xmc_ledts.c **** {
 888              	 .loc 1 351 0
 889              	 .cfi_startproc
 890              	 
 891              	 
 892              	 
 893 0000 80B4     	 push {r7}
 894              	.LCFI77:
 895              	 .cfi_def_cfa_offset 4
 896              	 .cfi_offset 7,-4
 897 0002 83B0     	 sub sp,sp,#12
 898              	.LCFI78:
 899              	 .cfi_def_cfa_offset 16
 900 0004 00AF     	 add r7,sp,#0
 901              	.LCFI79:
 902              	 .cfi_def_cfa_register 7
 903 0006 7860     	 str r0,[r7,#4]
 904 0008 0B46     	 mov r3,r1
 905 000a FB70     	 strb r3,[r7,#3]
 352:../Libraries/XMCLib/src/xmc_ledts.c **** 
 353:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 354:../Libraries/XMCLib/src/xmc_ledts.c **** 
 355:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 906              	 .loc 1 355 0
 907 000c 7B68     	 ldr r3,[r7,#4]
 908 000e 9B68     	 ldr r3,[r3,#8]
 909 0010 23F06042 	 bic r2,r3,#-536870912
 910 0014 7B68     	 ldr r3,[r7,#4]
 911 0016 9A60     	 str r2,[r3,#8]
 356:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 912              	 .loc 1 356 0
 913 0018 7B68     	 ldr r3,[r7,#4]
 914 001a 9B68     	 ldr r3,[r3,#8]
 915 001c FA78     	 ldrb r2,[r7,#3]
 916 001e 5207     	 lsls r2,r2,#29
 917 0020 1A43     	 orrs r2,r2,r3
 918 0022 7B68     	 ldr r3,[r7,#4]
 919 0024 9A60     	 str r2,[r3,#8]
 357:../Libraries/XMCLib/src/xmc_ledts.c **** }
 920              	 .loc 1 357 0
 921 0026 0C37     	 adds r7,r7,#12
 922              	.LCFI80:
 923              	 .cfi_def_cfa_offset 4
 924 0028 BD46     	 mov sp,r7
 925              	.LCFI81:
 926              	 .cfi_def_cfa_register 13
 927              	 
 928 002a 5DF8047B 	 ldr r7,[sp],#4
 929              	.LCFI82:
 930              	 .cfi_restore 7
 931              	 .cfi_def_cfa_offset 0
 932 002e 7047     	 bx lr
 933              	 .cfi_endproc
 934              	.LFE186:
 936              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 937              	 .align 2
 938              	 .global XMC_LEDTS_ReadTSVAL
 939              	 .thumb
 940              	 .thumb_func
 942              	XMC_LEDTS_ReadTSVAL:
 943              	.LFB187:
 358:../Libraries/XMCLib/src/xmc_ledts.c **** 
 359:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 360:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 361:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 362:../Libraries/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 363:../Libraries/XMCLib/src/xmc_ledts.c **** {
 944              	 .loc 1 363 0
 945              	 .cfi_startproc
 946              	 
 947              	 
 948              	 
 949 0000 80B4     	 push {r7}
 950              	.LCFI83:
 951              	 .cfi_def_cfa_offset 4
 952              	 .cfi_offset 7,-4
 953 0002 85B0     	 sub sp,sp,#20
 954              	.LCFI84:
 955              	 .cfi_def_cfa_offset 24
 956 0004 00AF     	 add r7,sp,#0
 957              	.LCFI85:
 958              	 .cfi_def_cfa_register 7
 959 0006 7860     	 str r0,[r7,#4]
 364:../Libraries/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 365:../Libraries/XMCLib/src/xmc_ledts.c **** 
 366:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 367:../Libraries/XMCLib/src/xmc_ledts.c **** 
 368:../Libraries/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 960              	 .loc 1 368 0
 961 0008 7B68     	 ldr r3,[r7,#4]
 962 000a 1B69     	 ldr r3,[r3,#16]
 963 000c FB81     	 strh r3,[r7,#14]
 369:../Libraries/XMCLib/src/xmc_ledts.c **** 
 370:../Libraries/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 964              	 .loc 1 370 0
 965 000e FB89     	 ldrh r3,[r7,#14]
 371:../Libraries/XMCLib/src/xmc_ledts.c **** }
 966              	 .loc 1 371 0
 967 0010 1846     	 mov r0,r3
 968 0012 1437     	 adds r7,r7,#20
 969              	.LCFI86:
 970              	 .cfi_def_cfa_offset 4
 971 0014 BD46     	 mov sp,r7
 972              	.LCFI87:
 973              	 .cfi_def_cfa_register 13
 974              	 
 975 0016 5DF8047B 	 ldr r7,[sp],#4
 976              	.LCFI88:
 977              	 .cfi_restore 7
 978              	 .cfi_def_cfa_offset 0
 979 001a 7047     	 bx lr
 980              	 .cfi_endproc
 981              	.LFE187:
 983              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 984              	 .align 2
 985              	 .global XMC_LEDTS_SetOscillationWindow
 986              	 .thumb
 987              	 .thumb_func
 989              	XMC_LEDTS_SetOscillationWindow:
 990              	.LFB188:
 372:../Libraries/XMCLib/src/xmc_ledts.c **** 
 373:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 374:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 375:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 376:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 377:../Libraries/XMCLib/src/xmc_ledts.c **** {
 991              	 .loc 1 377 0
 992              	 .cfi_startproc
 993              	 
 994              	 
 995              	 
 996 0000 80B4     	 push {r7}
 997              	.LCFI89:
 998              	 .cfi_def_cfa_offset 4
 999              	 .cfi_offset 7,-4
 1000 0002 85B0     	 sub sp,sp,#20
 1001              	.LCFI90:
 1002              	 .cfi_def_cfa_offset 24
 1003 0004 00AF     	 add r7,sp,#0
 1004              	.LCFI91:
 1005              	 .cfi_def_cfa_register 7
 1006 0006 7860     	 str r0,[r7,#4]
 1007 0008 0B46     	 mov r3,r1
 1008 000a FB70     	 strb r3,[r7,#3]
 1009 000c 1346     	 mov r3,r2
 1010 000e BB70     	 strb r3,[r7,#2]
 378:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 379:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 1011              	 .loc 1 379 0
 1012 0010 FB78     	 ldrb r3,[r7,#3]
 1013 0012 9B08     	 lsrs r3,r3,#2
 1014 0014 FB73     	 strb r3,[r7,#15]
 380:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 1015              	 .loc 1 380 0
 1016 0016 FB78     	 ldrb r3,[r7,#3]
 1017 0018 03F00303 	 and r3,r3,#3
 1018 001c DBB2     	 uxtb r3,r3
 1019 001e DB00     	 lsls r3,r3,#3
 1020 0020 BB73     	 strb r3,[r7,#14]
 381:../Libraries/XMCLib/src/xmc_ledts.c **** 
 382:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 383:../Libraries/XMCLib/src/xmc_ledts.c **** 
 384:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->TSCMP[reg_index];
 1021              	 .loc 1 384 0
 1022 0022 FB7B     	 ldrb r3,[r7,#15]
 1023 0024 7A68     	 ldr r2,[r7,#4]
 1024 0026 0833     	 adds r3,r3,#8
 1025 0028 9B00     	 lsls r3,r3,#2
 1026 002a 1344     	 add r3,r3,r2
 1027 002c 5B68     	 ldr r3,[r3,#4]
 1028 002e BB60     	 str r3,[r7,#8]
 385:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 1029              	 .loc 1 385 0
 1030 0030 BB7B     	 ldrb r3,[r7,#14]
 1031 0032 FF22     	 movs r2,#255
 1032 0034 02FA03F3 	 lsl r3,r2,r3
 1033 0038 DB43     	 mvns r3,r3
 1034 003a 1A46     	 mov r2,r3
 1035 003c BB68     	 ldr r3,[r7,#8]
 1036 003e 1340     	 ands r3,r3,r2
 1037 0040 BB60     	 str r3,[r7,#8]
 386:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= size << bit_shift_count;
 1038              	 .loc 1 386 0
 1039 0042 BA78     	 ldrb r2,[r7,#2]
 1040 0044 BB7B     	 ldrb r3,[r7,#14]
 1041 0046 02FA03F3 	 lsl r3,r2,r3
 1042 004a 1A46     	 mov r2,r3
 1043 004c BB68     	 ldr r3,[r7,#8]
 1044 004e 1343     	 orrs r3,r3,r2
 1045 0050 BB60     	 str r3,[r7,#8]
 387:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->TSCMP[reg_index] = reg;
 1046              	 .loc 1 387 0
 1047 0052 FB7B     	 ldrb r3,[r7,#15]
 1048 0054 7A68     	 ldr r2,[r7,#4]
 1049 0056 0833     	 adds r3,r3,#8
 1050 0058 9B00     	 lsls r3,r3,#2
 1051 005a 1344     	 add r3,r3,r2
 1052 005c BA68     	 ldr r2,[r7,#8]
 1053 005e 5A60     	 str r2,[r3,#4]
 388:../Libraries/XMCLib/src/xmc_ledts.c **** }
 1054              	 .loc 1 388 0
 1055 0060 1437     	 adds r7,r7,#20
 1056              	.LCFI92:
 1057              	 .cfi_def_cfa_offset 4
 1058 0062 BD46     	 mov sp,r7
 1059              	.LCFI93:
 1060              	 .cfi_def_cfa_register 13
 1061              	 
 1062 0064 5DF8047B 	 ldr r7,[sp],#4
 1063              	.LCFI94:
 1064              	 .cfi_restore 7
 1065              	 .cfi_def_cfa_offset 0
 1066 0068 7047     	 bx lr
 1067              	 .cfi_endproc
 1068              	.LFE188:
 1070 006a 00BF     	 .text
 1071              	.Letext0:
 1072              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1073              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1074              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1075              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc_ledts.h"
 1076              	 .file 6 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc4_scu.h"
 1077              	 .file 7 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
 1078              	 .file 8 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/core_cm4.h"
 1079              	 .file 9 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:20     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:25     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:86     .text.XMC_LEDTS_InitGlobal:0000003c $d
    {standard input}:92     .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:97     .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:168    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:173    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:247    .text.XMC_LEDTS_InitTSBasic:00000054 $d
    {standard input}:252    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:257    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:343    .text.XMC_LEDTS_InitTSAdvanced:00000068 $d
    {standard input}:348    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:353    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:398    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:403    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:444    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:449    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:489    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:494    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:548    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:553    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:594    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:599    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:681    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:686    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:768    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:773    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:829    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:834    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:881    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:886    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:937    .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:942    .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:984    .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:989    .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
