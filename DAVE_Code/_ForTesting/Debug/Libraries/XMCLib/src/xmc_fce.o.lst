   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_fce.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_FCE_Init,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_FCE_Init
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_FCE_Init:
  26              	.LFB187:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_fce.c"
   1:../Libraries/XMCLib/src/xmc_fce.c **** /**
   2:../Libraries/XMCLib/src/xmc_fce.c ****  * @file xmc_fce.c
   3:../Libraries/XMCLib/src/xmc_fce.c ****  * @date 2019-12-16
   4:../Libraries/XMCLib/src/xmc_fce.c ****  *
   5:../Libraries/XMCLib/src/xmc_fce.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_fce.c ****  *****************************************************************************
   7:../Libraries/XMCLib/src/xmc_fce.c ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_fce.c ****  *
   9:../Libraries/XMCLib/src/xmc_fce.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_fce.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_fce.c ****  *
  12:../Libraries/XMCLib/src/xmc_fce.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:../Libraries/XMCLib/src/xmc_fce.c ****  *
  14:../Libraries/XMCLib/src/xmc_fce.c ****  * Permission is hereby granted, free of charge, to any person or organization
  15:../Libraries/XMCLib/src/xmc_fce.c ****  * obtaining a copy of the software and accompanying documentation covered by
  16:../Libraries/XMCLib/src/xmc_fce.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:../Libraries/XMCLib/src/xmc_fce.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:../Libraries/XMCLib/src/xmc_fce.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:../Libraries/XMCLib/src/xmc_fce.c ****  * do so, all subject to the following:
  20:../Libraries/XMCLib/src/xmc_fce.c ****  *
  21:../Libraries/XMCLib/src/xmc_fce.c ****  * The copyright notices in the Software and this entire statement, including
  22:../Libraries/XMCLib/src/xmc_fce.c ****  * the above license grant, this restriction and the following disclaimer,
  23:../Libraries/XMCLib/src/xmc_fce.c ****  * must be included in all copies of the Software, in whole or in part, and
  24:../Libraries/XMCLib/src/xmc_fce.c ****  * all derivative works of the Software, unless such copies or derivative
  25:../Libraries/XMCLib/src/xmc_fce.c ****  * works are solely in the form of machine-executable object code generated by
  26:../Libraries/XMCLib/src/xmc_fce.c ****  * a source language processor.
  27:../Libraries/XMCLib/src/xmc_fce.c ****  *
  28:../Libraries/XMCLib/src/xmc_fce.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:../Libraries/XMCLib/src/xmc_fce.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:../Libraries/XMCLib/src/xmc_fce.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:../Libraries/XMCLib/src/xmc_fce.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:../Libraries/XMCLib/src/xmc_fce.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:../Libraries/XMCLib/src/xmc_fce.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:../Libraries/XMCLib/src/xmc_fce.c ****  * DEALINGS IN THE SOFTWARE.
  35:../Libraries/XMCLib/src/xmc_fce.c ****  *
  36:../Libraries/XMCLib/src/xmc_fce.c ****  * To improve the quality of the software, users are encouraged to share
  37:../Libraries/XMCLib/src/xmc_fce.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:../Libraries/XMCLib/src/xmc_fce.c ****  * at XMCSupport@infineon.com.
  39:../Libraries/XMCLib/src/xmc_fce.c ****  *****************************************************************************
  40:../Libraries/XMCLib/src/xmc_fce.c ****  *
  41:../Libraries/XMCLib/src/xmc_fce.c ****  * Change History
  42:../Libraries/XMCLib/src/xmc_fce.c ****  * --------------
  43:../Libraries/XMCLib/src/xmc_fce.c ****  *
  44:../Libraries/XMCLib/src/xmc_fce.c ****  * 2015-02-20:
  45:../Libraries/XMCLib/src/xmc_fce.c ****  *     - Initial <br>
  46:../Libraries/XMCLib/src/xmc_fce.c ****  *
  47:../Libraries/XMCLib/src/xmc_fce.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_fce.c ****  *     - Removed GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_fce.c ****  *
  50:../Libraries/XMCLib/src/xmc_fce.c ****  * 2017-12-14:
  51:../Libraries/XMCLib/src/xmc_fce.c ****  *     - XMC_FCE_CalculateCRC8()
  52:../Libraries/XMCLib/src/xmc_fce.c ****  *       Ensure 32bit access to IR register
  53:../Libraries/XMCLib/src/xmc_fce.c ****  *     - XMC_FCE_CalculateCRC16()
  54:../Libraries/XMCLib/src/xmc_fce.c ****  *       Ensure 32bit access to IR register
  55:../Libraries/XMCLib/src/xmc_fce.c ****  *       Remove restriction on data source allignment
  56:../Libraries/XMCLib/src/xmc_fce.c ****  *     - XMC_FCE_CalculateCRC32()
  57:../Libraries/XMCLib/src/xmc_fce.c ****  *       Ensure 32bit access to IR register
  58:../Libraries/XMCLib/src/xmc_fce.c ****  *       Remove restriction on data source allignment
  59:../Libraries/XMCLib/src/xmc_fce.c ****  *
  60:../Libraries/XMCLib/src/xmc_fce.c ****  * 2019-03-30:
  61:../Libraries/XMCLib/src/xmc_fce.c ****  *     - Added XMC_FCE_CalculateCRC16Ex() and XMC_FCE_CalculateCRC32Ex()
  62:../Libraries/XMCLib/src/xmc_fce.c ****  *
  63:../Libraries/XMCLib/src/xmc_fce.c ****  * 2019-12-16:
  64:../Libraries/XMCLib/src/xmc_fce.c ****  *     - Fix including files following the convention: angle brackets are used for standard include
  65:../Libraries/XMCLib/src/xmc_fce.c ****  *
  66:../Libraries/XMCLib/src/xmc_fce.c ****  * @endcond
  67:../Libraries/XMCLib/src/xmc_fce.c ****  *
  68:../Libraries/XMCLib/src/xmc_fce.c ****  */
  69:../Libraries/XMCLib/src/xmc_fce.c **** 
  70:../Libraries/XMCLib/src/xmc_fce.c **** /**************************************************************************************************
  71:../Libraries/XMCLib/src/xmc_fce.c ****  * HEADER FILES
  72:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
  73:../Libraries/XMCLib/src/xmc_fce.c **** #include "xmc_fce.h"
  74:../Libraries/XMCLib/src/xmc_fce.c **** 
  75:../Libraries/XMCLib/src/xmc_fce.c **** #if defined (FCE)
  76:../Libraries/XMCLib/src/xmc_fce.c **** #include "xmc_scu.h"
  77:../Libraries/XMCLib/src/xmc_fce.c **** 
  78:../Libraries/XMCLib/src/xmc_fce.c **** /*******************************************************************************
  79:../Libraries/XMCLib/src/xmc_fce.c ****  * API IMPLEMENTATION
  80:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
  81:../Libraries/XMCLib/src/xmc_fce.c **** 
  82:../Libraries/XMCLib/src/xmc_fce.c **** /*
  83:../Libraries/XMCLib/src/xmc_fce.c ****  * Initialize the FCE peripheral:
  84:../Libraries/XMCLib/src/xmc_fce.c ****  * Update FCE configuration and initialize seed value
  85:../Libraries/XMCLib/src/xmc_fce.c ****  */
  86:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_Init(const XMC_FCE_t *const engine)
  87:../Libraries/XMCLib/src/xmc_fce.c **** {
  28              	 .loc 1 87 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  88:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CFG = engine->fce_cfg_update.regval;
  44              	 .loc 1 88 0
  45 0008 7B68     	 ldr r3,[r7,#4]
  46 000a 1B68     	 ldr r3,[r3]
  47 000c 7A68     	 ldr r2,[r7,#4]
  48 000e 5268     	 ldr r2,[r2,#4]
  49 0010 9A60     	 str r2,[r3,#8]
  89:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CRC = engine->seedvalue;
  50              	 .loc 1 89 0
  51 0012 7B68     	 ldr r3,[r7,#4]
  52 0014 1B68     	 ldr r3,[r3]
  53 0016 7A68     	 ldr r2,[r7,#4]
  54 0018 9268     	 ldr r2,[r2,#8]
  55 001a 9A61     	 str r2,[r3,#24]
  90:../Libraries/XMCLib/src/xmc_fce.c **** 
  91:../Libraries/XMCLib/src/xmc_fce.c ****   return XMC_FCE_STATUS_OK;
  56              	 .loc 1 91 0
  57 001c 0023     	 movs r3,#0
  92:../Libraries/XMCLib/src/xmc_fce.c **** }
  58              	 .loc 1 92 0
  59 001e 1846     	 mov r0,r3
  60 0020 0C37     	 adds r7,r7,#12
  61              	.LCFI3:
  62              	 .cfi_def_cfa_offset 4
  63 0022 BD46     	 mov sp,r7
  64              	.LCFI4:
  65              	 .cfi_def_cfa_register 13
  66              	 
  67 0024 5DF8047B 	 ldr r7,[sp],#4
  68              	.LCFI5:
  69              	 .cfi_restore 7
  70              	 .cfi_def_cfa_offset 0
  71 0028 7047     	 bx lr
  72              	 .cfi_endproc
  73              	.LFE187:
  75 002a 00BF     	 .section .text.XMC_FCE_Disable,"ax",%progbits
  76              	 .align 2
  77              	 .global XMC_FCE_Disable
  78              	 .thumb
  79              	 .thumb_func
  81              	XMC_FCE_Disable:
  82              	.LFB188:
  93:../Libraries/XMCLib/src/xmc_fce.c **** 
  94:../Libraries/XMCLib/src/xmc_fce.c **** /* Disable FCE */
  95:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_Disable(void)
  96:../Libraries/XMCLib/src/xmc_fce.c **** {
  83              	 .loc 1 96 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87 0000 80B5     	 push {r7,lr}
  88              	.LCFI6:
  89              	 .cfi_def_cfa_offset 8
  90              	 .cfi_offset 7,-8
  91              	 .cfi_offset 14,-4
  92 0002 00AF     	 add r7,sp,#0
  93              	.LCFI7:
  94              	 .cfi_def_cfa_register 7
  97:../Libraries/XMCLib/src/xmc_fce.c ****   FCE->CLC |= (uint32_t)FCE_CLC_DISR_Msk;
  95              	 .loc 1 97 0
  96 0004 044A     	 ldr r2,.L4
  97 0006 044B     	 ldr r3,.L4
  98 0008 1B68     	 ldr r3,[r3]
  99 000a 43F00103 	 orr r3,r3,#1
 100 000e 1360     	 str r3,[r2]
  98:../Libraries/XMCLib/src/xmc_fce.c **** 
  99:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_FCE);
 101              	 .loc 1 99 0
 102 0010 0248     	 ldr r0,.L4+4
 103 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 100:../Libraries/XMCLib/src/xmc_fce.c **** 
 101:../Libraries/XMCLib/src/xmc_fce.c **** #if defined(CLOCK_GATING_SUPPORTED)
 102:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_FCE);
 103:../Libraries/XMCLib/src/xmc_fce.c **** #endif
 104:../Libraries/XMCLib/src/xmc_fce.c **** 
 105:../Libraries/XMCLib/src/xmc_fce.c **** }
 104              	 .loc 1 105 0
 105 0016 80BD     	 pop {r7,pc}
 106              	.L5:
 107              	 .align 2
 108              	.L4:
 109 0018 00000250 	 .word 1342308352
 110 001c 40000020 	 .word 536870976
 111              	 .cfi_endproc
 112              	.LFE188:
 114              	 .section .text.XMC_FCE_Enable,"ax",%progbits
 115              	 .align 2
 116              	 .global XMC_FCE_Enable
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_FCE_Enable:
 121              	.LFB189:
 106:../Libraries/XMCLib/src/xmc_fce.c **** 
 107:../Libraries/XMCLib/src/xmc_fce.c **** /* Enable FCE */
 108:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_Enable(void)
 109:../Libraries/XMCLib/src/xmc_fce.c **** {
 122              	 .loc 1 109 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126 0000 80B5     	 push {r7,lr}
 127              	.LCFI8:
 128              	 .cfi_def_cfa_offset 8
 129              	 .cfi_offset 7,-8
 130              	 .cfi_offset 14,-4
 131 0002 00AF     	 add r7,sp,#0
 132              	.LCFI9:
 133              	 .cfi_def_cfa_register 7
 110:../Libraries/XMCLib/src/xmc_fce.c **** #if defined(CLOCK_GATING_SUPPORTED)
 111:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_FCE);
 112:../Libraries/XMCLib/src/xmc_fce.c **** #endif
 113:../Libraries/XMCLib/src/xmc_fce.c **** 
 114:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_FCE);
 134              	 .loc 1 114 0
 135 0004 0448     	 ldr r0,.L7
 136 0006 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 115:../Libraries/XMCLib/src/xmc_fce.c **** 
 116:../Libraries/XMCLib/src/xmc_fce.c ****   FCE->CLC &= (uint32_t)~FCE_CLC_DISR_Msk;
 137              	 .loc 1 116 0
 138 000a 044A     	 ldr r2,.L7+4
 139 000c 034B     	 ldr r3,.L7+4
 140 000e 1B68     	 ldr r3,[r3]
 141 0010 23F00103 	 bic r3,r3,#1
 142 0014 1360     	 str r3,[r2]
 117:../Libraries/XMCLib/src/xmc_fce.c **** }
 143              	 .loc 1 117 0
 144 0016 80BD     	 pop {r7,pc}
 145              	.L8:
 146              	 .align 2
 147              	.L7:
 148 0018 40000020 	 .word 536870976
 149 001c 00000250 	 .word 1342308352
 150              	 .cfi_endproc
 151              	.LFE189:
 153              	 .section .text.XMC_FCE_CalculateCRC8,"ax",%progbits
 154              	 .align 2
 155              	 .global XMC_FCE_CalculateCRC8
 156              	 .thumb
 157              	 .thumb_func
 159              	XMC_FCE_CalculateCRC8:
 160              	.LFB190:
 118:../Libraries/XMCLib/src/xmc_fce.c **** 
 119:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return the SAE J1850 CRC8 checksum */
 120:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC8(const XMC_FCE_t *const engine,
 121:../Libraries/XMCLib/src/xmc_fce.c ****                                        const uint8_t *data,
 122:../Libraries/XMCLib/src/xmc_fce.c ****                                        uint32_t length,
 123:../Libraries/XMCLib/src/xmc_fce.c ****                                        uint8_t *result)
 124:../Libraries/XMCLib/src/xmc_fce.c **** {
 161              	 .loc 1 124 0
 162              	 .cfi_startproc
 163              	 
 164              	 
 165              	 
 166 0000 80B4     	 push {r7}
 167              	.LCFI10:
 168              	 .cfi_def_cfa_offset 4
 169              	 .cfi_offset 7,-4
 170 0002 87B0     	 sub sp,sp,#28
 171              	.LCFI11:
 172              	 .cfi_def_cfa_offset 32
 173 0004 00AF     	 add r7,sp,#0
 174              	.LCFI12:
 175              	 .cfi_def_cfa_register 7
 176 0006 F860     	 str r0,[r7,#12]
 177 0008 B960     	 str r1,[r7,#8]
 178 000a 7A60     	 str r2,[r7,#4]
 179 000c 3B60     	 str r3,[r7]
 125:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 180              	 .loc 1 125 0
 181 000e 0023     	 movs r3,#0
 182 0010 FB75     	 strb r3,[r7,#23]
 126:../Libraries/XMCLib/src/xmc_fce.c **** 
 127:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC8: Wrong FCE kernel used", (engine -> kernel_ptr == XMC_FCE_CRC8)
 128:../Libraries/XMCLib/src/xmc_fce.c **** 
 129:../Libraries/XMCLib/src/xmc_fce.c ****   if (length == 0UL)
 183              	 .loc 1 129 0
 184 0012 7B68     	 ldr r3,[r7,#4]
 185 0014 002B     	 cmp r3,#0
 186 0016 02D1     	 bne .L10
 130:../Libraries/XMCLib/src/xmc_fce.c ****   {
 131:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 187              	 .loc 1 131 0
 188 0018 0223     	 movs r3,#2
 189 001a FB75     	 strb r3,[r7,#23]
 190 001c 14E0     	 b .L11
 191              	.L10:
 132:../Libraries/XMCLib/src/xmc_fce.c ****   }
 133:../Libraries/XMCLib/src/xmc_fce.c ****   else
 134:../Libraries/XMCLib/src/xmc_fce.c ****   {
 135:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 192              	 .loc 1 135 0
 193 001e 0AE0     	 b .L12
 194              	.L13:
 136:../Libraries/XMCLib/src/xmc_fce.c ****     {
 137:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = (uint32_t) * data;
 195              	 .loc 1 137 0
 196 0020 FB68     	 ldr r3,[r7,#12]
 197 0022 1B68     	 ldr r3,[r3]
 198 0024 BA68     	 ldr r2,[r7,#8]
 199 0026 1278     	 ldrb r2,[r2]
 200 0028 1A60     	 str r2,[r3]
 138:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 201              	 .loc 1 138 0
 202 002a BB68     	 ldr r3,[r7,#8]
 203 002c 0133     	 adds r3,r3,#1
 204 002e BB60     	 str r3,[r7,#8]
 139:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 1U;
 205              	 .loc 1 139 0
 206 0030 7B68     	 ldr r3,[r7,#4]
 207 0032 013B     	 subs r3,r3,#1
 208 0034 7B60     	 str r3,[r7,#4]
 209              	.L12:
 135:../Libraries/XMCLib/src/xmc_fce.c ****     {
 210              	 .loc 1 135 0
 211 0036 7B68     	 ldr r3,[r7,#4]
 212 0038 002B     	 cmp r3,#0
 213 003a F1D1     	 bne .L13
 140:../Libraries/XMCLib/src/xmc_fce.c ****     }
 141:../Libraries/XMCLib/src/xmc_fce.c **** 
 142:../Libraries/XMCLib/src/xmc_fce.c ****     *result = (uint8_t)engine->kernel_ptr->CRC;
 214              	 .loc 1 142 0
 215 003c FB68     	 ldr r3,[r7,#12]
 216 003e 1B68     	 ldr r3,[r3]
 217 0040 9B69     	 ldr r3,[r3,#24]
 218 0042 DAB2     	 uxtb r2,r3
 219 0044 3B68     	 ldr r3,[r7]
 220 0046 1A70     	 strb r2,[r3]
 221              	.L11:
 143:../Libraries/XMCLib/src/xmc_fce.c ****   }
 144:../Libraries/XMCLib/src/xmc_fce.c **** 
 145:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 222              	 .loc 1 145 0
 223 0048 FB7D     	 ldrb r3,[r7,#23]
 146:../Libraries/XMCLib/src/xmc_fce.c **** }
 224              	 .loc 1 146 0
 225 004a 1846     	 mov r0,r3
 226 004c 1C37     	 adds r7,r7,#28
 227              	.LCFI13:
 228              	 .cfi_def_cfa_offset 4
 229 004e BD46     	 mov sp,r7
 230              	.LCFI14:
 231              	 .cfi_def_cfa_register 13
 232              	 
 233 0050 5DF8047B 	 ldr r7,[sp],#4
 234              	.LCFI15:
 235              	 .cfi_restore 7
 236              	 .cfi_def_cfa_offset 0
 237 0054 7047     	 bx lr
 238              	 .cfi_endproc
 239              	.LFE190:
 241 0056 00BF     	 .section .text.XMC_FCE_CalculateCRC16,"ax",%progbits
 242              	 .align 2
 243              	 .global XMC_FCE_CalculateCRC16
 244              	 .thumb
 245              	 .thumb_func
 247              	XMC_FCE_CalculateCRC16:
 248              	.LFB191:
 147:../Libraries/XMCLib/src/xmc_fce.c **** 
 148:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return calculated CCITT CRC16 checksum */
 149:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC16(const XMC_FCE_t *const engine,
 150:../Libraries/XMCLib/src/xmc_fce.c ****                                         const uint16_t *data,
 151:../Libraries/XMCLib/src/xmc_fce.c ****                                         uint32_t length,
 152:../Libraries/XMCLib/src/xmc_fce.c ****                                         uint16_t *result)
 153:../Libraries/XMCLib/src/xmc_fce.c **** {
 249              	 .loc 1 153 0
 250              	 .cfi_startproc
 251              	 
 252              	 
 253              	 
 254 0000 80B4     	 push {r7}
 255              	.LCFI16:
 256              	 .cfi_def_cfa_offset 4
 257              	 .cfi_offset 7,-4
 258 0002 87B0     	 sub sp,sp,#28
 259              	.LCFI17:
 260              	 .cfi_def_cfa_offset 32
 261 0004 00AF     	 add r7,sp,#0
 262              	.LCFI18:
 263              	 .cfi_def_cfa_register 7
 264 0006 F860     	 str r0,[r7,#12]
 265 0008 B960     	 str r1,[r7,#8]
 266 000a 7A60     	 str r2,[r7,#4]
 267 000c 3B60     	 str r3,[r7]
 154:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 268              	 .loc 1 154 0
 269 000e 0023     	 movs r3,#0
 270 0010 FB75     	 strb r3,[r7,#23]
 155:../Libraries/XMCLib/src/xmc_fce.c **** 
 156:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Wrong FCE kernel used", (engine -> kernel_ptr == XMC_FCE_CRC1
 157:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Length field is empty", (length != 0));
 158:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Length is not aligned", ((length & 0x1U) == 0));
 159:../Libraries/XMCLib/src/xmc_fce.c **** 
 160:../Libraries/XMCLib/src/xmc_fce.c ****   /* Check length is a multiple of 2 */
 161:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length == 0) || ((length & 0x1U) != 0U))
 271              	 .loc 1 161 0
 272 0012 7B68     	 ldr r3,[r7,#4]
 273 0014 002B     	 cmp r3,#0
 274 0016 04D0     	 beq .L16
 275              	 .loc 1 161 0 is_stmt 0 discriminator 1
 276 0018 7B68     	 ldr r3,[r7,#4]
 277 001a 03F00103 	 and r3,r3,#1
 278 001e 002B     	 cmp r3,#0
 279 0020 02D0     	 beq .L17
 280              	.L16:
 162:../Libraries/XMCLib/src/xmc_fce.c ****   {
 163:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 281              	 .loc 1 163 0 is_stmt 1
 282 0022 0223     	 movs r3,#2
 283 0024 FB75     	 strb r3,[r7,#23]
 284 0026 14E0     	 b .L18
 285              	.L17:
 164:../Libraries/XMCLib/src/xmc_fce.c ****   }
 165:../Libraries/XMCLib/src/xmc_fce.c ****   else
 166:../Libraries/XMCLib/src/xmc_fce.c ****   {
 167:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 286              	 .loc 1 167 0
 287 0028 0AE0     	 b .L19
 288              	.L20:
 168:../Libraries/XMCLib/src/xmc_fce.c ****     {
 169:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = (uint32_t) * data;
 289              	 .loc 1 169 0
 290 002a FB68     	 ldr r3,[r7,#12]
 291 002c 1B68     	 ldr r3,[r3]
 292 002e BA68     	 ldr r2,[r7,#8]
 293 0030 1288     	 ldrh r2,[r2]
 294 0032 1A60     	 str r2,[r3]
 170:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 295              	 .loc 1 170 0
 296 0034 BB68     	 ldr r3,[r7,#8]
 297 0036 0233     	 adds r3,r3,#2
 298 0038 BB60     	 str r3,[r7,#8]
 171:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 2U;
 299              	 .loc 1 171 0
 300 003a 7B68     	 ldr r3,[r7,#4]
 301 003c 023B     	 subs r3,r3,#2
 302 003e 7B60     	 str r3,[r7,#4]
 303              	.L19:
 167:../Libraries/XMCLib/src/xmc_fce.c ****     {
 304              	 .loc 1 167 0
 305 0040 7B68     	 ldr r3,[r7,#4]
 306 0042 002B     	 cmp r3,#0
 307 0044 F1D1     	 bne .L20
 172:../Libraries/XMCLib/src/xmc_fce.c ****     }
 173:../Libraries/XMCLib/src/xmc_fce.c **** 
 174:../Libraries/XMCLib/src/xmc_fce.c ****     *result = (uint16_t)engine->kernel_ptr->CRC;
 308              	 .loc 1 174 0
 309 0046 FB68     	 ldr r3,[r7,#12]
 310 0048 1B68     	 ldr r3,[r3]
 311 004a 9B69     	 ldr r3,[r3,#24]
 312 004c 9AB2     	 uxth r2,r3
 313 004e 3B68     	 ldr r3,[r7]
 314 0050 1A80     	 strh r2,[r3]
 315              	.L18:
 175:../Libraries/XMCLib/src/xmc_fce.c ****   }
 176:../Libraries/XMCLib/src/xmc_fce.c **** 
 177:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 316              	 .loc 1 177 0
 317 0052 FB7D     	 ldrb r3,[r7,#23]
 178:../Libraries/XMCLib/src/xmc_fce.c **** }
 318              	 .loc 1 178 0
 319 0054 1846     	 mov r0,r3
 320 0056 1C37     	 adds r7,r7,#28
 321              	.LCFI19:
 322              	 .cfi_def_cfa_offset 4
 323 0058 BD46     	 mov sp,r7
 324              	.LCFI20:
 325              	 .cfi_def_cfa_register 13
 326              	 
 327 005a 5DF8047B 	 ldr r7,[sp],#4
 328              	.LCFI21:
 329              	 .cfi_restore 7
 330              	 .cfi_def_cfa_offset 0
 331 005e 7047     	 bx lr
 332              	 .cfi_endproc
 333              	.LFE191:
 335              	 .section .text.XMC_FCE_CalculateCRC16Ex,"ax",%progbits
 336              	 .align 2
 337              	 .global XMC_FCE_CalculateCRC16Ex
 338              	 .thumb
 339              	 .thumb_func
 341              	XMC_FCE_CalculateCRC16Ex:
 342              	.LFB192:
 179:../Libraries/XMCLib/src/xmc_fce.c **** 
 180:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC16Ex(const XMC_FCE_t *const engine,
 181:../Libraries/XMCLib/src/xmc_fce.c ****     const uint8_t *data,
 182:../Libraries/XMCLib/src/xmc_fce.c ****     uint32_t length,
 183:../Libraries/XMCLib/src/xmc_fce.c ****     uint16_t *const result)
 184:../Libraries/XMCLib/src/xmc_fce.c **** {
 343              	 .loc 1 184 0
 344              	 .cfi_startproc
 345              	 
 346              	 
 347              	 
 348 0000 80B4     	 push {r7}
 349              	.LCFI22:
 350              	 .cfi_def_cfa_offset 4
 351              	 .cfi_offset 7,-4
 352 0002 89B0     	 sub sp,sp,#36
 353              	.LCFI23:
 354              	 .cfi_def_cfa_offset 40
 355 0004 00AF     	 add r7,sp,#0
 356              	.LCFI24:
 357              	 .cfi_def_cfa_register 7
 358 0006 F860     	 str r0,[r7,#12]
 359 0008 B960     	 str r1,[r7,#8]
 360 000a 7A60     	 str r2,[r7,#4]
 361 000c 3B60     	 str r3,[r7]
 185:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 362              	 .loc 1 185 0
 363 000e 0023     	 movs r3,#0
 364 0010 FB77     	 strb r3,[r7,#31]
 186:../Libraries/XMCLib/src/xmc_fce.c **** 
 187:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Wrong FCE kernel used", (engine -> kernel_ptr == XMC_FCE_CRC1
 188:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Length field is empty", (length != 0));
 189:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Length is not aligned", ((length & 0x1U) == 0));
 190:../Libraries/XMCLib/src/xmc_fce.c **** 
 191:../Libraries/XMCLib/src/xmc_fce.c ****   /* Check length is a multiple of 2 */
 192:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length == 0) || ((length & 0x1U) != 0U))
 365              	 .loc 1 192 0
 366 0012 7B68     	 ldr r3,[r7,#4]
 367 0014 002B     	 cmp r3,#0
 368 0016 04D0     	 beq .L23
 369              	 .loc 1 192 0 is_stmt 0 discriminator 1
 370 0018 7B68     	 ldr r3,[r7,#4]
 371 001a 03F00103 	 and r3,r3,#1
 372 001e 002B     	 cmp r3,#0
 373 0020 02D0     	 beq .L24
 374              	.L23:
 193:../Libraries/XMCLib/src/xmc_fce.c ****   {
 194:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 375              	 .loc 1 194 0 is_stmt 1
 376 0022 0223     	 movs r3,#2
 377 0024 FB77     	 strb r3,[r7,#31]
 378 0026 1BE0     	 b .L25
 379              	.L24:
 380              	.LBB8:
 195:../Libraries/XMCLib/src/xmc_fce.c ****   }
 196:../Libraries/XMCLib/src/xmc_fce.c ****   else
 197:../Libraries/XMCLib/src/xmc_fce.c ****   {
 198:../Libraries/XMCLib/src/xmc_fce.c ****     const uint16_t *p = (const uint16_t *)data;
 381              	 .loc 1 198 0
 382 0028 BB68     	 ldr r3,[r7,#8]
 383 002a BB61     	 str r3,[r7,#24]
 199:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 384              	 .loc 1 199 0
 385 002c 0FE0     	 b .L26
 386              	.L28:
 200:../Libraries/XMCLib/src/xmc_fce.c ****     {
 201:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = __REV16(*p);
 387              	 .loc 1 201 0
 388 002e FB68     	 ldr r3,[r7,#12]
 389 0030 1B68     	 ldr r3,[r3]
 390 0032 BA69     	 ldr r2,[r7,#24]
 391 0034 1288     	 ldrh r2,[r2]
 392 0036 7A61     	 str r2,[r7,#20]
 393              	.LBB9:
 394              	.LBB10:
 395              	 .file 2 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.3.0
   5:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     26. March 2020
   6:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  39:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  43:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  46:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  49:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  55:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  58:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  78:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  86:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  94:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 102:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 110:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 113:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 116:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 119:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 120:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 122:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 125:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            in the used linker script.
 129:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 130:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 131:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 133:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 135:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 136:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t const* src;
 137:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 138:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 139:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   } __copy_table_t;
 140:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 141:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 142:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 143:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 144:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   } __zero_table_t;
 145:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 146:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 151:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     }
 155:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 156:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  
 157:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     }
 161:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 162:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  
 163:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   _start();
 164:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 165:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 166:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 168:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 169:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 172:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 173:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 176:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 180:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 184:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 185:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 189:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 190:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 192:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 196:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 198:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 200:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 201:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 202:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 203:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 207:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 209:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 211:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 212:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 213:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 214:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 215:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 217:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 218:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 220:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 221:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 222:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 224:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 225:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 227:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 229:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 232:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 233:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 235:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 240:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 241:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 243:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 245:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 250:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 252:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 253:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 254:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 256:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 260:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 262:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 264:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 265:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 266:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 267:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 268:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 269:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 271:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 272:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 274:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 275:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 276:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 278:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 279:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 281:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 282:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 283:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 285:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 286:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 288:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 289:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 292:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 293:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 294:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 295:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 296:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 297:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 299:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 300:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 302:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 303:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 306:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 307:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 308:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 313:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 316:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 317:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 320:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 321:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 322:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 323:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 325:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 328:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 329:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 331:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 332:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 335:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 336:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 337:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 338:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 339:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 340:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 344:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 346:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 348:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 350:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 352:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 356:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 358:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 360:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 361:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 362:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 363:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 364:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 367:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 368:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 370:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 371:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 374:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 375:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 376:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 377:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 379:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 382:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 385:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 386:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 387:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 389:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 390:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 391:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 393:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 394:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 398:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 400:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 402:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 403:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 404:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 406:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 410:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 412:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 414:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 415:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 416:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 417:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 419:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 422:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 423:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 425:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 426:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 427:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 429:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 430:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 431:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 432:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 433:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 437:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 439:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 441:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 442:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 443:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 445:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 446:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 448:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 449:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 451:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 452:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 453:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 454:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 455:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 456:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 457:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 460:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 463:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 464:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 466:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 467:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 468:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 469:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 470:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 471:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 472:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 474:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 475:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 476:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 479:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 481:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 483:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 484:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 485:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 487:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 491:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 493:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 496:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 498:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 502:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 503:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 506:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 508:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 510:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 511:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 512:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 513:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 514:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 517:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 519:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 521:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 522:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 524:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 525:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 527:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 528:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 530:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 531:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 532:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 534:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 535:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 536:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 537:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 539:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 542:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 543:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 545:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 546:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 547:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 549:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 551:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 553:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 554:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 555:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 558:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 560:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 562:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 563:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 564:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 566:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 570:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 572:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 574:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 575:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 576:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 578:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 583:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 585:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 587:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 588:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 589:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 590:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 591:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 593:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 594:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 596:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 597:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 600:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 601:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 602:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 603:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 605:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 608:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 609:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 611:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 612:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 613:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 615:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 616:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 617:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 618:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 619:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 620:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 621:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 624:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 626:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 628:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 630:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 632:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 636:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 638:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 640:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 641:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 642:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 646:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 650:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 651:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 655:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 656:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 658:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 659:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 661:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 665:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 666:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 667:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 669:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 670:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 671:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 672:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 674:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 678:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 680:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 681:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 683:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 686:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 687:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 688:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 690:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 691:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 692:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 693:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 694:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 695:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 696:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 700:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 701:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 706:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 711:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 713:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 714:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 715:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 716:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 718:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 725:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 727:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 731:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 733:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 734:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 735:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 736:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 737:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 738:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 742:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 743:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 745:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 746:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 748:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 752:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 753:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 754:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 756:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 757:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 758:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 759:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 760:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 762:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 766:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 768:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 769:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 771:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 774:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 775:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 776:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 778:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 779:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 780:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 781:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 782:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 783:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 784:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 788:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 789:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 792:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 794:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 799:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 801:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 802:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 803:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 804:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 806:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 810:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 813:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 815:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 819:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 821:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 822:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 823:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 824:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 827:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 828:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 829:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 830:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 833:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 835:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 843:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 844:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 845:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 847:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 848:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 849:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 850:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 851:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 852:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 853:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 855:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 856:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 859:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 861:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 869:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 871:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 872:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 873:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 874:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 875:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 876:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 877:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 879:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 880:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 883:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 884:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 885:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 886:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 894:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 898:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 899:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 900:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 901:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 903:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 905:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 906:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 909:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 910:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 911:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 912:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 913:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 914:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 917:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 918:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 920:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 921:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 922:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 924:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 926:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 927:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 928:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 932:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 933:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 935:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 937:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 938:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 939:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 940:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 944:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 946:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 948:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 949:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 950:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 951:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 955:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 957:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 959:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 960:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 961:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 962:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 966:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 967:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 969:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 972:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 973:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 974:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 976:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 977:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 978:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 979:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 980:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 981:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Reversed value
 985:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 986:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 988:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 989:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 990:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 396              	 .loc 2 990 0
 397 0038 7A69     	 ldr r2,[r7,#20]
 398              	
 399 003a 52BA     	 rev16 r2,r2
 400              	
 401              	 .thumb
 402 003c 3A61     	 str r2,[r7,#16]
 991:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 403              	 .loc 2 991 0
 404 003e 3A69     	 ldr r2,[r7,#16]
 405              	.LBE10:
 406              	.LBE9:
 407              	 .loc 1 201 0
 408 0040 1A60     	 str r2,[r3]
 202:../Libraries/XMCLib/src/xmc_fce.c ****       ++p;
 409              	 .loc 1 202 0
 410 0042 BB69     	 ldr r3,[r7,#24]
 411 0044 0233     	 adds r3,r3,#2
 412 0046 BB61     	 str r3,[r7,#24]
 203:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 2U;
 413              	 .loc 1 203 0
 414 0048 7B68     	 ldr r3,[r7,#4]
 415 004a 023B     	 subs r3,r3,#2
 416 004c 7B60     	 str r3,[r7,#4]
 417              	.L26:
 199:../Libraries/XMCLib/src/xmc_fce.c ****     {
 418              	 .loc 1 199 0
 419 004e 7B68     	 ldr r3,[r7,#4]
 420 0050 002B     	 cmp r3,#0
 421 0052 ECD1     	 bne .L28
 204:../Libraries/XMCLib/src/xmc_fce.c ****     }
 205:../Libraries/XMCLib/src/xmc_fce.c **** 
 206:../Libraries/XMCLib/src/xmc_fce.c ****     *result = (uint16_t)engine->kernel_ptr->CRC;
 422              	 .loc 1 206 0
 423 0054 FB68     	 ldr r3,[r7,#12]
 424 0056 1B68     	 ldr r3,[r3]
 425 0058 9B69     	 ldr r3,[r3,#24]
 426 005a 9AB2     	 uxth r2,r3
 427 005c 3B68     	 ldr r3,[r7]
 428 005e 1A80     	 strh r2,[r3]
 429              	.L25:
 430              	.LBE8:
 207:../Libraries/XMCLib/src/xmc_fce.c ****   }
 208:../Libraries/XMCLib/src/xmc_fce.c **** 
 209:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 431              	 .loc 1 209 0
 432 0060 FB7F     	 ldrb r3,[r7,#31]
 210:../Libraries/XMCLib/src/xmc_fce.c **** }
 433              	 .loc 1 210 0
 434 0062 1846     	 mov r0,r3
 435 0064 2437     	 adds r7,r7,#36
 436              	.LCFI25:
 437              	 .cfi_def_cfa_offset 4
 438 0066 BD46     	 mov sp,r7
 439              	.LCFI26:
 440              	 .cfi_def_cfa_register 13
 441              	 
 442 0068 5DF8047B 	 ldr r7,[sp],#4
 443              	.LCFI27:
 444              	 .cfi_restore 7
 445              	 .cfi_def_cfa_offset 0
 446 006c 7047     	 bx lr
 447              	 .cfi_endproc
 448              	.LFE192:
 450 006e 00BF     	 .section .text.XMC_FCE_CalculateCRC32,"ax",%progbits
 451              	 .align 2
 452              	 .global XMC_FCE_CalculateCRC32
 453              	 .thumb
 454              	 .thumb_func
 456              	XMC_FCE_CalculateCRC32:
 457              	.LFB193:
 211:../Libraries/XMCLib/src/xmc_fce.c **** 
 212:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return the IEEE 802.3 Ethernet CRC32 checksum */
 213:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC32(const XMC_FCE_t *const engine,
 214:../Libraries/XMCLib/src/xmc_fce.c ****                                         const uint32_t *data,
 215:../Libraries/XMCLib/src/xmc_fce.c ****                                         uint32_t length,
 216:../Libraries/XMCLib/src/xmc_fce.c ****                                         uint32_t *result)
 217:../Libraries/XMCLib/src/xmc_fce.c **** {
 458              	 .loc 1 217 0
 459              	 .cfi_startproc
 460              	 
 461              	 
 462              	 
 463 0000 80B4     	 push {r7}
 464              	.LCFI28:
 465              	 .cfi_def_cfa_offset 4
 466              	 .cfi_offset 7,-4
 467 0002 87B0     	 sub sp,sp,#28
 468              	.LCFI29:
 469              	 .cfi_def_cfa_offset 32
 470 0004 00AF     	 add r7,sp,#0
 471              	.LCFI30:
 472              	 .cfi_def_cfa_register 7
 473 0006 F860     	 str r0,[r7,#12]
 474 0008 B960     	 str r1,[r7,#8]
 475 000a 7A60     	 str r2,[r7,#4]
 476 000c 3B60     	 str r3,[r7]
 218:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 477              	 .loc 1 218 0
 478 000e 0023     	 movs r3,#0
 479 0010 FB75     	 strb r3,[r7,#23]
 219:../Libraries/XMCLib/src/xmc_fce.c **** 
 220:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Wrong FCE kernel used", ((engine->kernel_ptr == XMC_FCE_CRC32
 221:../Libraries/XMCLib/src/xmc_fce.c ****              (engine->kernel_ptr == XMC_FCE_CRC32_1)));
 222:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Length field is empty", (length != 0));
 223:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Length is not aligned", ((length & 0x3U) == 0));
 224:../Libraries/XMCLib/src/xmc_fce.c **** 
 225:../Libraries/XMCLib/src/xmc_fce.c ****   /* Check length is a multiple of 4 */
 226:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length == 0) || ((length & 0x3U) != 0U))
 480              	 .loc 1 226 0
 481 0012 7B68     	 ldr r3,[r7,#4]
 482 0014 002B     	 cmp r3,#0
 483 0016 04D0     	 beq .L31
 484              	 .loc 1 226 0 is_stmt 0 discriminator 1
 485 0018 7B68     	 ldr r3,[r7,#4]
 486 001a 03F00303 	 and r3,r3,#3
 487 001e 002B     	 cmp r3,#0
 488 0020 02D0     	 beq .L32
 489              	.L31:
 227:../Libraries/XMCLib/src/xmc_fce.c ****   {
 228:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 490              	 .loc 1 228 0 is_stmt 1
 491 0022 0223     	 movs r3,#2
 492 0024 FB75     	 strb r3,[r7,#23]
 493 0026 13E0     	 b .L33
 494              	.L32:
 229:../Libraries/XMCLib/src/xmc_fce.c ****   }
 230:../Libraries/XMCLib/src/xmc_fce.c ****   else
 231:../Libraries/XMCLib/src/xmc_fce.c ****   {
 232:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 495              	 .loc 1 232 0
 496 0028 0AE0     	 b .L34
 497              	.L35:
 233:../Libraries/XMCLib/src/xmc_fce.c ****     {
 234:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = *data;
 498              	 .loc 1 234 0
 499 002a FB68     	 ldr r3,[r7,#12]
 500 002c 1B68     	 ldr r3,[r3]
 501 002e BA68     	 ldr r2,[r7,#8]
 502 0030 1268     	 ldr r2,[r2]
 503 0032 1A60     	 str r2,[r3]
 235:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 504              	 .loc 1 235 0
 505 0034 BB68     	 ldr r3,[r7,#8]
 506 0036 0433     	 adds r3,r3,#4
 507 0038 BB60     	 str r3,[r7,#8]
 236:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 4U;
 508              	 .loc 1 236 0
 509 003a 7B68     	 ldr r3,[r7,#4]
 510 003c 043B     	 subs r3,r3,#4
 511 003e 7B60     	 str r3,[r7,#4]
 512              	.L34:
 232:../Libraries/XMCLib/src/xmc_fce.c ****     {
 513              	 .loc 1 232 0
 514 0040 7B68     	 ldr r3,[r7,#4]
 515 0042 002B     	 cmp r3,#0
 516 0044 F1D1     	 bne .L35
 237:../Libraries/XMCLib/src/xmc_fce.c ****     }
 238:../Libraries/XMCLib/src/xmc_fce.c **** 
 239:../Libraries/XMCLib/src/xmc_fce.c ****     *result = engine->kernel_ptr->CRC;
 517              	 .loc 1 239 0
 518 0046 FB68     	 ldr r3,[r7,#12]
 519 0048 1B68     	 ldr r3,[r3]
 520 004a 9A69     	 ldr r2,[r3,#24]
 521 004c 3B68     	 ldr r3,[r7]
 522 004e 1A60     	 str r2,[r3]
 523              	.L33:
 240:../Libraries/XMCLib/src/xmc_fce.c ****   }
 241:../Libraries/XMCLib/src/xmc_fce.c **** 
 242:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 524              	 .loc 1 242 0
 525 0050 FB7D     	 ldrb r3,[r7,#23]
 243:../Libraries/XMCLib/src/xmc_fce.c **** }
 526              	 .loc 1 243 0
 527 0052 1846     	 mov r0,r3
 528 0054 1C37     	 adds r7,r7,#28
 529              	.LCFI31:
 530              	 .cfi_def_cfa_offset 4
 531 0056 BD46     	 mov sp,r7
 532              	.LCFI32:
 533              	 .cfi_def_cfa_register 13
 534              	 
 535 0058 5DF8047B 	 ldr r7,[sp],#4
 536              	.LCFI33:
 537              	 .cfi_restore 7
 538              	 .cfi_def_cfa_offset 0
 539 005c 7047     	 bx lr
 540              	 .cfi_endproc
 541              	.LFE193:
 543 005e 00BF     	 .section .text.XMC_FCE_CalculateCRC32Ex,"ax",%progbits
 544              	 .align 2
 545              	 .global XMC_FCE_CalculateCRC32Ex
 546              	 .thumb
 547              	 .thumb_func
 549              	XMC_FCE_CalculateCRC32Ex:
 550              	.LFB194:
 244:../Libraries/XMCLib/src/xmc_fce.c **** 
 245:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return the IEEE 802.3 Ethernet CRC32 checksum */
 246:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC32Ex(const XMC_FCE_t *const engine,
 247:../Libraries/XMCLib/src/xmc_fce.c ****     const uint8_t *data,
 248:../Libraries/XMCLib/src/xmc_fce.c ****     uint32_t length,
 249:../Libraries/XMCLib/src/xmc_fce.c ****     uint32_t *const result)
 250:../Libraries/XMCLib/src/xmc_fce.c **** {
 551              	 .loc 1 250 0
 552              	 .cfi_startproc
 553              	 
 554              	 
 555              	 
 556 0000 80B4     	 push {r7}
 557              	.LCFI34:
 558              	 .cfi_def_cfa_offset 4
 559              	 .cfi_offset 7,-4
 560 0002 89B0     	 sub sp,sp,#36
 561              	.LCFI35:
 562              	 .cfi_def_cfa_offset 40
 563 0004 00AF     	 add r7,sp,#0
 564              	.LCFI36:
 565              	 .cfi_def_cfa_register 7
 566 0006 F860     	 str r0,[r7,#12]
 567 0008 B960     	 str r1,[r7,#8]
 568 000a 7A60     	 str r2,[r7,#4]
 569 000c 3B60     	 str r3,[r7]
 251:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 570              	 .loc 1 251 0
 571 000e 0023     	 movs r3,#0
 572 0010 FB77     	 strb r3,[r7,#31]
 252:../Libraries/XMCLib/src/xmc_fce.c **** 
 253:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Wrong FCE kernel used", ((engine->kernel_ptr == XMC_FCE_CRC32
 254:../Libraries/XMCLib/src/xmc_fce.c ****              (engine->kernel_ptr == XMC_FCE_CRC32_1)));
 255:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Length field is empty", (length != 0));
 256:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Length is not aligned", ((length & 0x3U) == 0));
 257:../Libraries/XMCLib/src/xmc_fce.c **** 
 258:../Libraries/XMCLib/src/xmc_fce.c ****   /* Check length is a multiple of 4 */
 259:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length == 0) || ((length & 0x3U) != 0U))
 573              	 .loc 1 259 0
 574 0012 7B68     	 ldr r3,[r7,#4]
 575 0014 002B     	 cmp r3,#0
 576 0016 04D0     	 beq .L38
 577              	 .loc 1 259 0 is_stmt 0 discriminator 1
 578 0018 7B68     	 ldr r3,[r7,#4]
 579 001a 03F00303 	 and r3,r3,#3
 580 001e 002B     	 cmp r3,#0
 581 0020 02D0     	 beq .L39
 582              	.L38:
 260:../Libraries/XMCLib/src/xmc_fce.c ****   {
 261:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 583              	 .loc 1 261 0 is_stmt 1
 584 0022 0223     	 movs r3,#2
 585 0024 FB77     	 strb r3,[r7,#31]
 586 0026 18E0     	 b .L40
 587              	.L39:
 588              	.LBB11:
 262:../Libraries/XMCLib/src/xmc_fce.c ****   }
 263:../Libraries/XMCLib/src/xmc_fce.c ****   else
 264:../Libraries/XMCLib/src/xmc_fce.c ****   {
 265:../Libraries/XMCLib/src/xmc_fce.c ****     const uint32_t *p = (const uint32_t *)data;
 589              	 .loc 1 265 0
 590 0028 BB68     	 ldr r3,[r7,#8]
 591 002a BB61     	 str r3,[r7,#24]
 266:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 592              	 .loc 1 266 0
 593 002c 0DE0     	 b .L41
 594              	.L43:
 267:../Libraries/XMCLib/src/xmc_fce.c ****     {
 268:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = __REV(*p);
 595              	 .loc 1 268 0
 596 002e FB68     	 ldr r3,[r7,#12]
 597 0030 1B68     	 ldr r3,[r3]
 598 0032 BA69     	 ldr r2,[r7,#24]
 599 0034 1268     	 ldr r2,[r2]
 600 0036 7A61     	 str r2,[r7,#20]
 601              	.LBB12:
 602              	.LBB13:
 970:C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 603              	 .loc 2 970 0
 604 0038 7A69     	 ldr r2,[r7,#20]
 605 003a 12BA     	 rev r2,r2
 606              	.LBE13:
 607              	.LBE12:
 608              	 .loc 1 268 0
 609 003c 1A60     	 str r2,[r3]
 269:../Libraries/XMCLib/src/xmc_fce.c ****       ++p;
 610              	 .loc 1 269 0
 611 003e BB69     	 ldr r3,[r7,#24]
 612 0040 0433     	 adds r3,r3,#4
 613 0042 BB61     	 str r3,[r7,#24]
 270:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 4U;
 614              	 .loc 1 270 0
 615 0044 7B68     	 ldr r3,[r7,#4]
 616 0046 043B     	 subs r3,r3,#4
 617 0048 7B60     	 str r3,[r7,#4]
 618              	.L41:
 266:../Libraries/XMCLib/src/xmc_fce.c ****     {
 619              	 .loc 1 266 0
 620 004a 7B68     	 ldr r3,[r7,#4]
 621 004c 002B     	 cmp r3,#0
 622 004e EED1     	 bne .L43
 271:../Libraries/XMCLib/src/xmc_fce.c ****     }
 272:../Libraries/XMCLib/src/xmc_fce.c **** 
 273:../Libraries/XMCLib/src/xmc_fce.c ****     *result = engine->kernel_ptr->CRC;
 623              	 .loc 1 273 0
 624 0050 FB68     	 ldr r3,[r7,#12]
 625 0052 1B68     	 ldr r3,[r3]
 626 0054 9A69     	 ldr r2,[r3,#24]
 627 0056 3B68     	 ldr r3,[r7]
 628 0058 1A60     	 str r2,[r3]
 629              	.L40:
 630              	.LBE11:
 274:../Libraries/XMCLib/src/xmc_fce.c ****   }
 275:../Libraries/XMCLib/src/xmc_fce.c **** 
 276:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 631              	 .loc 1 276 0
 632 005a FB7F     	 ldrb r3,[r7,#31]
 277:../Libraries/XMCLib/src/xmc_fce.c **** }
 633              	 .loc 1 277 0
 634 005c 1846     	 mov r0,r3
 635 005e 2437     	 adds r7,r7,#36
 636              	.LCFI37:
 637              	 .cfi_def_cfa_offset 4
 638 0060 BD46     	 mov sp,r7
 639              	.LCFI38:
 640              	 .cfi_def_cfa_register 13
 641              	 
 642 0062 5DF8047B 	 ldr r7,[sp],#4
 643              	.LCFI39:
 644              	 .cfi_restore 7
 645              	 .cfi_def_cfa_offset 0
 646 0066 7047     	 bx lr
 647              	 .cfi_endproc
 648              	.LFE194:
 650              	 .section .text.XMC_FCE_TriggerMismatch,"ax",%progbits
 651              	 .align 2
 652              	 .global XMC_FCE_TriggerMismatch
 653              	 .thumb
 654              	 .thumb_func
 656              	XMC_FCE_TriggerMismatch:
 657              	.LFB195:
 278:../Libraries/XMCLib/src/xmc_fce.c **** 
 279:../Libraries/XMCLib/src/xmc_fce.c **** /* Trigger mismatch in the CRC registers */
 280:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_TriggerMismatch(const XMC_FCE_t *const engine, XMC_FCE_CTR_TEST_t test)
 281:../Libraries/XMCLib/src/xmc_fce.c **** {
 658              	 .loc 1 281 0
 659              	 .cfi_startproc
 660              	 
 661              	 
 662              	 
 663 0000 80B4     	 push {r7}
 664              	.LCFI40:
 665              	 .cfi_def_cfa_offset 4
 666              	 .cfi_offset 7,-4
 667 0002 83B0     	 sub sp,sp,#12
 668              	.LCFI41:
 669              	 .cfi_def_cfa_offset 16
 670 0004 00AF     	 add r7,sp,#0
 671              	.LCFI42:
 672              	 .cfi_def_cfa_register 7
 673 0006 7860     	 str r0,[r7,#4]
 674 0008 0B46     	 mov r3,r1
 675 000a FB70     	 strb r3,[r7,#3]
 282:../Libraries/XMCLib/src/xmc_fce.c ****   /* Create a 0 to 1 transition and clear to 0 once it is done */
 283:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR &= ~((uint32_t)test);
 676              	 .loc 1 283 0
 677 000c 7B68     	 ldr r3,[r7,#4]
 678 000e 1B68     	 ldr r3,[r3]
 679 0010 7A68     	 ldr r2,[r7,#4]
 680 0012 1268     	 ldr r2,[r2]
 681 0014 D169     	 ldr r1,[r2,#28]
 682 0016 FA78     	 ldrb r2,[r7,#3]
 683 0018 D243     	 mvns r2,r2
 684 001a 0A40     	 ands r2,r2,r1
 685 001c DA61     	 str r2,[r3,#28]
 284:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR |= (uint32_t)test;
 686              	 .loc 1 284 0
 687 001e 7B68     	 ldr r3,[r7,#4]
 688 0020 1B68     	 ldr r3,[r3]
 689 0022 7A68     	 ldr r2,[r7,#4]
 690 0024 1268     	 ldr r2,[r2]
 691 0026 D169     	 ldr r1,[r2,#28]
 692 0028 FA78     	 ldrb r2,[r7,#3]
 693 002a 0A43     	 orrs r2,r2,r1
 694 002c DA61     	 str r2,[r3,#28]
 285:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR &= ~((uint32_t)test);
 695              	 .loc 1 285 0
 696 002e 7B68     	 ldr r3,[r7,#4]
 697 0030 1B68     	 ldr r3,[r3]
 698 0032 7A68     	 ldr r2,[r7,#4]
 699 0034 1268     	 ldr r2,[r2]
 700 0036 D169     	 ldr r1,[r2,#28]
 701 0038 FA78     	 ldrb r2,[r7,#3]
 702 003a D243     	 mvns r2,r2
 703 003c 0A40     	 ands r2,r2,r1
 704 003e DA61     	 str r2,[r3,#28]
 286:../Libraries/XMCLib/src/xmc_fce.c **** }
 705              	 .loc 1 286 0
 706 0040 0C37     	 adds r7,r7,#12
 707              	.LCFI43:
 708              	 .cfi_def_cfa_offset 4
 709 0042 BD46     	 mov sp,r7
 710              	.LCFI44:
 711              	 .cfi_def_cfa_register 13
 712              	 
 713 0044 5DF8047B 	 ldr r7,[sp],#4
 714              	.LCFI45:
 715              	 .cfi_restore 7
 716              	 .cfi_def_cfa_offset 0
 717 0048 7047     	 bx lr
 718              	 .cfi_endproc
 719              	.LFE195:
 721 004a 00BF     	 .section .text.XMC_FCE_LittleEndian16bit,"ax",%progbits
 722              	 .align 2
 723              	 .global XMC_FCE_LittleEndian16bit
 724              	 .thumb
 725              	 .thumb_func
 727              	XMC_FCE_LittleEndian16bit:
 728              	.LFB196:
 287:../Libraries/XMCLib/src/xmc_fce.c **** 
 288:../Libraries/XMCLib/src/xmc_fce.c **** /* Change endianness of 16-bit input buffer */
 289:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_LittleEndian16bit(uint8_t *inbuffer, uint16_t *outbuffer, uint16_t length)
 290:../Libraries/XMCLib/src/xmc_fce.c **** {
 729              	 .loc 1 290 0
 730              	 .cfi_startproc
 731              	 
 732              	 
 733              	 
 734 0000 80B4     	 push {r7}
 735              	.LCFI46:
 736              	 .cfi_def_cfa_offset 4
 737              	 .cfi_offset 7,-4
 738 0002 87B0     	 sub sp,sp,#28
 739              	.LCFI47:
 740              	 .cfi_def_cfa_offset 32
 741 0004 00AF     	 add r7,sp,#0
 742              	.LCFI48:
 743              	 .cfi_def_cfa_register 7
 744 0006 F860     	 str r0,[r7,#12]
 745 0008 B960     	 str r1,[r7,#8]
 746 000a 1346     	 mov r3,r2
 747 000c FB80     	 strh r3,[r7,#6]
 291:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t counter = 0U;
 748              	 .loc 1 291 0
 749 000e 0023     	 movs r3,#0
 750 0010 FB82     	 strh r3,[r7,#22]
 292:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t bytecounter = 0U;
 751              	 .loc 1 292 0
 752 0012 0023     	 movs r3,#0
 753 0014 BB82     	 strh r3,[r7,#20]
 293:../Libraries/XMCLib/src/xmc_fce.c **** 
 294:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length & 0x01U)  == 0)
 754              	 .loc 1 294 0
 755 0016 FB88     	 ldrh r3,[r7,#6]
 756 0018 03F00103 	 and r3,r3,#1
 757 001c 002B     	 cmp r3,#0
 758 001e 3AD1     	 bne .L46
 295:../Libraries/XMCLib/src/xmc_fce.c ****   {
 296:../Libraries/XMCLib/src/xmc_fce.c ****     for (counter = 0U; counter < (length >> 1); counter++)
 759              	 .loc 1 296 0
 760 0020 0023     	 movs r3,#0
 761 0022 FB82     	 strh r3,[r7,#22]
 762 0024 08E0     	 b .L48
 763              	.L49:
 297:../Libraries/XMCLib/src/xmc_fce.c ****     {
 298:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = 0U;
 764              	 .loc 1 298 0 discriminator 3
 765 0026 FB8A     	 ldrh r3,[r7,#22]
 766 0028 5B00     	 lsls r3,r3,#1
 767 002a BA68     	 ldr r2,[r7,#8]
 768 002c 1344     	 add r3,r3,r2
 769 002e 0022     	 movs r2,#0
 770 0030 1A80     	 strh r2,[r3]
 296:../Libraries/XMCLib/src/xmc_fce.c ****     {
 771              	 .loc 1 296 0 discriminator 3
 772 0032 FB8A     	 ldrh r3,[r7,#22]
 773 0034 0133     	 adds r3,r3,#1
 774 0036 FB82     	 strh r3,[r7,#22]
 775              	.L48:
 296:../Libraries/XMCLib/src/xmc_fce.c ****     {
 776              	 .loc 1 296 0 is_stmt 0 discriminator 1
 777 0038 FB88     	 ldrh r3,[r7,#6]
 778 003a 5B08     	 lsrs r3,r3,#1
 779 003c 9BB2     	 uxth r3,r3
 780 003e FA8A     	 ldrh r2,[r7,#22]
 781 0040 9A42     	 cmp r2,r3
 782 0042 F0D3     	 bcc .L49
 299:../Libraries/XMCLib/src/xmc_fce.c ****     }
 300:../Libraries/XMCLib/src/xmc_fce.c **** 
 301:../Libraries/XMCLib/src/xmc_fce.c ****     outbuffer[counter] = 0U;
 783              	 .loc 1 301 0 is_stmt 1
 784 0044 FB8A     	 ldrh r3,[r7,#22]
 785 0046 5B00     	 lsls r3,r3,#1
 786 0048 BA68     	 ldr r2,[r7,#8]
 787 004a 1344     	 add r3,r3,r2
 788 004c 0022     	 movs r2,#0
 789 004e 1A80     	 strh r2,[r3]
 302:../Libraries/XMCLib/src/xmc_fce.c ****     counter = 0U;
 790              	 .loc 1 302 0
 791 0050 0023     	 movs r3,#0
 792 0052 FB82     	 strh r3,[r7,#22]
 303:../Libraries/XMCLib/src/xmc_fce.c **** 
 304:../Libraries/XMCLib/src/xmc_fce.c ****     while (length)
 793              	 .loc 1 304 0
 794 0054 1CE0     	 b .L50
 795              	.L51:
 305:../Libraries/XMCLib/src/xmc_fce.c ****     {
 306:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = ((uint16_t)((uint16_t)inbuffer[bytecounter] << 8U) |
 796              	 .loc 1 306 0
 797 0056 FB8A     	 ldrh r3,[r7,#22]
 798 0058 5B00     	 lsls r3,r3,#1
 799 005a BA68     	 ldr r2,[r7,#8]
 800 005c 1344     	 add r3,r3,r2
 801 005e BA8A     	 ldrh r2,[r7,#20]
 802 0060 F968     	 ldr r1,[r7,#12]
 803 0062 0A44     	 add r2,r2,r1
 804 0064 1278     	 ldrb r2,[r2]
 805 0066 92B2     	 uxth r2,r2
 806 0068 1202     	 lsls r2,r2,#8
 807 006a 91B2     	 uxth r1,r2
 307:../Libraries/XMCLib/src/xmc_fce.c ****                             (inbuffer[bytecounter + 1U]));
 808              	 .loc 1 307 0
 809 006c BA8A     	 ldrh r2,[r7,#20]
 810 006e 0132     	 adds r2,r2,#1
 811 0070 F868     	 ldr r0,[r7,#12]
 812 0072 0244     	 add r2,r2,r0
 813 0074 1278     	 ldrb r2,[r2]
 306:../Libraries/XMCLib/src/xmc_fce.c ****                             (inbuffer[bytecounter + 1U]));
 814              	 .loc 1 306 0
 815 0076 92B2     	 uxth r2,r2
 816 0078 0A43     	 orrs r2,r2,r1
 817 007a 92B2     	 uxth r2,r2
 818 007c 1A80     	 strh r2,[r3]
 308:../Libraries/XMCLib/src/xmc_fce.c ****       counter += 1U;
 819              	 .loc 1 308 0
 820 007e FB8A     	 ldrh r3,[r7,#22]
 821 0080 0133     	 adds r3,r3,#1
 822 0082 FB82     	 strh r3,[r7,#22]
 309:../Libraries/XMCLib/src/xmc_fce.c ****       bytecounter += 2U;
 823              	 .loc 1 309 0
 824 0084 BB8A     	 ldrh r3,[r7,#20]
 825 0086 0233     	 adds r3,r3,#2
 826 0088 BB82     	 strh r3,[r7,#20]
 310:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 2U;
 827              	 .loc 1 310 0
 828 008a FB88     	 ldrh r3,[r7,#6]
 829 008c 023B     	 subs r3,r3,#2
 830 008e FB80     	 strh r3,[r7,#6]
 831              	.L50:
 304:../Libraries/XMCLib/src/xmc_fce.c ****     {
 832              	 .loc 1 304 0
 833 0090 FB88     	 ldrh r3,[r7,#6]
 834 0092 002B     	 cmp r3,#0
 835 0094 DFD1     	 bne .L51
 836              	.L46:
 311:../Libraries/XMCLib/src/xmc_fce.c ****     }
 312:../Libraries/XMCLib/src/xmc_fce.c ****   }
 313:../Libraries/XMCLib/src/xmc_fce.c **** }
 837              	 .loc 1 313 0
 838 0096 1C37     	 adds r7,r7,#28
 839              	.LCFI49:
 840              	 .cfi_def_cfa_offset 4
 841 0098 BD46     	 mov sp,r7
 842              	.LCFI50:
 843              	 .cfi_def_cfa_register 13
 844              	 
 845 009a 5DF8047B 	 ldr r7,[sp],#4
 846              	.LCFI51:
 847              	 .cfi_restore 7
 848              	 .cfi_def_cfa_offset 0
 849 009e 7047     	 bx lr
 850              	 .cfi_endproc
 851              	.LFE196:
 853              	 .section .text.XMC_FCE_LittleEndian32bit,"ax",%progbits
 854              	 .align 2
 855              	 .global XMC_FCE_LittleEndian32bit
 856              	 .thumb
 857              	 .thumb_func
 859              	XMC_FCE_LittleEndian32bit:
 860              	.LFB197:
 314:../Libraries/XMCLib/src/xmc_fce.c **** 
 315:../Libraries/XMCLib/src/xmc_fce.c **** /* Change endianness of 32-bit input buffer */
 316:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_LittleEndian32bit(uint8_t *inbuffer, uint32_t *outbuffer, uint16_t length)
 317:../Libraries/XMCLib/src/xmc_fce.c **** {
 861              	 .loc 1 317 0
 862              	 .cfi_startproc
 863              	 
 864              	 
 865              	 
 866 0000 80B4     	 push {r7}
 867              	.LCFI52:
 868              	 .cfi_def_cfa_offset 4
 869              	 .cfi_offset 7,-4
 870 0002 87B0     	 sub sp,sp,#28
 871              	.LCFI53:
 872              	 .cfi_def_cfa_offset 32
 873 0004 00AF     	 add r7,sp,#0
 874              	.LCFI54:
 875              	 .cfi_def_cfa_register 7
 876 0006 F860     	 str r0,[r7,#12]
 877 0008 B960     	 str r1,[r7,#8]
 878 000a 1346     	 mov r3,r2
 879 000c FB80     	 strh r3,[r7,#6]
 318:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t counter = 0U;
 880              	 .loc 1 318 0
 881 000e 0023     	 movs r3,#0
 882 0010 FB82     	 strh r3,[r7,#22]
 319:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t bytecounter = 0U;
 883              	 .loc 1 319 0
 884 0012 0023     	 movs r3,#0
 885 0014 BB82     	 strh r3,[r7,#20]
 320:../Libraries/XMCLib/src/xmc_fce.c **** 
 321:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length & 0x03U) == 0)
 886              	 .loc 1 321 0
 887 0016 FB88     	 ldrh r3,[r7,#6]
 888 0018 03F00303 	 and r3,r3,#3
 889 001c 002B     	 cmp r3,#0
 890 001e 44D1     	 bne .L52
 322:../Libraries/XMCLib/src/xmc_fce.c ****   {
 323:../Libraries/XMCLib/src/xmc_fce.c ****     for (counter = 0U; counter < (length >> 2U); counter++)
 891              	 .loc 1 323 0
 892 0020 0023     	 movs r3,#0
 893 0022 FB82     	 strh r3,[r7,#22]
 894 0024 08E0     	 b .L54
 895              	.L55:
 324:../Libraries/XMCLib/src/xmc_fce.c ****     {
 325:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = 0U;
 896              	 .loc 1 325 0 discriminator 3
 897 0026 FB8A     	 ldrh r3,[r7,#22]
 898 0028 9B00     	 lsls r3,r3,#2
 899 002a BA68     	 ldr r2,[r7,#8]
 900 002c 1344     	 add r3,r3,r2
 901 002e 0022     	 movs r2,#0
 902 0030 1A60     	 str r2,[r3]
 323:../Libraries/XMCLib/src/xmc_fce.c ****     {
 903              	 .loc 1 323 0 discriminator 3
 904 0032 FB8A     	 ldrh r3,[r7,#22]
 905 0034 0133     	 adds r3,r3,#1
 906 0036 FB82     	 strh r3,[r7,#22]
 907              	.L54:
 323:../Libraries/XMCLib/src/xmc_fce.c ****     {
 908              	 .loc 1 323 0 is_stmt 0 discriminator 1
 909 0038 FB88     	 ldrh r3,[r7,#6]
 910 003a 9B08     	 lsrs r3,r3,#2
 911 003c 9BB2     	 uxth r3,r3
 912 003e FA8A     	 ldrh r2,[r7,#22]
 913 0040 9A42     	 cmp r2,r3
 914 0042 F0D3     	 bcc .L55
 326:../Libraries/XMCLib/src/xmc_fce.c ****     }
 327:../Libraries/XMCLib/src/xmc_fce.c **** 
 328:../Libraries/XMCLib/src/xmc_fce.c ****     outbuffer[counter] = 0U;
 915              	 .loc 1 328 0 is_stmt 1
 916 0044 FB8A     	 ldrh r3,[r7,#22]
 917 0046 9B00     	 lsls r3,r3,#2
 918 0048 BA68     	 ldr r2,[r7,#8]
 919 004a 1344     	 add r3,r3,r2
 920 004c 0022     	 movs r2,#0
 921 004e 1A60     	 str r2,[r3]
 329:../Libraries/XMCLib/src/xmc_fce.c ****     counter = 0U;
 922              	 .loc 1 329 0
 923 0050 0023     	 movs r3,#0
 924 0052 FB82     	 strh r3,[r7,#22]
 330:../Libraries/XMCLib/src/xmc_fce.c **** 
 331:../Libraries/XMCLib/src/xmc_fce.c ****     while (length)
 925              	 .loc 1 331 0
 926 0054 26E0     	 b .L56
 927              	.L57:
 332:../Libraries/XMCLib/src/xmc_fce.c ****     {
 333:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = ((uint32_t)inbuffer[bytecounter]      << 24U) |
 928              	 .loc 1 333 0
 929 0056 FB8A     	 ldrh r3,[r7,#22]
 930 0058 9B00     	 lsls r3,r3,#2
 931 005a BA68     	 ldr r2,[r7,#8]
 932 005c 1344     	 add r3,r3,r2
 933 005e BA8A     	 ldrh r2,[r7,#20]
 934 0060 F968     	 ldr r1,[r7,#12]
 935 0062 0A44     	 add r2,r2,r1
 936 0064 1278     	 ldrb r2,[r2]
 937 0066 1106     	 lsls r1,r2,#24
 334:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 938              	 .loc 1 334 0
 939 0068 BA8A     	 ldrh r2,[r7,#20]
 940 006a 0132     	 adds r2,r2,#1
 941 006c F868     	 ldr r0,[r7,#12]
 942 006e 0244     	 add r2,r2,r0
 943 0070 1278     	 ldrb r2,[r2]
 944 0072 1204     	 lsls r2,r2,#16
 333:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 945              	 .loc 1 333 0
 946 0074 1143     	 orrs r1,r1,r2
 335:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 2U] <<  8U) |
 947              	 .loc 1 335 0
 948 0076 BA8A     	 ldrh r2,[r7,#20]
 949 0078 0232     	 adds r2,r2,#2
 950 007a F868     	 ldr r0,[r7,#12]
 951 007c 0244     	 add r2,r2,r0
 952 007e 1278     	 ldrb r2,[r2]
 953 0080 1202     	 lsls r2,r2,#8
 334:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 954              	 .loc 1 334 0
 955 0082 0A43     	 orrs r2,r2,r1
 336:../Libraries/XMCLib/src/xmc_fce.c ****                            (inbuffer[bytecounter + 3U]);
 956              	 .loc 1 336 0
 957 0084 B98A     	 ldrh r1,[r7,#20]
 958 0086 0331     	 adds r1,r1,#3
 959 0088 F868     	 ldr r0,[r7,#12]
 960 008a 0144     	 add r1,r1,r0
 961 008c 0978     	 ldrb r1,[r1]
 335:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 2U] <<  8U) |
 962              	 .loc 1 335 0
 963 008e 0A43     	 orrs r2,r2,r1
 333:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 964              	 .loc 1 333 0
 965 0090 1A60     	 str r2,[r3]
 337:../Libraries/XMCLib/src/xmc_fce.c ****       counter += 1U;
 966              	 .loc 1 337 0
 967 0092 FB8A     	 ldrh r3,[r7,#22]
 968 0094 0133     	 adds r3,r3,#1
 969 0096 FB82     	 strh r3,[r7,#22]
 338:../Libraries/XMCLib/src/xmc_fce.c ****       bytecounter += 4U;
 970              	 .loc 1 338 0
 971 0098 BB8A     	 ldrh r3,[r7,#20]
 972 009a 0433     	 adds r3,r3,#4
 973 009c BB82     	 strh r3,[r7,#20]
 339:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 4U;
 974              	 .loc 1 339 0
 975 009e FB88     	 ldrh r3,[r7,#6]
 976 00a0 043B     	 subs r3,r3,#4
 977 00a2 FB80     	 strh r3,[r7,#6]
 978              	.L56:
 331:../Libraries/XMCLib/src/xmc_fce.c ****     {
 979              	 .loc 1 331 0
 980 00a4 FB88     	 ldrh r3,[r7,#6]
 981 00a6 002B     	 cmp r3,#0
 982 00a8 D5D1     	 bne .L57
 983              	.L52:
 340:../Libraries/XMCLib/src/xmc_fce.c ****     }
 341:../Libraries/XMCLib/src/xmc_fce.c ****   }
 342:../Libraries/XMCLib/src/xmc_fce.c **** }
 984              	 .loc 1 342 0
 985 00aa 1C37     	 adds r7,r7,#28
 986              	.LCFI55:
 987              	 .cfi_def_cfa_offset 4
 988 00ac BD46     	 mov sp,r7
 989              	.LCFI56:
 990              	 .cfi_def_cfa_register 13
 991              	 
 992 00ae 5DF8047B 	 ldr r7,[sp],#4
 993              	.LCFI57:
 994              	 .cfi_restore 7
 995              	 .cfi_def_cfa_offset 0
 996 00b2 7047     	 bx lr
 997              	 .cfi_endproc
 998              	.LFE197:
 1000              	 .text
 1001              	.Letext0:
 1002              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1003              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1004              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1005              	 .file 6 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc_fce.h"
 1006              	 .file 7 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc4_scu.h"
 1007              	 .file 8 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/core_cm4.h"
 1008              	 .file 9 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_fce.c
    {standard input}:20     .text.XMC_FCE_Init:00000000 $t
    {standard input}:25     .text.XMC_FCE_Init:00000000 XMC_FCE_Init
    {standard input}:76     .text.XMC_FCE_Disable:00000000 $t
    {standard input}:81     .text.XMC_FCE_Disable:00000000 XMC_FCE_Disable
    {standard input}:109    .text.XMC_FCE_Disable:00000018 $d
    {standard input}:115    .text.XMC_FCE_Enable:00000000 $t
    {standard input}:120    .text.XMC_FCE_Enable:00000000 XMC_FCE_Enable
    {standard input}:148    .text.XMC_FCE_Enable:00000018 $d
    {standard input}:154    .text.XMC_FCE_CalculateCRC8:00000000 $t
    {standard input}:159    .text.XMC_FCE_CalculateCRC8:00000000 XMC_FCE_CalculateCRC8
    {standard input}:242    .text.XMC_FCE_CalculateCRC16:00000000 $t
    {standard input}:247    .text.XMC_FCE_CalculateCRC16:00000000 XMC_FCE_CalculateCRC16
    {standard input}:336    .text.XMC_FCE_CalculateCRC16Ex:00000000 $t
    {standard input}:341    .text.XMC_FCE_CalculateCRC16Ex:00000000 XMC_FCE_CalculateCRC16Ex
    {standard input}:451    .text.XMC_FCE_CalculateCRC32:00000000 $t
    {standard input}:456    .text.XMC_FCE_CalculateCRC32:00000000 XMC_FCE_CalculateCRC32
    {standard input}:544    .text.XMC_FCE_CalculateCRC32Ex:00000000 $t
    {standard input}:549    .text.XMC_FCE_CalculateCRC32Ex:00000000 XMC_FCE_CalculateCRC32Ex
    {standard input}:651    .text.XMC_FCE_TriggerMismatch:00000000 $t
    {standard input}:656    .text.XMC_FCE_TriggerMismatch:00000000 XMC_FCE_TriggerMismatch
    {standard input}:722    .text.XMC_FCE_LittleEndian16bit:00000000 $t
    {standard input}:727    .text.XMC_FCE_LittleEndian16bit:00000000 XMC_FCE_LittleEndian16bit
    {standard input}:854    .text.XMC_FCE_LittleEndian32bit:00000000 $t
    {standard input}:859    .text.XMC_FCE_LittleEndian32bit:00000000 XMC_FCE_LittleEndian32bit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
