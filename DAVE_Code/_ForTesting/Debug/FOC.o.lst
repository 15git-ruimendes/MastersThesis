   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "FOC.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.ThetaEstimation,"ax",%progbits
  20              	 .align 2
  21              	 .global ThetaEstimation
  22              	 .thumb
  23              	 .thumb_func
  25              	ThetaEstimation:
  26              	.LFB431:
  27              	 .file 1 "../FOC.c"
   1:../FOC.c      **** #include "FOC.h"
   2:../FOC.c      **** 
   3:../FOC.c      **** void ThetaEstimation(float32_t RPM,FOC* Controller)
   4:../FOC.c      **** {
  28              	 .loc 1 4 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 3960     	 str r1,[r7]
   5:../FOC.c      **** 	if(Controller->Id > 0)
  45              	 .loc 1 5 0
  46 000a 3B68     	 ldr r3,[r7]
  47 000c D3ED097A 	 flds s15,[r3,#36]
  48 0010 F5EEC07A 	 fcmpezs s15
  49 0014 F1EE10FA 	 fmstat
  50 0018 3DDD     	 ble .L9
   6:../FOC.c      **** 		Controller->Theta += Controller->T_Theta * (abs(RPM) * 2 * PI / 60 * P / 2 + (Controller->Iq / Co
  51              	 .loc 1 6 0
  52 001a 3B68     	 ldr r3,[r7]
  53 001c 93ED047A 	 flds s14,[r3,#16]
  54 0020 3B68     	 ldr r3,[r7]
  55 0022 D3ED036A 	 flds s13,[r3,#12]
  56 0026 D7ED017A 	 flds s15,[r7,#4]
  57 002a FDEEE77A 	 ftosizs s15,s15
  58 002e 17EE903A 	 fmrs r3,s15
  59 0032 002B     	 cmp r3,#0
  60 0034 B8BF     	 it lt
  61 0036 5B42     	 rsblt r3,r3,#0
  62 0038 5B00     	 lsls r3,r3,#1
  63 003a 07EE903A 	 fmsr s15,r3
  64 003e F8EEE77A 	 fsitos s15,s15
  65 0042 9FED256A 	 flds s12,.L10
  66 0046 67EE867A 	 fmuls s15,s15,s12
  67 004a 9FED246A 	 flds s12,.L10+4
  68 004e C7EE867A 	 fdivs s15,s15,s12
  69 0052 B1EE006A 	 fconsts s12,#16
  70 0056 67EE867A 	 fmuls s15,s15,s12
  71 005a B0EE006A 	 fconsts s12,#0
  72 005e 87EE866A 	 fdivs s12,s15,s12
  73 0062 3B68     	 ldr r3,[r7]
  74 0064 D3ED0A5A 	 flds s11,[r3,#40]
  75 0068 3B68     	 ldr r3,[r7]
  76 006a D3ED097A 	 flds s15,[r3,#36]
  77 006e C5EEA77A 	 fdivs s15,s11,s15
  78 0072 DFED1B5A 	 flds s11,.L10+8
  79 0076 67EEA57A 	 fmuls s15,s15,s11
  80 007a DFED1A5A 	 flds s11,.L10+12
  81 007e C7EEA57A 	 fdivs s15,s15,s11
  82 0082 76EE277A 	 fadds s15,s12,s15
  83 0086 66EEA77A 	 fmuls s15,s13,s15
  84 008a 77EE277A 	 fadds s15,s14,s15
  85 008e 3B68     	 ldr r3,[r7]
  86 0090 C3ED047A 	 fsts s15,[r3,#16]
  87 0094 03E0     	 b .L4
  88              	.L9:
   7:../FOC.c      **** 	else
   8:../FOC.c      **** 		Controller->Theta = 0;
  89              	 .loc 1 8 0
  90 0096 3B68     	 ldr r3,[r7]
  91 0098 4FF00002 	 mov r2,#0
  92 009c 1A61     	 str r2,[r3,#16]
  93              	.L4:
   9:../FOC.c      **** 	if (abs(Controller->Theta) >= 2 * PI)
  94              	 .loc 1 9 0
  95 009e 3B68     	 ldr r3,[r7]
  96 00a0 D3ED047A 	 flds s15,[r3,#16]
  97 00a4 FDEEE77A 	 ftosizs s15,s15
  98 00a8 17EE903A 	 fmrs r3,s15
  99 00ac 002B     	 cmp r3,#0
 100 00ae B8BF     	 it lt
 101 00b0 5B42     	 rsblt r3,r3,#0
 102 00b2 07EE903A 	 fmsr s15,r3
 103 00b6 F8EEE77A 	 fsitos s15,s15
 104 00ba 9FED0B7A 	 flds s14,.L10+16
 105 00be F4EEC77A 	 fcmpes s15,s14
 106 00c2 F1EE10FA 	 fmstat
 107 00c6 02DB     	 blt .L1
  10:../FOC.c      **** 	  {
  11:../FOC.c      **** 		Controller->Theta = -2 * PI;
 108              	 .loc 1 11 0
 109 00c8 3B68     	 ldr r3,[r7]
 110 00ca 084A     	 ldr r2,.L10+20
 111 00cc 1A61     	 str r2,[r3,#16]
 112              	.L1:
  12:../FOC.c      **** 	  }
  13:../FOC.c      **** }
 113              	 .loc 1 13 0
 114 00ce 0C37     	 adds r7,r7,#12
 115              	.LCFI3:
 116              	 .cfi_def_cfa_offset 4
 117 00d0 BD46     	 mov sp,r7
 118              	.LCFI4:
 119              	 .cfi_def_cfa_register 13
 120              	 
 121 00d2 5DF8047B 	 ldr r7,[sp],#4
 122              	.LCFI5:
 123              	 .cfi_restore 7
 124              	 .cfi_def_cfa_offset 0
 125 00d6 7047     	 bx lr
 126              	.L11:
 127              	 .align 2
 128              	.L10:
 129 00d8 DB0F4940 	 .word 1078530011
 130 00dc 00007042 	 .word 1114636288
 131 00e0 6B60AB3C 	 .word 1017864299
 132 00e4 16E37C3C 	 .word 1014817558
 133 00e8 DB0FC940 	 .word 1086918619
 134 00ec DB0FC9C0 	 .word -1060565029
 135              	 .cfi_endproc
 136              	.LFE431:
 138              	 .global __aeabi_f2d
 139              	 .global __aeabi_dadd
 140              	 .global __aeabi_d2f
 141              	 .section .text.SpeedSensorCoarse,"ax",%progbits
 142              	 .align 2
 143              	 .global SpeedSensorCoarse
 144              	 .thumb
 145              	 .thumb_func
 147              	SpeedSensorCoarse:
 148              	.LFB432:
  14:../FOC.c      **** 
  15:../FOC.c      **** float32_t SpeedSensorCoarse(float32_t RPM_COS,float32_t RPM_SIN)
  16:../FOC.c      **** {
 149              	 .loc 1 16 0
 150              	 .cfi_startproc
 151              	 
 152              	 
 153 0000 90B5     	 push {r4,r7,lr}
 154              	.LCFI6:
 155              	 .cfi_def_cfa_offset 12
 156              	 .cfi_offset 4,-12
 157              	 .cfi_offset 7,-8
 158              	 .cfi_offset 14,-4
 159 0002 85B0     	 sub sp,sp,#20
 160              	.LCFI7:
 161              	 .cfi_def_cfa_offset 32
 162 0004 00AF     	 add r7,sp,#0
 163              	.LCFI8:
 164              	 .cfi_def_cfa_register 7
 165 0006 7860     	 str r0,[r7,#4]
 166 0008 3960     	 str r1,[r7]
  17:../FOC.c      **** 	static float32_t prev_RPM_COS = 0;
  18:../FOC.c      **** 	static float32_t theta_Mec = 0,time_step = 0;
  19:../FOC.c      **** 	float32_t RPM = 0;
 167              	 .loc 1 19 0
 168 000a 4FF00003 	 mov r3,#0
 169 000e FB60     	 str r3,[r7,#12]
  20:../FOC.c      **** 	if (SignVal(RPM_COS) != SignVal(prev_RPM_COS))
 170              	 .loc 1 20 0
 171 0010 7868     	 ldr r0,[r7,#4]
 172 0012 FFF7FEFF 	 bl SignVal
 173 0016 0446     	 mov r4,r0
 174 0018 2B4B     	 ldr r3,.L18+8
 175 001a 1B68     	 ldr r3,[r3]
 176 001c 1846     	 mov r0,r3
 177 001e FFF7FEFF 	 bl SignVal
 178 0022 0346     	 mov r3,r0
 179 0024 9C42     	 cmp r4,r3
 180 0026 2AD0     	 beq .L13
  21:../FOC.c      **** 	{
  22:../FOC.c      **** 		if (theta_Mec >= 2*PI)
 181              	 .loc 1 22 0
 182 0028 284B     	 ldr r3,.L18+12
 183 002a D3ED007A 	 flds s15,[r3]
 184 002e 9FED287A 	 flds s14,.L18+16
 185 0032 F4EEC77A 	 fcmpes s15,s14
 186 0036 F1EE10FA 	 fmstat
 187 003a 03DB     	 blt .L14
  23:../FOC.c      **** 			theta_Mec = 0;
 188              	 .loc 1 23 0
 189 003c 234B     	 ldr r3,.L18+12
 190 003e 4FF00002 	 mov r2,#0
 191 0042 1A60     	 str r2,[r3]
 192              	.L14:
  24:../FOC.c      **** 		theta_Mec += ANGLE_PER_ZERO;
 193              	 .loc 1 24 0
 194 0044 214B     	 ldr r3,.L18+12
 195 0046 D3ED007A 	 flds s15,[r3]
 196 004a 9FED227A 	 flds s14,.L18+20
 197 004e 77EE877A 	 fadds s15,s15,s14
 198 0052 1E4B     	 ldr r3,.L18+12
 199 0054 C3ED007A 	 fsts s15,[r3]
  25:../FOC.c      **** 		RPM = 1/(2*time_step)*60;
 200              	 .loc 1 25 0
 201 0058 1F4B     	 ldr r3,.L18+24
 202 005a D3ED007A 	 flds s15,[r3]
 203 005e 77EEA77A 	 fadds s15,s15,s15
 204 0062 B7EE007A 	 fconsts s14,#112
 205 0066 C7EE277A 	 fdivs s15,s14,s15
 206 006a 9FED1C7A 	 flds s14,.L18+28
 207 006e 67EE877A 	 fmuls s15,s15,s14
 208 0072 C7ED037A 	 fsts s15,[r7,#12]
  26:../FOC.c      **** 		time_step = 0;
 209              	 .loc 1 26 0
 210 0076 184B     	 ldr r3,.L18+24
 211 0078 4FF00002 	 mov r2,#0
 212 007c 1A60     	 str r2,[r3]
 213              	.L13:
  27:../FOC.c      **** 
  28:../FOC.c      **** 	}
  29:../FOC.c      **** 	prev_RPM_COS = RPM_COS;
 214              	 .loc 1 29 0
 215 007e 124A     	 ldr r2,.L18+8
 216 0080 7B68     	 ldr r3,[r7,#4]
 217 0082 1360     	 str r3,[r2]
  30:../FOC.c      **** 	time_step += ACQUISITION_TIME;
 218              	 .loc 1 30 0
 219 0084 144B     	 ldr r3,.L18+24
 220 0086 1B68     	 ldr r3,[r3]
 221 0088 1846     	 mov r0,r3
 222 008a FFF7FEFF 	 bl __aeabi_f2d
 223 008e 0246     	 mov r2,r0
 224 0090 0B46     	 mov r3,r1
 225 0092 1046     	 mov r0,r2
 226 0094 1946     	 mov r1,r3
 227 0096 0AA3     	 adr r3,.L18
 228 0098 D3E90023 	 ldrd r2,[r3]
 229 009c FFF7FEFF 	 bl __aeabi_dadd
 230 00a0 0246     	 mov r2,r0
 231 00a2 0B46     	 mov r3,r1
 232 00a4 1046     	 mov r0,r2
 233 00a6 1946     	 mov r1,r3
 234 00a8 FFF7FEFF 	 bl __aeabi_d2f
 235 00ac 0246     	 mov r2,r0
 236 00ae 0A4B     	 ldr r3,.L18+24
 237 00b0 1A60     	 str r2,[r3]
  31:../FOC.c      **** 	return RPM;
 238              	 .loc 1 31 0
 239 00b2 FB68     	 ldr r3,[r7,#12]
  32:../FOC.c      **** }
 240              	 .loc 1 32 0
 241 00b4 1846     	 mov r0,r3
 242 00b6 1437     	 adds r7,r7,#20
 243              	.LCFI9:
 244              	 .cfi_def_cfa_offset 12
 245 00b8 BD46     	 mov sp,r7
 246              	.LCFI10:
 247              	 .cfi_def_cfa_register 13
 248              	 
 249 00ba 90BD     	 pop {r4,r7,pc}
 250              	.L19:
 251 00bc AFF30080 	 .align 3
 252              	.L18:
 253 00c0 2D431CEB 	 .word -350469331
 254 00c4 E2360A3F 	 .word 1057634018
 255 00c8 00000000 	 .word prev_RPM_COS.14065
 256 00cc 00000000 	 .word theta_Mec.14066
 257 00d0 DB0FC940 	 .word 1086918619
 258 00d4 0AD7233C 	 .word 1008981770
 259 00d8 00000000 	 .word time_step.14067
 260 00dc 00007042 	 .word 1114636288
 261              	 .cfi_endproc
 262              	.LFE432:
 264              	 .section .text.SpeedSensorFine,"ax",%progbits
 265              	 .align 2
 266              	 .global SpeedSensorFine
 267              	 .thumb
 268              	 .thumb_func
 270              	SpeedSensorFine:
 271              	.LFB433:
  33:../FOC.c      **** 
  34:../FOC.c      **** float32_t SpeedSensorFine(float32_t RPM_COS,float32_t RPM_SIN)
  35:../FOC.c      **** {
 272              	 .loc 1 35 0
 273              	 .cfi_startproc
 274              	 
 275              	 
 276 0000 80B5     	 push {r7,lr}
 277              	.LCFI11:
 278              	 .cfi_def_cfa_offset 8
 279              	 .cfi_offset 7,-8
 280              	 .cfi_offset 14,-4
 281 0002 82B0     	 sub sp,sp,#8
 282              	.LCFI12:
 283              	 .cfi_def_cfa_offset 16
 284 0004 00AF     	 add r7,sp,#0
 285              	.LCFI13:
 286              	 .cfi_def_cfa_register 7
 287 0006 7860     	 str r0,[r7,#4]
 288 0008 3960     	 str r1,[r7]
  36:../FOC.c      **** 	static float32_t theta = 0;
  37:../FOC.c      **** 	theta += arm_atan2();
 289              	 .loc 1 37 0
 290 000a FFF7FEFF 	 bl arm_atan2
 291 000e 07EE900A 	 fmsr s15,r0
 292 0012 B8EEE77A 	 fsitos s14,s15
 293 0016 074B     	 ldr r3,.L22
 294 0018 D3ED007A 	 flds s15,[r3]
 295 001c 77EE277A 	 fadds s15,s14,s15
 296 0020 044B     	 ldr r3,.L22
 297 0022 C3ED007A 	 fsts s15,[r3]
  38:../FOC.c      **** 	return 0;
 298              	 .loc 1 38 0
 299 0026 4FF00003 	 mov r3,#0
  39:../FOC.c      **** }
 300              	 .loc 1 39 0
 301 002a 1846     	 mov r0,r3
 302 002c 0837     	 adds r7,r7,#8
 303              	.LCFI14:
 304              	 .cfi_def_cfa_offset 8
 305 002e BD46     	 mov sp,r7
 306              	.LCFI15:
 307              	 .cfi_def_cfa_register 13
 308              	 
 309 0030 80BD     	 pop {r7,pc}
 310              	.L23:
 311 0032 00BF     	 .align 2
 312              	.L22:
 313 0034 00000000 	 .word theta.14073
 314              	 .cfi_endproc
 315              	.LFE433:
 317              	 .global __aeabi_dmul
 318              	 .section .text.CurrentController,"ax",%progbits
 319              	 .align 2
 320              	 .global CurrentController
 321              	 .thumb
 322              	 .thumb_func
 324              	CurrentController:
 325              	.LFB434:
  40:../FOC.c      **** 
  41:../FOC.c      **** void CurrentController(FOC* Controller)
  42:../FOC.c      **** {
 326              	 .loc 1 42 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 331              	.LCFI16:
 332              	 .cfi_def_cfa_offset 24
 333              	 .cfi_offset 4,-24
 334              	 .cfi_offset 5,-20
 335              	 .cfi_offset 7,-16
 336              	 .cfi_offset 8,-12
 337              	 .cfi_offset 9,-8
 338              	 .cfi_offset 14,-4
 339 0004 84B0     	 sub sp,sp,#16
 340              	.LCFI17:
 341              	 .cfi_def_cfa_offset 40
 342 0006 00AF     	 add r7,sp,#0
 343              	.LCFI18:
 344              	 .cfi_def_cfa_register 7
 345 0008 7860     	 str r0,[r7,#4]
  43:../FOC.c      **** 	static float32_t AccmErrD = 0,AccmErrQ = 0,AuxD = 0,AuxQ = 0;
  44:../FOC.c      **** 
  45:../FOC.c      **** 	float32_t ErrD = Controller->Id_Ref - Controller->Id;
 346              	 .loc 1 45 0
 347 000a 7B68     	 ldr r3,[r7,#4]
 348 000c 93ED0B7A 	 flds s14,[r3,#44]
 349 0010 7B68     	 ldr r3,[r7,#4]
 350 0012 D3ED097A 	 flds s15,[r3,#36]
 351 0016 77EE677A 	 fsubs s15,s14,s15
 352 001a C7ED037A 	 fsts s15,[r7,#12]
  46:../FOC.c      **** 	float32_t ErrQ = Controller->Iq_Ref - Controller->Iq;
 353              	 .loc 1 46 0
 354 001e 7B68     	 ldr r3,[r7,#4]
 355 0020 93ED0C7A 	 flds s14,[r3,#48]
 356 0024 7B68     	 ldr r3,[r7,#4]
 357 0026 D3ED0A7A 	 flds s15,[r3,#40]
 358 002a 77EE677A 	 fsubs s15,s14,s15
 359 002e C7ED027A 	 fsts s15,[r7,#8]
  47:../FOC.c      **** 
  48:../FOC.c      **** 	AuxD += 0.5 * Controller->T_PI * (ErrD + AccmErrD);
 360              	 .loc 1 48 0
 361 0032 524B     	 ldr r3,.L25
 362 0034 1B68     	 ldr r3,[r3]
 363 0036 1846     	 mov r0,r3
 364 0038 FFF7FEFF 	 bl __aeabi_f2d
 365 003c 0446     	 mov r4,r0
 366 003e 0D46     	 mov r5,r1
 367 0040 7B68     	 ldr r3,[r7,#4]
 368 0042 9B68     	 ldr r3,[r3,#8]
 369 0044 1846     	 mov r0,r3
 370 0046 FFF7FEFF 	 bl __aeabi_f2d
 371 004a 0246     	 mov r2,r0
 372 004c 0B46     	 mov r3,r1
 373 004e 1046     	 mov r0,r2
 374 0050 1946     	 mov r1,r3
 375 0052 4FF00002 	 mov r2,#0
 376 0056 4A4B     	 ldr r3,.L25+4
 377 0058 FFF7FEFF 	 bl __aeabi_dmul
 378 005c 0246     	 mov r2,r0
 379 005e 0B46     	 mov r3,r1
 380 0060 9046     	 mov r8,r2
 381 0062 9946     	 mov r9,r3
 382 0064 474B     	 ldr r3,.L25+8
 383 0066 93ED007A 	 flds s14,[r3]
 384 006a D7ED037A 	 flds s15,[r7,#12]
 385 006e 77EE277A 	 fadds s15,s14,s15
 386 0072 17EE900A 	 fmrs r0,s15
 387 0076 FFF7FEFF 	 bl __aeabi_f2d
 388 007a 0246     	 mov r2,r0
 389 007c 0B46     	 mov r3,r1
 390 007e 4046     	 mov r0,r8
 391 0080 4946     	 mov r1,r9
 392 0082 FFF7FEFF 	 bl __aeabi_dmul
 393 0086 0246     	 mov r2,r0
 394 0088 0B46     	 mov r3,r1
 395 008a 2046     	 mov r0,r4
 396 008c 2946     	 mov r1,r5
 397 008e FFF7FEFF 	 bl __aeabi_dadd
 398 0092 0246     	 mov r2,r0
 399 0094 0B46     	 mov r3,r1
 400 0096 1046     	 mov r0,r2
 401 0098 1946     	 mov r1,r3
 402 009a FFF7FEFF 	 bl __aeabi_d2f
 403 009e 0246     	 mov r2,r0
 404 00a0 364B     	 ldr r3,.L25
 405 00a2 1A60     	 str r2,[r3]
  49:../FOC.c      **** 	AuxQ += 0.5 * Controller->T_PI * (ErrQ + AccmErrQ);
 406              	 .loc 1 49 0
 407 00a4 384B     	 ldr r3,.L25+12
 408 00a6 1B68     	 ldr r3,[r3]
 409 00a8 1846     	 mov r0,r3
 410 00aa FFF7FEFF 	 bl __aeabi_f2d
 411 00ae 0446     	 mov r4,r0
 412 00b0 0D46     	 mov r5,r1
 413 00b2 7B68     	 ldr r3,[r7,#4]
 414 00b4 9B68     	 ldr r3,[r3,#8]
 415 00b6 1846     	 mov r0,r3
 416 00b8 FFF7FEFF 	 bl __aeabi_f2d
 417 00bc 0246     	 mov r2,r0
 418 00be 0B46     	 mov r3,r1
 419 00c0 1046     	 mov r0,r2
 420 00c2 1946     	 mov r1,r3
 421 00c4 4FF00002 	 mov r2,#0
 422 00c8 2D4B     	 ldr r3,.L25+4
 423 00ca FFF7FEFF 	 bl __aeabi_dmul
 424 00ce 0246     	 mov r2,r0
 425 00d0 0B46     	 mov r3,r1
 426 00d2 9046     	 mov r8,r2
 427 00d4 9946     	 mov r9,r3
 428 00d6 2D4B     	 ldr r3,.L25+16
 429 00d8 93ED007A 	 flds s14,[r3]
 430 00dc D7ED027A 	 flds s15,[r7,#8]
 431 00e0 77EE277A 	 fadds s15,s14,s15
 432 00e4 17EE900A 	 fmrs r0,s15
 433 00e8 FFF7FEFF 	 bl __aeabi_f2d
 434 00ec 0246     	 mov r2,r0
 435 00ee 0B46     	 mov r3,r1
 436 00f0 4046     	 mov r0,r8
 437 00f2 4946     	 mov r1,r9
 438 00f4 FFF7FEFF 	 bl __aeabi_dmul
 439 00f8 0246     	 mov r2,r0
 440 00fa 0B46     	 mov r3,r1
 441 00fc 2046     	 mov r0,r4
 442 00fe 2946     	 mov r1,r5
 443 0100 FFF7FEFF 	 bl __aeabi_dadd
 444 0104 0246     	 mov r2,r0
 445 0106 0B46     	 mov r3,r1
 446 0108 1046     	 mov r0,r2
 447 010a 1946     	 mov r1,r3
 448 010c FFF7FEFF 	 bl __aeabi_d2f
 449 0110 0246     	 mov r2,r0
 450 0112 1D4B     	 ldr r3,.L25+12
 451 0114 1A60     	 str r2,[r3]
  50:../FOC.c      **** 
  51:../FOC.c      **** 	Controller->Vd_Ref = AuxD * Controller->Ki + ErrD * Controller->Kp;
 452              	 .loc 1 51 0
 453 0116 7B68     	 ldr r3,[r7,#4]
 454 0118 93ED017A 	 flds s14,[r3,#4]
 455 011c 174B     	 ldr r3,.L25
 456 011e D3ED007A 	 flds s15,[r3]
 457 0122 27EE277A 	 fmuls s14,s14,s15
 458 0126 7B68     	 ldr r3,[r7,#4]
 459 0128 D3ED006A 	 flds s13,[r3]
 460 012c D7ED037A 	 flds s15,[r7,#12]
 461 0130 66EEA77A 	 fmuls s15,s13,s15
 462 0134 77EE277A 	 fadds s15,s14,s15
 463 0138 7B68     	 ldr r3,[r7,#4]
 464 013a C3ED0D7A 	 fsts s15,[r3,#52]
  52:../FOC.c      **** 	Controller->Vq_Ref = AuxQ * Controller->Ki + ErrQ * Controller->Kp;
 465              	 .loc 1 52 0
 466 013e 7B68     	 ldr r3,[r7,#4]
 467 0140 93ED017A 	 flds s14,[r3,#4]
 468 0144 104B     	 ldr r3,.L25+12
 469 0146 D3ED007A 	 flds s15,[r3]
 470 014a 27EE277A 	 fmuls s14,s14,s15
 471 014e 7B68     	 ldr r3,[r7,#4]
 472 0150 D3ED006A 	 flds s13,[r3]
 473 0154 D7ED027A 	 flds s15,[r7,#8]
 474 0158 66EEA77A 	 fmuls s15,s13,s15
 475 015c 77EE277A 	 fadds s15,s14,s15
 476 0160 7B68     	 ldr r3,[r7,#4]
 477 0162 C3ED0E7A 	 fsts s15,[r3,#56]
  53:../FOC.c      **** 
  54:../FOC.c      **** 	AccmErrD = ErrD;
 478              	 .loc 1 54 0
 479 0166 074A     	 ldr r2,.L25+8
 480 0168 FB68     	 ldr r3,[r7,#12]
 481 016a 1360     	 str r3,[r2]
  55:../FOC.c      **** 	AccmErrQ = ErrQ;
 482              	 .loc 1 55 0
 483 016c 074A     	 ldr r2,.L25+16
 484 016e BB68     	 ldr r3,[r7,#8]
 485 0170 1360     	 str r3,[r2]
  56:../FOC.c      **** }
 486              	 .loc 1 56 0
 487 0172 1037     	 adds r7,r7,#16
 488              	.LCFI19:
 489              	 .cfi_def_cfa_offset 24
 490 0174 BD46     	 mov sp,r7
 491              	.LCFI20:
 492              	 .cfi_def_cfa_register 13
 493              	 
 494 0176 BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 495              	.L26:
 496 017a 00BF     	 .align 2
 497              	.L25:
 498 017c 00000000 	 .word AuxD.14081
 499 0180 0000E03F 	 .word 1071644672
 500 0184 00000000 	 .word AccmErrD.14079
 501 0188 00000000 	 .word AuxQ.14082
 502 018c 00000000 	 .word AccmErrQ.14080
 503              	 .cfi_endproc
 504              	.LFE434:
 506              	 .global __aeabi_dsub
 507              	 .section .text.ClarkeTransform,"ax",%progbits
 508              	 .align 2
 509              	 .global ClarkeTransform
 510              	 .thumb
 511              	 .thumb_func
 513              	ClarkeTransform:
 514              	.LFB435:
  57:../FOC.c      **** 
  58:../FOC.c      **** void ClarkeTransform(int opt,float32_t Ia,float32_t Ib,float32_t Ic,float32_t Va,float32_t Vb,float
  59:../FOC.c      **** {
 515              	 .loc 1 59 0
 516              	 .cfi_startproc
 517              	 
 518              	 
 519 0000 B0B5     	 push {r4,r5,r7,lr}
 520              	.LCFI21:
 521              	 .cfi_def_cfa_offset 16
 522              	 .cfi_offset 4,-16
 523              	 .cfi_offset 5,-12
 524              	 .cfi_offset 7,-8
 525              	 .cfi_offset 14,-4
 526 0002 84B0     	 sub sp,sp,#16
 527              	.LCFI22:
 528              	 .cfi_def_cfa_offset 32
 529 0004 00AF     	 add r7,sp,#0
 530              	.LCFI23:
 531              	 .cfi_def_cfa_register 7
 532 0006 F860     	 str r0,[r7,#12]
 533 0008 B960     	 str r1,[r7,#8]
 534 000a 7A60     	 str r2,[r7,#4]
 535 000c 3B60     	 str r3,[r7]
  60:../FOC.c      **** 	if (opt == 0)
 536              	 .loc 1 60 0
 537 000e FB68     	 ldr r3,[r7,#12]
 538 0010 002B     	 cmp r3,#0
 539 0012 4DD1     	 bne .L28
  61:../FOC.c      **** 	{
  62:../FOC.c      **** 		Controller->Ial = ((Ia - 0.5f * Ib - 0.5f * Ic)) * 0.66666666666666666666666667f;
 540              	 .loc 1 62 0
 541 0014 D7ED017A 	 flds s15,[r7,#4]
 542 0018 B6EE007A 	 fconsts s14,#96
 543 001c 67EE877A 	 fmuls s15,s15,s14
 544 0020 97ED027A 	 flds s14,[r7,#8]
 545 0024 37EE677A 	 fsubs s14,s14,s15
 546 0028 D7ED007A 	 flds s15,[r7]
 547 002c F6EE006A 	 fconsts s13,#96
 548 0030 67EEA67A 	 fmuls s15,s15,s13
 549 0034 77EE677A 	 fsubs s15,s14,s15
 550 0038 9FED3F7A 	 flds s14,.L30+32
 551 003c 67EE877A 	 fmuls s15,s15,s14
 552 0040 FB6A     	 ldr r3,[r7,#44]
 553 0042 C3ED057A 	 fsts s15,[r3,#20]
  63:../FOC.c      **** 		Controller->Ibet = ((sqrt(3) * 0.5f * Ib - sqrt(3) * 0.5f * Ic)) * 0.66666666666666666666666667f;
 554              	 .loc 1 63 0
 555 0046 7868     	 ldr r0,[r7,#4]
 556 0048 FFF7FEFF 	 bl __aeabi_f2d
 557 004c 0246     	 mov r2,r0
 558 004e 0B46     	 mov r3,r1
 559 0050 1046     	 mov r0,r2
 560 0052 1946     	 mov r1,r3
 561 0054 30A3     	 adr r3,.L30
 562 0056 D3E90023 	 ldrd r2,[r3]
 563 005a FFF7FEFF 	 bl __aeabi_dmul
 564 005e 0246     	 mov r2,r0
 565 0060 0B46     	 mov r3,r1
 566 0062 1446     	 mov r4,r2
 567 0064 1D46     	 mov r5,r3
 568 0066 3868     	 ldr r0,[r7]
 569 0068 FFF7FEFF 	 bl __aeabi_f2d
 570 006c 0246     	 mov r2,r0
 571 006e 0B46     	 mov r3,r1
 572 0070 1046     	 mov r0,r2
 573 0072 1946     	 mov r1,r3
 574 0074 28A3     	 adr r3,.L30
 575 0076 D3E90023 	 ldrd r2,[r3]
 576 007a FFF7FEFF 	 bl __aeabi_dmul
 577 007e 0246     	 mov r2,r0
 578 0080 0B46     	 mov r3,r1
 579 0082 2046     	 mov r0,r4
 580 0084 2946     	 mov r1,r5
 581 0086 FFF7FEFF 	 bl __aeabi_dsub
 582 008a 0246     	 mov r2,r0
 583 008c 0B46     	 mov r3,r1
 584 008e 1046     	 mov r0,r2
 585 0090 1946     	 mov r1,r3
 586 0092 23A3     	 adr r3,.L30+8
 587 0094 D3E90023 	 ldrd r2,[r3]
 588 0098 FFF7FEFF 	 bl __aeabi_dmul
 589 009c 0246     	 mov r2,r0
 590 009e 0B46     	 mov r3,r1
 591 00a0 1046     	 mov r0,r2
 592 00a2 1946     	 mov r1,r3
 593 00a4 FFF7FEFF 	 bl __aeabi_d2f
 594 00a8 0246     	 mov r2,r0
 595 00aa FB6A     	 ldr r3,[r7,#44]
 596 00ac 9A61     	 str r2,[r3,#24]
 597 00ae 30E0     	 b .L27
 598              	.L28:
  64:../FOC.c      **** 	}
  65:../FOC.c      **** 	else if (opt == 1)
 599              	 .loc 1 65 0
 600 00b0 FB68     	 ldr r3,[r7,#12]
 601 00b2 012B     	 cmp r3,#1
 602 00b4 2DD1     	 bne .L27
  66:../FOC.c      **** 	{ // Power Invariant
  67:../FOC.c      **** 	    Controller->Val = sqrt(3/2) * Va;
 603              	 .loc 1 67 0
 604 00b6 FB6A     	 ldr r3,[r7,#44]
 605 00b8 3A6A     	 ldr r2,[r7,#32]
 606 00ba DA61     	 str r2,[r3,#28]
  68:../FOC.c      **** 	    Controller->Vbet = sqrt(2) / 2 * Va + sqrt(2) * Vb;
 607              	 .loc 1 68 0
 608 00bc 386A     	 ldr r0,[r7,#32]
 609 00be FFF7FEFF 	 bl __aeabi_f2d
 610 00c2 0246     	 mov r2,r0
 611 00c4 0B46     	 mov r3,r1
 612 00c6 1046     	 mov r0,r2
 613 00c8 1946     	 mov r1,r3
 614 00ca 17A3     	 adr r3,.L30+16
 615 00cc D3E90023 	 ldrd r2,[r3]
 616 00d0 FFF7FEFF 	 bl __aeabi_dmul
 617 00d4 0246     	 mov r2,r0
 618 00d6 0B46     	 mov r3,r1
 619 00d8 1446     	 mov r4,r2
 620 00da 1D46     	 mov r5,r3
 621 00dc 786A     	 ldr r0,[r7,#36]
 622 00de FFF7FEFF 	 bl __aeabi_f2d
 623 00e2 0246     	 mov r2,r0
 624 00e4 0B46     	 mov r3,r1
 625 00e6 1046     	 mov r0,r2
 626 00e8 1946     	 mov r1,r3
 627 00ea 11A3     	 adr r3,.L30+24
 628 00ec D3E90023 	 ldrd r2,[r3]
 629 00f0 FFF7FEFF 	 bl __aeabi_dmul
 630 00f4 0246     	 mov r2,r0
 631 00f6 0B46     	 mov r3,r1
 632 00f8 2046     	 mov r0,r4
 633 00fa 2946     	 mov r1,r5
 634 00fc FFF7FEFF 	 bl __aeabi_dadd
 635 0100 0246     	 mov r2,r0
 636 0102 0B46     	 mov r3,r1
 637 0104 1046     	 mov r0,r2
 638 0106 1946     	 mov r1,r3
 639 0108 FFF7FEFF 	 bl __aeabi_d2f
 640 010c 0246     	 mov r2,r0
 641 010e FB6A     	 ldr r3,[r7,#44]
 642 0110 1A62     	 str r2,[r3,#32]
 643              	.L27:
  69:../FOC.c      **** 	}
  70:../FOC.c      **** }
 644              	 .loc 1 70 0
 645 0112 1037     	 adds r7,r7,#16
 646              	.LCFI24:
 647              	 .cfi_def_cfa_offset 16
 648 0114 BD46     	 mov sp,r7
 649              	.LCFI25:
 650              	 .cfi_def_cfa_register 13
 651              	 
 652 0116 B0BD     	 pop {r4,r5,r7,pc}
 653              	.L31:
 654              	 .align 3
 655              	.L30:
 656 0118 AA4C58E8 	 .word -396866390
 657 011c 7AB6EB3F 	 .word 1072412282
 658 0120 00000060 	 .word 1610612736
 659 0124 5555E53F 	 .word 1071994197
 660 0128 CD3B7F66 	 .word 1719614413
 661 012c 9EA0E63F 	 .word 1072079006
 662 0130 CD3B7F66 	 .word 1719614413
 663 0134 9EA0F63F 	 .word 1073127582
 664 0138 ABAA2A3F 	 .word 1059760811
 665              	 .cfi_endproc
 666              	.LFE435:
 668 013c AFF30080 	 .section .text.ParkTransform,"ax",%progbits
 669              	 .align 2
 670              	 .global ParkTransform
 671              	 .thumb
 672              	 .thumb_func
 674              	ParkTransform:
 675              	.LFB436:
  71:../FOC.c      **** 
  72:../FOC.c      **** void ParkTransform(FOC* Controller)
  73:../FOC.c      **** {
 676              	 .loc 1 73 0
 677              	 .cfi_startproc
 678              	 
 679              	 
 680 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 681              	.LCFI26:
 682              	 .cfi_def_cfa_offset 24
 683              	 .cfi_offset 4,-24
 684              	 .cfi_offset 5,-20
 685              	 .cfi_offset 7,-16
 686              	 .cfi_offset 8,-12
 687              	 .cfi_offset 9,-8
 688              	 .cfi_offset 14,-4
 689 0004 82B0     	 sub sp,sp,#8
 690              	.LCFI27:
 691              	 .cfi_def_cfa_offset 32
 692 0006 00AF     	 add r7,sp,#0
 693              	.LCFI28:
 694              	 .cfi_def_cfa_register 7
 695 0008 7860     	 str r0,[r7,#4]
  74:../FOC.c      **** 	// Only used after Clarke(0) is performed
  75:../FOC.c      **** 	Controller->Id = Controller->Ial * cos(Controller->Theta) + Controller->Ibet * sin(Controller->The
 696              	 .loc 1 75 0
 697 000a 7B68     	 ldr r3,[r7,#4]
 698 000c 5B69     	 ldr r3,[r3,#20]
 699 000e 1846     	 mov r0,r3
 700 0010 FFF7FEFF 	 bl __aeabi_f2d
 701 0014 0446     	 mov r4,r0
 702 0016 0D46     	 mov r5,r1
 703 0018 7B68     	 ldr r3,[r7,#4]
 704 001a 1B69     	 ldr r3,[r3,#16]
 705 001c 1846     	 mov r0,r3
 706 001e FFF7FEFF 	 bl __aeabi_f2d
 707 0022 0246     	 mov r2,r0
 708 0024 0B46     	 mov r3,r1
 709 0026 1046     	 mov r0,r2
 710 0028 1946     	 mov r1,r3
 711 002a FFF7FEFF 	 bl cos
 712 002e 0246     	 mov r2,r0
 713 0030 0B46     	 mov r3,r1
 714 0032 2046     	 mov r0,r4
 715 0034 2946     	 mov r1,r5
 716 0036 FFF7FEFF 	 bl __aeabi_dmul
 717 003a 0246     	 mov r2,r0
 718 003c 0B46     	 mov r3,r1
 719 003e 1446     	 mov r4,r2
 720 0040 1D46     	 mov r5,r3
 721 0042 7B68     	 ldr r3,[r7,#4]
 722 0044 9B69     	 ldr r3,[r3,#24]
 723 0046 1846     	 mov r0,r3
 724 0048 FFF7FEFF 	 bl __aeabi_f2d
 725 004c 8046     	 mov r8,r0
 726 004e 8946     	 mov r9,r1
 727 0050 7B68     	 ldr r3,[r7,#4]
 728 0052 1B69     	 ldr r3,[r3,#16]
 729 0054 1846     	 mov r0,r3
 730 0056 FFF7FEFF 	 bl __aeabi_f2d
 731 005a 0246     	 mov r2,r0
 732 005c 0B46     	 mov r3,r1
 733 005e 1046     	 mov r0,r2
 734 0060 1946     	 mov r1,r3
 735 0062 FFF7FEFF 	 bl sin
 736 0066 0246     	 mov r2,r0
 737 0068 0B46     	 mov r3,r1
 738 006a 4046     	 mov r0,r8
 739 006c 4946     	 mov r1,r9
 740 006e FFF7FEFF 	 bl __aeabi_dmul
 741 0072 0246     	 mov r2,r0
 742 0074 0B46     	 mov r3,r1
 743 0076 2046     	 mov r0,r4
 744 0078 2946     	 mov r1,r5
 745 007a FFF7FEFF 	 bl __aeabi_dadd
 746 007e 0246     	 mov r2,r0
 747 0080 0B46     	 mov r3,r1
 748 0082 1046     	 mov r0,r2
 749 0084 1946     	 mov r1,r3
 750 0086 FFF7FEFF 	 bl __aeabi_d2f
 751 008a 0246     	 mov r2,r0
 752 008c 7B68     	 ldr r3,[r7,#4]
 753 008e 5A62     	 str r2,[r3,#36]
  76:../FOC.c      **** 	Controller->Iq = -Controller->Ial * sin(Controller->Theta) + Controller->Ibet * cos(Controller->Th
 754              	 .loc 1 76 0
 755 0090 7B68     	 ldr r3,[r7,#4]
 756 0092 D3ED057A 	 flds s15,[r3,#20]
 757 0096 F1EE677A 	 fnegs s15,s15
 758 009a 17EE903A 	 fmrs r3,s15
 759 009e 1846     	 mov r0,r3
 760 00a0 FFF7FEFF 	 bl __aeabi_f2d
 761 00a4 0446     	 mov r4,r0
 762 00a6 0D46     	 mov r5,r1
 763 00a8 7B68     	 ldr r3,[r7,#4]
 764 00aa 1B69     	 ldr r3,[r3,#16]
 765 00ac 1846     	 mov r0,r3
 766 00ae FFF7FEFF 	 bl __aeabi_f2d
 767 00b2 0246     	 mov r2,r0
 768 00b4 0B46     	 mov r3,r1
 769 00b6 1046     	 mov r0,r2
 770 00b8 1946     	 mov r1,r3
 771 00ba FFF7FEFF 	 bl sin
 772 00be 0246     	 mov r2,r0
 773 00c0 0B46     	 mov r3,r1
 774 00c2 2046     	 mov r0,r4
 775 00c4 2946     	 mov r1,r5
 776 00c6 FFF7FEFF 	 bl __aeabi_dmul
 777 00ca 0246     	 mov r2,r0
 778 00cc 0B46     	 mov r3,r1
 779 00ce 1446     	 mov r4,r2
 780 00d0 1D46     	 mov r5,r3
 781 00d2 7B68     	 ldr r3,[r7,#4]
 782 00d4 9B69     	 ldr r3,[r3,#24]
 783 00d6 1846     	 mov r0,r3
 784 00d8 FFF7FEFF 	 bl __aeabi_f2d
 785 00dc 8046     	 mov r8,r0
 786 00de 8946     	 mov r9,r1
 787 00e0 7B68     	 ldr r3,[r7,#4]
 788 00e2 1B69     	 ldr r3,[r3,#16]
 789 00e4 1846     	 mov r0,r3
 790 00e6 FFF7FEFF 	 bl __aeabi_f2d
 791 00ea 0246     	 mov r2,r0
 792 00ec 0B46     	 mov r3,r1
 793 00ee 1046     	 mov r0,r2
 794 00f0 1946     	 mov r1,r3
 795 00f2 FFF7FEFF 	 bl cos
 796 00f6 0246     	 mov r2,r0
 797 00f8 0B46     	 mov r3,r1
 798 00fa 4046     	 mov r0,r8
 799 00fc 4946     	 mov r1,r9
 800 00fe FFF7FEFF 	 bl __aeabi_dmul
 801 0102 0246     	 mov r2,r0
 802 0104 0B46     	 mov r3,r1
 803 0106 2046     	 mov r0,r4
 804 0108 2946     	 mov r1,r5
 805 010a FFF7FEFF 	 bl __aeabi_dadd
 806 010e 0246     	 mov r2,r0
 807 0110 0B46     	 mov r3,r1
 808 0112 1046     	 mov r0,r2
 809 0114 1946     	 mov r1,r3
 810 0116 FFF7FEFF 	 bl __aeabi_d2f
 811 011a 0246     	 mov r2,r0
 812 011c 7B68     	 ldr r3,[r7,#4]
 813 011e 9A62     	 str r2,[r3,#40]
  77:../FOC.c      **** }
 814              	 .loc 1 77 0
 815 0120 0837     	 adds r7,r7,#8
 816              	.LCFI29:
 817              	 .cfi_def_cfa_offset 24
 818 0122 BD46     	 mov sp,r7
 819              	.LCFI30:
 820              	 .cfi_def_cfa_register 13
 821              	 
 822 0124 BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 823              	 .cfi_endproc
 824              	.LFE436:
 826              	 .section .text.InvParkTransform,"ax",%progbits
 827              	 .align 2
 828              	 .global InvParkTransform
 829              	 .thumb
 830              	 .thumb_func
 832              	InvParkTransform:
 833              	.LFB437:
  78:../FOC.c      **** 
  79:../FOC.c      **** void InvParkTransform(FOC* Controller,float32_t* Val,float32_t* Vbet)
  80:../FOC.c      **** {
 834              	 .loc 1 80 0
 835              	 .cfi_startproc
 836              	 
 837              	 
 838 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 839              	.LCFI31:
 840              	 .cfi_def_cfa_offset 24
 841              	 .cfi_offset 4,-24
 842              	 .cfi_offset 5,-20
 843              	 .cfi_offset 7,-16
 844              	 .cfi_offset 8,-12
 845              	 .cfi_offset 9,-8
 846              	 .cfi_offset 14,-4
 847 0004 86B0     	 sub sp,sp,#24
 848              	.LCFI32:
 849              	 .cfi_def_cfa_offset 48
 850 0006 00AF     	 add r7,sp,#0
 851              	.LCFI33:
 852              	 .cfi_def_cfa_register 7
 853 0008 F860     	 str r0,[r7,#12]
 854 000a B960     	 str r1,[r7,#8]
 855 000c 7A60     	 str r2,[r7,#4]
  81:../FOC.c      **** 	 // Limit voltage references between 1 and -1
  82:../FOC.c      **** 	 float32_t aux1, aux2;
  83:../FOC.c      **** 	 aux1 = Controller->Vd_Ref  * cos(Controller->Theta) - Controller->Vq_Ref  * sin(Controller->Theta
 856              	 .loc 1 83 0
 857 000e FB68     	 ldr r3,[r7,#12]
 858 0010 5B6B     	 ldr r3,[r3,#52]
 859 0012 1846     	 mov r0,r3
 860 0014 FFF7FEFF 	 bl __aeabi_f2d
 861 0018 0446     	 mov r4,r0
 862 001a 0D46     	 mov r5,r1
 863 001c FB68     	 ldr r3,[r7,#12]
 864 001e 1B69     	 ldr r3,[r3,#16]
 865 0020 1846     	 mov r0,r3
 866 0022 FFF7FEFF 	 bl __aeabi_f2d
 867 0026 0246     	 mov r2,r0
 868 0028 0B46     	 mov r3,r1
 869 002a 1046     	 mov r0,r2
 870 002c 1946     	 mov r1,r3
 871 002e FFF7FEFF 	 bl cos
 872 0032 0246     	 mov r2,r0
 873 0034 0B46     	 mov r3,r1
 874 0036 2046     	 mov r0,r4
 875 0038 2946     	 mov r1,r5
 876 003a FFF7FEFF 	 bl __aeabi_dmul
 877 003e 0246     	 mov r2,r0
 878 0040 0B46     	 mov r3,r1
 879 0042 1446     	 mov r4,r2
 880 0044 1D46     	 mov r5,r3
 881 0046 FB68     	 ldr r3,[r7,#12]
 882 0048 9B6B     	 ldr r3,[r3,#56]
 883 004a 1846     	 mov r0,r3
 884 004c FFF7FEFF 	 bl __aeabi_f2d
 885 0050 8046     	 mov r8,r0
 886 0052 8946     	 mov r9,r1
 887 0054 FB68     	 ldr r3,[r7,#12]
 888 0056 1B69     	 ldr r3,[r3,#16]
 889 0058 1846     	 mov r0,r3
 890 005a FFF7FEFF 	 bl __aeabi_f2d
 891 005e 0246     	 mov r2,r0
 892 0060 0B46     	 mov r3,r1
 893 0062 1046     	 mov r0,r2
 894 0064 1946     	 mov r1,r3
 895 0066 FFF7FEFF 	 bl sin
 896 006a 0246     	 mov r2,r0
 897 006c 0B46     	 mov r3,r1
 898 006e 4046     	 mov r0,r8
 899 0070 4946     	 mov r1,r9
 900 0072 FFF7FEFF 	 bl __aeabi_dmul
 901 0076 0246     	 mov r2,r0
 902 0078 0B46     	 mov r3,r1
 903 007a 2046     	 mov r0,r4
 904 007c 2946     	 mov r1,r5
 905 007e FFF7FEFF 	 bl __aeabi_dsub
 906 0082 0246     	 mov r2,r0
 907 0084 0B46     	 mov r3,r1
 908 0086 1046     	 mov r0,r2
 909 0088 1946     	 mov r1,r3
 910 008a FFF7FEFF 	 bl __aeabi_d2f
 911 008e 0346     	 mov r3,r0
 912 0090 7B61     	 str r3,[r7,#20]
  84:../FOC.c      **** 	 aux2 = Controller->Vd_Ref  * sin(Controller->Theta) + Controller->Vq_Ref  * cos(Controller->Theta
 913              	 .loc 1 84 0
 914 0092 FB68     	 ldr r3,[r7,#12]
 915 0094 5B6B     	 ldr r3,[r3,#52]
 916 0096 1846     	 mov r0,r3
 917 0098 FFF7FEFF 	 bl __aeabi_f2d
 918 009c 0446     	 mov r4,r0
 919 009e 0D46     	 mov r5,r1
 920 00a0 FB68     	 ldr r3,[r7,#12]
 921 00a2 1B69     	 ldr r3,[r3,#16]
 922 00a4 1846     	 mov r0,r3
 923 00a6 FFF7FEFF 	 bl __aeabi_f2d
 924 00aa 0246     	 mov r2,r0
 925 00ac 0B46     	 mov r3,r1
 926 00ae 1046     	 mov r0,r2
 927 00b0 1946     	 mov r1,r3
 928 00b2 FFF7FEFF 	 bl sin
 929 00b6 0246     	 mov r2,r0
 930 00b8 0B46     	 mov r3,r1
 931 00ba 2046     	 mov r0,r4
 932 00bc 2946     	 mov r1,r5
 933 00be FFF7FEFF 	 bl __aeabi_dmul
 934 00c2 0246     	 mov r2,r0
 935 00c4 0B46     	 mov r3,r1
 936 00c6 1446     	 mov r4,r2
 937 00c8 1D46     	 mov r5,r3
 938 00ca FB68     	 ldr r3,[r7,#12]
 939 00cc 9B6B     	 ldr r3,[r3,#56]
 940 00ce 1846     	 mov r0,r3
 941 00d0 FFF7FEFF 	 bl __aeabi_f2d
 942 00d4 8046     	 mov r8,r0
 943 00d6 8946     	 mov r9,r1
 944 00d8 FB68     	 ldr r3,[r7,#12]
 945 00da 1B69     	 ldr r3,[r3,#16]
 946 00dc 1846     	 mov r0,r3
 947 00de FFF7FEFF 	 bl __aeabi_f2d
 948 00e2 0246     	 mov r2,r0
 949 00e4 0B46     	 mov r3,r1
 950 00e6 1046     	 mov r0,r2
 951 00e8 1946     	 mov r1,r3
 952 00ea FFF7FEFF 	 bl cos
 953 00ee 0246     	 mov r2,r0
 954 00f0 0B46     	 mov r3,r1
 955 00f2 4046     	 mov r0,r8
 956 00f4 4946     	 mov r1,r9
 957 00f6 FFF7FEFF 	 bl __aeabi_dmul
 958 00fa 0246     	 mov r2,r0
 959 00fc 0B46     	 mov r3,r1
 960 00fe 2046     	 mov r0,r4
 961 0100 2946     	 mov r1,r5
 962 0102 FFF7FEFF 	 bl __aeabi_dadd
 963 0106 0246     	 mov r2,r0
 964 0108 0B46     	 mov r3,r1
 965 010a 1046     	 mov r0,r2
 966 010c 1946     	 mov r1,r3
 967 010e FFF7FEFF 	 bl __aeabi_d2f
 968 0112 0346     	 mov r3,r0
 969 0114 3B61     	 str r3,[r7,#16]
  85:../FOC.c      **** 
  86:../FOC.c      **** 	 /////////////////////////////////////////////
  87:../FOC.c      **** 	 if (abs(aux1) > 1)
 970              	 .loc 1 87 0
 971 0116 D7ED057A 	 flds s15,[r7,#20]
 972 011a FDEEE77A 	 ftosizs s15,s15
 973 011e 17EE903A 	 fmrs r3,s15
 974 0122 002B     	 cmp r3,#0
 975 0124 B8BF     	 it lt
 976 0126 5B42     	 rsblt r3,r3,#0
 977 0128 012B     	 cmp r3,#1
 978 012a 1DDD     	 ble .L34
  88:../FOC.c      **** 	 {
  89:../FOC.c      **** 		 *Val = (aux1 > 0) - (aux1 < 0);
 979              	 .loc 1 89 0
 980 012c D7ED057A 	 flds s15,[r7,#20]
 981 0130 F5EEC07A 	 fcmpezs s15
 982 0134 F1EE10FA 	 fmstat
 983 0138 CCBF     	 ite gt
 984 013a 0123     	 movgt r3,#1
 985 013c 0023     	 movle r3,#0
 986 013e DBB2     	 uxtb r3,r3
 987 0140 1A46     	 mov r2,r3
 988 0142 D7ED057A 	 flds s15,[r7,#20]
 989 0146 F5EEC07A 	 fcmpezs s15
 990 014a F1EE10FA 	 fmstat
 991 014e 4CBF     	 ite mi
 992 0150 0123     	 movmi r3,#1
 993 0152 0023     	 movpl r3,#0
 994 0154 DBB2     	 uxtb r3,r3
 995 0156 D31A     	 subs r3,r2,r3
 996 0158 07EE903A 	 fmsr s15,r3
 997 015c F8EEE77A 	 fsitos s15,s15
 998 0160 BB68     	 ldr r3,[r7,#8]
 999 0162 C3ED007A 	 fsts s15,[r3]
 1000 0166 02E0     	 b .L35
 1001              	.L34:
  90:../FOC.c      **** 	 }
  91:../FOC.c      **** 	 else
  92:../FOC.c      **** 	     *Val = aux1;
 1002              	 .loc 1 92 0
 1003 0168 BB68     	 ldr r3,[r7,#8]
 1004 016a 7A69     	 ldr r2,[r7,#20]
 1005 016c 1A60     	 str r2,[r3]
 1006              	.L35:
  93:../FOC.c      **** 	 /////////////////////////////////////////////
  94:../FOC.c      **** 	 if (abs(aux2) > 1)
 1007              	 .loc 1 94 0
 1008 016e D7ED047A 	 flds s15,[r7,#16]
 1009 0172 FDEEE77A 	 ftosizs s15,s15
 1010 0176 17EE903A 	 fmrs r3,s15
 1011 017a 002B     	 cmp r3,#0
 1012 017c B8BF     	 it lt
 1013 017e 5B42     	 rsblt r3,r3,#0
 1014 0180 012B     	 cmp r3,#1
 1015 0182 1DDD     	 ble .L36
  95:../FOC.c      **** 	 {
  96:../FOC.c      **** 	    *Vbet = (aux2 > 0) - (aux2 < 0);
 1016              	 .loc 1 96 0
 1017 0184 D7ED047A 	 flds s15,[r7,#16]
 1018 0188 F5EEC07A 	 fcmpezs s15
 1019 018c F1EE10FA 	 fmstat
 1020 0190 CCBF     	 ite gt
 1021 0192 0123     	 movgt r3,#1
 1022 0194 0023     	 movle r3,#0
 1023 0196 DBB2     	 uxtb r3,r3
 1024 0198 1A46     	 mov r2,r3
 1025 019a D7ED047A 	 flds s15,[r7,#16]
 1026 019e F5EEC07A 	 fcmpezs s15
 1027 01a2 F1EE10FA 	 fmstat
 1028 01a6 4CBF     	 ite mi
 1029 01a8 0123     	 movmi r3,#1
 1030 01aa 0023     	 movpl r3,#0
 1031 01ac DBB2     	 uxtb r3,r3
 1032 01ae D31A     	 subs r3,r2,r3
 1033 01b0 07EE903A 	 fmsr s15,r3
 1034 01b4 F8EEE77A 	 fsitos s15,s15
 1035 01b8 7B68     	 ldr r3,[r7,#4]
 1036 01ba C3ED007A 	 fsts s15,[r3]
 1037 01be 02E0     	 b .L37
 1038              	.L36:
  97:../FOC.c      **** 	 }
  98:../FOC.c      **** 	 else
  99:../FOC.c      **** 	     *Vbet = aux2;
 1039              	 .loc 1 99 0
 1040 01c0 7B68     	 ldr r3,[r7,#4]
 1041 01c2 3A69     	 ldr r2,[r7,#16]
 1042 01c4 1A60     	 str r2,[r3]
 1043              	.L37:
 100:../FOC.c      **** 
 101:../FOC.c      **** 
 102:../FOC.c      **** 	 Controller->V_Ref = sqrt(aux1*aux1 + aux2*aux2);
 1044              	 .loc 1 102 0
 1045 01c6 97ED057A 	 flds s14,[r7,#20]
 1046 01ca D7ED057A 	 flds s15,[r7,#20]
 1047 01ce 27EE277A 	 fmuls s14,s14,s15
 1048 01d2 D7ED046A 	 flds s13,[r7,#16]
 1049 01d6 D7ED047A 	 flds s15,[r7,#16]
 1050 01da 66EEA77A 	 fmuls s15,s13,s15
 1051 01de 77EE277A 	 fadds s15,s14,s15
 1052 01e2 17EE900A 	 fmrs r0,s15
 1053 01e6 FFF7FEFF 	 bl __aeabi_f2d
 1054 01ea 0246     	 mov r2,r0
 1055 01ec 0B46     	 mov r3,r1
 1056 01ee 1046     	 mov r0,r2
 1057 01f0 1946     	 mov r1,r3
 1058 01f2 FFF7FEFF 	 bl sqrt
 1059 01f6 0246     	 mov r2,r0
 1060 01f8 0B46     	 mov r3,r1
 1061 01fa 1046     	 mov r0,r2
 1062 01fc 1946     	 mov r1,r3
 1063 01fe FFF7FEFF 	 bl __aeabi_d2f
 1064 0202 0246     	 mov r2,r0
 1065 0204 FB68     	 ldr r3,[r7,#12]
 1066 0206 DA63     	 str r2,[r3,#60]
 103:../FOC.c      **** 	 Controller->Theta_Ref = atan2(aux2,aux1);
 1067              	 .loc 1 103 0
 1068 0208 3869     	 ldr r0,[r7,#16]
 1069 020a FFF7FEFF 	 bl __aeabi_f2d
 1070 020e 0446     	 mov r4,r0
 1071 0210 0D46     	 mov r5,r1
 1072 0212 7869     	 ldr r0,[r7,#20]
 1073 0214 FFF7FEFF 	 bl __aeabi_f2d
 1074 0218 0246     	 mov r2,r0
 1075 021a 0B46     	 mov r3,r1
 1076 021c 2046     	 mov r0,r4
 1077 021e 2946     	 mov r1,r5
 1078 0220 FFF7FEFF 	 bl atan2
 1079 0224 0246     	 mov r2,r0
 1080 0226 0B46     	 mov r3,r1
 1081 0228 1046     	 mov r0,r2
 1082 022a 1946     	 mov r1,r3
 1083 022c FFF7FEFF 	 bl __aeabi_d2f
 1084 0230 0246     	 mov r2,r0
 1085 0232 FB68     	 ldr r3,[r7,#12]
 1086 0234 1A64     	 str r2,[r3,#64]
 104:../FOC.c      **** }
 1087              	 .loc 1 104 0
 1088 0236 1837     	 adds r7,r7,#24
 1089              	.LCFI34:
 1090              	 .cfi_def_cfa_offset 24
 1091 0238 BD46     	 mov sp,r7
 1092              	.LCFI35:
 1093              	 .cfi_def_cfa_register 13
 1094              	 
 1095 023a BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 1096              	 .cfi_endproc
 1097              	.LFE437:
 1099 023e 00BF     	 .section .text.SignVal,"ax",%progbits
 1100              	 .align 2
 1101              	 .global SignVal
 1102              	 .thumb
 1103              	 .thumb_func
 1105              	SignVal:
 1106              	.LFB438:
 105:../FOC.c      **** 
 106:../FOC.c      **** uint32_t SignVal(float32_t sign)
 107:../FOC.c      **** {
 1107              	 .loc 1 107 0
 1108              	 .cfi_startproc
 1109              	 
 1110              	 
 1111              	 
 1112 0000 80B4     	 push {r7}
 1113              	.LCFI36:
 1114              	 .cfi_def_cfa_offset 4
 1115              	 .cfi_offset 7,-4
 1116 0002 83B0     	 sub sp,sp,#12
 1117              	.LCFI37:
 1118              	 .cfi_def_cfa_offset 16
 1119 0004 00AF     	 add r7,sp,#0
 1120              	.LCFI38:
 1121              	 .cfi_def_cfa_register 7
 1122 0006 7860     	 str r0,[r7,#4]
 108:../FOC.c      **** 	if (sign > 0)
 1123              	 .loc 1 108 0
 1124 0008 D7ED017A 	 flds s15,[r7,#4]
 1125 000c F5EEC07A 	 fcmpezs s15
 1126 0010 F1EE10FA 	 fmstat
 1127 0014 01DD     	 ble .L46
 109:../FOC.c      **** 		return 1;
 1128              	 .loc 1 109 0
 1129 0016 0123     	 movs r3,#1
 1130 0018 0AE0     	 b .L41
 1131              	.L46:
 110:../FOC.c      **** 	else if (sign < 0)
 1132              	 .loc 1 110 0
 1133 001a D7ED017A 	 flds s15,[r7,#4]
 1134 001e F5EEC07A 	 fcmpezs s15
 1135 0022 F1EE10FA 	 fmstat
 1136 0026 02D5     	 bpl .L47
 111:../FOC.c      **** 		return -1;
 1137              	 .loc 1 111 0
 1138 0028 4FF0FF33 	 mov r3,#-1
 1139 002c 00E0     	 b .L41
 1140              	.L47:
 112:../FOC.c      **** 	else
 113:../FOC.c      **** 		return 0;
 1141              	 .loc 1 113 0
 1142 002e 0023     	 movs r3,#0
 1143              	.L41:
 114:../FOC.c      **** }
 1144              	 .loc 1 114 0
 1145 0030 1846     	 mov r0,r3
 1146 0032 0C37     	 adds r7,r7,#12
 1147              	.LCFI39:
 1148              	 .cfi_def_cfa_offset 4
 1149 0034 BD46     	 mov sp,r7
 1150              	.LCFI40:
 1151              	 .cfi_def_cfa_register 13
 1152              	 
 1153 0036 5DF8047B 	 ldr r7,[sp],#4
 1154              	.LCFI41:
 1155              	 .cfi_restore 7
 1156              	 .cfi_def_cfa_offset 0
 1157 003a 7047     	 bx lr
 1158              	 .cfi_endproc
 1159              	.LFE438:
 1161              	 .section .bss.prev_RPM_COS.14065,"aw",%nobits
 1162              	 .align 2
 1165              	prev_RPM_COS.14065:
 1166 0000 00000000 	 .space 4
 1167              	 .section .bss.theta_Mec.14066,"aw",%nobits
 1168              	 .align 2
 1171              	theta_Mec.14066:
 1172 0000 00000000 	 .space 4
 1173              	 .section .bss.time_step.14067,"aw",%nobits
 1174              	 .align 2
 1177              	time_step.14067:
 1178 0000 00000000 	 .space 4
 1179              	 .section .bss.theta.14073,"aw",%nobits
 1180              	 .align 2
 1183              	theta.14073:
 1184 0000 00000000 	 .space 4
 1185              	 .section .bss.AuxD.14081,"aw",%nobits
 1186              	 .align 2
 1189              	AuxD.14081:
 1190 0000 00000000 	 .space 4
 1191              	 .section .bss.AccmErrD.14079,"aw",%nobits
 1192              	 .align 2
 1195              	AccmErrD.14079:
 1196 0000 00000000 	 .space 4
 1197              	 .section .bss.AuxQ.14082,"aw",%nobits
 1198              	 .align 2
 1201              	AuxQ.14082:
 1202 0000 00000000 	 .space 4
 1203              	 .section .bss.AccmErrQ.14080,"aw",%nobits
 1204              	 .align 2
 1207              	AccmErrQ.14080:
 1208 0000 00000000 	 .space 4
 1209              	 .text
 1210              	.Letext0:
 1211              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1212              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1213              	 .file 4 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1214              	 .file 5 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/XMCLib/inc/xmc_vadc.h"
 1215              	 .file 6 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/CMSIS_DSP/Include/arm_math.h"
 1216              	 .file 7 "../FOC.h"
 1217              	 .file 8 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/cmsis_gcc.h"
 1218              	 .file 9 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Include/core_cm4.h"
 1219              	 .file 10 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 1220              	 .file 11 "C:/Users/Rui Mendes/Desktop/DAVE/_Naive/_ForTesting/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
DEFINED SYMBOLS
                            *ABS*:00000000 FOC.c
    {standard input}:20     .text.ThetaEstimation:00000000 $t
    {standard input}:25     .text.ThetaEstimation:00000000 ThetaEstimation
    {standard input}:129    .text.ThetaEstimation:000000d8 $d
    {standard input}:142    .text.SpeedSensorCoarse:00000000 $t
    {standard input}:147    .text.SpeedSensorCoarse:00000000 SpeedSensorCoarse
    {standard input}:1105   .text.SignVal:00000000 SignVal
    {standard input}:253    .text.SpeedSensorCoarse:000000c0 $d
    {standard input}:1165   .bss.prev_RPM_COS.14065:00000000 prev_RPM_COS.14065
    {standard input}:1171   .bss.theta_Mec.14066:00000000 theta_Mec.14066
    {standard input}:1177   .bss.time_step.14067:00000000 time_step.14067
    {standard input}:265    .text.SpeedSensorFine:00000000 $t
    {standard input}:270    .text.SpeedSensorFine:00000000 SpeedSensorFine
    {standard input}:313    .text.SpeedSensorFine:00000034 $d
    {standard input}:1183   .bss.theta.14073:00000000 theta.14073
    {standard input}:319    .text.CurrentController:00000000 $t
    {standard input}:324    .text.CurrentController:00000000 CurrentController
    {standard input}:498    .text.CurrentController:0000017c $d
    {standard input}:1189   .bss.AuxD.14081:00000000 AuxD.14081
    {standard input}:1195   .bss.AccmErrD.14079:00000000 AccmErrD.14079
    {standard input}:1201   .bss.AuxQ.14082:00000000 AuxQ.14082
    {standard input}:1207   .bss.AccmErrQ.14080:00000000 AccmErrQ.14080
    {standard input}:508    .text.ClarkeTransform:00000000 $t
    {standard input}:513    .text.ClarkeTransform:00000000 ClarkeTransform
    {standard input}:656    .text.ClarkeTransform:00000118 $d
    {standard input}:669    .text.ParkTransform:00000000 $t
    {standard input}:674    .text.ParkTransform:00000000 ParkTransform
    {standard input}:827    .text.InvParkTransform:00000000 $t
    {standard input}:832    .text.InvParkTransform:00000000 InvParkTransform
    {standard input}:1100   .text.SignVal:00000000 $t
    {standard input}:1162   .bss.prev_RPM_COS.14065:00000000 $d
    {standard input}:1168   .bss.theta_Mec.14066:00000000 $d
    {standard input}:1174   .bss.time_step.14067:00000000 $d
    {standard input}:1180   .bss.theta.14073:00000000 $d
    {standard input}:1186   .bss.AuxD.14081:00000000 $d
    {standard input}:1192   .bss.AccmErrD.14079:00000000 $d
    {standard input}:1198   .bss.AuxQ.14082:00000000 $d
    {standard input}:1204   .bss.AccmErrQ.14080:00000000 $d
                     .debug_frame:00000010 $d
    {standard input}:668    .text.ClarkeTransform:0000013c $t

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dadd
__aeabi_d2f
arm_atan2
__aeabi_dmul
__aeabi_dsub
cos
sin
sqrt
atan2
